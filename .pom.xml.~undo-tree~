(undo-tree-save-format-version . 1)
"e1cdbde8c9e9a7db11e1e055c7d9c2c67ee98ab5"
[nil nil nil nil (26103 10456 401742 300000) 0 nil]
([nil nil ((#("a" 0 1 (face (nxml-text) fontified t)) . -387) (undo-tree-id77 . -1) (#("c" 0 1 (face (nxml-text) fontified t)) . -388) (undo-tree-id78 . -1) (#("t" 0 1 (face (nxml-text) fontified t)) . -389) (undo-tree-id79 . -1) (#("i" 0 1 (face (nxml-text) fontified t)) . -390) (undo-tree-id80 . -1) (#("c" 0 1 (face (nxml-text) fontified t)) . -391) (undo-tree-id81 . -1) (#("a" 0 1 (face (nxml-text) fontified t)) . -392) (undo-tree-id82 . -1) 393 (t 26096 29699 143691 247000)) nil (26103 10456 401740 607000) 0 nil])
([nil nil ((387 . 393)) nil (26103 10456 401736 168000) 0 nil])
([nil nil ((#("3" 0 1 (face (nxml-text) fontified t)) . -479) (undo-tree-id76 . -1) 480) nil (26103 10456 401735 387000) 0 nil])
([nil nil ((479 . 480)) nil (26103 10456 401734 195000) 0 nil])
([nil nil ((#("á" 0 1 (face (nxml-text) fontified t)) . -472) (undo-tree-id71 . -1) (#("c" 0 1 (face (nxml-text) fontified t)) . -473) (undo-tree-id72 . -1) (#("t" 0 1 (face (nxml-text) fontified t)) . -474) (undo-tree-id73 . -1) (#("i" 0 1 (face (nxml-text) fontified t)) . -475) (undo-tree-id74 . -1) (#("c" 0 1 (face (nxml-text) fontified t)) . -476) (undo-tree-id75 . -1) 477) nil (26103 10456 401733 103000) 0 nil])
([nil nil ((#("a" 0 1 (face (nxml-text) fontified t)) . -472) (undo-tree-id70 . -1) 473) nil (26103 10456 401728 845000) 0 nil])
([nil nil ((472 . 478)) nil (26103 10456 401727 432000) 0 nil])
([nil nil ((#("á" 0 1 (face (nxml-text) fontified t)) . -510) (undo-tree-id62 . -1) (#("c" 0 1 (face (nxml-text) fontified t)) . -511) (undo-tree-id63 . -1) (#("t" 0 1 (face (nxml-text) fontified t)) . -512) (undo-tree-id64 . -1) (#("i" 0 1 (face (nxml-text) fontified t)) . -513) (undo-tree-id65 . -1) (#("c" 0 1 (face (nxml-text) fontified t)) . -514) (undo-tree-id66 . -1) (#("a" 0 1 (face (nxml-text) fontified t)) . -515) (undo-tree-id67 . -1) (#(" " 0 1 (face (nxml-text) fontified t)) . -516) (undo-tree-id68 . -1) (#("3" 0 1 (face (nxml-text) fontified t)) . -517) (undo-tree-id69 . -1) 518) nil (26103 10456 401725 939000) 0 nil])
([nil nil ((510 . 515)) nil (26103 10456 401718 576000) 0 nil])
([nil nil ((#("i" 0 1 (face (nxml-text) fontified t)) . -514) (undo-tree-id61 . -1) 515) nil (26103 10456 401718 55000) 0 nil])
([nil nil ((514 . 518)) nil (26103 10456 401717 13000) 0 nil])
([nil nil ((#("Árboles binarios, binarios completos y
    binarios ordenados." 0 62 (face (nxml-text) fontified t)) . 544) (undo-tree-id60 . -62)) nil (26103 10456 401716 452000) 0 nil])
([nil nil ((544 . 555)) nil (26103 10456 401715 470000) 0 nil])
([nil nil ((#("e" 0 1 (face (nxml-text) fontified t)) . -554) (undo-tree-id59 . -1) 555) nil (26103 10456 401714 949000) 0 nil])
([nil nil ((554 . 561)) nil (26103 10456 401713 887000) 0 nil])
([nil nil ((561 . 564)) nil (26103 10456 401713 406000) 0 nil])
([nil nil ((#("d" 0 1 (face (nxml-text) fontified t)) . -563) (undo-tree-id58 . -1) 564) nil (26103 10456 401712 875000) 0 nil])
([nil nil ((563 . 567)) nil (26103 10456 401711 813000) 0 nil])
([nil nil ((567 . 568)) nil (26103 10456 401711 312000) 0 nil])
([nil nil ((#("a" 0 1 (face (nxml-text) fontified t)) . -646) (undo-tree-id51 . -1) (#("c" 0 1 (face (nxml-text) fontified t)) . -647) (undo-tree-id52 . -1) (#("t" 0 1 (face (nxml-text) fontified t)) . -648) (undo-tree-id53 . -1) (#("i" 0 1 (face (nxml-text) fontified t)) . -649) (undo-tree-id54 . -1) (#("c" 0 1 (face (nxml-text) fontified t)) . -650) (undo-tree-id55 . -1) (#("a" 0 1 (face (nxml-text) fontified t)) . -651) (undo-tree-id56 . -1) (#("3" 0 1 (face (nxml-text) fontified t)) . -652) (undo-tree-id57 . -1) 653) nil (26103 10456 401710 180000) 0 nil])
([nil nil ((646 . 653)) nil (26103 10456 401704 640000) 0 nil])
([nil nil ((#("1" 0 1 (face (nxml-text) fontified t)) . -652) (undo-tree-id50 . -1) 653) nil (26103 10456 401704 59000) 0 nil])
([nil nil ((652 . 653)) nil (26103 10456 401702 937000) 0 nil])
([nil nil ((#("2" 0 1 (face (nxml-text) fontified t)) . -652) (undo-tree-id49 . -1) 653) nil (26103 10456 401702 265000) 0 nil])
([nil nil ((652 . 653)) nil (26103 10456 401700 943000) 0 nil])
([nil nil ((#("C" 0 1 (face (nxml-text) fontified t)) . -687) (undo-tree-id30 . -1) (#("a" 0 1 (face (nxml-text) fontified t)) . -688) (undo-tree-id31 . -1) (#("n" 0 1 (face (nxml-text) fontified t)) . -689) (undo-tree-id32 . -1) (#("e" 0 1 (face (nxml-text) fontified t)) . -690) (undo-tree-id33 . -1) (#("k" 0 1 (face (nxml-text) fontified t)) . -691) (undo-tree-id34 . -1) (#(" " 0 1 (face (nxml-text) fontified t)) . -692) (undo-tree-id35 . -1) (#("P" 0 1 (face (nxml-text) fontified t)) . -693) (undo-tree-id36 . -1) (#("e" 0 1 (face (nxml-text) fontified t)) . -694) (undo-tree-id37 . -1) (#("l" 0 1 (face (nxml-text) fontified t)) . -695) (undo-tree-id38 . -1) (#("á" 0 1 (face (nxml-text) fontified t)) . -696) (undo-tree-id39 . -1) (#("e" 0 1 (face (nxml-text) fontified t)) . -697) (undo-tree-id40 . -1) (#("z" 0 1 (face (nxml-text) fontified t)) . -698) (undo-tree-id41 . -1) (#(" " 0 1 (face (nxml-text) fontified t)) . -699) (undo-tree-id42 . -1) (#("V" 0 1 (face (nxml-text) fontified t)) . -700) (undo-tree-id43 . -1) (#("a" 0 1 (face (nxml-text) fontified t)) . -701) (undo-tree-id44 . -1) (#("l" 0 1 (face (nxml-text) fontified t)) . -702) (undo-tree-id45 . -1) (#("d" 0 1 (face (nxml-text) fontified t)) . -703) (undo-tree-id46 . -1) (#("é" 0 1 (face (nxml-text) fontified t)) . -704) (undo-tree-id47 . -1) (#("s" 0 1 (face (nxml-text) fontified t)) . -705) (undo-tree-id48 . -1) 706) nil (26103 10456 401698 739000) 0 nil])
([nil nil ((687 . 697)) nil (26103 10456 401685 845000) 0 nil])
([nil nil ((#("A" 0 1 (face (nxml-text) fontified t)) . -693) (undo-tree-id26 . -1) (#("N" 0 1 (face (nxml-text) fontified t)) . -694) (undo-tree-id27 . -1) (#("U" 0 1 (face (nxml-text) fontified t)) . -695) (undo-tree-id28 . -1) (#("E" 0 1 (face (nxml-text) fontified t)) . -696) (undo-tree-id29 . -1) 697) nil (26103 10456 401684 933000) 0 nil])
([nil nil ((693 . 694)) nil (26103 10456 401681 968000) 0 nil])
([nil nil ((#("A" 0 1 (face (nxml-text) fontified t)) . -693) (undo-tree-id25 . -1) 694) nil (26103 10456 401681 266000) 0 nil])
([nil nil ((693 . 696)) nil (26103 10456 401680 104000) 0 nil])
([nil nil ((#("b" 0 1 (face (nxml-text) fontified t)) . -694) (undo-tree-id23 . -1) (#("u" 0 1 (face (nxml-text) fontified t)) . -695) (undo-tree-id24 . -1) 696) nil (26103 10456 401679 313000) 0 nil])
([nil nil ((694 . 702)) nil (26103 10456 401677 660000) 0 nil])
([nil nil ((#("r" 0 1 (face (nxml-text) fontified t)) . -699) (undo-tree-id20 . -1) (#("=" 0 1 (face (nxml-text) fontified t)) . -700) (undo-tree-id21 . -1) (#("r" 0 1 (face (nxml-text) fontified t)) . -701) (undo-tree-id22 . -1) 702) nil (26103 10456 401676 818000) 0 nil])
([nil nil ((699 . 700)) nil (26103 10456 401674 524000) 0 nil])
([nil nil ((700 . 710)) nil (26103 10456 401673 993000) 0 nil])
([nil nil ((#("https://aztlan.fciencias.unam.mx/~canek/" 0 40 (face (nxml-text) fontified t)) . 727) (undo-tree-id19 . -40)) nil (26103 10456 401673 331000) 0 nil])
([nil nil ((nil rear-nonsticky nil 756 . 757) (nil fontified nil 727 . 757) (727 . 757)) nil (26103 10456 401672 109000) 0 nil])
([nil nil ((#("a" 0 1 (face (nxml-text) fontified t)) . -2314) (undo-tree-id13 . -1) (#("c" 0 1 (face (nxml-text) fontified t)) . -2315) (undo-tree-id14 . -1) (#("t" 0 1 (face (nxml-text) fontified t)) . -2316) (undo-tree-id15 . -1) (#("i" 0 1 (face (nxml-text) fontified t)) . -2317) (undo-tree-id16 . -1) (#("c" 0 1 (face (nxml-text) fontified t)) . -2318) (undo-tree-id17 . -1) (#("a" 0 1 (face (nxml-text) fontified t)) . -2319) (undo-tree-id18 . -1) 2320) nil (26103 10456 401670 576000) 0 nil])
([nil nil ((2314 . 2320)) nil (26103 10456 401666 58000) 0 nil])
([nil nil ((#("3" 0 1 (face (nxml-text) fontified t)) . -2320) (undo-tree-id12 . -1) 2321) nil (26103 10456 401665 297000) 0 nil])
([nil nil ((2320 . 2321)) nil (26103 10456 401663 774000) 0 nil])
([nil nil ((#("r" 0 1 (face (nxml-text) fontified t)) . -2784) (undo-tree-id4 . -1) (#("a" 0 1 (face (nxml-text) fontified t)) . -2785) (undo-tree-id5 . -1) (#("c" 0 1 (face (nxml-text) fontified t)) . -2786) (undo-tree-id6 . -1) (#("t" 0 1 (face (nxml-text) fontified t)) . -2787) (undo-tree-id7 . -1) (#("i" 0 1 (face (nxml-text) fontified t)) . -2788) (undo-tree-id8 . -1) (#("c" 0 1 (face (nxml-text) fontified t)) . -2789) (undo-tree-id9 . -1) (#("a" 0 1 (face (nxml-text) fontified t)) . -2790) (undo-tree-id10 . -1) (#("3" 0 1 (face (nxml-text) fontified t)) . -2791) (undo-tree-id11 . -1) 2792) nil (26103 10456 401661 860000) 0 nil])
([nil nil ((2784 . 2789)) nil (26103 10456 401651 220000) 0 nil])
([nil nil ((#("p" 0 1 (face (nxml-text) fontified t)) . -2785) (undo-tree-id0 . -1) (#("y" 0 1 (face (nxml-text) fontified t)) . -2786) (undo-tree-id1 . -1) (#("e" 0 1 (face (nxml-text) fontified t)) . -2787) (undo-tree-id2 . -1) (#("c" 0 1 (face (nxml-text) fontified t)) . -2788) (undo-tree-id3 . -1) 2789) nil (26103 10456 401648 445000) 0 nil])
([nil nil ((2785 . 2792)) nil (26103 10456 401632 766000) 0 nil])
([nil nil ((2312 . 2321) (t 26103 10456 455361 819000)) nil (26103 22679 596613 53000) 0 nil])
([nil nil ((#("u" 0 1 (face (nxml-text) fontified t)) . -2315) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("e" 0 1 (face (nxml-text) fontified t)) . -2316) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("c" 0 1 (face (nxml-text) fontified t)) . -2317) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("t" 0 1 (face (nxml-text) fontified t)) . -2318) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("o" 0 1 (face (nxml-text) fontified t)) . -2319) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("2" 0 1 (face (nxml-text) fontified t)) . -2320) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) 2321) nil (26103 22679 596606 380000) 0 nil])
([nil current ((2315 . 2322)) nil (26103 22679 596493 850000) 0 nil])
nil
