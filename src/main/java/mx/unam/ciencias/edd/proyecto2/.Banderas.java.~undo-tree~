(undo-tree-save-format-version . 1)
"e56193ee91a96535559032fa5b9cbae4c1552037"
[nil nil nil nil (26109 50253 439525 697000) 0 nil]
([nil nil ((#("/*
package mx.unam.ciencias.edd.proyecto1;
import mx.unam.ciencias.edd.Lista;

public class Ordenador{
    
    public Lista<String> ordena (Lista<String> lista){

	lista = new Lista<>();
	int longitd = lista.getLongitud();
		
	FileReader lectorArchivo = new FileReader(nombreArchivo);
	BufferedReader lector = new BufferedReader(lectorArchivo);
	
	String renglon;
	
	while((renglon = lector.readLine()) != null){
	    lista.agrega(renglon);
	}
	
	Lista<String> ord = lista.mergeSort(lista, (a,b) -> {
		String s = a.replaceAll(\"รก\", \"a\");
		String sdos = a.replaceAll(\" \", \"\");
		if(a.length() > b.length())
		    return 1;
		else return -1;
		
	    });	
		

	
    }





}
*/
" 0 1 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t fontified t) 1 2 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 2 674 (face font-lock-comment-face c-in-sws t fontified t) 674 675 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 675 676 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 676 677 (c-is-sws t fontified t)) . 1) (undo-tree-id195 . -172) (undo-tree-id196 . -677) (undo-tree-id197 . -172) (undo-tree-id198 . -172) (undo-tree-id199 . -172) (t 26105 49298 708563 610000)) nil (26109 50253 439524 94000) 0 nil])
([nil nil ((nil rear-nonsticky nil 986 . 987) (nil fontified nil 986 . 987) (nil fontified nil 985 . 986) (nil fontified nil 984 . 985) (nil fontified nil 980 . 984) (nil fontified nil 979 . 980) (nil fontified nil 978 . 979) (nil fontified nil 974 . 978) (nil fontified nil 973 . 974) (nil fontified nil 972 . 973) (nil fontified nil 971 . 972) (nil fontified nil 970 . 971) (nil fontified nil 969 . 970) (nil fontified nil 968 . 969) (nil fontified nil 967 . 968) (nil fontified nil 966 . 967) (nil fontified nil 965 . 966) (nil fontified nil 964 . 965) (nil fontified nil 963 . 964) (nil fontified nil 958 . 963) (nil fontified nil 957 . 958) (nil fontified nil 955 . 957) (nil fontified nil 954 . 955) (nil fontified nil 953 . 954) (nil fontified nil 952 . 953) (nil fontified nil 951 . 952) (nil fontified nil 950 . 951) (nil fontified nil 949 . 950) (nil fontified nil 948 . 949) (nil fontified nil 947 . 948) (nil fontified nil 946 . 947) (nil fontified nil 945 . 946) (nil fontified nil 943 . 945) (nil fontified nil 942 . 943) (nil fontified nil 940 . 942) (nil fontified nil 939 . 940) (nil fontified nil 938 . 939) (nil fontified nil 936 . 938) (nil fontified nil 935 . 936) (nil fontified nil 934 . 935) (nil fontified nil 933 . 934) (nil fontified nil 932 . 933) (nil fontified nil 931 . 932) (nil fontified nil 930 . 931) (nil fontified nil 929 . 930) (nil fontified nil 928 . 929) (nil fontified nil 927 . 928) (nil fontified nil 926 . 927) (nil fontified nil 925 . 926) (nil fontified nil 924 . 925) (nil fontified nil 923 . 924) (nil fontified nil 922 . 923) (nil fontified nil 921 . 922) (nil fontified nil 920 . 921) (nil fontified nil 919 . 920) (nil fontified nil 918 . 919) (nil fontified nil 917 . 918) (nil fontified nil 916 . 917) (nil fontified nil 915 . 916) (nil fontified nil 914 . 915) (nil fontified nil 913 . 914) (nil fontified nil 912 . 913) (nil fontified nil 911 . 912) (nil fontified nil 910 . 911) (nil fontified nil 909 . 910) (nil fontified nil 908 . 909) (nil fontified nil 907 . 908) (nil fontified nil 901 . 907) (nil fontified nil 900 . 901) (nil fontified nil 899 . 900) (nil fontified nil 898 . 899) (nil fontified nil 894 . 898) (nil fontified nil 893 . 894) (nil fontified nil 892 . 893) (nil fontified nil 890 . 892) (nil fontified nil 889 . 890) (nil fontified nil 888 . 889) (nil fontified nil 887 . 888) (nil fontified nil 886 . 887) (nil fontified nil 885 . 886) (nil fontified nil 884 . 885) (nil fontified nil 883 . 884) (nil fontified nil 882 . 883) (nil fontified nil 881 . 882) (nil fontified nil 880 . 881) (nil fontified nil 879 . 880) (nil fontified nil 878 . 879) (nil fontified nil 877 . 878) (nil fontified nil 876 . 877) (nil fontified nil 875 . 876) (nil fontified nil 874 . 875) (nil fontified nil 873 . 874) (nil fontified nil 872 . 873) (nil fontified nil 871 . 872) (nil fontified nil 870 . 871) (nil fontified nil 869 . 870) (nil fontified nil 868 . 869) (nil fontified nil 862 . 868) (nil fontified nil 861 . 862) (nil fontified nil 860 . 861) (nil fontified nil 859 . 860) (nil fontified nil 858 . 859) (nil fontified nil 857 . 858) (nil fontified nil 851 . 857) (nil fontified nil 850 . 851) (nil fontified nil 849 . 850) (nil fontified nil 848 . 849) (nil fontified nil 847 . 848) (nil fontified nil 846 . 847) (nil fontified nil 845 . 846) (nil fontified nil 844 . 845) (nil fontified nil 843 . 844) (nil fontified nil 842 . 843) (nil fontified nil 841 . 842) (nil fontified nil 840 . 841) (nil fontified nil 839 . 840) (nil fontified nil 838 . 839) (nil fontified nil 837 . 838) (nil fontified nil 836 . 837) (nil fontified nil 835 . 836) (nil fontified nil 834 . 835) (nil fontified nil 833 . 834) (nil fontified nil 832 . 833) (nil fontified nil 831 . 832) (nil fontified nil 830 . 831) (nil fontified nil 829 . 830) (nil fontified nil 828 . 829) (nil fontified nil 827 . 828) (nil fontified nil 826 . 827) (nil fontified nil 825 . 826) (nil fontified nil 824 . 825) (nil fontified nil 823 . 824) (nil fontified nil 822 . 823) (nil fontified nil 821 . 822) (nil fontified nil 818 . 821) (nil fontified nil 817 . 818) (nil fontified nil 816 . 817) (nil fontified nil 814 . 816) (nil fontified nil 813 . 814) (nil fontified nil 812 . 813) (nil fontified nil 811 . 812) (nil fontified nil 810 . 811) (nil fontified nil 809 . 810) (nil fontified nil 808 . 809) (nil fontified nil 807 . 808) (nil fontified nil 806 . 807) (nil fontified nil 805 . 806) (nil fontified nil 804 . 805) (nil fontified nil 803 . 804) (nil fontified nil 802 . 803) (nil fontified nil 801 . 802) (nil fontified nil 800 . 801) (nil fontified nil 799 . 800) (nil fontified nil 798 . 799) (nil fontified nil 797 . 798) (nil fontified nil 791 . 797) (nil fontified nil 790 . 791) (nil fontified nil 789 . 790) (nil fontified nil 788 . 789) (nil fontified nil 787 . 788) (nil fontified nil 786 . 787) (nil fontified nil 785 . 786) (nil fontified nil 784 . 785) (nil fontified nil 783 . 784) (nil fontified nil 782 . 783) (nil fontified nil 781 . 782) (nil fontified nil 780 . 781) (nil fontified nil 779 . 780) (nil fontified nil 778 . 779) (nil fontified nil 777 . 778) (nil fontified nil 776 . 777) (nil fontified nil 775 . 776) (nil fontified nil 774 . 775) (nil fontified nil 773 . 774) (nil fontified nil 772 . 773) (nil fontified nil 771 . 772) (nil fontified nil 770 . 771) (nil fontified nil 769 . 770) (nil fontified nil 768 . 769) (nil fontified nil 767 . 768) (nil fontified nil 766 . 767) (nil fontified nil 765 . 766) (nil fontified nil 764 . 765) (nil fontified nil 763 . 764) (nil fontified nil 762 . 763) (nil fontified nil 761 . 762) (nil fontified nil 760 . 761) (nil fontified nil 759 . 760) (nil fontified nil 758 . 759) (nil fontified nil 757 . 758) (nil fontified nil 756 . 757) (nil fontified nil 755 . 756) (nil fontified nil 754 . 755) (nil fontified nil 753 . 754) (nil fontified nil 752 . 753) (nil fontified nil 751 . 752) (nil fontified nil 745 . 751) (nil fontified nil 744 . 745) (nil fontified nil 743 . 744) (nil fontified nil 742 . 743) (nil fontified nil 741 . 742) (nil fontified nil 740 . 741) (nil fontified nil 739 . 740) (nil fontified nil 738 . 739) (nil fontified nil 737 . 738) (nil fontified nil 736 . 737) (nil fontified nil 735 . 736) (nil fontified nil 734 . 735) (nil fontified nil 733 . 734) (nil fontified nil 732 . 733) (nil fontified nil 731 . 732) (nil fontified nil 730 . 731) (nil fontified nil 728 . 730) (nil fontified nil 727 . 728) (nil fontified nil 726 . 727) (nil fontified nil 725 . 726) (nil fontified nil 724 . 725) (nil fontified nil 723 . 724) (nil fontified nil 722 . 723) (nil fontified nil 721 . 722) (nil fontified nil 720 . 721) (nil fontified nil 719 . 720) (nil fontified nil 718 . 719) (nil fontified nil 717 . 718) (nil fontified nil 716 . 717) (nil fontified nil 715 . 716) (nil fontified nil 714 . 715) (nil fontified nil 713 . 714) (nil fontified nil 712 . 713) (nil fontified nil 711 . 712) (nil fontified nil 710 . 711) (nil fontified nil 709 . 710) (nil fontified nil 708 . 709) (nil fontified nil 707 . 708) (nil fontified nil 706 . 707) (nil fontified nil 705 . 706) (nil fontified nil 704 . 705) (nil fontified nil 703 . 704) (nil fontified nil 702 . 703) (nil fontified nil 701 . 702) (nil fontified nil 700 . 701) (nil fontified nil 699 . 700) (nil fontified nil 698 . 699) (nil fontified nil 697 . 698) (nil fontified nil 696 . 697) (nil fontified nil 692 . 696) (nil fontified nil 691 . 692) (nil fontified nil 690 . 691) (nil fontified nil 689 . 690) (nil fontified nil 688 . 689) (nil fontified nil 685 . 688) (nil fontified nil 684 . 685) (nil fontified nil 683 . 684) (nil fontified nil 682 . 683) (nil fontified nil 681 . 682) (nil fontified nil 680 . 681) (nil fontified nil 679 . 680) (nil fontified nil 678 . 679) (nil fontified nil 677 . 678) (nil fontified nil 676 . 677) (nil fontified nil 675 . 676) (nil fontified nil 673 . 675) (nil fontified nil 672 . 673) (nil fontified nil 671 . 672) (nil fontified nil 670 . 671) (nil fontified nil 668 . 670) (nil fontified nil 667 . 668) (nil fontified nil 666 . 667) (nil fontified nil 665 . 666) (nil fontified nil 664 . 665) (nil fontified nil 663 . 664) (nil fontified nil 662 . 663) (nil fontified nil 661 . 662) (nil fontified nil 660 . 661) (nil fontified nil 659 . 660) (nil fontified nil 658 . 659) (nil fontified nil 657 . 658) (nil fontified nil 656 . 657) (nil fontified nil 655 . 656) (nil fontified nil 654 . 655) (nil fontified nil 653 . 654) (nil fontified nil 652 . 653) (nil fontified nil 651 . 652) (nil fontified nil 645 . 651) (nil fontified nil 644 . 645) (nil fontified nil 643 . 644) (nil fontified nil 642 . 643) (nil fontified nil 641 . 642) (nil fontified nil 640 . 641) (nil fontified nil 639 . 640) (nil fontified nil 638 . 639) (nil fontified nil 637 . 638) (nil fontified nil 636 . 637) (nil fontified nil 635 . 636) (nil fontified nil 634 . 635) (nil fontified nil 633 . 634) (nil fontified nil 632 . 633) (nil fontified nil 631 . 632) (nil fontified nil 630 . 631) (nil fontified nil 629 . 630) (nil fontified nil 628 . 629) (nil fontified nil 627 . 628) (nil fontified nil 626 . 627) (nil fontified nil 625 . 626) (nil fontified nil 624 . 625) (nil fontified nil 623 . 624) (nil fontified nil 622 . 623) (nil fontified nil 621 . 622) (nil fontified nil 620 . 621) (nil fontified nil 619 . 620) (nil fontified nil 618 . 619) (nil fontified nil 617 . 618) (nil fontified nil 616 . 617) (nil fontified nil 615 . 616) (nil fontified nil 614 . 615) (nil fontified nil 613 . 614) (nil fontified nil 612 . 613) (nil fontified nil 611 . 612) (nil fontified nil 610 . 611) (nil fontified nil 609 . 610) (nil fontified nil 608 . 609) (nil fontified nil 607 . 608) (nil fontified nil 601 . 607) (nil fontified nil 600 . 601) (nil fontified nil 599 . 600) (nil fontified nil 598 . 599) (nil fontified nil 597 . 598) (nil fontified nil 596 . 597) (nil fontified nil 595 . 596) (nil fontified nil 594 . 595) (nil fontified nil 593 . 594) (nil fontified nil 592 . 593) (nil fontified nil 591 . 592) (nil fontified nil 590 . 591) (nil fontified nil 589 . 590) (nil fontified nil 588 . 589) (nil fontified nil 587 . 588) (nil fontified nil 586 . 587) (nil fontified nil 584 . 586) (nil fontified nil 583 . 584) (nil fontified nil 582 . 583) (nil fontified nil 581 . 582) (nil fontified nil 580 . 581) (nil fontified nil 579 . 580) (nil fontified nil 578 . 579) (nil fontified nil 577 . 578) (nil fontified nil 576 . 577) (nil fontified nil 575 . 576) (nil fontified nil 574 . 575) (nil fontified nil 573 . 574) (nil fontified nil 572 . 573) (nil fontified nil 571 . 572) (nil fontified nil 570 . 571) (nil fontified nil 569 . 570) (nil fontified nil 568 . 569) (nil fontified nil 567 . 568) (nil fontified nil 566 . 567) (nil fontified nil 565 . 566) (nil fontified nil 564 . 565) (nil fontified nil 563 . 564) (nil fontified nil 562 . 563) (nil fontified nil 561 . 562) (nil fontified nil 560 . 561) (nil fontified nil 559 . 560) (nil fontified nil 558 . 559) (nil fontified nil 557 . 558) (nil fontified nil 556 . 557) (nil fontified nil 555 . 556) (nil fontified nil 554 . 555) (nil fontified nil 553 . 554) (nil fontified nil 548 . 553) (nil fontified nil 547 . 548) (nil fontified nil 546 . 547) (nil fontified nil 545 . 546) (nil fontified nil 544 . 545) (nil fontified nil 543 . 544) (nil fontified nil 542 . 543) (nil fontified nil 541 . 542) (nil fontified nil 540 . 541) (nil fontified nil 539 . 540) (nil fontified nil 538 . 539) (nil fontified nil 537 . 538) (nil fontified nil 536 . 537) (nil fontified nil 535 . 536) (nil fontified nil 534 . 535) (nil fontified nil 533 . 534) (nil fontified nil 532 . 533) (nil fontified nil 531 . 532) (nil fontified nil 530 . 531) (nil fontified nil 529 . 530) (nil fontified nil 528 . 529) (nil fontified nil 527 . 528) (nil fontified nil 526 . 527) (nil fontified nil 525 . 526) (nil fontified nil 524 . 525) (nil fontified nil 523 . 524) (nil fontified nil 522 . 523) (nil fontified nil 521 . 522) (nil fontified nil 520 . 521) (nil fontified nil 519 . 520) (nil fontified nil 518 . 519) (nil fontified nil 517 . 518) (nil fontified nil 516 . 517) (nil fontified nil 515 . 516) (nil fontified nil 514 . 515) (nil fontified nil 513 . 514) (nil fontified nil 512 . 513) (nil fontified nil 511 . 512) (nil fontified nil 510 . 511) (nil fontified nil 509 . 510) (nil fontified nil 508 . 509) (nil fontified nil 507 . 508) (nil fontified nil 506 . 507) (nil fontified nil 505 . 506) (nil fontified nil 504 . 505) (nil fontified nil 503 . 504) (nil fontified nil 502 . 503) (nil fontified nil 501 . 502) (nil fontified nil 500 . 501) (nil fontified nil 499 . 500) (nil fontified nil 498 . 499) (nil fontified nil 497 . 498) (nil fontified nil 496 . 497) (nil fontified nil 495 . 496) (nil fontified nil 494 . 495) (nil fontified nil 493 . 494) (nil fontified nil 492 . 493) (nil fontified nil 491 . 492) (nil fontified nil 490 . 491) (nil fontified nil 489 . 490) (nil fontified nil 488 . 489) (nil fontified nil 487 . 488) (nil fontified nil 486 . 487) (nil fontified nil 485 . 486) (nil fontified nil 484 . 485) (nil fontified nil 483 . 484) (nil fontified nil 482 . 483) (nil fontified nil 481 . 482) (nil fontified nil 480 . 481) (nil fontified nil 479 . 480) (nil fontified nil 478 . 479) (nil fontified nil 477 . 478) (nil fontified nil 476 . 477) (nil fontified nil 475 . 476) (nil fontified nil 474 . 475) (nil fontified nil 473 . 474) (nil fontified nil 472 . 473) (nil fontified nil 471 . 472) (nil fontified nil 470 . 471) (nil fontified nil 469 . 470) (nil fontified nil 468 . 469) (nil fontified nil 467 . 468) (nil fontified nil 466 . 467) (nil fontified nil 465 . 466) (nil fontified nil 464 . 465) (nil fontified nil 463 . 464) (nil fontified nil 462 . 463) (nil fontified nil 461 . 462) (nil fontified nil 460 . 461) (nil fontified nil 456 . 460) (nil fontified nil 455 . 456) (nil fontified nil 454 . 455) (nil fontified nil 453 . 454) (nil fontified nil 449 . 453) (nil fontified nil 448 . 449) (nil fontified nil 447 . 448) (nil fontified nil 446 . 447) (nil fontified nil 445 . 446) (nil fontified nil 444 . 445) (nil fontified nil 443 . 444) (nil fontified nil 442 . 443) (nil fontified nil 441 . 442) (nil fontified nil 440 . 441) (nil fontified nil 439 . 440) (nil fontified nil 438 . 439) (nil fontified nil 437 . 438) (nil fontified nil 436 . 437) (nil fontified nil 435 . 436) (nil fontified nil 434 . 435) (nil fontified nil 433 . 434) (nil fontified nil 432 . 433) (nil fontified nil 431 . 432) (nil fontified nil 430 . 431) (nil fontified nil 429 . 430) (nil fontified nil 428 . 429) (nil fontified nil 427 . 428) (nil fontified nil 426 . 427) (nil fontified nil 425 . 426) (nil fontified nil 424 . 425) (nil fontified nil 423 . 424) (nil fontified nil 422 . 423) (nil fontified nil 421 . 422) (nil fontified nil 420 . 421) (nil fontified nil 419 . 420) (nil fontified nil 418 . 419) (nil fontified nil 417 . 418) (nil fontified nil 416 . 417) (nil fontified nil 415 . 416) (nil fontified nil 414 . 415) (nil fontified nil 413 . 414) (nil fontified nil 412 . 413) (nil fontified nil 411 . 412) (nil fontified nil 410 . 411) (nil fontified nil 409 . 410) (nil fontified nil 408 . 409) (nil fontified nil 407 . 408) (nil fontified nil 406 . 407) (nil fontified nil 405 . 406) (nil fontified nil 404 . 405) (nil fontified nil 403 . 404) (nil fontified nil 402 . 403) (nil fontified nil 401 . 402) (nil fontified nil 400 . 401) (nil fontified nil 399 . 400) (nil fontified nil 398 . 399) (nil fontified nil 397 . 398) (nil fontified nil 396 . 397) (nil fontified nil 395 . 396) (nil fontified nil 394 . 395) (nil fontified nil 393 . 394) (nil fontified nil 392 . 393) (nil fontified nil 391 . 392) (nil fontified nil 390 . 391) (nil fontified nil 389 . 390) (nil fontified nil 388 . 389) (nil fontified nil 387 . 388) (nil fontified nil 383 . 387) (nil fontified nil 382 . 383) (nil fontified nil 377 . 382) (nil fontified nil 376 . 377) (nil fontified nil 375 . 376) (nil fontified nil 374 . 375) (nil fontified nil 373 . 374) (nil fontified nil 372 . 373) (nil fontified nil 371 . 372) (nil fontified nil 370 . 371) (nil fontified nil 369 . 370) (nil fontified nil 368 . 369) (nil fontified nil 367 . 368) (nil fontified nil 366 . 367) (nil fontified nil 365 . 366) (nil fontified nil 364 . 365) (nil fontified nil 363 . 364) (nil fontified nil 362 . 363) (nil fontified nil 358 . 362) (nil fontified nil 357 . 358) (nil fontified nil 356 . 357) (nil fontified nil 355 . 356) (nil fontified nil 354 . 355) (nil fontified nil 353 . 354) (nil fontified nil 352 . 353) (nil fontified nil 351 . 352) (nil fontified nil 350 . 351) (nil fontified nil 349 . 350) (nil fontified nil 348 . 349) (nil fontified nil 347 . 348) (nil fontified nil 346 . 347) (nil fontified nil 345 . 346) (nil fontified nil 344 . 345) (nil fontified nil 343 . 344) (nil fontified nil 342 . 343) (nil fontified nil 341 . 342) (nil fontified nil 340 . 341) (nil fontified nil 339 . 340) (nil fontified nil 335 . 339) (nil fontified nil 334 . 335) (nil fontified nil 333 . 334) (nil fontified nil 332 . 333) (nil fontified nil 331 . 332) (nil fontified nil 330 . 331) (nil fontified nil 329 . 330) (nil fontified nil 328 . 329) (nil fontified nil 327 . 328) (nil fontified nil 326 . 327) (nil fontified nil 325 . 326) (nil fontified nil 324 . 325) (nil fontified nil 323 . 324) (nil fontified nil 322 . 323) (nil fontified nil 321 . 322) (nil fontified nil 320 . 321) (nil fontified nil 319 . 320) (nil fontified nil 318 . 319) (nil fontified nil 317 . 318) (nil fontified nil 316 . 317) (nil fontified nil 312 . 316) (nil fontified nil 311 . 312) (nil fontified nil 310 . 311) (nil fontified nil 309 . 310) (nil fontified nil 308 . 309) (nil fontified nil 307 . 308) (nil fontified nil 306 . 307) (nil fontified nil 305 . 306) (nil fontified nil 304 . 305) (nil fontified nil 303 . 304) (nil fontified nil 302 . 303) (nil fontified nil 301 . 302) (nil fontified nil 300 . 301) (nil fontified nil 299 . 300) (nil fontified nil 298 . 299) (nil fontified nil 297 . 298) (nil fontified nil 296 . 297) (nil fontified nil 295 . 296) (nil fontified nil 294 . 295) (nil fontified nil 293 . 294) (nil fontified nil 292 . 293) (nil fontified nil 291 . 292) (nil fontified nil 287 . 291) (nil fontified nil 286 . 287) (nil fontified nil 285 . 286) (nil fontified nil 284 . 285) (nil fontified nil 283 . 284) (nil fontified nil 282 . 283) (nil fontified nil 281 . 282) (nil fontified nil 280 . 281) (nil fontified nil 279 . 280) (nil fontified nil 278 . 279) (nil fontified nil 277 . 278) (nil fontified nil 276 . 277) (nil fontified nil 275 . 276) (nil fontified nil 274 . 275) (nil fontified nil 273 . 274) (nil fontified nil 272 . 273) (nil fontified nil 263 . 272) (nil fontified nil 262 . 263) (nil fontified nil 261 . 262) (nil fontified nil 257 . 261) (nil fontified nil 256 . 257) (nil fontified nil 250 . 256) (nil fontified nil 249 . 250) (nil fontified nil 248 . 249) (nil fontified nil 247 . 248) (nil fontified nil 246 . 247) (nil fontified nil 237 . 246) (nil fontified nil 236 . 237) (nil fontified nil 232 . 236) (nil fontified nil 231 . 232) (nil fontified nil 227 . 231) (nil fontified nil 226 . 227) (nil fontified nil 220 . 226) (nil fontified nil 218 . 220) (nil fontified nil 217 . 218) (nil fontified nil 207 . 217) (nil fontified nil 206 . 207) (nil fontified nil 204 . 206) (nil fontified nil 203 . 204) (nil fontified nil 199 . 203) (nil fontified nil 198 . 199) (nil fontified nil 192 . 198) (nil fontified nil 190 . 192) (nil fontified nil 189 . 190) (nil fontified nil 176 . 189) (nil fontified nil 175 . 176) (nil fontified nil 173 . 175) (nil fontified nil 172 . 173) (nil fontified nil 168 . 172) (nil fontified nil 167 . 168) (nil fontified nil 161 . 167) (nil fontified nil 159 . 161) (nil fontified nil 158 . 159) (nil fontified nil 145 . 158) (nil fontified nil 144 . 145) (nil fontified nil 142 . 144) (nil fontified nil 141 . 142) (nil fontified nil 137 . 141) (nil fontified nil 136 . 137) (nil fontified nil 130 . 136) (nil fontified nil 128 . 130) (nil fontified nil 127 . 128) (nil fontified nil 118 . 127) (nil fontified nil 117 . 118) (nil fontified nil 115 . 117) (nil fontified nil 114 . 115) (nil fontified nil 110 . 114) (nil fontified nil 109 . 110) (nil fontified nil 103 . 109) (nil fontified nil 101 . 103) (nil fontified nil 100 . 101) (nil fontified nil 91 . 100) (nil fontified nil 90 . 91) (nil fontified nil 88 . 90) (nil fontified nil 87 . 88) (nil fontified nil 83 . 87) (nil fontified nil 82 . 83) (nil fontified nil 76 . 82) (nil fontified nil 75 . 76) (nil fontified nil 74 . 75) (nil fontified nil 73 . 74) (nil fontified nil 69 . 73) (nil fontified nil 68 . 69) (nil fontified nil 65 . 68) (nil fontified nil 64 . 65) (nil fontified nil 56 . 64) (nil fontified nil 55 . 56) (nil fontified nil 51 . 55) (nil fontified nil 50 . 51) (nil fontified nil 48 . 50) (nil fontified nil 47 . 48) (nil fontified nil 41 . 47) (nil fontified nil 39 . 41) (nil fontified nil 38 . 39) (nil fontified nil 30 . 38) (nil fontified nil 8 . 30) (nil fontified nil 1 . 8) (1 . 987)) nil (26109 50253 439498 175000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-type-face fontified t)) . -264) (undo-tree-id174 . -1) (#("d" 0 1 (face font-lock-type-face fontified t)) . -265) (undo-tree-id175 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -266) (undo-tree-id176 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -267) (undo-tree-id177 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -268) (undo-tree-id178 . -1) (#("d" 0 1 (face font-lock-type-face fontified t)) . -269) (undo-tree-id179 . -1) (#("o" 0 1 (face font-lock-type-face fontified t)) . -270) (undo-tree-id180 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -271) (undo-tree-id181 . -1) (#("L" 0 1 (face font-lock-type-face fontified t)) . -272) (undo-tree-id182 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -273) (undo-tree-id183 . -1) (#("x" 0 1 (face font-lock-type-face fontified t)) . -274) (undo-tree-id184 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -275) (undo-tree-id185 . -1) (#("c" 0 1 (face font-lock-type-face fontified t)) . -276) (undo-tree-id186 . -1) (#("o" 0 1 (face font-lock-type-face fontified t)) . -277) (undo-tree-id187 . -1) (#("g" 0 1 (face font-lock-type-face fontified t)) . -278) (undo-tree-id188 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -279) (undo-tree-id189 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -280) (undo-tree-id190 . -1) (#("f" 0 1 (face font-lock-type-face fontified t)) . -281) (undo-tree-id191 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -282) (undo-tree-id192 . -1) (#("c" 0 1 (face font-lock-type-face fontified t)) . -283) (undo-tree-id193 . -1) (#("o" 0 1 (face font-lock-type-face fontified t)) . -284) (undo-tree-id194 . -1) 285) nil (26109 50253 439410 781000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -335) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) 336) nil (26109 50253 439396 444000) 0 nil])
([nil nil ((#("O" 0 1 (face font-lock-type-face fontified t)) . -263) (undo-tree-id170 . -1) 264) nil (26109 50253 439394 100000) 0 nil])
([nil nil ((263 . 271)) nil (26109 50253 439392 938000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-type-face fontified t)) . -270) (undo-tree-id169 . -1) 271) nil (26109 50253 439392 297000) 0 nil])
([nil nil ((270 . 272)) nil (26109 50253 439391 64000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-type-face fontified t)) . -269) (undo-tree-id166 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -270) (undo-tree-id167 . -1) (#("s" 0 1 (face font-lock-type-face fontified t)) . -271) (undo-tree-id168 . -1) 272) nil (26109 50253 439390 293000) 0 nil])
([nil nil ((269 . 271)) nil (26109 50253 439387 638000) 0 nil])
([nil nil ((966 . 970) (#("    " 0 4 (fontified nil)) . 965) (undo-tree-id165 . -4) (969 . 970)) nil (26109 50253 439386 846000) 0 nil])
([nil nil ((925 . 926)) nil (26109 50253 439384 742000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -925) (undo-tree-id164 . -1) 926) nil (26109 50253 439383 490000) 0 nil])
([nil nil ((973 . 975)) nil (26109 50253 439382 238000) 0 nil])
([nil nil ((975 . 988)) nil (26109 50253 439381 556000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -987) (undo-tree-id163 . -1) 988) nil (26109 50253 439380 765000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -974) (undo-tree-id150 . -1) (#("p" 0 1 (fontified t)) . -975) (undo-tree-id151 . -1) (#("u" 0 1 (fontified t)) . -976) (undo-tree-id152 . -1) (#("b" 0 1 (fontified t)) . -977) (undo-tree-id153 . -1) (#("l" 0 1 (fontified t)) . -978) (undo-tree-id154 . -1) (#("i" 0 1 (fontified t)) . -979) (undo-tree-id155 . -1) (#("c" 0 1 (c-type c-decl-id-start face font-lock-keyword-face fontified t)) . -980) (undo-tree-id156 . -1) (#(" " 0 1 (fontified t)) . -981) (undo-tree-id157 . -1) (#("c" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -982) (undo-tree-id158 . -1) (#("l" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -983) (undo-tree-id159 . -1) (#("a" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -984) (undo-tree-id160 . -1) (#("s" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -985) (undo-tree-id161 . -1) (#("s" 0 1 (c-type c-decl-type-start face font-lock-keyword-face fontified t)) . -986) (undo-tree-id162 . -1) 987) nil (26109 50253 439377 920000) 0 nil])
([nil nil ((966 . 970) (#("    " 0 4 (fontified t)) . 966)) nil (26109 50253 439368 903000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1261 . 1262) (nil fontified nil 1008 . 1262) (nil fontified nil 1007 . 1008) (nil category c->-as-paren-syntax 1007 . 1008) (nil fontified nil 1006 . 1007) (nil category c-<-as-paren-syntax 1006 . 1007) (nil fontified nil 988 . 1006) (nil fontified nil 987 . 988) (nil category c->-as-paren-syntax 987 . 988) (nil fontified nil 981 . 987) (nil fontified nil 980 . 981) (nil category c-<-as-paren-syntax 980 . 981) (nil fontified nil 970 . 980) (970 . 1262)) nil (26109 50253 439367 710000) 0 nil])
([nil nil ((966 . 970) (#("         " 0 4 (fontified t) 4 9 (fontified t)) . 966) (undo-tree-id148 . -2) (undo-tree-id149 . -4) 968) nil (26109 50253 439365 106000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1011)) nil (26109 50253 439362 891000) 0 nil])
([nil nil ((1012 . 1016) (#("     " 0 5 (fontified t)) . 1012) (undo-tree-id147 . -4) 1016) nil (26109 50253 439361 990000) 0 nil])
([nil nil ((1074 . 1078) (#("     " 0 5 (fontified t)) . 1074) (undo-tree-id146 . -4) 1078) nil (26109 50253 439360 477000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1141)) nil (26109 50253 439358 834000) 0 nil])
([nil nil ((1142 . 1146) (#("     " 0 5 (fontified t)) . 1142) (undo-tree-id145 . -4) 1146) nil (26109 50253 439357 992000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1166)) nil (26109 50253 439353 233000) 0 nil])
([nil nil ((1167 . 1171) (#("     " 0 5 (fontified t)) . 1167) (undo-tree-id144 . -4) 1171) nil (26109 50253 439352 492000) 0 nil])
([nil nil ((1217 . 1218) (#("  " 0 2 (fontified t)) . 1217) 1221) nil (26109 50253 439350 679000) 0 nil])
([nil nil ((1241 . 1245) (#("     " 0 5 (fontified t)) . 1241) 1247) nil (26109 50253 439349 576000) 0 nil])
([nil nil ((1247 . 1251) (#(" " 0 1 (rear-nonsticky t fontified t)) . -1247) (undo-tree-id143 . -1) 1248) nil (26109 50253 439348 274000) 0 nil])
([nil nil ((967 . 971) (#("    " 0 4 (fontified nil)) . 966) (undo-tree-id142 . -4) (965 . 971)) nil (26109 50253 439346 551000) 0 nil])
([nil nil ((966 . 970)) nil (26109 50253 439345 48000) 0 nil])
([nil nil ((970 . 985)) nil (26109 50253 439344 397000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -977) (undo-tree-id134 . -1) (#("e" 0 1 (fontified t)) . -978) (undo-tree-id135 . -1) (#("c" 0 1 (fontified t)) . -979) (undo-tree-id136 . -1) (#("t" 0 1 (fontified t)) . -980) (undo-tree-id137 . -1) (#("u" 0 1 (fontified t)) . -981) (undo-tree-id138 . -1) (#("r" 0 1 (fontified t)) . -982) (undo-tree-id139 . -1) (#("a" 0 1 (fontified t)) . -983) (undo-tree-id140 . -1) (#(" " 0 1 (fontified t)) . -984) (undo-tree-id141 . -1) 985) nil (26109 50253 439342 844000) 0 nil])
([nil nil ((977 . 978)) nil (26109 50253 439336 893000) 0 nil])
([nil nil ((978 . 980)) nil (26109 50253 439336 382000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -979) (undo-tree-id133 . -1) 980) nil (26109 50253 439335 580000) 0 nil])
([nil nil ((979 . 982)) nil (26109 50253 439334 408000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -977) (undo-tree-id128 . -1) (#("o" 0 1 (fontified t)) . -978) (undo-tree-id129 . -1) (#("i" 0 1 (fontified t)) . -979) (undo-tree-id130 . -1) (#("d" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -980) (undo-tree-id131 . -1) (#(" " 0 1 (fontified t)) . -981) (undo-tree-id132 . -1) 982) nil (26109 50253 439333 336000) 0 nil])
([nil nil ((977 . 980)) nil (26109 50253 439329 779000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -977) (undo-tree-id125 . -1) (#("I" 0 1 (fontified t)) . -978) (undo-tree-id126 . -1) (#("S" 0 1 (fontified t)) . -979) (undo-tree-id127 . -1) 980) nil (26109 50253 439328 838000) 0 nil])
([nil nil ((977 . 979)) nil (26109 50253 439326 293000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -977) (undo-tree-id123 . -1) (#("i" 0 1 (fontified t)) . -978) (undo-tree-id124 . -1) 979) nil (26109 50253 439325 491000) 0 nil])
([nil nil ((977 . 984)) nil (26109 50253 439323 167000) 0 nil])
([nil nil ((983 . 989)) nil (26109 50253 439322 696000) 0 nil])
([nil nil ((990 . 991)) nil (26109 50253 439322 155000) 0 nil])
([nil nil ((991 . 997)) nil (26109 50253 439321 584000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -991) (undo-tree-id117 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -992) (undo-tree-id118 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -993) (undo-tree-id119 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -994) (undo-tree-id120 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -995) (undo-tree-id121 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -996) (undo-tree-id122 . -1) 997) nil (26109 50253 439319 901000) 0 nil])
([nil nil ((991 . 997)) nil (26109 50253 439315 272000) 0 nil])
([nil nil ((997 . 999)) nil (26109 50253 439314 751000) 0 nil])
([nil nil ((#("R" 0 1 (face font-lock-function-name-face fontified t)) . -991) (undo-tree-id116 . -1) 992) nil (26109 50253 439314 150000) 0 nil])
([nil nil ((991 . 992)) nil (26109 50253 439312 868000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-function-name-face fontified t)) . -457) (undo-tree-id115 . -1) 458) nil (26109 50253 439311 946000) 0 nil])
([nil nil ((457 . 458)) nil (26109 50253 439310 253000) 0 nil])
([nil nil ((#("B" 0 1 (face font-lock-function-name-face fontified t)) . -384) (undo-tree-id114 . -1) 385) nil (26109 50253 439308 830000) 0 nil])
([nil nil ((384 . 385)) nil (26109 50253 439307 417000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -379) (undo-tree-id110 . -1) (#("o" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -380) (undo-tree-id111 . -1) (#("i" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -381) (undo-tree-id112 . -1) (#("d" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -382) (undo-tree-id113 . -1) 383) nil (26109 50253 439306 325000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -379) (undo-tree-id108 . -1) (#("a" 0 1 (fontified t)) . -380) (undo-tree-id109 . -1) 381) nil (26109 50253 439302 769000) 0 nil])
([nil nil ((379 . 380)) nil (26109 50253 439300 805000) 0 nil])
([nil nil ((428 . 430)) nil (26109 50254 506663 421000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -428) (undo-tree-id360 . -1) (#(" " 0 1 (fontified t)) . -429) (undo-tree-id361 . -1) (#(" " 0 1 (fontified t)) . -430) (undo-tree-id362 . -1) (#(" " 0 1 (fontified t)) . -431) (undo-tree-id363 . -1) (#(" " 0 1 (fontified t)) . -432) (undo-tree-id364 . -1) (#(" " 0 1 (fontified t)) . -433) (undo-tree-id365 . -1) (#(" " 0 1 (fontified t)) . -434) (undo-tree-id366 . -1) (#(" " 0 1 (fontified t)) . -435) (undo-tree-id367 . -1) (#(" " 0 1 (fontified nil)) . -436) (undo-tree-id368 . -1) (#("	" 0 1 (fontified nil)) . 437) (undo-tree-id369 . -1) (429 . 437) 430) nil (26109 51381 740498 789000) 0 nil] [nil nil ((430 . 433)) ((#("re=" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 430) (undo-tree-id209 . -3) (undo-tree-id210 . -3) (undo-tree-id211 . -2) (undo-tree-id212 . -1) (undo-tree-id213 . -3)) (26109 50254 220853 440000) 0 nil])
([nil nil ((994 . 995)) nil (26109 51381 740491 966000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -430) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("e" 0 1 (fontified t)) . -431) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("=" 0 1 (fontified t)) . -432) (undo-tree-id106 . -1) (undo-tree-id107 . -1) 433) ((430 . 433)) (26109 50253 908454 596000) 0 nil])
([nil nil ((1286 . 1287)) nil (26109 51381 740491 415000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -428) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#(" " 0 1 (fontified t)) . -429) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#(" " 0 1 (fontified t)) . -430) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#(" " 0 1 (fontified t)) . -431) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#(" " 0 1 (fontified t)) . -432) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#(" " 0 1 (fontified t)) . -433) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#(" " 0 1 (fontified t)) . -434) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#(" " 0 1 (fontified t)) . -435) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#(" " 0 1 (fontified nil)) . -436) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("	" 0 1 (fontified nil)) . 437) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (429 . 437) 430) ((#("        " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 429) (undo-tree-id202 . -7) (undo-tree-id203 . -6) (undo-tree-id204 . -5) (undo-tree-id205 . -4) (undo-tree-id206 . -3) (undo-tree-id207 . -2) (undo-tree-id208 . -1) (428 . 438)) (26109 50253 726575 972000) 0 nil])
([nil nil ((1001 . 1002) (#("    " 0 4 (fontified t)) . 1001) 1006) nil (26109 51381 740490 774000) 0 nil])
([nil nil ((405 . 406)) ((#("r" 0 1 (fontified t)) . 405) (undo-tree-id200 . -1) (undo-tree-id201 . -1)) (26109 50253 440034 50000) 0 nil])
([nil nil ((1039 . 1040) (#("    " 0 4 (fontified t)) . -1039) (undo-tree-id359 . -4) 1043) nil (26109 51381 740489 772000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -405) (undo-tree-id0 . -1) 406) ((405 . 406)) (26109 50253 439205 987000) 0 nil])
([nil nil ((1041 . 1042) (#("    " 0 4 (fontified t)) . 1041) 1049) nil (26109 51381 740488 389000) 0 nil])
nil
([nil nil ((1100 . 1101) (#("    " 0 4 (fontified t)) . 1100) 1112) nil (26109 51381 740487 487000) 0 nil])
([nil nil ((1160 . 1161) (#("    " 0 4 (fontified t)) . -1160) (undo-tree-id358 . -4) 1164) nil (26109 51381 740486 526000) 0 nil])
([nil nil ((1162 . 1163) (#("    " 0 4 (fontified t)) . 1162) 1170) nil (26109 51381 740484 923000) 0 nil])
([nil nil ((1179 . 1180) (#("    " 0 4 (fontified t)) . -1179) (undo-tree-id357 . -4) 1183) nil (26109 51381 740483 640000) 0 nil])
([nil nil ((1181 . 1182) (#("    " 0 4 (fontified t)) . 1181) 1189) nil (26109 51381 740481 446000) 0 nil])
([nil nil ((1228 . 1233) (#("	" 0 1 (fontified t)) . 1228) 1233) nil (26109 51381 740480 504000) 0 nil])
([nil nil ((1256 . 1257) (#("    " 0 4 (fontified t)) . 1256) 1261) nil (26109 51381 740479 612000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -405) (undo-tree-id352 . -1) (#("h" 0 1 (fontified t)) . -406) (undo-tree-id353 . -1) (#("i" 0 1 (fontified t)) . -407) (undo-tree-id354 . -1) (#("s" 0 1 (fontified t)) . -408) (undo-tree-id355 . -1) (#("." 0 1 (fontified t)) . -409) (undo-tree-id356 . -1) 410) nil (26109 51381 740478 49000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -411) (undo-tree-id350 . -1) (#("	" 0 1 (fontified nil)) . 412) (undo-tree-id351 . -1) (404 . 412) 405) nil (26109 51381 740473 801000) 0 nil])
([nil nil ((404 . 405) (#("       " 0 7 (fontified t)) . -404) (undo-tree-id349 . -7) 411) nil (26109 51381 740471 737000) 0 nil])
([nil nil ((988 . 994)) nil (26109 51381 740470 475000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -993) (undo-tree-id348 . -1) 994) nil (26109 51381 740469 914000) 0 nil])
([nil nil ((993 . 995)) nil (26109 51381 740468 712000) 0 nil])
([nil nil ((994 . 1000)) nil (26109 51381 740468 130000) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-type-face fontified t)) . -988) (undo-tree-id335 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -989) (undo-tree-id336 . -1) (#("s" 0 1 (face font-lock-type-face fontified t)) . -990) (undo-tree-id337 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -991) (undo-tree-id338 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -992) (undo-tree-id339 . -1) (#("<" 0 1 (fontified t)) . -993) (undo-tree-id340 . -1) (#("S" 0 1 (face font-lock-type-face fontified t)) . -994) (undo-tree-id341 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -995) (undo-tree-id342 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -996) (undo-tree-id343 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -997) (undo-tree-id344 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -998) (undo-tree-id345 . -1) (#("g" 0 1 (face font-lock-type-face fontified t)) . -999) (undo-tree-id346 . -1) (#(">" 0 1 (fontified t)) . -1000) (undo-tree-id347 . -1) 1001) nil (26109 51381 740466 327000) 0 nil])
([nil nil ((988 . 991)) nil (26109 51381 740457 981000) 0 nil])
([nil nil ((991 . 995)) nil (26109 51381 740457 480000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -994) (undo-tree-id334 . -1) 995) nil (26109 51381 740456 899000) 0 nil])
([nil nil ((994 . 1002)) nil (26109 51381 740455 707000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -565) (undo-tree-id326 . -1) (#("=" 0 1 (fontified t)) . -566) (undo-tree-id327 . -1) (#("=" 0 1 (fontified t)) . -567) (undo-tree-id328 . -1) (#(" " 0 1 (fontified t)) . -568) (undo-tree-id329 . -1) (#("t" 0 1 (fontified t)) . -569) (undo-tree-id330 . -1) (#("r" 0 1 (fontified t)) . -570) (undo-tree-id331 . -1) (#("u" 0 1 (fontified t)) . -571) (undo-tree-id332 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -572) (undo-tree-id333 . -1) 573) nil (26109 51381 740454 154000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -701) (undo-tree-id318 . -1) (#("=" 0 1 (fontified t)) . -702) (undo-tree-id319 . -1) (#("=" 0 1 (fontified t)) . -703) (undo-tree-id320 . -1) (#(" " 0 1 (fontified t)) . -704) (undo-tree-id321 . -1) (#("t" 0 1 (fontified t)) . -705) (undo-tree-id322 . -1) (#("r" 0 1 (fontified t)) . -706) (undo-tree-id323 . -1) (#("u" 0 1 (fontified t)) . -707) (undo-tree-id324 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -708) (undo-tree-id325 . -1) 709) nil (26109 51381 740447 90000) 0 nil])
([nil nil ((1033 . 1036)) nil (26109 51381 740427 593000) 0 nil])
([nil nil ((1036 . 1037)) nil (26109 51381 740427 112000) 0 nil])
([nil nil ((1263 . 1264)) nil (26109 51381 740426 611000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t)) . -1263) (undo-tree-id317 . -1) 1264) nil (26109 51381 740425 960000) 0 nil])
([nil nil ((1264 . 1265)) nil (26109 51381 740424 718000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -1264) (undo-tree-id316 . -1) 1265) nil (26109 51381 740424 106000) 0 nil])
([nil nil ((1264 . 1269)) nil (26109 51381 740422 954000) 0 nil])
([nil nil ((1269 . 1270)) nil (26109 51381 740422 453000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -1269) (undo-tree-id315 . -1) 1270) nil (26109 51381 740421 842000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 1265) (undo-tree-id314 . -4) (1269 . 1270)) nil (26109 51381 740420 490000) 0 nil])
([nil nil ((1263 . 1267)) nil (26109 51381 740419 167000) 0 nil])
([nil nil ((1262 . 1263)) nil (26109 51381 740418 666000) 0 nil])
([nil nil ((1256 . 1257) (#("    " 0 4 (fontified t)) . 1256) 1261) nil (26109 51381 740417 985000) 0 nil])
([nil nil ((1258 . 1260)) nil (26109 51381 740417 193000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1260)) nil (26109 51381 740416 532000) 0 nil])
([nil nil ((1257 . 1258) (#("	" 0 1 (fontified nil)) . 1256) (undo-tree-id313 . -1) (1257 . 1258)) nil (26109 51381 740415 781000) 0 nil])
([nil nil ((1256 . 1257)) nil (26109 51381 740414 17000) 0 nil])
([nil nil ((1260 . 1265)) nil (26109 51381 740413 426000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1263) (undo-tree-id311 . -1) (#("h" 0 1 (fontified t)) . -1264) (undo-tree-id312 . -1) 1265) nil (26109 51381 740412 695000) 0 nil])
([nil nil ((1263 . 1266)) nil (26109 51381 740410 581000) 0 nil])
([nil nil ((1266 . 1267) (#("catch" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil)) . 1266) (undo-tree-id310 . -5) (1261 . 1266) 1266) nil (26109 51381 740409 599000) 0 nil])
([nil nil ((1267 . 1268)) nil (26109 51381 740408 216000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -1267) (undo-tree-id309 . -1) 1268) nil (26109 51381 740407 585000) 0 nil])
([nil nil ((1266 . 1267) (#("catch" 0 5 (face font-lock-keyword-face fontified nil)) . 1266) (undo-tree-id308 . -5) (1261 . 1266) 1266) nil (26109 51381 740406 252000) 0 nil])
([nil nil ((1267 . 1268)) nil (26109 51381 740404 699000) 0 nil])
([nil nil ((1268 . 1269)) nil (26109 51381 740404 138000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1268) (undo-tree-id307 . -1) 1269) nil (26109 51381 740403 467000) 0 nil])
([nil nil ((1267 . 1271)) nil (26109 51381 740402 345000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -1268) (undo-tree-id304 . -1) (#("c" 0 1 (fontified t)) . -1269) (undo-tree-id305 . -1) (#("e" 0 1 (fontified t)) . -1270) (undo-tree-id306 . -1) 1271) nil (26109 51381 740401 353000) 0 nil])
([nil nil ((1268 . 1269)) nil (26109 51381 740398 898000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1267) (undo-tree-id302 . -1) (#("E" 0 1 (fontified t)) . -1268) (undo-tree-id303 . -1) 1269) nil (26109 51381 740398 47000) 0 nil])
([nil nil ((1267 . 1268)) nil (26109 51381 740396 213000) 0 nil])
([nil nil ((1268 . 1278)) nil (26109 51381 740395 722000) 0 nil])
([nil nil ((1279 . 1281)) nil (26109 51381 740395 211000) 0 nil])
([nil nil ((1282 . 1283) (#("	" 0 1 (fontified nil)) . 1281) (undo-tree-id301 . -1) (1280 . 1283)) nil (26109 51381 740394 490000) 0 nil])
([nil nil ((1281 . 1286)) nil (26109 51381 740393 137000) 0 nil])
([nil nil ((1267 . 1269)) nil (26109 51381 740392 496000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1267) (undo-tree-id299 . -1) (#("O" 0 1 (fontified t)) . -1268) (undo-tree-id300 . -1) 1269) nil (26109 51381 740391 765000) 0 nil])
([nil nil ((1267 . 1269)) nil (26109 51381 740389 841000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1267) (undo-tree-id297 . -1) (#("o" 0 1 (fontified t)) . -1268) (undo-tree-id298 . -1) 1269) nil (26109 51381 740388 869000) 0 nil])
([nil nil ((1267 . 1269)) nil (26109 51381 740386 956000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1356 . 1357) (nil fontified nil 1283 . 1357) (1283 . 1357)) nil (26109 51381 740386 274000) 0 nil])
([nil nil ((1283 . 1288) (#("     " 0 5 (fontified t)) . 1283) 1308) nil (26109 51381 740385 342000) 0 nil])
([nil nil ((1332 . 1337) (#("     " 0 5 (fontified t)) . 1332) 1356) nil (26109 51381 740384 421000) 0 nil])
([nil nil ((1038 . 1043) (#("	" 0 1 (fontified t)) . 1038) 1062) nil (26109 51381 740383 539000) 0 nil])
([nil nil ((1101 . 1106) (#("	" 0 1 (fontified t)) . -1101) (undo-tree-id296 . -1) 1102) nil (26109 51381 740382 567000) 0 nil])
([nil nil ((1165 . 1170) (#("	" 0 1 (fontified t)) . -1165) (undo-tree-id295 . -1) 1166) nil (26109 51381 740381 84000) 0 nil])
([nil nil ((1171 . 1176) (#("	" 0 1 (fontified t)) . 1171) 1176) nil (26109 51381 740379 612000) 0 nil])
([nil nil ((1192 . 1197) (#("	" 0 1 (fontified t)) . -1192) (undo-tree-id294 . -1) 1193) nil (26109 51381 740378 770000) 0 nil])
([nil nil ((1198 . 1203) (#("	" 0 1 (fontified t)) . 1198) 1203) nil (26109 51381 740377 397000) 0 nil])
([nil nil ((1249 . 1251) (#("	    " 0 5 (fontified t)) . 1249) 1258) nil (26109 51381 740376 536000) 0 nil])
([nil nil ((1274 . 1279) (#("	" 0 1 (fontified t)) . 1274) 1276) nil (26109 51381 740375 624000) 0 nil])
([nil nil ((1282 . 1287) (#("	" 0 1 (fontified nil)) . 1281) (undo-tree-id293 . -1) (1282 . 1283)) nil (26109 51381 740374 442000) 0 nil])
([nil nil ((1281 . 1286)) nil (26109 51381 740373 119000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -1279) (undo-tree-id292 . -1) 1280) nil (26109 51381 740372 448000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -1247) (undo-tree-id291 . -1) 1248) nil (26109 51381 740371 105000) 0 nil])
([nil nil ((1278 . 1279)) nil (26109 51381 740369 933000) 0 nil])
([nil nil ((#("\\" 0 1 (c-is-sws t fontified t)) . -1278) (undo-tree-id290 . -1) 1279) nil (26109 51381 740369 212000) 0 nil])
([nil nil ((1278 . 1280)) nil (26109 51381 740367 769000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t)) . -1279) (undo-tree-id289 . -1) 1280) nil (26109 51381 740367 208000) 0 nil])
([nil nil ((1279 . 1280)) nil (26109 51381 740365 895000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -1278) (undo-tree-id287 . -1) (#("=" 0 1 (fontified t)) . -1279) (undo-tree-id288 . -1) 1280) nil (26109 51381 740365 204000) 0 nil])
([nil nil ((1274 . 1279) (#("	    " 0 5 (fontified nil)) . 1273) (undo-tree-id286 . -5) (1278 . 1279)) nil (26109 51381 740363 240000) 0 nil])
([nil nil ((1279 . 1291)) nil (26109 51381 740361 888000) 0 nil])
([nil nil ((1291 . 1293)) nil (26109 51381 740361 347000) 0 nil])
([nil nil ((1293 . 1294)) nil (26109 51381 740360 876000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1085) (undo-tree-id279 . -1) (#("o" 0 1 (fontified t)) . -1086) (undo-tree-id280 . -1) (#("m" 0 1 (fontified t)) . -1087) (undo-tree-id281 . -1) (#("b" 0 1 (fontified t)) . -1088) (undo-tree-id282 . -1) (#("r" 0 1 (fontified t)) . -1089) (undo-tree-id283 . -1) (#("e" 0 1 (fontified t)) . -1090) (undo-tree-id284 . -1) (#("A" 0 1 (fontified t)) . -1091) (undo-tree-id285 . -1) 1092) nil (26109 51381 740359 443000) 0 nil])
([nil nil ((1085 . 1086)) nil (26109 51381 740354 233000) 0 nil])
([nil nil ((1086 . 1087)) nil (26109 51381 740353 682000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t)) . -1086) (undo-tree-id278 . -1) 1087) nil (26109 51381 740353 1000) 0 nil])
([nil nil ((1290 . 1295) (#("	    " 0 5 (fontified nil)) . 1289) (undo-tree-id277 . -5) (1294 . 1295)) nil (26109 51381 740351 468000) 0 nil])
([nil nil ((1295 . 1302)) nil (26109 51381 740349 905000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1291) (undo-tree-id266 . -1) (#(" " 0 1 (fontified t)) . -1292) (undo-tree-id267 . -1) (#(" " 0 1 (fontified t)) . -1293) (undo-tree-id268 . -1) (#(" " 0 1 (fontified t)) . -1294) (undo-tree-id269 . -1) (#("r" 0 1 (fontified t)) . -1295) (undo-tree-id270 . -1) (#("e" 0 1 (fontified t)) . -1296) (undo-tree-id271 . -1) (#("t" 0 1 (fontified t)) . -1297) (undo-tree-id272 . -1) (#("r" 0 1 (fontified t)) . -1298) (undo-tree-id273 . -1) (#("u" 0 1 (fontified t)) . -1299) (undo-tree-id274 . -1) (#("n" 0 1 (fontified t)) . -1300) (undo-tree-id275 . -1) (#(" " 0 1 (fontified t)) . -1301) (undo-tree-id276 . -1) 1302) nil (26109 51381 740347 971000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1288) (undo-tree-id255 . -1) (#("
" 0 1 (fontified t)) . -1289) (undo-tree-id256 . -1) (#(" " 0 1 (fontified t)) . -1290) (undo-tree-id257 . -1) (#(" " 0 1 (fontified t)) . -1291) (undo-tree-id258 . -1) (#(" " 0 1 (fontified t)) . -1292) (undo-tree-id259 . -1) (#(" " 0 1 (fontified t)) . -1293) (undo-tree-id260 . -1) (#(" " 0 1 (fontified t)) . -1294) (undo-tree-id261 . -1) (#(" " 0 1 (fontified t)) . -1295) (undo-tree-id262 . -1) (#(" " 0 1 (fontified t)) . -1296) (undo-tree-id263 . -1) (#(" " 0 1 (fontified nil)) . -1297) (undo-tree-id264 . -1) (#("	" 0 1 (fontified nil)) . 1298) (undo-tree-id265 . -1) (1290 . 1298) 1291) nil (26109 51381 740338 82000) 0 nil])
([nil nil ((1402 . 1403)) nil (26109 51381 740288 688000) 0 nil])
([nil nil ((1403 . 1404) (#(" " 0 1 (fontified nil)) . 1403) (#(" " 0 1 (fontified nil)) . 1402) (undo-tree-id254 . -1) (1403 . 1404)) nil (26109 51381 740287 776000) 0 nil])
([nil nil ((1404 . 1411)) nil (26109 51381 740286 384000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1407) (undo-tree-id253 . -1) 1408) nil (26109 51381 740285 562000) 0 nil])
([nil nil ((1408 . 1409)) nil (26109 51381 740284 240000) 0 nil])
([nil nil ((1411 . 1416)) nil (26109 51381 740283 688000) 0 nil])
([nil nil ((1416 . 1417)) nil (26109 51381 740283 77000) 0 nil])
([nil nil ((1404 . 1405) (#("	" 0 1 (fontified nil)) . 1403) (undo-tree-id252 . -1) (1404 . 1405)) nil (26109 51381 740282 296000) 0 nil])
([nil nil ((1430 . 1434) (#("    " 0 4 (fontified nil)) . 1429) (undo-tree-id250 . -4) (1429 . 1434) (#("    " 0 4 (fontified nil)) . 1428) (undo-tree-id251 . -4) (1427 . 1433)) nil (26109 51381 740280 202000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1916 . 1917) (nil fontified nil 1916 . 1917) (nil fontified nil 1915 . 1916) (nil fontified nil 1911 . 1915) (nil fontified nil 1910 . 1911) (nil fontified nil 1909 . 1910) (nil fontified nil 1908 . 1909) (nil fontified nil 1907 . 1908) (nil fontified nil 1906 . 1907) (nil fontified nil 1905 . 1906) (nil fontified nil 1904 . 1905) (nil fontified nil 1903 . 1904) (nil fontified nil 1902 . 1903) (nil fontified nil 1901 . 1902) (nil fontified nil 1900 . 1901) (nil fontified nil 1899 . 1900) (nil fontified nil 1898 . 1899) (nil fontified nil 1897 . 1898) (nil fontified nil 1896 . 1897) (nil fontified nil 1895 . 1896) (nil fontified nil 1894 . 1895) (nil fontified nil 1892 . 1894) (nil fontified nil 1891 . 1892) (nil fontified nil 1890 . 1891) (nil fontified nil 1889 . 1890) (nil fontified nil 1888 . 1889) (nil fontified nil 1883 . 1888) (nil fontified nil 1882 . 1883) (nil fontified nil 1863 . 1882) (nil fontified nil 1858 . 1863) (nil fontified nil 1855 . 1858) (nil fontified nil 1833 . 1855) (nil fontified nil 1814 . 1833) (nil fontified nil 1809 . 1814) (nil fontified nil 1808 . 1809) (nil fontified nil 1807 . 1808) (nil fontified nil 1806 . 1807) (nil fontified nil 1805 . 1806) (nil fontified nil 1804 . 1805) (nil fontified nil 1803 . 1804) (nil fontified nil 1802 . 1803) (nil fontified nil 1801 . 1802) (nil fontified nil 1800 . 1801) (nil fontified nil 1799 . 1800) (nil fontified nil 1798 . 1799) (nil fontified nil 1797 . 1798) (nil fontified nil 1796 . 1797) (nil fontified nil 1795 . 1796) (nil fontified nil 1794 . 1795) (nil fontified nil 1793 . 1794) (nil fontified nil 1792 . 1793) (nil fontified nil 1787 . 1792) (nil fontified nil 1786 . 1787) (nil fontified nil 1785 . 1786) (nil fontified nil 1784 . 1785) (nil fontified nil 1783 . 1784) (nil fontified nil 1778 . 1783) (nil fontified nil 1777 . 1778) (nil fontified nil 1776 . 1777) (nil fontified nil 1775 . 1776) (nil fontified nil 1774 . 1775) (nil fontified nil 1773 . 1774) (nil fontified nil 1772 . 1773) (nil fontified nil 1771 . 1772) (nil fontified nil 1770 . 1771) (nil fontified nil 1769 . 1770) (nil fontified nil 1768 . 1769) (nil fontified nil 1767 . 1768) (nil fontified nil 1766 . 1767) (nil fontified nil 1765 . 1766) (nil fontified nil 1764 . 1765) (nil fontified nil 1763 . 1764) (nil fontified nil 1762 . 1763) (nil fontified nil 1757 . 1762) (nil fontified nil 1756 . 1757) (nil fontified nil 1738 . 1756) (nil fontified nil 1733 . 1738) (nil fontified nil 1731 . 1733) (nil fontified nil 1730 . 1731) (nil fontified nil 1729 . 1730) (nil fontified nil 1725 . 1729) (nil fontified nil 1691 . 1725) (nil fontified nil 1686 . 1691) (nil fontified nil 1681 . 1686) (nil fontified nil 1680 . 1681) (nil fontified nil 1675 . 1680) (nil fontified nil 1673 . 1675) (nil fontified nil 1666 . 1673) (nil fontified nil 1665 . 1666) (nil fontified nil 1664 . 1665) (nil fontified nil 1659 . 1664) (nil fontified nil 1654 . 1659) (nil fontified nil 1653 . 1654) (nil fontified nil 1648 . 1653) (nil fontified nil 1631 . 1648) (nil fontified nil 1617 . 1631) (nil fontified nil 1616 . 1617) (nil fontified nil 1613 . 1616) (nil fontified nil 1610 . 1613) (nil fontified nil 1604 . 1610) (nil fontified nil 1603 . 1604) (nil fontified nil 1602 . 1603) (nil fontified nil 1589 . 1602) (nil fontified nil 1584 . 1589) (nil fontified nil 1583 . 1584) (nil fontified nil 1575 . 1583) (nil fontified nil 1574 . 1575) (nil fontified nil 1573 . 1574) (nil fontified nil 1563 . 1573) (nil fontified nil 1562 . 1563) (nil fontified nil 1559 . 1562) (nil fontified nil 1558 . 1559) (nil fontified nil 1556 . 1558) (nil fontified nil 1543 . 1556) (nil fontified nil 1542 . 1543) (nil fontified nil 1541 . 1542) (nil fontified nil 1532 . 1541) (nil fontified nil 1527 . 1532) (nil fontified nil 1526 . 1527) (nil fontified nil 1525 . 1526) (nil fontified nil 1524 . 1525) (nil fontified nil 1523 . 1524) (nil fontified nil 1522 . 1523) (nil fontified nil 1521 . 1522) (nil fontified nil 1517 . 1521) (nil fontified nil 1516 . 1517) (nil category c->-as-paren-syntax 1516 . 1517) (nil fontified nil 1515 . 1516) (nil category c-<-as-paren-syntax 1515 . 1516) (nil fontified nil 1510 . 1515) (nil fontified nil 1509 . 1510) (nil fontified nil 1506 . 1509) (nil fontified nil 1503 . 1506) (nil fontified nil 1498 . 1503) (nil fontified nil 1497 . 1498) (nil fontified nil 1496 . 1497) (nil category c->-as-paren-syntax 1496 . 1497) (nil fontified nil 1490 . 1496) (nil fontified nil 1489 . 1490) (nil category c-<-as-paren-syntax 1489 . 1490) (nil fontified nil 1484 . 1489) (nil fontified nil 1483 . 1484) (nil fontified nil 1482 . 1483) (nil fontified nil 1478 . 1482) (nil fontified nil 1477 . 1478) (nil fontified nil 1476 . 1477) (nil fontified nil 1475 . 1476) (nil fontified nil 1474 . 1475) (nil fontified nil 1473 . 1474) (nil fontified nil 1472 . 1473) (nil fontified nil 1471 . 1472) (nil fontified nil 1470 . 1471) (nil fontified nil 1469 . 1470) (nil fontified nil 1468 . 1469) (nil fontified nil 1467 . 1468) (nil fontified nil 1466 . 1467) (nil fontified nil 1465 . 1466) (nil fontified nil 1464 . 1465) (nil fontified nil 1463 . 1464) (nil fontified nil 1462 . 1463) (nil fontified nil 1461 . 1462) (nil fontified nil 1460 . 1461) (nil fontified nil 1459 . 1460) (nil fontified nil 1458 . 1459) (nil fontified nil 1457 . 1458) (nil fontified nil 1456 . 1457) (nil fontified nil 1455 . 1456) (nil fontified nil 1454 . 1455) (nil fontified nil 1453 . 1454) (nil fontified nil 1452 . 1453) (nil category c->-as-paren-syntax 1452 . 1453) (nil fontified nil 1451 . 1452) (nil fontified nil 1450 . 1451) (nil fontified nil 1449 . 1450) (nil fontified nil 1448 . 1449) (nil fontified nil 1447 . 1448) (nil fontified nil 1446 . 1447) (nil fontified nil 1445 . 1446) (nil category c-<-as-paren-syntax 1445 . 1446) (nil fontified nil 1444 . 1445) (nil fontified nil 1443 . 1444) (nil fontified nil 1442 . 1443) (nil fontified nil 1441 . 1442) (nil fontified nil 1440 . 1441) (nil fontified nil 1439 . 1440) (nil fontified nil 1438 . 1439) (nil fontified nil 1437 . 1438) (nil fontified nil 1436 . 1437) (nil fontified nil 1435 . 1436) (nil fontified nil 1434 . 1435) (nil fontified nil 1433 . 1434) (nil fontified nil 1429 . 1433) (1429 . 1917)) nil (26109 51381 740271 305000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-function-name-face fontified t)) . -1454) (undo-tree-id244 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -1455) (undo-tree-id245 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -1456) (undo-tree-id246 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -1457) (undo-tree-id247 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -1458) (undo-tree-id248 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -1459) (undo-tree-id249 . -1) 1460) nil (26109 51381 740248 632000) 0 nil])
([nil nil ((1454 . 1460)) nil (26109 51381 740242 780000) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-type-face fontified t)) . -1451) (undo-tree-id242 . -1) (#(">" 0 1 (c-type c-decl-id-start fontified t)) . -1452) (undo-tree-id243 . -1) 1453) nil (26109 51381 740241 939000) 0 nil])
([nil nil ((1451 . 1453)) nil (26109 51381 740239 805000) 0 nil])
([nil nil ((#("	Lista<String> lista = new Lista<>();
	try{
	    FileReader lectorArchivo = new FileReader(archivo);
	    BufferedReader lector = new BufferedReader(lectorArchivo);
	    
	    String renglon;
	    
	    while((renglon = lector.readLine()) != null)
		lista.agrega(renglon);

	    lector.close();
	    
	} catch(IOException e){
	    System.out.println(\"\\nAlgo saliรณ mal: \\n\");
	    e.printStackTrace();	    
	}

	return lista;
" 0 1 (fontified t) 1 6 (face font-lock-type-face fontified t) 6 7 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 7 13 (face font-lock-type-face fontified t) 13 14 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 14 15 (fontified t) 15 20 (face font-lock-variable-name-face fontified t) 20 23 (fontified t) 23 26 (face font-lock-keyword-face fontified t) 26 27 (fontified t) 27 32 (face font-lock-type-face fontified t) 32 33 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 33 34 (fontified t category c->-as-paren-syntax) 34 38 (fontified t) 38 39 (fontified t) 39 40 (face font-lock-keyword-face fontified t) 40 41 (face font-lock-keyword-face fontified t) 41 42 (face font-lock-keyword-face fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 49 (fontified t) 49 58 (face font-lock-type-face fontified t) 58 59 (face font-lock-type-face c-type c-decl-id-start fontified t) 59 60 (fontified t) 60 73 (face font-lock-variable-name-face fontified t) 73 75 (fontified t) 75 76 (fontified t) 76 79 (face font-lock-keyword-face fontified t) 79 80 (fontified t) 80 90 (face font-lock-type-face fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 100 (fontified t) 100 101 (fontified t) 101 106 (fontified t) 106 119 (face font-lock-type-face fontified t) 119 120 (face font-lock-type-face c-type c-decl-id-start fontified t) 120 121 (fontified t) 121 127 (face font-lock-variable-name-face fontified t) 127 130 (fontified t) 130 133 (face font-lock-keyword-face fontified t) 133 134 (fontified t) 134 148 (face font-lock-type-face fontified t) 148 165 (fontified t) 165 170 (fontified t) 170 171 (fontified t) 171 176 (fontified t) 176 181 (face font-lock-type-face fontified t) 181 182 (face font-lock-type-face c-type c-decl-id-start fontified t) 182 183 (fontified t) 183 190 (face font-lock-variable-name-face fontified t) 190 192 (fontified t) 192 197 (fontified t) 197 198 (fontified t) 198 203 (fontified t) 203 208 (face font-lock-keyword-face fontified t) 208 242 (fontified t) 242 246 (face font-lock-constant-face fontified t) 246 247 (fontified t) 247 248 (fontified t) 248 250 (fontified t) 250 255 (fontified t) 255 273 (fontified t) 273 274 (fontified t) 274 279 (fontified t) 279 280 (fontified t) 280 281 (fontified t) 281 282 (fontified t) 282 283 (fontified t) 283 284 (fontified t) 284 285 (fontified t) 285 286 (fontified t) 286 287 (fontified t) 287 288 (fontified t) 288 289 (fontified t) 289 290 (fontified t) 290 291 (fontified t) 291 292 (fontified t) 292 293 (fontified t) 293 294 (fontified t) 294 295 (fontified t) 295 300 (fontified t) 300 301 (fontified t) 301 302 (fontified t) 302 303 (fontified t) 303 304 (fontified t) 304 309 (face font-lock-keyword-face fontified t) 309 310 (fontified t) 310 311 (fontified t) 311 312 (fontified t) 312 313 (fontified t) 313 314 (fontified t) 314 315 (fontified t) 315 316 (fontified t) 316 317 (fontified t) 317 318 (fontified t) 318 319 (fontified t) 319 320 (fontified t) 320 321 (fontified t) 321 322 (fontified t) 322 323 (fontified t) 323 324 (fontified t) 324 325 (fontified t) 325 326 (fontified t) 326 331 (fontified t) 331 350 (fontified t) 350 372 (face font-lock-string-face fontified t) 372 375 (fontified t) 375 380 (fontified t) 380 399 (fontified t) 399 400 (fontified t rear-nonsticky t) 400 405 (fontified t) 405 406 (fontified t) 406 407 (fontified t) 407 408 (fontified t) 408 409 (fontified t) 409 411 (fontified t) 411 412 (face font-lock-keyword-face fontified t) 412 413 (face font-lock-keyword-face fontified t) 413 414 (face font-lock-keyword-face fontified t) 414 415 (face font-lock-keyword-face fontified t) 415 416 (face font-lock-keyword-face fontified t) 416 417 (face font-lock-keyword-face fontified t) 417 418 (fontified t) 418 419 (fontified t) 419 420 (fontified t) 420 421 (fontified t) 421 422 (fontified t) 422 423 (fontified t) 423 424 (fontified t) 424 425 (fontified t)) . 1483) (undo-tree-id241 . -425)) nil (26109 51381 740238 973000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1439) (undo-tree-id227 . -1) (#("L" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1440) (undo-tree-id228 . -1) (#("i" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1441) (undo-tree-id229 . -1) (#("s" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1442) (undo-tree-id230 . -1) (#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1443) (undo-tree-id231 . -1) (#("a" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1444) (undo-tree-id232 . -1) (#("<" 0 1 (fontified t)) . -1445) (undo-tree-id233 . -1) (#("S" 0 1 (face font-lock-type-face fontified t)) . -1446) (undo-tree-id234 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -1447) (undo-tree-id235 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -1448) (undo-tree-id236 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -1449) (undo-tree-id237 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -1450) (undo-tree-id238 . -1) (#("g" 0 1 (face font-lock-type-face fontified t)) . -1451) (undo-tree-id239 . -1) (#(">" 0 1 (c-type c-decl-id-start fontified t)) . -1452) (undo-tree-id240 . -1) 1453) nil (26109 51381 740236 98000) 0 nil])
([nil nil ((1439 . 1446)) nil (26109 51381 740224 746000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1444) (undo-tree-id225 . -1) (#("c" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1445) (undo-tree-id226 . -1) 1446) nil (26109 51381 740223 854000) 0 nil])
([nil nil ((1444 . 1446)) nil (26109 51381 740221 911000) 0 nil])
([nil nil ((1447 . 1454)) nil (26109 51381 740221 370000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-function-name-face fontified t)) . -1452) (undo-tree-id223 . -1) (#("m" 0 1 (face font-lock-function-name-face fontified t)) . -1453) (undo-tree-id224 . -1) 1454) nil (26109 51381 740220 488000) 0 nil])
([nil nil ((1452 . 1456)) nil (26109 51381 740217 823000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-function-name-face fontified t)) . -1454) (undo-tree-id221 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -1455) (undo-tree-id222 . -1) 1456) nil (26109 51381 740215 829000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -1447) (undo-tree-id214 . -1) (#("o" 0 1 (fontified t)) . -1448) (undo-tree-id215 . -1) (#("i" 0 1 (fontified t)) . -1449) (undo-tree-id216 . -1) (#("d" 0 1 (fontified t)) . -1450) (undo-tree-id217 . -1) (#(" " 0 1 (fontified t)) . -1451) (undo-tree-id218 . -1) (#("m" 0 1 (face font-lock-function-name-face fontified t)) . -1452) (undo-tree-id219 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -1453) (undo-tree-id220 . -1) 1454) nil (26109 51381 740209 537000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -1447) (undo-tree-id395 . -1) (#("r" 0 1 (fontified t)) . -1448) (undo-tree-id396 . -1) (#("i" 0 1 (fontified t)) . -1449) (undo-tree-id397 . -1) (#("t" 0 1 (fontified t)) . -1450) (undo-tree-id398 . -1) (#("e" 0 1 (fontified t)) . -1451) (undo-tree-id399 . -1) 1452 (t 26109 51381 750961 837000)) nil (26109 51433 303966 795000) 0 nil])
([nil nil ((1447 . 1449)) nil (26109 51433 303961 625000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1448) (undo-tree-id394 . -1) 1449) nil (26109 51433 303960 623000) 0 nil])
([nil nil ((1448 . 1453)) nil (26109 51433 303959 301000) 0 nil])
([nil nil ((1446 . 1450)) nil (26109 51433 303958 279000) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1448) (undo-tree-id392 . -1) (#("s" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1449) (undo-tree-id393 . -1) 1450) nil (26109 51433 303957 467000) 0 nil])
([nil nil ((1448 . 1454)) nil (26109 51433 303955 523000) 0 nil])
([nil nil ((1453 . 1459)) nil (26109 51433 303954 301000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -1469) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -1470) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -1471) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -1472) (undo-tree-id381 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -1473) (undo-tree-id382 . -1) (#("g" 0 1 (face font-lock-type-face fontified t)) . -1474) (undo-tree-id383 . -1) (#(" " 0 1 (fontified t)) . -1475) (undo-tree-id384 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -1476) (undo-tree-id385 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -1477) (undo-tree-id386 . -1) (#("c" 0 1 (face font-lock-variable-name-face fontified t)) . -1478) (undo-tree-id387 . -1) (#("h" 0 1 (face font-lock-variable-name-face fontified t)) . -1479) (undo-tree-id388 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -1480) (undo-tree-id389 . -1) (#("v" 0 1 (face font-lock-variable-name-face fontified t)) . -1481) (undo-tree-id390 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -1482) (undo-tree-id391 . -1) 1483) nil (26109 51433 303951 716000) 0 nil])
([nil nil ((1469 . 1476)) nil (26109 51433 303934 624000) 0 nil])
([nil nil ((1475 . 1481)) nil (26109 51433 303933 892000) 0 nil])
([nil nil ((1482 . 1487)) nil (26109 51433 303933 141000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1486) (undo-tree-id371 . -1) 1487) nil (26109 51433 303931 227000) 0 nil])
([nil nil ((1486 . 1487)) nil (26109 51433 306116 882000) 0 nil])
([nil nil ((1490 . 1491) (#("  " 0 1 (fontified nil c-is-sws t) 1 2 (fontified nil c-is-sws t)) . -1490) (undo-tree-id428 . -2) (undo-tree-id429 . -2) (#("  " 0 2 (fontified t c-is-sws t)) . 1492) (undo-tree-id430 . -2)) nil (26109 51506 89203 359000) 0 nil] [nil nil ((1429 . 1433) (#("   " 0 3 (fontified nil)) . 1429) (undo-tree-id370 . -3) (1432 . 1434)) ((#("//" 0 1 (c-in-sws t face font-lock-comment-delimiter-face c-is-sws t fontified nil) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified nil)) . 1432) (1429 . 1432) (#("    " 0 4 (c-is-sws t c-in-sws t fontified t)) . 1429)) (26109 51433 303924 124000) 0 nil])
([nil nil ((1491 . 1497)) nil (26109 51506 89200 413000) 0 nil])
nil
([nil nil ((#("j" 0 1 (face font-lock-variable-name-face fontified t)) . -1483) (undo-tree-id424 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -1484) (undo-tree-id425 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -1485) (undo-tree-id426 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1486) (undo-tree-id427 . -1) 1487) nil (26109 51506 89199 321000) 0 nil])
([nil nil ((1483 . 1484)) nil (26109 51506 89195 904000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-warning-face fontified t)) . -1483) (undo-tree-id423 . -1) 1484) nil (26109 51506 89195 83000) 0 nil])
([nil nil ((1483 . 1484)) nil (26109 51506 89193 680000) 0 nil])
([nil nil ((1494 . 1496)) nil (26109 51506 89192 698000) 0 nil])
([nil nil ((1496 . 1497)) nil (26109 51506 89191 997000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1496) (undo-tree-id422 . -1) 1497) nil (26109 51506 89191 85000) 0 nil])
([nil nil ((1496 . 1499)) nil (26109 51506 89189 502000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1913 . 1914) (nil fontified nil 1499 . 1914) (1499 . 1914)) nil (26109 51506 89188 571000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1496) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (#("=" 0 1 (fontified t)) . -1497) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (#(" " 0 1 (fontified t)) . -1498) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (#("l" 0 1 (fontified t)) . -1499) (undo-tree-id417 . -1) (#("i" 0 1 (fontified t)) . -1500) (undo-tree-id418 . -1) (#("s" 0 1 (fontified t)) . -1501) (undo-tree-id419 . -1) (#("t" 0 1 (fontified t)) . -1502) (undo-tree-id420 . -1) (#("a" 0 1 (fontified t)) . -1503) (undo-tree-id421 . -1) 1504) nil (26109 51506 89186 456000) 0 nil])
([nil nil ((1518 . 1520) (#("      " 0 6 (fontified t)) . 1518) 1533) nil (26109 51506 89177 89000) 0 nil])
([nil nil ((1575 . 1577) (#("      " 0 6 (fontified t)) . 1575) 1600) nil (26109 51506 89176 47000) 0 nil])
([nil nil ((1673 . 1675) (#("      " 0 6 (fontified t)) . -1673) (undo-tree-id410 . -6) 1679) nil (26109 51506 89175 15000) 0 nil])
([nil nil ((1730 . 1732) (#("      " 0 6 (fontified t)) . 1730) 1746) nil (26109 51506 89173 362000) 0 nil])
([nil nil ((1835 . 1837) (#("      " 0 6 (fontified t)) . 1835) 1861) nil (26109 51506 89172 280000) 0 nil])
([nil nil ((1879 . 1884) (#("  " 0 2 (fontified t)) . 1879) 1883) nil (26109 51506 89171 117000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1488) (undo-tree-id403 . -1) (#("e" 0 1 (fontified t)) . -1489) (undo-tree-id404 . -1) (#("t" 0 1 (fontified t)) . -1490) (undo-tree-id405 . -1) (#("u" 0 1 (fontified t)) . -1491) (undo-tree-id406 . -1) (#("r" 0 1 (fontified t)) . -1492) (undo-tree-id407 . -1) (#("n" 0 1 (fontified t)) . -1493) (undo-tree-id408 . -1) (#(" " 0 1 (fontified t)) . -1494) (undo-tree-id409 . -1) 1495) nil (26109 51506 89169 124000) 0 nil])
([nil nil ((1821 . 1823) (#("      " 0 6 (fontified t)) . -1821) (undo-tree-id402 . -6) 1827) nil (26109 51506 89162 761000) 0 nil])
([nil nil ((1861 . 1863) (#("      " 0 6 (fontified t)) . -1861) (undo-tree-id401 . -6) 1867) nil (26109 51506 89160 417000) 0 nil])
([nil nil ((1874 . 1875)) nil (26109 51506 89157 431000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t c-is-sws t)) . 1877) (undo-tree-id400 . -1)) nil (26109 51506 89153 33000) 0 nil])
([nil nil ((342 . 343) (t 26109 51506 97939 184000)) nil (26109 51556 325416 732000) 0 nil])
([nil nil ((541 . 542) (t 26109 51556 332513 941000)) nil (26109 51588 326042 975000) 0 nil])
([nil nil ((677 . 678)) nil (26109 51588 326041 983000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -677) (undo-tree-id433 . -1) (undo-tree-id434 . -1) 678) nil (26109 51588 326040 921000) 0 nil])
([nil nil ((705 . 706)) nil (26109 51588 326038 366000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -705) (undo-tree-id431 . -1) (undo-tree-id432 . -1) 706) nil (26109 51588 326036 72000) 0 nil])
([nil nil ((678 . 679)) nil (26109 51588 326022 366000) 0 nil])
([nil nil ((1491 . 1494) (t 26109 51588 333244 387000)) nil (26109 51624 743590 906000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1493) (undo-tree-id450 . -1) (undo-tree-id451 . -1) 1494) nil (26109 51624 743589 774000) 0 nil])
([nil nil ((1493 . 1494)) nil (26109 51624 743587 941000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1493) (undo-tree-id448 . -1) (undo-tree-id449 . -1) 1494) nil (26109 51624 743587 199000) 0 nil])
([nil nil ((1493 . 1496)) nil (26109 51624 743585 25000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1495) (undo-tree-id446 . -1) (undo-tree-id447 . -1) 1496) nil (26109 51624 743583 943000) 0 nil])
([nil nil ((1495 . 1498)) nil (26109 51624 743581 388000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1495) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (#("n" 0 1 (fontified t)) . -1496) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#(" " 0 1 (fontified t)) . -1497) (undo-tree-id444 . -1) (undo-tree-id445 . -1) 1498) nil (26109 51624 743578 423000) 0 nil])
([nil nil ((1495 . 1498)) nil (26109 51624 743520 112000) 0 nil])
([nil nil ((1894 . 1898) (t 26109 51624 747356 4000)) nil (26109 51737 678308 680000) 0 nil])
([nil nil ((1895 . 1899) (#("    " 0 4 (fontified nil)) . 1894) (undo-tree-id469 . -4) (1898 . 1899)) nil (26109 51737 678307 778000) 0 nil])
([nil nil ((1899 . 1910)) nil (26109 51737 678306 476000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1908) (undo-tree-id467 . -1) (#("i" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1909) (undo-tree-id468 . -1) 1910) nil (26109 51737 678305 624000) 0 nil])
([nil nil ((1908 . 1914)) nil (26109 51737 678303 851000) 0 nil])
([nil nil ((1914 . 1920)) nil (26109 51737 678303 320000) 0 nil])
([nil nil ((1919 . 1925)) nil (26109 51737 678302 809000) 0 nil])
([nil nil ((1926 . 1928)) nil (26109 51737 678302 318000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-variable-name-face fontified t)) . -1927) (undo-tree-id466 . -1) 1928) nil (26109 51737 678301 687000) 0 nil])
([nil nil ((1927 . 1934)) nil (26109 51737 678300 424000) 0 nil])
([nil nil ((1934 . 1935)) nil (26109 51737 678299 773000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1934) (undo-tree-id465 . -1) 1935) nil (26109 51737 678299 152000) 0 nil])
([nil nil ((1934 . 1935)) nil (26109 51737 678296 747000) 0 nil])
([nil nil ((#("9" 0 1 (face font-lock-variable-name-face fontified t)) . -1934) (undo-tree-id464 . -1) 1935) nil (26109 51737 678295 926000) 0 nil])
([nil nil ((1934 . 1936)) nil (26109 51737 678294 523000) 0 nil])
([nil nil ((1935 . 1942)) nil (26109 51737 678294 12000) 0 nil])
([nil nil ((1941 . 1947)) nil (26109 51737 678293 521000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-type-face fontified t)) . -1944) (undo-tree-id461 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -1945) (undo-tree-id462 . -1) (#("g" 0 1 (face font-lock-type-face fontified t)) . -1946) (undo-tree-id463 . -1) 1947) nil (26109 51737 678292 559000) 0 nil])
([nil nil ((1944 . 1947)) nil (26109 51737 678290 305000) 0 nil])
([nil nil ((1948 . 1949)) nil (26109 51737 678289 824000) 0 nil])
([nil nil ((1949 . 1950)) nil (26109 51737 678289 353000) 0 nil])
([nil nil ((1951 . 1953)) nil (26109 51737 678288 812000) 0 nil])
([nil nil ((1954 . 1958) (#("    " 0 4 (fontified nil)) . 1953) (undo-tree-id460 . -4) (1952 . 1958)) nil (26109 51737 678288 81000) 0 nil])
([nil nil ((1953 . 1954)) nil (26109 51737 678286 738000) 0 nil])
([nil nil ((1954 . 1962)) nil (26109 51737 678286 207000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1961) (undo-tree-id459 . -1) 1962) nil (26109 51737 678285 566000) 0 nil])
([nil nil ((1961 . 1966)) nil (26109 51737 678283 973000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1963) (undo-tree-id456 . -1) (#("d" 0 1 (fontified t)) . -1964) (undo-tree-id457 . -1) (#("e" 0 1 (fontified t)) . -1965) (undo-tree-id458 . -1) 1966) nil (26109 51737 678282 941000) 0 nil])
([nil nil ((1963 . 1964)) nil (26109 51737 678280 226000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1962) (undo-tree-id454 . -1) (#("d" 0 1 (fontified t)) . -1963) (undo-tree-id455 . -1) 1964) nil (26109 51737 678279 104000) 0 nil])
([nil nil ((1962 . 1966)) nil (26109 51737 678276 589000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1965) (undo-tree-id453 . -1) 1966) nil (26109 51737 678275 607000) 0 nil])
([nil nil ((1965 . 1966)) nil (26109 51737 678273 624000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1965) (undo-tree-id452 . -1) 1966) nil (26109 51737 678272 61000) 0 nil])
([nil nil ((1965 . 1968)) nil (26109 51737 678262 352000) 0 nil])
([nil nil ((1968 . 1970)) nil (26109 51737 678261 701000) 0 nil])
([nil nil ((1969 . 1970)) nil (26109 51737 678261 240000) 0 nil])
([nil nil ((1971 . 1974)) nil (26109 51737 678260 579000) 0 nil])
([nil nil ((1974 . 1979)) nil (26109 51737 678259 868000) 0 nil])
([nil nil ((1979 . 1981)) nil (26109 51737 678258 365000) 0 nil])
([nil nil ((1981 . 1982)) nil (26109 51737 678253 886000) 0 nil])
([nil nil ((363 . 368) (t 26109 51737 686117 722000)) nil (26109 54052 106655 274000) 0 nil])
([nil nil ((368 . 377)) nil (26109 54052 106654 322000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -375) (undo-tree-id470 . -1) (#("r" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -376) (undo-tree-id471 . -1) 377) nil (26109 54052 106652 198000) 0 nil])
([nil nil ((375 . 384)) nil (26109 54052 106640 857000) 0 nil])
([nil nil ((384 . 385)) nil (26109 54052 106636 990000) 0 nil])
([nil nil ((1457 . 1461) (#("    " 0 4 (fontified nil)) . 1456) (undo-tree-id43 . -4) (1456 . 1461) (#("    " 0 4 (fontified nil)) . 1455) (undo-tree-id44 . -4) (1455 . 1460) (#("    " 0 4 (fontified nil)) . 1454) (undo-tree-id45 . -4) (1453 . 1459) (t 26109 54052 119524 140000)) nil (26110 7432 850310 37000) 0 nil])
([nil nil ((1454 . 1458)) nil (26110 7432 850307 82000) 0 nil])
([nil nil ((1458 . 1464)) nil (26110 7432 850306 611000) 0 nil])
([nil nil ((1464 . 1471)) nil (26110 7432 850306 130000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -1465) (undo-tree-id37 . -1) (#("T" 0 1 (fontified t)) . -1466) (undo-tree-id38 . -1) (#("A" 0 1 (fontified t)) . -1467) (undo-tree-id39 . -1) (#("T" 0 1 (fontified t)) . -1468) (undo-tree-id40 . -1) (#("I" 0 1 (fontified t)) . -1469) (undo-tree-id41 . -1) (#("T" 0 1 (fontified t)) . -1470) (undo-tree-id42 . -1) 1471) nil (26110 7432 850304 878000) 0 nil])
([nil nil ((1465 . 1479)) nil (26110 7432 850299 278000) 0 nil])
([nil nil ((1478 . 1484)) nil (26110 7432 850298 737000) 0 nil])
([nil nil ((1485 . 1492)) nil (26110 7432 850298 236000) 0 nil])
([nil nil ((1486 . 1490)) nil (26110 7432 850297 785000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -1490) (undo-tree-id36 . -1) 1491) nil (26110 7432 850297 204000) 0 nil])
([nil nil ((1490 . 1491)) nil (26110 7432 850296 92000) 0 nil])
([nil nil ((1496 . 1498)) nil (26110 7432 850295 641000) 0 nil])
([nil nil ((1497 . 1505)) nil (26110 7432 850295 170000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -1504) (undo-tree-id35 . -1) 1505) nil (26110 7432 850294 589000) 0 nil])
([nil nil ((1504 . 1505)) nil (26110 7432 850293 387000) 0 nil])
([nil nil ((1506 . 1508)) nil (26110 7432 850292 796000) 0 nil])
([nil nil ((1511 . 1515) (#("    " 0 4 (fontified nil)) . 1510) (undo-tree-id32 . -4) (1510 . 1515) (#("    " 0 4 (fontified nil)) . 1509) (undo-tree-id33 . -4) (1509 . 1514) (#("    " 0 4 (fontified nil)) . 1508) (undo-tree-id34 . -4) (1507 . 1513)) nil (26110 7432 850291 814000) 0 nil])
([nil nil ((1508 . 1509)) nil (26110 7432 850288 919000) 0 nil])
([nil nil ((1509 . 1512)) nil (26110 7432 850288 428000) 0 nil])
([nil nil ((#("K" 0 1 (fontified t)) . -1509) (undo-tree-id29 . -1) (#("u" 0 1 (fontified t)) . -1510) (undo-tree-id30 . -1) (#("s" 0 1 (fontified t)) . -1511) (undo-tree-id31 . -1) 1512) nil (26110 7432 850287 496000) 0 nil])
([nil nil ((1509 . 1514)) nil (26110 7432 850285 82000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1513) (undo-tree-id28 . -1) 1514) nil (26110 7432 850284 421000) 0 nil])
([nil nil ((1513 . 1516)) nil (26110 7432 850283 349000) 0 nil])
([nil nil ((1515 . 1521)) nil (26110 7432 850282 808000) 0 nil])
([nil nil ((1522 . 1523)) nil (26110 7432 850282 317000) 0 nil])
([nil nil ((1523 . 1524)) nil (26110 7432 850281 876000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1523) (undo-tree-id27 . -1) 1524) nil (26110 7432 850281 325000) 0 nil])
([nil nil ((1523 . 1527)) nil (26110 7432 850280 233000) 0 nil])
([nil nil ((1527 . 1530)) nil (26110 7432 850279 753000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1528) (undo-tree-id25 . -1) (#("e" 0 1 (fontified t)) . -1529) (undo-tree-id26 . -1) 1530) nil (26110 7432 850279 71000) 0 nil])
([nil nil ((1528 . 1530)) nil (26110 7432 850277 388000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t)) . -1528) (undo-tree-id23 . -1) (#("W" 0 1 (fontified t)) . -1529) (undo-tree-id24 . -1) 1530) nil (26110 7432 850276 737000) 0 nil])
([nil nil ((1528 . 1530)) nil (26110 7432 850275 4000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t)) . -1528) (undo-tree-id21 . -1) (#("W" 0 1 (fontified t)) . -1529) (undo-tree-id22 . -1) 1530) nil (26110 7432 850274 152000) 0 nil])
([nil nil ((1528 . 1538)) nil (26110 7432 850272 419000) 0 nil])
([nil nil ((1538 . 1540)) nil (26110 7432 850271 818000) 0 nil])
([nil nil ((1540 . 1541)) nil (26110 7432 850271 347000) 0 nil])
([nil nil ((1542 . 1543)) nil (26110 7432 850270 746000) 0 nil])
([nil nil ((1543 . 1546)) nil (26110 7432 850270 276000) 0 nil])
([nil nil ((1546 . 1547)) nil (26110 7432 850269 704000) 0 nil])
([nil nil ((1547 . 1553)) nil (26110 7432 850269 103000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1551) (undo-tree-id19 . -1) (#("=" 0 1 (fontified t)) . -1552) (undo-tree-id20 . -1) 1553) nil (26110 7432 850268 352000) 0 nil])
([nil nil ((1551 . 1554)) nil (26110 7432 850266 539000) 0 nil])
([nil nil ((1554 . 1555)) nil (26110 7432 850265 878000) 0 nil])
([nil nil ((1555 . 1559)) nil (26110 7432 850265 337000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1558) (undo-tree-id18 . -1) 1559) nil (26110 7432 850264 776000) 0 nil])
([nil nil ((1557 . 1558)) nil (26110 7432 850263 543000) 0 nil])
([nil nil ((1559 . 1569)) nil (26110 7432 850263 12000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-type-face fontified t)) . -1568) (undo-tree-id17 . -1) 1569) nil (26110 7432 850262 251000) 0 nil])
([nil nil ((1568 . 1571)) nil (26110 7432 850260 889000) 0 nil])
([nil nil ((1571 . 1572)) nil (26110 7432 850260 308000) 0 nil])
([nil nil ((1572 . 1575)) nil (26110 7432 850259 817000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -1574) (undo-tree-id16 . -1) 1575) nil (26110 7432 850259 115000) 0 nil])
([nil nil ((1574 . 1576)) nil (26110 7432 850256 781000) 0 nil])
([nil nil ((1576 . 1577)) nil (26110 7432 850256 300000) 0 nil])
([nil nil ((1577 . 1579)) nil (26110 7432 850255 719000) 0 nil])
([nil nil ((1580 . 1581) (#("	" 0 1 (fontified nil)) . 1579) (undo-tree-id15 . -1) (1578 . 1581)) nil (26110 7432 850255 38000) 0 nil])
([nil nil ((1579 . 1584)) nil (26110 7432 850253 796000) 0 nil])
([nil nil ((1584 . 1589)) nil (26110 7432 850253 295000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -1585) (undo-tree-id11 . -1) (#("s" 0 1 (fontified t)) . -1586) (undo-tree-id12 . -1) (#("t" 0 1 (fontified t)) . -1587) (undo-tree-id13 . -1) (#("a" 0 1 (fontified t)) . -1588) (undo-tree-id14 . -1) 1589) nil (26110 7432 850252 283000) 0 nil])
([nil nil ((1585 . 1591)) nil (26110 7432 850249 168000) 0 nil])
([nil nil ((1590 . 1594)) nil (26110 7432 850248 677000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-type-face fontified t)) . -1593) (undo-tree-id10 . -1) 1594) nil (26110 7432 850248 26000) 0 nil])
([nil nil ((1593 . 1596)) nil (26110 7432 850246 783000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-type-face fontified t)) . -1595) (undo-tree-id9 . -1) 1596) nil (26110 7432 850246 172000) 0 nil])
([nil nil ((1595 . 1596)) nil (26110 7432 850245 110000) 0 nil])
([nil nil ((1597 . 1601)) nil (26110 7432 850244 619000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -1598) (undo-tree-id6 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1599) (undo-tree-id7 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -1600) (undo-tree-id8 . -1) 1601) nil (26110 7432 850243 487000) 0 nil])
([nil nil ((1598 . 1603)) nil (26110 7432 850240 933000) 0 nil])
([nil nil ((1602 . 1609)) nil (26110 7432 850240 372000) 0 nil])
([nil nil ((1609 . 1611)) nil (26110 7432 850239 881000) 0 nil])
([nil nil ((1610 . 1617)) nil (26110 7432 850239 390000) 0 nil])
([nil nil ((1618 . 1619)) nil (26110 7432 850238 819000) 0 nil])
([nil nil ((1620 . 1625) (#(" " 0 1 (fontified nil)) . 1620) (1619 . 1620)) nil (26110 7432 850238 128000) 0 nil])
([nil nil ((1625 . 1628)) nil (26110 7432 850237 366000) 0 nil])
([nil nil ((1628 . 1630)) nil (26110 7432 850236 875000) 0 nil])
([nil nil ((1629 . 1640)) nil (26110 7432 850236 375000) 0 nil])
([nil nil ((1640 . 1641)) nil (26110 7432 850235 864000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1640) (undo-tree-id5 . -1) 1641) nil (26110 7432 850235 222000) 0 nil])
([nil nil ((1640 . 1642)) nil (26110 7432 850234 90000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -1638) (undo-tree-id4 . -1) 1639) nil (26110 7432 850233 329000) 0 nil])
([nil nil ((1638 . 1639)) nil (26110 7432 850231 897000) 0 nil])
([nil nil ((1643 . 1646)) nil (26110 7432 850231 235000) 0 nil])
([nil nil ((1646 . 1654)) nil (26110 7432 850230 775000) 0 nil])
([nil nil ((1654 . 1656)) nil (26110 7432 850230 294000) 0 nil])
([nil nil ((1655 . 1656)) nil (26110 7432 850229 632000) 0 nil])
([nil nil ((1657 . 1658)) nil (26110 7432 850229 162000) 0 nil])
([nil nil ((1662 . 1663)) nil (26110 7432 850228 651000) 0 nil])
([nil nil ((1663 . 1670)) nil (26110 7432 850228 190000) 0 nil])
([nil nil ((1670 . 1671)) nil (26110 7432 850227 619000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1670) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 1671) nil (26110 7432 850226 286000) 0 nil])
([nil nil ((1670 . 1671)) nil (26110 7432 850223 802000) 0 nil])
([nil nil ((1671 . 1672)) nil (26110 7432 850223 151000) 0 nil])
([nil nil ((1672 . 1673)) nil (26110 7432 850221 668000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1672) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 1673) nil (26110 7432 850218 623000) 0 nil])
([nil nil ((1505 . 1510) (t 26110 7432 858279 895000)) nil (26110 7485 568695 311000) 0 nil])
([nil nil ((1510 . 1517)) nil (26110 7485 568694 299000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -1509) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("u" 0 1 (face font-lock-variable-name-face fontified t)) . -1510) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -1511) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1512) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -1513) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -1514) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -1515) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -1516) (undo-tree-id95 . -1) (undo-tree-id96 . -1) 1517) nil (26110 7485 568689 640000) 0 nil])
([nil nil ((1509 . 1516)) nil (26110 7485 568649 957000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-variable-name-face fontified t)) . -1509) (undo-tree-id97 . -1) (#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -1510) (undo-tree-id98 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1511) (undo-tree-id99 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -1512) (undo-tree-id100 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -1513) (undo-tree-id101 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -1514) (undo-tree-id102 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -1515) (undo-tree-id103 . -1) 1516 (t 26110 7485 572464 510000)) nil (26110 7504 821457 852000) 0 nil])
([nil nil ((1509 . 1510)) nil (26110 7504 821439 859000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1464) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("s" 0 1 (fontified t)) . -1465) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#("t" 0 1 (fontified t)) . -1466) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("a" 0 1 (fontified t)) . -1467) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("t" 0 1 (fontified t)) . -1468) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#("i" 0 1 (fontified t)) . -1469) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (#("c" 0 1 (face font-lock-keyword-face fontified t)) . -1470) (undo-tree-id137 . -1) (undo-tree-id138 . -1) 1471 (t 26110 7504 828703 722000)) nil (26110 9752 464476 57000) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-string-face fontified t)) . -618) (undo-tree-id161 . -1) (#("R" 0 1 (face font-lock-string-face fontified t)) . -619) (undo-tree-id162 . -1) (#("E" 0 1 (face font-lock-string-face fontified t)) . -620) (undo-tree-id163 . -1) (#("S" 0 1 (face font-lock-string-face fontified t)) . -621) (undo-tree-id164 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -622) (undo-tree-id165 . -1) (#("U" 0 1 (face font-lock-string-face fontified t)) . -623) (undo-tree-id166 . -1) (#("N" 0 1 (face font-lock-string-face fontified t)) . -624) (undo-tree-id167 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -625) (undo-tree-id168 . -1) (#("N" 0 1 (face font-lock-string-face fontified t)) . -626) (undo-tree-id169 . -1) (#("A" 0 1 (face font-lock-string-face fontified t)) . -627) (undo-tree-id170 . -1) (#("C" 0 1 (face font-lock-string-face fontified t)) . -628) (undo-tree-id171 . -1) (#("O" 0 1 (face font-lock-string-face fontified t)) . -629) (undo-tree-id172 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -630) (undo-tree-id173 . -1) (#("R" 0 1 (face font-lock-string-face fontified t)) . -631) (undo-tree-id174 . -1) 632) nil (26110 10489 417059 145000) 0 nil] [nil nil ((#("package mx.unam.ciencias.edd.proyecto1;
import mx.unam.ciencias.edd.Lista;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.BufferedReader;
import java.io.IOException;
import java.text.Normalizer;

public class Banderas{
    String[] argumentos;
    boolean r = false;
    boolean o = false;
    String id = \"\";
    String file = \"\";
    
    public Banderas(String[] args){
	argumentos = args;
    }

    public void argumentos(String[] argumentos){
	for(int i = 0; i<argumentos.length; i++){
	    if(argumentos[i].equals(\"-r\")){
		if(r){
		    System.out.println(\"ERES UN NACO R\");
		    System.exit(-1);
		}

		r = true;
	    } else if(argumentos[i].equals(\"-o\")){
		if(o){
		    System.out.println(\"ERES UN NACO OTE\");
		    System.exit(-1);
		}

		if(i+1 < argumentos.length) {
		    i++;
		    id = argumentos[i+1];
		} else {
		    System.out.println(\"ERROR\");
		}
		
		o = true;
		
	    } 
	 
	}
	
    }

    public Lista<String> reader(String archivo){
    
	Lista<String> lista = new Lista<>();
	try{
	    FileReader lectorArchivo = new FileReader(archivo);
	    BufferedReader lector = new BufferedReader(lectorArchivo);
	    
	    String renglon;
	    
	    while((renglon = lector.readLine()) != null)
		lista.agrega(renglon);

	    lector.close();
	    
	} catch(IOException e){
	    System.out.println(\"\\nAlgo saliรณ mal: \\n\");
	    e.printStackTrace();	    
	}

	return lista;
		
    }

    public Lista<String> fileReader(String[] args){
	Lista<String> l = new Lista<>();
	for(int i=0; i < args.length; i++){
	    Lista<String> fr = reader(args[i]);
	    for(String r : fr)
		l.agrega(r);
	}
	return l;
    }


    
    public static Lista<String> ordenar(Lista<String> l){
	return l.mergeSort((a,b) -> {
		String aSinMayus = a.toLowerCase().replaceAll(\" \",\"\");
		String aLimpio = Normalizer.normalize(aSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
		String bSinMayus = b.toLowerCase().replaceAll(\" \",\"\");
		String bLimpio = Normalizer.normalize(bSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
		
		return aLimpio.compareTo(bLimpio);
		
	    }); 
	
	
    }

    public static Lista<String> reverso(Lista<String> l){
	return ordenar(l).reversa();
    }
    
}
" 0 7 (face font-lock-keyword-face fontified t) 7 29 (fontified t) 29 37 (face font-lock-constant-face fontified t) 37 38 (face font-lock-constant-face c-type c-decl-id-start fontified t) 38 40 (fontified t) 40 46 (face font-lock-keyword-face fontified t) 46 47 (fontified t) 47 49 (face font-lock-constant-face fontified t) 49 50 (fontified t) 50 54 (face font-lock-constant-face fontified t) 54 55 (fontified t) 55 63 (face font-lock-constant-face fontified t) 63 64 (fontified t) 64 67 (face font-lock-constant-face fontified t) 67 68 (fontified t) 68 72 (face font-lock-type-face fontified t) 72 73 (face font-lock-type-face c-type c-decl-id-start fontified t) 73 75 (fontified t) 75 81 (face font-lock-keyword-face fontified t) 81 82 (fontified t) 82 86 (face font-lock-constant-face fontified t) 86 87 (fontified t) 87 89 (face font-lock-constant-face fontified t) 89 90 (fontified t) 90 99 (face font-lock-type-face fontified t) 99 100 (face font-lock-type-face c-type c-decl-id-start fontified t) 100 102 (fontified t) 102 108 (face font-lock-keyword-face fontified t) 108 109 (fontified t) 109 113 (face font-lock-constant-face fontified t) 113 114 (fontified t) 114 116 (face font-lock-constant-face fontified t) 116 117 (fontified t) 117 126 (face font-lock-type-face fontified t) 126 127 (face font-lock-type-face c-type c-decl-id-start fontified t) 127 129 (fontified t) 129 135 (face font-lock-keyword-face fontified t) 135 136 (fontified t) 136 140 (face font-lock-constant-face fontified t) 140 141 (fontified t) 141 143 (face font-lock-constant-face fontified t) 143 144 (fontified t) 144 157 (face font-lock-type-face fontified t) 157 158 (face font-lock-type-face c-type c-decl-id-start fontified t) 158 160 (fontified t) 160 166 (face font-lock-keyword-face fontified t) 166 167 (fontified t) 167 171 (face font-lock-constant-face fontified t) 171 172 (fontified t) 172 174 (face font-lock-constant-face fontified t) 174 175 (fontified t) 175 188 (face font-lock-type-face fontified t) 188 189 (face font-lock-type-face c-type c-decl-id-start fontified t) 189 191 (fontified t) 191 197 (face font-lock-keyword-face fontified t) 197 198 (fontified t) 198 202 (face font-lock-constant-face fontified t) 202 203 (fontified t) 203 205 (face font-lock-constant-face fontified t) 205 206 (fontified t) 206 216 (face font-lock-type-face fontified t) 216 217 (face font-lock-type-face c-type c-decl-id-start fontified t) 217 219 (fontified t) 219 225 (face font-lock-keyword-face fontified t) 225 226 (fontified t) 226 230 (face font-lock-constant-face fontified t) 230 231 (fontified t) 231 235 (face font-lock-constant-face fontified t) 235 236 (fontified t) 236 245 (face font-lock-type-face fontified t) 245 246 (face font-lock-type-face c-type c-decl-id-start fontified t) 246 249 (fontified t) 249 255 (face font-lock-keyword-face fontified t) 255 256 (fontified t) 256 260 (face font-lock-keyword-face fontified t) 260 261 (c-type c-decl-type-start face font-lock-keyword-face fontified t) 261 262 (fontified t) 262 270 (face font-lock-type-face fontified t) 270 276 (fontified t) 276 282 (face font-lock-type-face fontified t) 282 283 (fontified t) 283 284 (c-type c-decl-id-start fontified t) 284 285 (fontified t) 285 295 (face font-lock-variable-name-face fontified t) 295 301 (fontified t) 301 307 (face font-lock-type-face fontified t) 307 308 (face font-lock-type-face c-type c-decl-id-start fontified t) 308 309 (fontified t) 309 310 (face font-lock-variable-name-face fontified t) 310 313 (fontified t) 313 318 (face font-lock-constant-face fontified t) 318 324 (fontified t) 324 330 (face font-lock-type-face fontified t) 330 331 (face font-lock-type-face c-type c-decl-id-start fontified t) 331 332 (fontified t) 332 333 (face font-lock-variable-name-face fontified t) 333 336 (fontified t) 336 341 (face font-lock-constant-face fontified t) 341 347 (fontified t) 347 352 (face font-lock-type-face fontified t) 352 353 (face font-lock-type-face c-type c-decl-id-start fontified t) 353 354 (fontified t) 354 356 (face font-lock-variable-name-face fontified t) 356 359 (fontified t) 359 361 (face font-lock-string-face fontified t) 361 367 (fontified t) 367 372 (face font-lock-type-face fontified t) 372 373 (face font-lock-type-face c-type c-decl-id-start fontified t) 373 374 (fontified t) 374 378 (face font-lock-variable-name-face fontified t) 378 381 (fontified t) 381 383 (face font-lock-string-face fontified t) 383 394 (fontified t) 394 400 (face font-lock-keyword-face fontified t) 400 410 (fontified t) 410 416 (fontified t) 416 457 (fontified t) 457 463 (face font-lock-keyword-face fontified t) 463 464 (fontified t) 464 467 (face font-lock-type-face fontified t) 467 468 (face font-lock-type-face c-type c-decl-id-start fontified t) 468 469 (fontified t) 469 479 (face font-lock-function-name-face fontified t) 479 480 (c-type c-decl-arg-start fontified t) 480 486 (face font-lock-type-face fontified t) 486 489 (fontified t) 489 499 (face font-lock-variable-name-face fontified t) 499 503 (fontified t) 503 506 (face font-lock-keyword-face fontified t) 506 507 (fontified t) 507 509 (face font-lock-type-face fontified t) 509 510 (face font-lock-type-face c-type c-decl-id-start fontified t) 510 511 (fontified t) 511 512 (face font-lock-variable-name-face fontified t) 512 531 (fontified t) 531 537 (face font-lock-type-face fontified t) 537 550 (fontified t) 550 552 (face font-lock-keyword-face fontified t) 552 574 (fontified t) 574 578 (face font-lock-string-face fontified t) 578 584 (fontified t) 584 586 (face font-lock-keyword-face fontified t) 586 616 (fontified t) 616 632 (face font-lock-string-face fontified t) 632 669 (fontified t) 669 673 (face font-lock-constant-face fontified t) 673 682 (fontified t) 682 686 (face font-lock-keyword-face fontified t) 686 687 (fontified t) 687 689 (face font-lock-keyword-face fontified t) 689 711 (fontified t) 711 715 (face font-lock-string-face fontified t) 715 721 (fontified t) 721 723 (face font-lock-keyword-face fontified t) 723 753 (fontified t) 753 771 (face font-lock-string-face fontified t) 771 804 (fontified t) 804 806 (face font-lock-keyword-face fontified t) 806 877 (fontified t) 877 881 (face font-lock-keyword-face fontified t) 881 909 (fontified t) 909 916 (face font-lock-string-face fontified t) 916 932 (fontified t) 932 936 (face font-lock-constant-face fontified t) 936 968 (fontified t) 968 974 (face font-lock-keyword-face fontified t) 974 975 (fontified t) 975 980 (face font-lock-type-face fontified t) 980 981 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 981 987 (face font-lock-type-face fontified t) 987 988 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 988 989 (fontified t) 989 995 (face font-lock-function-name-face fontified t) 995 996 (c-type c-decl-arg-start fontified t) 996 1002 (face font-lock-type-face fontified t) 1002 1003 (fontified t) 1003 1010 (face font-lock-variable-name-face fontified t) 1010 1019 (fontified t) 1019 1024 (face font-lock-type-face fontified t) 1024 1025 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1025 1031 (face font-lock-type-face fontified t) 1031 1032 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 1032 1033 (fontified t) 1033 1038 (face font-lock-variable-name-face fontified t) 1038 1041 (fontified t) 1041 1044 (face font-lock-keyword-face fontified t) 1044 1045 (fontified t) 1045 1050 (face font-lock-type-face fontified t) 1050 1051 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1051 1052 (fontified t category c->-as-paren-syntax) 1052 1057 (fontified t) 1057 1060 (face font-lock-keyword-face fontified t) 1060 1067 (fontified t) 1067 1076 (face font-lock-type-face fontified t) 1076 1077 (face font-lock-type-face c-type c-decl-id-start fontified t) 1077 1078 (fontified t) 1078 1091 (face font-lock-variable-name-face fontified t) 1091 1094 (fontified t) 1094 1097 (face font-lock-keyword-face fontified t) 1097 1098 (fontified t) 1098 1108 (face font-lock-type-face fontified t) 1108 1124 (fontified t) 1124 1137 (face font-lock-type-face fontified t) 1137 1138 (face font-lock-type-face c-type c-decl-id-start fontified t) 1138 1139 (fontified t) 1139 1145 (face font-lock-variable-name-face fontified t) 1145 1148 (fontified t) 1148 1151 (face font-lock-keyword-face fontified t) 1151 1152 (fontified t) 1152 1166 (face font-lock-type-face fontified t) 1166 1194 (fontified t) 1194 1199 (face font-lock-type-face fontified t) 1199 1200 (face font-lock-type-face c-type c-decl-id-start fontified t) 1200 1201 (fontified t) 1201 1208 (face font-lock-variable-name-face fontified t) 1208 1221 (fontified t) 1221 1226 (face font-lock-keyword-face fontified t) 1226 1260 (fontified t) 1260 1264 (face font-lock-constant-face fontified t) 1264 1322 (fontified t) 1322 1327 (face font-lock-keyword-face fontified t) 1327 1368 (fontified t) 1368 1390 (face font-lock-string-face fontified t) 1390 1429 (fontified t) 1429 1435 (face font-lock-keyword-face fontified t) 1435 1452 (fontified t) 1452 1453 (fontified t) 1453 1457 (fontified t) 1457 1458 (face font-lock-keyword-face fontified t) 1458 1459 (face font-lock-keyword-face fontified t) 1459 1460 (face font-lock-keyword-face fontified t) 1460 1461 (face font-lock-keyword-face fontified t) 1461 1462 (face font-lock-keyword-face fontified t) 1462 1463 (face font-lock-keyword-face fontified t) 1463 1464 (fontified t) 1464 1465 (face font-lock-type-face fontified t) 1465 1466 (face font-lock-type-face fontified t) 1466 1467 (face font-lock-type-face fontified t) 1467 1468 (face font-lock-type-face fontified t) 1468 1469 (face font-lock-type-face fontified t) 1469 1470 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 1470 1471 (face font-lock-type-face fontified t) 1471 1472 (face font-lock-type-face fontified t) 1472 1473 (face font-lock-type-face fontified t) 1473 1474 (face font-lock-type-face fontified t) 1474 1475 (face font-lock-type-face fontified t) 1475 1476 (face font-lock-type-face fontified t) 1476 1477 (c-type c-decl-id-start category c->-as-paren-syntax fontified t) 1477 1478 (fontified t) 1478 1479 (face font-lock-function-name-face fontified t) 1479 1480 (face font-lock-function-name-face fontified t) 1480 1481 (face font-lock-function-name-face fontified t) 1481 1482 (face font-lock-function-name-face fontified t) 1482 1483 (face font-lock-function-name-face fontified t) 1483 1484 (face font-lock-function-name-face fontified t) 1484 1485 (face font-lock-function-name-face fontified t) 1485 1486 (face font-lock-function-name-face fontified t) 1486 1487 (face font-lock-function-name-face fontified t) 1487 1488 (face font-lock-function-name-face fontified t) 1488 1489 (c-type c-decl-arg-start fontified t) 1489 1490 (face font-lock-type-face fontified t) 1490 1491 (face font-lock-type-face fontified t) 1491 1492 (face font-lock-type-face fontified t) 1492 1493 (face font-lock-type-face fontified t) 1493 1494 (face font-lock-type-face fontified t) 1494 1495 (face font-lock-type-face fontified t) 1495 1496 (fontified t) 1496 1497 (fontified t) 1497 1498 (fontified t) 1498 1499 (face font-lock-variable-name-face fontified t) 1499 1500 (face font-lock-variable-name-face fontified t) 1500 1501 (face font-lock-variable-name-face fontified t) 1501 1502 (face font-lock-variable-name-face fontified t) 1502 1503 (fontified t) 1503 1504 (fontified t) 1504 1505 (fontified t) 1505 1506 (fontified t) 1506 1507 (face font-lock-type-face fontified t) 1507 1508 (face font-lock-type-face fontified t) 1508 1509 (face font-lock-type-face fontified t) 1509 1510 (face font-lock-type-face fontified t) 1510 1511 (face font-lock-type-face fontified t) 1511 1512 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1512 1513 (face font-lock-type-face fontified t) 1513 1514 (face font-lock-type-face fontified t) 1514 1515 (face font-lock-type-face fontified t) 1515 1516 (face font-lock-type-face fontified t) 1516 1517 (face font-lock-type-face fontified t) 1517 1518 (face font-lock-type-face fontified t) 1518 1519 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 1519 1520 (fontified t) 1520 1521 (face font-lock-variable-name-face fontified t) 1521 1522 (fontified t) 1522 1523 (fontified t) 1523 1524 (fontified t) 1524 1525 (face font-lock-keyword-face fontified t) 1525 1526 (face font-lock-keyword-face fontified t) 1526 1527 (face font-lock-keyword-face fontified t) 1527 1528 (fontified t) 1528 1529 (face font-lock-type-face fontified t) 1529 1530 (face font-lock-type-face fontified t) 1530 1531 (face font-lock-type-face fontified t) 1531 1532 (face font-lock-type-face fontified t) 1532 1533 (face font-lock-type-face fontified t) 1533 1534 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1534 1535 (fontified t category c->-as-paren-syntax) 1535 1536 (fontified t) 1536 1537 (fontified t) 1537 1538 (fontified t) 1538 1539 (fontified t) 1539 1540 (fontified t) 1540 1541 (face font-lock-keyword-face fontified t) 1541 1542 (face font-lock-keyword-face fontified t) 1542 1543 (face font-lock-keyword-face fontified t) 1543 1544 (fontified t) 1544 1545 (face font-lock-type-face fontified t) 1545 1546 (face font-lock-type-face fontified t) 1546 1547 (face font-lock-type-face c-type c-decl-id-start fontified t) 1547 1548 (fontified t) 1548 1549 (face font-lock-variable-name-face fontified t) 1549 1550 (fontified t) 1550 1551 (fontified t) 1551 1552 (fontified t) 1552 1553 (fontified t) 1553 1554 (fontified t) 1554 1555 (fontified t) 1555 1556 (fontified t) 1556 1557 (fontified t) 1557 1558 (fontified t) 1558 1559 (fontified t) 1559 1560 (fontified t) 1560 1561 (fontified t) 1561 1562 (fontified t) 1562 1563 (face font-lock-type-face fontified t) 1563 1564 (face font-lock-type-face fontified t) 1564 1565 (face font-lock-type-face fontified t) 1565 1566 (face font-lock-type-face fontified t) 1566 1567 (face font-lock-type-face fontified t) 1567 1568 (face font-lock-type-face fontified t) 1568 1569 (fontified t) 1569 1570 (fontified t) 1570 1571 (fontified t) 1571 1572 (fontified t) 1572 1573 (fontified t) 1573 1574 (fontified t) 1574 1575 (fontified t) 1575 1576 (fontified t) 1576 1581 (fontified t) 1581 1582 (face font-lock-type-face fontified t) 1582 1583 (face font-lock-type-face fontified t) 1583 1584 (face font-lock-type-face fontified t) 1584 1585 (face font-lock-type-face fontified t) 1585 1586 (face font-lock-type-face fontified t) 1586 1587 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1587 1588 (face font-lock-type-face fontified t) 1588 1589 (face font-lock-type-face fontified t) 1589 1590 (face font-lock-type-face fontified t) 1590 1591 (face font-lock-type-face fontified t) 1591 1592 (face font-lock-type-face fontified t) 1592 1593 (face font-lock-type-face fontified t) 1593 1594 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 1594 1595 (fontified t) 1595 1596 (face font-lock-variable-name-face fontified t) 1596 1597 (face font-lock-variable-name-face fontified t) 1597 1598 (fontified t) 1598 1599 (fontified t) 1599 1600 (fontified t) 1600 1601 (fontified t) 1601 1602 (fontified t) 1602 1603 (fontified t) 1603 1604 (fontified t) 1604 1605 (fontified t) 1605 1606 (fontified t) 1606 1607 (fontified t) 1607 1608 (fontified t) 1608 1609 (fontified t) 1609 1610 (fontified t) 1610 1611 (fontified t) 1611 1612 (fontified t) 1612 1613 (fontified t) 1613 1614 (fontified t) 1614 1615 (fontified t) 1615 1616 (fontified t) 1616 1617 (fontified t) 1617 1622 (fontified t) 1622 1623 (face font-lock-keyword-face fontified t) 1623 1624 (face font-lock-keyword-face fontified t) 1624 1625 (face font-lock-keyword-face fontified t) 1625 1626 (fontified t) 1626 1627 (face font-lock-type-face fontified t) 1627 1628 (face font-lock-type-face fontified t) 1628 1629 (face font-lock-type-face fontified t) 1629 1630 (face font-lock-type-face fontified t) 1630 1631 (face font-lock-type-face fontified t) 1631 1632 (face font-lock-type-face c-type c-decl-id-start fontified t) 1632 1633 (fontified t) 1633 1634 (face font-lock-variable-name-face fontified t) 1634 1635 (fontified t) 1635 1636 (fontified t) 1636 1637 (fontified t) 1637 1638 (fontified t) 1638 1639 (fontified t) 1639 1640 (fontified t) 1640 1641 (fontified t) 1641 1643 (fontified t) 1643 1644 (fontified t) 1644 1645 (fontified t) 1645 1646 (fontified t) 1646 1647 (fontified t) 1647 1648 (fontified t) 1648 1649 (fontified t) 1649 1650 (fontified t) 1650 1651 (fontified t) 1651 1652 (fontified t) 1652 1653 (fontified t) 1653 1654 (fontified t) 1654 1655 (fontified t) 1655 1656 (fontified t) 1656 1657 (fontified t) 1657 1658 (fontified t) 1658 1659 (fontified t) 1659 1660 (fontified t) 1660 1661 (face font-lock-keyword-face fontified t) 1661 1662 (face font-lock-keyword-face fontified t) 1662 1663 (face font-lock-keyword-face fontified t) 1663 1664 (face font-lock-keyword-face fontified t) 1664 1665 (face font-lock-keyword-face fontified t) 1665 1666 (face font-lock-keyword-face fontified t) 1666 1667 (fontified t) 1667 1668 (fontified t) 1668 1669 (fontified t) 1669 1670 (fontified t) 1670 1674 (fontified t) 1674 1675 (fontified t) 1675 1676 (fontified t) 1676 1677 (fontified t) 1677 1682 (fontified t) 1682 1683 (fontified t) 1683 1687 (fontified t) 1687 1693 (face font-lock-keyword-face fontified t) 1693 1694 (fontified t) 1694 1700 (face font-lock-keyword-face fontified t) 1700 1701 (fontified t) 1701 1706 (face font-lock-type-face fontified t) 1706 1707 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1707 1713 (face font-lock-type-face fontified t) 1713 1714 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 1714 1715 (fontified t) 1715 1722 (face font-lock-function-name-face fontified t) 1722 1723 (c-type c-decl-arg-start fontified t) 1723 1728 (face font-lock-type-face fontified t) 1728 1729 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1729 1730 (face font-lock-type-face fontified t) 1730 1735 (face font-lock-type-face fontified t) 1735 1736 (fontified t category c->-as-paren-syntax) 1736 1737 (fontified t) 1737 1738 (face font-lock-variable-name-face fontified t) 1738 1741 (fontified t) 1741 1742 (fontified t) 1742 1748 (face font-lock-keyword-face fontified t) 1748 1761 (fontified t) 1761 1762 (fontified t) 1762 1763 (fontified t) 1763 1764 (fontified t) 1764 1765 (fontified t) 1765 1774 (fontified t) 1774 1779 (face font-lock-type-face fontified t) 1779 1780 (face font-lock-type-face c-type c-decl-id-start fontified t) 1780 1781 (fontified t) 1781 1790 (face font-lock-variable-name-face fontified t) 1790 1820 (fontified t) 1820 1823 (face font-lock-string-face fontified t) 1823 1824 (fontified t) 1824 1826 (face font-lock-string-face fontified t) 1826 1831 (fontified t) 1831 1836 (face font-lock-type-face fontified t) 1836 1837 (face font-lock-type-face c-type c-decl-id-start fontified t) 1837 1838 (fontified t) 1838 1845 (face font-lock-variable-name-face fontified t) 1845 1868 (fontified t) 1868 1869 (fontified t) 1869 1878 (fontified t) 1878 1879 (fontified t) 1879 1880 (fontified t) 1880 1890 (face font-lock-constant-face fontified t) 1890 1891 (fontified t) 1891 1895 (face font-lock-constant-face fontified t) 1895 1896 (fontified t) 1896 1899 (fontified t) 1899 1912 (fontified t) 1912 1920 (face font-lock-string-face fontified t) 1920 1922 (fontified t) 1922 1924 (face font-lock-string-face fontified t) 1924 1929 (fontified t) 1929 1934 (face font-lock-type-face fontified t) 1934 1935 (face font-lock-type-face c-type c-decl-id-start fontified t) 1935 1936 (fontified t) 1936 1945 (face font-lock-variable-name-face fontified t) 1945 1975 (fontified t) 1975 1978 (face font-lock-string-face fontified t) 1978 1979 (fontified t) 1979 1981 (face font-lock-string-face fontified t) 1981 1986 (fontified t) 1986 1991 (face font-lock-type-face fontified t) 1991 1992 (face font-lock-type-face c-type c-decl-id-start fontified t) 1992 1993 (fontified t) 1993 2000 (face font-lock-variable-name-face fontified t) 2000 2023 (fontified t) 2023 2024 (fontified t) 2024 2033 (fontified t) 2033 2034 (fontified t) 2034 2035 (fontified t) 2035 2045 (face font-lock-constant-face fontified t) 2045 2046 (fontified t) 2046 2050 (face font-lock-constant-face fontified t) 2050 2051 (fontified t) 2051 2054 (fontified t) 2054 2067 (fontified t) 2067 2075 (face font-lock-string-face fontified t) 2075 2077 (fontified t) 2077 2079 (face font-lock-string-face fontified t) 2079 2087 (fontified t) 2087 2093 (face font-lock-keyword-face fontified t) 2093 2111 (fontified t) 2111 2112 (fontified t) 2112 2119 (fontified t) 2119 2150 (fontified t) 2150 2156 (face font-lock-keyword-face fontified t) 2156 2157 (fontified t) 2157 2163 (face font-lock-keyword-face fontified t) 2163 2164 (fontified t) 2164 2169 (face font-lock-type-face fontified t) 2169 2170 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 2170 2176 (face font-lock-type-face fontified t) 2176 2177 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 2177 2178 (fontified t) 2178 2185 (face font-lock-function-name-face fontified t) 2185 2186 (c-type c-decl-arg-start fontified t) 2186 2191 (face font-lock-type-face fontified t) 2191 2192 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 2192 2198 (face font-lock-type-face fontified t) 2198 2199 (fontified t category c->-as-paren-syntax) 2199 2200 (fontified t) 2200 2201 (face font-lock-variable-name-face fontified t) 2201 2205 (fontified t) 2205 2211 (face font-lock-keyword-face fontified t) 2211 2219 (fontified t) 2219 2220 (fontified t) 2220 2221 (fontified t) 2221 2247 (fontified t)) . -1) (undo-tree-id139 . -2247) (undo-tree-id140 . -1676) 2248 (t 26110 7571 986656 732000)) ((1 . 2248)) (26110 9750 813282 879000) 0 nil])
([nil nil ((618 . 633)) nil (26110 10489 417027 394000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2893 . 2894) (nil fontified nil 2780 . 2894) (nil fontified nil 2779 . 2780) (nil category c->-as-paren-syntax 2779 . 2780) (nil fontified nil 2773 . 2779) (nil fontified nil 2772 . 2773) (nil category c-<-as-paren-syntax 2772 . 2773) (nil fontified nil 2758 . 2772) (nil fontified nil 2757 . 2758) (nil category c->-as-paren-syntax 2757 . 2758) (nil fontified nil 2751 . 2757) (nil fontified nil 2750 . 2751) (nil category c-<-as-paren-syntax 2750 . 2751) (nil fontified nil 2267 . 2750) (nil fontified nil 2266 . 2267) (nil category c->-as-paren-syntax 2266 . 2267) (nil fontified nil 2260 . 2266) (nil fontified nil 2259 . 2260) (nil category c-<-as-paren-syntax 2259 . 2260) (nil fontified nil 2245 . 2259) (nil fontified nil 2244 . 2245) (nil category c->-as-paren-syntax 2244 . 2245) (nil fontified nil 2238 . 2244) (nil fontified nil 2237 . 2238) (nil category c-<-as-paren-syntax 2237 . 2238) (nil fontified nil 2086 . 2237) (nil fontified nil 2085 . 2086) (nil category c->-as-paren-syntax 2085 . 2086) (nil fontified nil 2079 . 2085) (nil fontified nil 2078 . 2079) (nil category c-<-as-paren-syntax 2078 . 2079) (nil fontified nil 2005 . 2078) (nil fontified nil 2004 . 2005) (nil category c->-as-paren-syntax 2004 . 2005) (nil fontified nil 2003 . 2004) (nil category c-<-as-paren-syntax 2003 . 2004) (nil fontified nil 1989 . 2003) (nil fontified nil 1988 . 1989) (nil category c->-as-paren-syntax 1988 . 1989) (nil fontified nil 1982 . 1988) (nil fontified nil 1981 . 1982) (nil category c-<-as-paren-syntax 1981 . 1982) (nil fontified nil 1953 . 1981) (nil fontified nil 1952 . 1953) (nil category c->-as-paren-syntax 1952 . 1953) (nil fontified nil 1946 . 1952) (nil fontified nil 1945 . 1946) (nil category c-<-as-paren-syntax 1945 . 1946) (nil fontified nil 1460 . 1945) (nil fontified nil 1459 . 1460) (nil category c->-as-paren-syntax 1459 . 1460) (nil fontified nil 1458 . 1459) (nil category c-<-as-paren-syntax 1458 . 1459) (nil fontified nil 1440 . 1458) (nil fontified nil 1439 . 1440) (nil category c->-as-paren-syntax 1439 . 1440) (nil fontified nil 1433 . 1439) (nil fontified nil 1432 . 1433) (nil category c-<-as-paren-syntax 1432 . 1433) (nil fontified nil 1394 . 1432) (nil fontified nil 1393 . 1394) (nil category c->-as-paren-syntax 1393 . 1394) (nil fontified nil 1387 . 1393) (nil fontified nil 1386 . 1387) (nil category c-<-as-paren-syntax 1386 . 1387) (nil fontified nil 1 . 1386) (1 . 2894)) ((#("package mx.unam.ciencias.edd.proyecto1;

import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.text.Normalizer;
import mx.unam.ciencias.edd.Lista;

public class Banderas {
    private String[] argumentos;
    private boolean r = false;
    private boolean o = false;
    private String id = \"\";
    private String file = \"\";
    
    public Banderas(String[] args){
        argumentos = args;
        argumentos();
    }

    private void argumentos(){
        for(int i = 0; i < argumentos.length; i++){
            if(argumentos[i].equals(\"-r\")){
                if(r){
                    System.out.println(\"La bandera -r ya se ha especificado.\");
                    System.exit(-1);
                }
                r = true;
            } else if(argumentos[i].equals(\"-o\")){
                if(o){
                    System.out.println(\"La bandera -o ya se ha especificado.\");
                    System.exit(-1);
                }
                if(i + 1 < argumentos.length) {
                    i++;
                    id = argumentos[i];
                } else {
                    System.out.println(\"Falta argumento despuรฉs de -o.\");
                    System.exit(-1);
                }
                o = true;
            } else {
                file = argumentos[i];
            }
        }
    }

    public Lista<String> reader(String archivo){
        Lista<String> lista = new Lista<>();
        try{
            FileReader lectorArchivo = new FileReader(archivo);
            BufferedReader lector = new BufferedReader(lectorArchivo);
            String renglon;
            while((renglon = lector.readLine()) != null)
                lista.agrega(renglon);
            lector.close();
        } catch(IOException e){
            System.out.println(\"\\nAlgo saliรณ mal: \\n\");
            e.printStackTrace();	    
        }
        return lista;
    }

    public Lista<String> fileReader(){
        Lista<String> l = new Lista<>();
        for(int i = 0; i < argumentos.length; i++){
            Lista<String> fr = reader(argumentos[i]);
            for(String r : fr)
                l.agrega(r);
        }
        return l;
    }
    
    public static Lista<String> ordenar(Lista<String> l){
        return l.mergeSort((a,b) -> {
            String aSinMayus = a.toLowerCase().replaceAll(\" \",\"\");
            String aLimpio = Normalizer.normalize(aSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
            String bSinMayus = b.toLowerCase().replaceAll(\" \",\"\");
            String bLimpio = Normalizer.normalize(bSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
            return aLimpio.compareTo(bLimpio);
        }); 
    }

    public static Lista<String> reverso(Lista<String> l){
        return ordenar(l).reversa();
    }

    public boolean getReversedFlag() {
        return r;
    }
}
" 0 7 (face font-lock-keyword-face fontified nil) 7 29 (fontified nil) 29 37 (face font-lock-constant-face fontified nil) 37 38 (face font-lock-constant-face c-type c-decl-id-start fontified nil) 38 41 (fontified nil) 41 47 (face font-lock-keyword-face fontified nil) 47 48 (fontified nil) 48 52 (face font-lock-constant-face fontified nil) 52 53 (fontified nil) 53 55 (face font-lock-constant-face fontified nil) 55 56 (fontified nil) 56 65 (face font-lock-type-face fontified nil) 65 66 (face font-lock-type-face c-type c-decl-id-start fontified nil) 66 68 (fontified nil) 68 74 (face font-lock-keyword-face fontified nil) 74 75 (fontified nil) 75 79 (face font-lock-constant-face fontified nil) 79 80 (fontified nil) 80 82 (face font-lock-constant-face fontified nil) 82 83 (fontified nil) 83 96 (face font-lock-type-face fontified nil) 96 97 (face font-lock-type-face c-type c-decl-id-start fontified nil) 97 99 (fontified nil) 99 105 (face font-lock-keyword-face fontified nil) 105 106 (fontified nil) 106 110 (face font-lock-constant-face fontified nil) 110 111 (fontified nil) 111 113 (face font-lock-constant-face fontified nil) 113 114 (fontified nil) 114 124 (face font-lock-type-face fontified nil) 124 125 (face font-lock-type-face c-type c-decl-id-start fontified nil) 125 127 (fontified nil) 127 133 (face font-lock-keyword-face fontified nil) 133 134 (fontified nil) 134 138 (face font-lock-constant-face fontified nil) 138 139 (fontified nil) 139 143 (face font-lock-constant-face fontified nil) 143 144 (fontified nil) 144 153 (face font-lock-type-face fontified nil) 153 154 (face font-lock-type-face c-type c-decl-id-start fontified nil) 154 156 (fontified nil) 156 162 (face font-lock-keyword-face fontified nil) 162 163 (fontified nil) 163 165 (face font-lock-constant-face fontified nil) 165 166 (fontified nil) 166 170 (face font-lock-constant-face fontified nil) 170 171 (fontified nil) 171 179 (face font-lock-constant-face fontified nil) 179 180 (fontified nil) 180 183 (face font-lock-constant-face fontified nil) 183 184 (fontified nil) 184 188 (face font-lock-type-face fontified nil) 188 189 (face font-lock-type-face c-type c-decl-id-start fontified nil) 189 192 (fontified nil) 192 198 (face font-lock-keyword-face fontified nil) 198 199 (fontified nil) 199 203 (face font-lock-keyword-face fontified nil) 203 204 (c-type c-decl-type-start face font-lock-keyword-face fontified nil) 204 205 (fontified nil) 205 213 (face font-lock-type-face fontified nil) 213 220 (fontified nil) 220 227 (face font-lock-keyword-face fontified nil) 227 228 (fontified nil) 228 234 (face font-lock-type-face fontified nil) 234 235 (fontified nil) 235 236 (c-type c-decl-id-start fontified nil) 236 237 (fontified nil) 237 247 (face font-lock-variable-name-face fontified nil) 247 253 (fontified nil) 253 260 (face font-lock-keyword-face fontified nil) 260 261 (fontified nil) 261 267 (face font-lock-type-face fontified nil) 267 268 (face font-lock-type-face c-type c-decl-id-start fontified nil) 268 269 (fontified nil) 269 270 (face font-lock-variable-name-face fontified nil) 270 273 (fontified nil) 273 278 (face font-lock-constant-face fontified nil) 278 284 (fontified nil) 284 291 (face font-lock-keyword-face fontified nil) 291 292 (fontified nil) 292 298 (face font-lock-type-face fontified nil) 298 299 (face font-lock-type-face c-type c-decl-id-start fontified nil) 299 300 (fontified nil) 300 301 (face font-lock-variable-name-face fontified nil) 301 304 (fontified nil) 304 309 (face font-lock-constant-face fontified nil) 309 315 (fontified nil) 315 322 (face font-lock-keyword-face fontified nil) 322 323 (fontified nil) 323 328 (face font-lock-type-face fontified nil) 328 329 (face font-lock-type-face c-type c-decl-id-start fontified nil) 329 330 (fontified nil) 330 332 (face font-lock-variable-name-face fontified nil) 332 335 (fontified nil) 335 337 (face font-lock-string-face fontified nil) 337 343 (fontified nil) 343 350 (face font-lock-keyword-face fontified nil) 350 351 (fontified nil) 351 356 (face font-lock-type-face fontified nil) 356 357 (face font-lock-type-face c-type c-decl-id-start fontified nil) 357 358 (fontified nil) 358 362 (face font-lock-variable-name-face fontified nil) 362 365 (fontified nil) 365 367 (face font-lock-string-face fontified nil) 367 378 (fontified nil) 378 384 (face font-lock-keyword-face fontified nil) 384 470 (fontified nil) 470 477 (face font-lock-keyword-face fontified nil) 477 478 (fontified nil) 478 481 (face font-lock-type-face fontified nil) 481 482 (face font-lock-type-face c-type c-decl-id-start fontified nil) 482 483 (fontified nil) 483 493 (face font-lock-function-name-face fontified nil) 493 505 (fontified nil) 505 508 (face font-lock-keyword-face fontified nil) 508 509 (fontified nil) 509 511 (face font-lock-type-face fontified nil) 511 512 (face font-lock-type-face c-type c-decl-id-start fontified nil) 512 513 (fontified nil) 513 514 (face font-lock-variable-name-face fontified nil) 514 535 (fontified nil) 535 541 (face font-lock-type-face fontified nil) 541 561 (fontified nil) 561 563 (face font-lock-keyword-face fontified nil) 563 585 (fontified nil) 585 589 (face font-lock-string-face fontified nil) 589 609 (fontified nil) 609 611 (face font-lock-keyword-face fontified nil) 611 655 (fontified nil) 655 693 (face font-lock-string-face fontified nil) 693 771 (fontified nil) 771 775 (face font-lock-constant-face fontified nil) 775 791 (fontified nil) 791 795 (face font-lock-keyword-face fontified nil) 795 796 (fontified nil) 796 798 (face font-lock-keyword-face fontified nil) 798 820 (fontified nil) 820 824 (face font-lock-string-face fontified nil) 824 844 (fontified nil) 844 846 (face font-lock-keyword-face fontified nil) 846 890 (fontified nil) 890 928 (face font-lock-string-face fontified nil) 928 1002 (fontified nil) 1002 1004 (face font-lock-keyword-face fontified nil) 1004 1117 (fontified nil) 1117 1121 (face font-lock-keyword-face fontified nil) 1121 1163 (fontified nil) 1163 1195 (face font-lock-string-face fontified nil) 1195 1273 (fontified nil) 1273 1277 (face font-lock-constant-face fontified nil) 1277 1293 (fontified nil) 1293 1297 (face font-lock-keyword-face fontified nil) 1297 1373 (fontified nil) 1373 1379 (face font-lock-keyword-face fontified nil) 1379 1380 (fontified nil) 1380 1385 (face font-lock-type-face fontified nil) 1385 1386 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 1386 1392 (face font-lock-type-face fontified nil) 1392 1393 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 1393 1394 (fontified nil) 1394 1400 (face font-lock-function-name-face fontified nil) 1400 1401 (c-type c-decl-arg-start fontified nil) 1401 1407 (face font-lock-type-face fontified nil) 1407 1408 (fontified nil) 1408 1415 (face font-lock-variable-name-face fontified nil) 1415 1426 (fontified nil) 1426 1431 (face font-lock-type-face fontified nil) 1431 1432 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 1432 1438 (face font-lock-type-face fontified nil) 1438 1439 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 1439 1440 (fontified nil) 1440 1445 (face font-lock-variable-name-face fontified nil) 1445 1448 (fontified nil) 1448 1451 (face font-lock-keyword-face fontified nil) 1451 1452 (fontified nil) 1452 1457 (face font-lock-type-face fontified nil) 1457 1458 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 1458 1459 (category c->-as-paren-syntax fontified nil) 1459 1471 (fontified nil) 1471 1474 (face font-lock-keyword-face fontified nil) 1474 1488 (fontified nil) 1488 1497 (face font-lock-type-face fontified nil) 1497 1498 (face font-lock-type-face c-type c-decl-id-start fontified nil) 1498 1499 (fontified nil) 1499 1500 (face font-lock-variable-name-face fontified nil) 1500 1512 (face font-lock-variable-name-face fontified nil) 1512 1514 (fontified nil) 1514 1639 (fontified nil) 1639 1651 (fontified nil) 1651 1656 (face font-lock-keyword-face fontified nil) 1656 1690 (fontified nil) 1690 1694 (face font-lock-constant-face fontified nil) 1694 1773 (fontified nil) 1773 1778 (face font-lock-keyword-face fontified nil) 1778 1826 (fontified nil) 1826 1848 (face font-lock-string-face fontified nil) 1848 1907 (fontified nil) 1907 1913 (face font-lock-keyword-face fontified nil) 1913 1932 (fontified nil) 1932 1938 (face font-lock-keyword-face fontified nil) 1938 1939 (fontified nil) 1939 1944 (face font-lock-type-face fontified nil) 1944 1945 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 1945 1951 (face font-lock-type-face fontified nil) 1951 1952 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 1952 1953 (fontified nil) 1953 1963 (face font-lock-function-name-face fontified nil) 1963 1975 (fontified nil) 1975 1980 (face font-lock-type-face fontified nil) 1980 1981 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 1981 1987 (face font-lock-type-face fontified nil) 1987 1988 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 1988 1989 (fontified nil) 1989 1990 (face font-lock-variable-name-face fontified nil) 1990 1993 (fontified nil) 1993 1996 (face font-lock-keyword-face fontified nil) 1996 1997 (fontified nil) 1997 2002 (face font-lock-type-face fontified nil) 2002 2003 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 2003 2004 (category c->-as-paren-syntax fontified nil) 2004 2016 (fontified nil) 2016 2019 (face font-lock-keyword-face fontified nil) 2019 2020 (fontified nil) 2020 2022 (face font-lock-type-face fontified nil) 2022 2023 (face font-lock-type-face c-type c-decl-id-start fontified nil) 2023 2024 (fontified nil) 2024 2025 (face font-lock-variable-name-face fontified nil) 2025 2046 (fontified nil) 2046 2052 (face font-lock-type-face fontified nil) 2052 2072 (fontified nil) 2072 2077 (face font-lock-type-face fontified nil) 2077 2078 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 2078 2084 (face font-lock-type-face fontified nil) 2084 2085 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 2085 2086 (fontified nil) 2086 2088 (face font-lock-variable-name-face fontified nil) 2088 2126 (fontified nil) 2126 2129 (face font-lock-keyword-face fontified nil) 2129 2130 (fontified nil) 2130 2135 (face font-lock-type-face fontified nil) 2135 2136 (face font-lock-type-face c-type c-decl-id-start fontified nil) 2136 2137 (fontified nil) 2137 2138 (face font-lock-variable-name-face fontified nil) 2138 2192 (fontified nil) 2192 2198 (face font-lock-keyword-face fontified nil) 2198 2202 (fontified nil) 2202 2208 (fontified nil) 2208 2213 (fontified nil) 2213 2217 (fontified nil) 2217 2223 (face font-lock-keyword-face fontified nil) 2223 2224 (fontified nil) 2224 2230 (face font-lock-keyword-face fontified nil) 2230 2231 (fontified nil) 2231 2236 (face font-lock-type-face fontified nil) 2236 2237 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 2237 2243 (face font-lock-type-face fontified nil) 2243 2244 (c-type c-decl-id-start fontified nil category c->-as-paren-syntax) 2244 2245 (fontified nil) 2245 2252 (face font-lock-function-name-face fontified nil) 2252 2253 (c-type c-decl-arg-start fontified nil) 2253 2258 (face font-lock-type-face fontified nil) 2258 2259 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 2259 2265 (face font-lock-type-face fontified nil) 2265 2266 (fontified nil category c->-as-paren-syntax) 2266 2267 (fontified nil) 2267 2268 (face font-lock-variable-name-face fontified nil) 2268 2279 (fontified nil) 2279 2285 (face font-lock-keyword-face fontified nil) 2285 2321 (fontified nil) 2321 2326 (face font-lock-type-face fontified nil) 2326 2327 (face font-lock-type-face c-type c-decl-id-start fontified nil) 2327 2328 (fontified nil) 2328 2337 (face font-lock-variable-name-face fontified nil) 2337 2367 (fontified nil) 2367 2370 (face font-lock-string-face fontified nil) 2370 2371 (fontified nil) 2371 2373 (face font-lock-string-face fontified nil) 2373 2388 (fontified nil) 2388 2393 (face font-lock-type-face fontified nil) 2393 2394 (face font-lock-type-face c-type c-decl-id-start fontified nil) 2394 2395 (fontified nil) 2395 2402 (face font-lock-variable-name-face fontified nil) 2402 2437 (fontified nil) 2437 2447 (face font-lock-constant-face fontified nil) 2447 2448 (fontified nil) 2448 2452 (face font-lock-constant-face fontified nil) 2452 2469 (fontified nil) 2469 2477 (face font-lock-string-face fontified nil) 2477 2479 (fontified nil) 2479 2481 (face font-lock-string-face fontified nil) 2481 2496 (fontified nil) 2496 2501 (face font-lock-type-face fontified nil) 2501 2502 (face font-lock-type-face c-type c-decl-id-start fontified nil) 2502 2503 (fontified nil) 2503 2512 (face font-lock-variable-name-face fontified nil) 2512 2542 (fontified nil) 2542 2545 (face font-lock-string-face fontified nil) 2545 2546 (fontified nil) 2546 2548 (face font-lock-string-face fontified nil) 2548 2563 (fontified nil) 2563 2568 (face font-lock-type-face fontified nil) 2568 2569 (face font-lock-type-face c-type c-decl-id-start fontified nil) 2569 2570 (fontified nil) 2570 2577 (face font-lock-variable-name-face fontified nil) 2577 2612 (fontified nil) 2612 2622 (face font-lock-constant-face fontified nil) 2622 2623 (fontified nil) 2623 2627 (face font-lock-constant-face fontified nil) 2627 2644 (fontified nil) 2644 2652 (face font-lock-string-face fontified nil) 2652 2654 (fontified nil) 2654 2656 (face font-lock-string-face fontified nil) 2656 2671 (fontified nil) 2671 2677 (face font-lock-keyword-face fontified nil) 2677 2730 (fontified nil) 2730 2736 (face font-lock-keyword-face fontified nil) 2736 2737 (fontified nil) 2737 2743 (face font-lock-keyword-face fontified nil) 2743 2744 (fontified nil) 2744 2749 (face font-lock-type-face fontified nil) 2749 2750 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 2750 2756 (face font-lock-type-face fontified nil) 2756 2757 (c-type c-decl-id-start fontified nil category c->-as-paren-syntax) 2757 2758 (fontified nil) 2758 2765 (face font-lock-function-name-face fontified nil) 2765 2766 (c-type c-decl-arg-start fontified nil) 2766 2771 (face font-lock-type-face fontified nil) 2771 2772 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 2772 2778 (face font-lock-type-face fontified nil) 2778 2779 (fontified nil category c->-as-paren-syntax) 2779 2780 (fontified nil) 2780 2781 (face font-lock-variable-name-face fontified nil) 2781 2792 (fontified nil) 2792 2798 (face font-lock-keyword-face fontified nil) 2798 2832 (fontified nil) 2832 2838 (face font-lock-keyword-face fontified nil) 2838 2839 (fontified nil) 2839 2845 (face font-lock-type-face fontified nil) 2845 2846 (face font-lock-type-face c-type c-decl-id-start fontified nil) 2846 2847 (fontified nil) 2847 2862 (face font-lock-function-name-face fontified nil) 2862 2875 (fontified nil) 2875 2881 (face font-lock-keyword-face fontified nil) 2881 2892 (fontified nil) 2892 2893 (fontified nil rear-nonsticky nil)) . 1) (undo-tree-id142 . -1899) (undo-tree-id143 . -1639) (undo-tree-id144 . -1899) (nil rear-nonsticky t 2893 . 2894) (t 26110 9719 916100 940000)) (26110 9719 908505 304000) 0 nil])
([nil nil ((2244 . 2248) (#("    " 0 4 (fontified nil)) . 2243) (undo-tree-id159 . -4) (2243 . 2248) (#("    " 0 4 (fontified nil)) . 2242) (undo-tree-id160 . -4) (2246 . 2247)) nil (26110 10489 417026 42000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 2406 . 2407) (nil fontified nil 2296 . 2407) (nil fontified nil 2295 . 2296) (nil category c->-as-paren-syntax 2295 . 2296) (nil fontified nil 2289 . 2295) (nil fontified nil 2288 . 2289) (nil category c-<-as-paren-syntax 2288 . 2289) (nil fontified nil 2274 . 2288) (nil fontified nil 2273 . 2274) (nil category c->-as-paren-syntax 2273 . 2274) (nil fontified nil 2267 . 2273) (nil fontified nil 2266 . 2267) (nil category c-<-as-paren-syntax 2266 . 2267) (nil fontified nil 2243 . 2266) (2243 . 2407)) nil (26110 10489 417022 355000) 0 nil])
([nil nil ((#("ublic static Lista<String> reverso(Lista<String> l){
        return ordenar(l).reversa();
    }
" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 18 (face font-lock-type-face fontified t) 18 19 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 19 25 (face font-lock-type-face fontified t) 25 26 (c-type c-decl-id-start category c->-as-paren-syntax fontified t) 26 27 (fontified t) 27 34 (face font-lock-function-name-face fontified t) 34 35 (c-type c-decl-arg-start fontified t) 35 40 (face font-lock-type-face fontified t) 40 41 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 41 47 (face font-lock-type-face fontified t) 47 48 (category c->-as-paren-syntax fontified t) 48 49 (fontified t) 49 50 (face font-lock-variable-name-face fontified t) 50 61 (fontified t) 61 67 (face font-lock-keyword-face fontified t) 67 96 (fontified t)) . 2248) (undo-tree-id158 . -96)) nil (26110 10489 417019 28000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2242) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#(" " 0 1 (fontified t)) . -2243) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#(" " 0 1 (fontified t)) . -2244) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#(" " 0 1 (fontified t)) . -2245) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#(" " 0 1 (fontified t)) . -2246) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("p" 0 1 (fontified t)) . -2247) (undo-tree-id156 . -1) (undo-tree-id157 . -1) 2248) nil (26110 10973 703459 537000) 0 nil])
([nil nil ((1577 . 1583) (t 26110 10997 842746 427000)) nil (26110 11498 771407 619000) 0 nil] [nil nil ((#("	for(int i = 0; i<argumentos.length; i++){
	    if(argumentos[i].equals(\"-r\")){
		if(r){
		    System.out.println(\"La bandera -r y\");
		    System.exit(-1);
		}

		r = true;
	    } else if(argumentos[i].equals(\"-o\")){
		if(o){
		    System.out.println(\"ERES UN NACO OTE\");
		    System.exit(-1);
		}

		if(i+1 < argumentos.length) {
		    i++;
		    id = argumentos[i+1];
		} else {
		    System.out.println(\"ERROR\");
		}
		
		o = true;
		
	    } 
	 
	}
" 0 1 (fontified t) 1 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face c-type c-decl-id-start fontified t) 8 9 (fontified t) 9 10 (face font-lock-variable-name-face fontified t) 10 29 (fontified t) 29 35 (face font-lock-type-face fontified t) 35 48 (fontified t) 48 50 (face font-lock-keyword-face fontified t) 50 72 (fontified t) 72 76 (face font-lock-string-face fontified t) 76 82 (fontified t) 82 84 (face font-lock-keyword-face fontified t) 84 89 (fontified t) 89 114 (fontified t) 114 115 (face font-lock-string-face fontified t) 115 116 (face font-lock-string-face fontified t) 116 117 (face font-lock-string-face fontified t) 117 118 (face font-lock-string-face fontified t) 118 119 (face font-lock-string-face fontified t) 119 120 (face font-lock-string-face fontified t) 120 121 (face font-lock-string-face fontified t) 121 122 (face font-lock-string-face fontified t) 122 123 (face font-lock-string-face fontified t) 123 124 (face font-lock-string-face fontified t) 124 125 (face font-lock-string-face fontified t) 125 126 (face font-lock-string-face fontified t) 126 127 (face font-lock-string-face fontified t) 127 128 (face font-lock-string-face fontified t) 128 129 (face font-lock-string-face fontified t) 129 130 (face font-lock-string-face fontified t) 130 131 (face font-lock-string-face fontified t) 131 134 (fontified t) 134 161 (fontified t) 161 168 (fontified t) 168 172 (face font-lock-constant-face fontified t) 172 181 (fontified t) 181 185 (face font-lock-keyword-face fontified t) 185 186 (fontified t) 186 188 (face font-lock-keyword-face fontified t) 188 210 (fontified t) 210 214 (face font-lock-string-face fontified t) 214 220 (fontified t) 220 222 (face font-lock-keyword-face fontified t) 222 252 (fontified t) 252 270 (face font-lock-string-face fontified t) 270 296 (fontified t) 296 303 (fontified t) 303 305 (face font-lock-keyword-face fontified t) 305 376 (fontified t) 376 380 (face font-lock-keyword-face fontified t) 380 408 (fontified t) 408 415 (face font-lock-string-face fontified t) 415 431 (fontified t) 431 435 (face font-lock-constant-face fontified t) 435 448 (fontified t) 448 450 (fontified t) 450 451 (fontified t) 451 454 (fontified t)) . -503) (undo-tree-id189 . -454) (undo-tree-id190 . -43) (undo-tree-id191 . -450) (undo-tree-id192 . -454) 957 (t 26110 10489 425722 202000)) ((503 . 957)) (26110 10973 385575 486000) 0 nil] [nil nil ((nil rear-nonsticky nil 1810 . 1811) (nil fontified nil 953 . 1811) (953 . 1811) 951 (t 26110 10489 425722 202000)) ((#("    for(int i = 0; i < argumentos.length; i++){
        if(argumentos[i].equals(\"-r\")){
            if(r){
                System.out.println(\"La bandera -r ya se ha especificado.\");
                System.exit(-1);
            }
            r = true;
        } else if(argumentos[i].equals(\"-o\")){
            if(o){
                System.out.println(\"La bandera -o ya se ha especificado.\");
                System.exit(-1);
            }
            if(i + 1 < argumentos.length) {
                i++;
                id = argumentos[i];
            } else {
                System.out.println(\"Falta argumento despuรฉs de -o.\");
                System.exit(-1);
            }
            o = true;
        } else {
            // Si no es una bandera, asumimos que es un nombre de archivo y lo ignoramos.
            file = argumentos[i];
        }
    }" 0 4 (fontified nil) 4 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil) 8 10 (face font-lock-type-face fontified nil) 10 11 (face font-lock-type-face c-type c-decl-id-start fontified nil) 11 12 (fontified nil) 12 13 (face font-lock-variable-name-face fontified nil) 13 34 (fontified nil) 34 40 (face font-lock-type-face fontified nil) 40 56 (fontified nil) 56 58 (face font-lock-keyword-face fontified nil) 58 80 (fontified nil) 80 84 (face font-lock-string-face fontified nil) 84 100 (fontified nil) 100 102 (face font-lock-keyword-face fontified nil) 102 142 (fontified nil) 142 180 (face font-lock-string-face fontified nil) 180 246 (fontified nil) 246 250 (face font-lock-constant-face fontified nil) 250 262 (fontified nil) 262 266 (face font-lock-keyword-face fontified nil) 266 267 (fontified nil) 267 269 (face font-lock-keyword-face fontified nil) 269 291 (fontified nil) 291 295 (face font-lock-string-face fontified nil) 295 311 (fontified nil) 311 313 (face font-lock-keyword-face fontified nil) 313 353 (fontified nil) 353 391 (face font-lock-string-face fontified nil) 391 453 (fontified nil) 453 455 (face font-lock-keyword-face fontified nil) 455 556 (fontified nil) 556 560 (face font-lock-keyword-face fontified nil) 560 598 (fontified nil) 598 630 (face font-lock-string-face fontified nil) 630 696 (fontified nil) 696 700 (face font-lock-constant-face fontified nil) 700 712 (fontified nil) 712 716 (face font-lock-keyword-face fontified nil) 716 719 (fontified nil) 719 731 (c-is-sws t c-in-sws t fontified nil) 731 732 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified nil) 732 734 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 734 809 (c-in-sws t face font-lock-comment-face fontified nil) 809 821 (c-in-sws t c-is-sws t fontified nil) 821 822 (c-is-sws t fontified nil) 822 857 (fontified nil) 857 858 (rear-nonsticky nil fontified nil)) . 953) (undo-tree-id175 . -216) (nil rear-nonsticky t 1810 . 1811)) (26110 10665 218782 57000) 0 nil])
([nil nil ((1583 . 1584)) nil (26110 11498 771406 867000) 0 nil])
([nil nil ((503 . 504) (#("	" 0 1 (fontified t)) . 503)) ((503 . 504) (#("	" 0 1 (fontified t)) . 503) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1)) (26110 10972 797581 285000) 0 nil])
nil
([nil nil ((#("s" 0 1 (fontified t)) . -1583) (undo-tree-id225 . -1) 1584) nil (26110 11498 771405 986000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1361 . 1362) (nil fontified nil 504 . 1362) (504 . 1362)) ((#("    for(int i = 0; i < argumentos.length; i++){
        if(argumentos[i].equals(\"-r\")){
            if(r){
                System.out.println(\"La bandera -r ya se ha especificado.\");
                System.exit(-1);
            }
            r = true;
        } else if(argumentos[i].equals(\"-o\")){
            if(o){
                System.out.println(\"La bandera -o ya se ha especificado.\");
                System.exit(-1);
            }
            if(i + 1 < argumentos.length) {
                i++;
                id = argumentos[i];
            } else {
                System.out.println(\"Falta argumento despuรฉs de -o.\");
                System.exit(-1);
            }
            o = true;
        } else {
            // Si no es una bandera, asumimos que es un nombre de archivo y lo ignoramos.
            file = argumentos[i];
        }
    }" 0 4 (fontified nil) 4 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil) 8 10 (face font-lock-type-face fontified nil) 10 11 (face font-lock-type-face c-type c-decl-id-start fontified nil) 11 12 (fontified nil) 12 13 (face font-lock-variable-name-face fontified nil) 13 34 (fontified nil) 34 40 (face font-lock-type-face fontified nil) 40 48 (fontified nil) 48 56 (fontified nil) 56 58 (face font-lock-keyword-face fontified nil) 58 80 (fontified nil) 80 84 (face font-lock-string-face fontified nil) 84 88 (fontified nil) 88 100 (fontified nil) 100 102 (face font-lock-keyword-face fontified nil) 102 107 (fontified nil) 107 123 (fontified nil) 123 142 (fontified nil) 142 180 (face font-lock-string-face fontified nil) 180 183 (fontified nil) 183 216 (fontified nil) 216 228 (fontified nil) 228 230 (fontified nil) 230 242 (fontified nil) 242 246 (fontified nil) 246 250 (face font-lock-constant-face fontified nil) 250 252 (fontified nil) 252 260 (fontified nil) 260 262 (fontified nil) 262 266 (face font-lock-keyword-face fontified nil) 266 267 (fontified nil) 267 269 (face font-lock-keyword-face fontified nil) 269 291 (fontified nil) 291 295 (face font-lock-string-face fontified nil) 295 299 (fontified nil) 299 311 (fontified nil) 311 313 (face font-lock-keyword-face fontified nil) 313 318 (fontified nil) 318 334 (fontified nil) 334 353 (fontified nil) 353 391 (face font-lock-string-face fontified nil) 391 394 (fontified nil) 394 410 (fontified nil) 410 427 (fontified nil) 427 439 (fontified nil) 439 441 (fontified nil) 441 453 (fontified nil) 453 455 (face font-lock-keyword-face fontified nil) 455 485 (fontified nil) 485 501 (fontified nil) 501 506 (fontified nil) 506 542 (fontified nil) 542 554 (fontified nil) 554 556 (fontified nil) 556 560 (face font-lock-keyword-face fontified nil) 560 563 (fontified nil) 563 579 (fontified nil) 579 598 (fontified nil) 598 630 (face font-lock-string-face fontified nil) 630 633 (fontified nil) 633 649 (fontified nil) 649 666 (fontified nil) 666 678 (fontified nil) 678 680 (fontified nil) 680 692 (fontified nil) 692 696 (fontified nil) 696 700 (face font-lock-constant-face fontified nil) 700 702 (fontified nil) 702 710 (fontified nil) 710 712 (fontified nil) 712 716 (face font-lock-keyword-face fontified nil) 716 719 (fontified nil) 719 731 (fontified nil) 731 732 (face font-lock-comment-delimiter-face fontified nil c-is-sws t c-in-sws t) 732 734 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 734 808 (face font-lock-comment-face fontified nil c-in-sws t) 808 809 (face font-lock-comment-face c-in-sws t fontified nil) 809 810 (c-is-sws t fontified nil) 810 821 (c-is-sws t fontified nil) 821 822 (fontified nil c-is-sws t) 822 843 (fontified nil) 843 851 (fontified nil) 851 853 (fontified nil) 853 854 (fontified nil) 854 855 (fontified nil) 855 856 (fontified nil) 856 857 (fontified nil) 857 858 (rear-nonsticky nil fontified nil)) . 504) (undo-tree-id199 . -858) (undo-tree-id200 . -273) (undo-tree-id201 . -247) (undo-tree-id202 . -229) (undo-tree-id203 . -123) (undo-tree-id204 . -100) (undo-tree-id205 . -48) (undo-tree-id206 . -8) (undo-tree-id207 . -49) (undo-tree-id208 . -853) (undo-tree-id209 . -858) (nil fontified t 1355 . 1357) (nil fontified t 1347 . 1355) (nil fontified t 1326 . 1347) (nil fontified t 1325 . 1326) (nil fontified t 1314 . 1325) (nil fontified t 1313 . 1314) (nil fontified t 1312 . 1313) (nil fontified t 1238 . 1312) (nil fontified t 1236 . 1238) (nil fontified t 1235 . 1236) (nil fontified t 1223 . 1235) (nil fontified t 1220 . 1223) (nil fontified t 1216 . 1220) (nil fontified t 1214 . 1216) (nil fontified t 1206 . 1214) (nil fontified t 1204 . 1206) (nil fontified t 1200 . 1204) (nil fontified t 1196 . 1200) (nil fontified t 1184 . 1196) (nil fontified t 1182 . 1184) (nil fontified t 1170 . 1182) (nil fontified t 1153 . 1170) (nil fontified t 1137 . 1153) (nil fontified t 1134 . 1137) (nil fontified t 1102 . 1134) (nil fontified t 1083 . 1102) (nil fontified t 1067 . 1083) (nil fontified t 1064 . 1067) (nil fontified t 1060 . 1064) (nil fontified t 1058 . 1060) (nil fontified t 1046 . 1058) (nil fontified t 1010 . 1046) (nil fontified t 1005 . 1010) (nil fontified t 989 . 1005) (nil fontified t 959 . 989) (nil fontified t 957 . 959) (nil fontified t 945 . 957) (nil fontified t 943 . 945) (nil fontified t 931 . 943) (nil fontified t 914 . 931) (nil fontified t 898 . 914) (nil fontified t 895 . 898) (nil fontified t 857 . 895) (nil fontified t 838 . 857) (nil fontified t 822 . 838) (nil fontified t 817 . 822) (nil fontified t 815 . 817) (nil fontified t 803 . 815) (nil fontified t 799 . 803) (nil fontified t 795 . 799) (nil fontified t 773 . 795) (nil fontified t 771 . 773) (nil fontified t 770 . 771) (nil fontified t 766 . 770) (nil fontified t 764 . 766) (nil fontified t 756 . 764) (nil fontified t 754 . 756) (nil fontified t 750 . 754) (nil fontified t 746 . 750) (nil fontified t 734 . 746) (nil fontified t 732 . 734) (nil fontified t 720 . 732) (nil fontified t 687 . 720) (nil fontified t 684 . 687) (nil fontified t 646 . 684) (nil fontified t 627 . 646) (nil fontified t 611 . 627) (nil fontified t 606 . 611) (nil fontified t 604 . 606) (nil fontified t 592 . 604) (nil fontified t 588 . 592) (nil fontified t 584 . 588) (nil fontified t 562 . 584) (nil fontified t 560 . 562) (nil fontified t 552 . 560) (nil fontified t 544 . 552) (nil fontified t 538 . 544) (nil fontified t 517 . 538) (nil fontified t 516 . 517) (nil fontified t 515 . 516) (nil fontified t 514 . 515) (nil fontified t 512 . 514) (nil fontified t 511 . 512) (nil fontified t 508 . 511) (nil fontified t 504 . 508) (nil rear-nonsticky t 1361 . 1362)) (26110 10972 532434 817000) 0 nil])
([nil nil ((1583 . 1604)) nil (26110 11498 771404 833000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1358) (undo-tree-id185 . -1) (#(" " 0 1 (fontified t)) . -1359) (undo-tree-id186 . -1) (#(" " 0 1 (fontified t)) . -1360) (undo-tree-id187 . -1) (#("}" 0 1 (rear-nonsticky t fontified t)) . -1361) (undo-tree-id188 . -1) 1362) ((1358 . 1362)) (26110 10972 259440 920000) 0 nil])
([nil nil ((1604 . 1605)) nil (26110 11498 771404 202000) 0 nil])
([nil nil ((552 . 554) (#("        " 0 8 (fontified t)) . 552) (undo-tree-id184 . -1) 553) ((552 . 560) (#("		" 0 2 (fontified t)) . 552) (undo-tree-id198 . -1)) (26110 10971 861703 35000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-variable-name-face fontified t)) . -1590) (undo-tree-id221 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -1591) (undo-tree-id222 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -1592) (undo-tree-id223 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1593) (undo-tree-id224 . -1) 1594) nil (26110 11498 771402 850000) 0 nil])
([nil nil ((503 . 504) (#("	    " 0 1 (fontified t) 1 5 (fontified t)) . 503) (undo-tree-id183 . -1) 512) ((503 . 508) (#("	" 0 1 (fontified t)) . 503)) (26110 10971 535585 214000) 0 nil])
([nil nil ((1590 . 1592)) nil (26110 11498 771397 880000) 0 nil])
([nil nil ((548 . 553) (#("		" 0 2 (fontified t)) . 548) (undo-tree-id182 . -1) 549) ((548 . 550) (#("	    " 0 5 (fontified t)) . 548)) (26110 10971 373611 973000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -1590) (undo-tree-id219 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -1591) (undo-tree-id220 . -1) 1592) nil (26110 11498 771397 29000) 0 nil])
([nil nil ((585 . 587) (#("            " 0 12 (fontified t)) . -585) (undo-tree-id181 . -12) 597) ((585 . 597) (#("		" 0 2 (fontified t)) . 585)) (26110 10971 197464 457000) 0 nil])
([nil nil ((1590 . 1591)) nil (26110 11498 771394 574000) 0 nil])
([nil nil ((594 . 600) (#("                " 0 16 (fontified t)) . -594) (undo-tree-id180 . -16) 610) ((594 . 610) (#("		    " 0 6 (fontified t)) . 594)) (26110 10971 25482 317000) 0 nil])
([nil nil ((1602 . 1608)) nil (26110 11498 771394 73000) 0 nil])
([nil nil ((693 . 695) (#("            " 0 12 (fontified t)) . 693) 706) ((693 . 705) (#("		" 0 2 (fontified t)) . 693)) (26110 10970 839755 762000) 0 nil])
([nil nil ((1608 . 1610)) nil (26110 11498 771393 492000) 0 nil])
([nil nil ((697 . 699) (#("            " 0 12 (fontified t)) . 697) 714) ((697 . 709) (#("		" 0 2 (fontified t)) . 697)) (26110 10970 682453 984000) 0 nil])
([nil nil ((1610 . 1612)) nil (26110 11498 771392 891000) 0 nil])
([nil nil ((709 . 714) (#("        " 0 8 (fontified t)) . 709) 730) ((709 . 717) (#("	    " 0 5 (fontified t)) . 709)) (26110 10970 463884 218000) 0 nil])
([nil nil ((1611 . 1612)) nil (26110 11498 771392 70000) 0 nil])
([nil nil ((753 . 755) (#("            " 0 12 (fontified t)) . 753) 771) ((753 . 765) (#("		" 0 2 (fontified t)) . 753)) (26110 10970 265926 410000) 0 nil])
([nil nil ((1612 . 1613)) nil (26110 11498 771391 489000) 0 nil])
([nil nil ((762 . 768) (#("                " 0 16 (fontified t)) . 762) 784) ((762 . 778) (#("		    " 0 6 (fontified t)) . 762)) (26110 10970 70168 764000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1612) (undo-tree-id218 . -1) 1613) nil (26110 11498 771390 537000) 0 nil])
([nil nil ((828 . 834) (#("                " 0 16 (fontified t)) . 828) 854) ((828 . 844) (#("		    " 0 6 (fontified t)) . 828)) (26110 10969 866047 600000) 0 nil])
([nil nil ((1612 . 1617)) nil (26110 11498 771389 274000) 0 nil])
([nil nil ((851 . 853) (#("            " 0 12 (fontified t)) . 851) 864) ((851 . 863) (#("		" 0 2 (fontified t)) . 851)) (26110 10969 659921 704000) 0 nil])
([nil nil ((1617 . 1618)) nil (26110 11498 771388 623000) 0 nil])
([nil nil ((855 . 857) (#("            " 0 12 (fontified t)) . 855) 872) ((855 . 867) (#("		" 0 2 (fontified t)) . 855)) (26110 10969 435788 918000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1615) (undo-tree-id215 . -1) (#("a" 0 1 (fontified t)) . -1616) (undo-tree-id216 . -1) (#(";" 0 1 (fontified t)) . -1617) (undo-tree-id217 . -1) 1618) nil (26110 11498 771387 80000) 0 nil])
([nil nil ((889 . 895) (#("                " 0 16 (fontified t)) . 889) 909) ((889 . 905) (#("		    " 0 6 (fontified t)) . 889)) (26110 10969 219759 79000) 0 nil])
([nil nil ((1615 . 1619)) nil (26110 11498 771384 45000) 0 nil])
([nil nil ((936 . 938) (#("            " 0 12 (fontified t)) . 936) 956) ((936 . 948) (#("		" 0 2 (fontified t)) . 936)) (26110 10968 991829 712000) 0 nil])
([nil nil ((1619 . 1621)) nil (26110 11498 771383 403000) 0 nil])
([nil nil ((947 . 953) (#("                " 0 16 (fontified t)) . 947) 971) ((947 . 963) (#("		    " 0 6 (fontified t)) . 947)) (26110 10968 696317 561000) 0 nil])
([nil nil ((1620 . 1622)) nil (26110 11498 771382 822000) 0 nil])
([nil nil ((1007 . 1013) (#("                " 0 16 (fontified t)) . 1007) 1035) ((1007 . 1023) (#("		    " 0 6 (fontified t)) . 1007)) (26110 10968 438341 230000) 0 nil])
([nil nil ((1621 . 1623)) nil (26110 11498 771381 971000) 0 nil])
([nil nil ((1030 . 1032) (#("            " 0 12 (fontified t)) . 1030) 1043) ((1030 . 1042) (#("		" 0 2 (fontified t)) . 1030)) (26110 10968 96459 691000) 0 nil])
([nil nil ((1625 . 1626)) nil (26110 11498 773347 18000) 0 nil])
([nil nil ((1034 . 1036) (#("            " 0 12 (fontified t)) . 1034) 1051) ((1034 . 1046) (#("		" 0 2 (fontified t)) . 1034)) (26110 10967 814313 263000) 0 nil])
([nil nil ((1626 . 1629)) nil (26110 11560 979045 597000) 0 nil] [nil nil ((1626 . 1628) (#(" " 0 1 (fontified nil)) . 1625) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (1626 . 1627)) ((#("
" 0 1 (fontified nil)) . 1626) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (1625 . 1626) (#("		" 0 2 (fontified t)) . 1626) (undo-tree-id228 . -2)) (26110 11498 771377 212000) 0 nil])
([nil nil ((1046 . 1051) (#("        " 0 8 (fontified t)) . 1046) 1062) ((1046 . 1054) (#("	    " 0 5 (fontified t)) . 1046)) (26110 10967 485966 47000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1641 . 1642) (nil fontified nil 1641 . 1642) (nil fontified nil 1640 . 1641) (nil fontified nil 1639 . 1640) (nil fontified nil 1638 . 1639) (nil fontified nil 1637 . 1638) (nil fontified nil 1636 . 1637) (nil fontified nil 1635 . 1636) (nil fontified nil 1634 . 1635) (nil fontified nil 1633 . 1634) (nil fontified nil 1632 . 1633) (nil fontified nil 1631 . 1632) (nil fontified nil 1630 . 1631) (nil fontified nil 1629 . 1630) (nil fontified nil 1628 . 1629) (1628 . 1642)) nil (26110 11560 979044 505000) 0 nil])
nil
([nil nil ((1060 . 1062) (#("            " 0 12 (c-is-sws t c-in-sws t fontified t)) . 1060) 1080) ((1060 . 1072) (#("		" 0 2 (fontified t c-is-sws t c-in-sws t)) . 1060)) (26110 10967 188107 90000) 0 nil])
([nil nil ((1628 . 1629)) nil (26110 11560 979042 160000) 0 nil])
([nil nil ((1140 . 1142) (#("            " 0 12 (c-in-sws t c-is-sws t fontified t)) . 1140) 1164) ((1140 . 1152) (#("		" 0 1 (fontified t c-is-sws t) 1 2 (fontified t c-is-sws t)) . 1140)) (26110 10966 916158 680000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1643) (undo-tree-id231 . -1) 1644) nil (26110 11560 979041 499000) 0 nil])
([nil nil ((1174 . 1179) (#(" " 0 1 (fontified t)) . -1174) (undo-tree-id179 . -1) 1175) ((1174 . 1175) (#("	    " 0 1 (fontified t) 1 5 (fontified t)) . 1174)) (26110 10966 592157 199000) 0 nil])
([nil nil ((1644 . 1645)) nil (26110 11560 979040 76000) 0 nil])
([nil nil ((1180 . 1181) (#("    " 0 4 (fontified t)) . 1180) 1185) ((1180 . 1184) (#("	" 0 1 (fontified t)) . 1180)) (26110 10966 263941 587000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -1640) (undo-tree-id230 . -1) 1641) nil (26110 11560 979039 135000) 0 nil])
([nil nil ((1183 . 1184)) ((#("	" 0 1 (fontified t)) . 1183) (undo-tree-id197 . -1)) (26110 10965 373119 321000) 0 nil])
([nil nil ((1640 . 1641)) nil (26110 11560 979037 341000) 0 nil])
([nil nil ((1183 . 1187) (#("	" 0 1 (fontified nil)) . 1183) (undo-tree-id178 . -1) (1184 . 1185)) ((#("}" 0 1 (fontified nil)) . 1184) (undo-tree-id196 . -1) (1183 . 1184) (#("    " 0 4 (fontified t)) . 1183)) (26110 10964 914690 264000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1644) (undo-tree-id229 . -1) 1645) nil (26110 11560 979035 889000) 0 nil])
([nil nil ((1174 . 1179) (#("	" 0 1 (fontified nil)) . -1174) (undo-tree-id177 . -1) (#("    " 0 4 (fontified t)) . 1175)) ((1174 . 1179) (#("	    " 0 5 (fontified t)) . 1174)) (26110 10964 538468 28000) 0 nil])
([nil nil ((1644 . 1647)) nil (26110 11560 979026 832000) 0 nil])
([nil nil ((1164 . 1169) (#("        " 0 8 (fontified t)) . 1164) 1173) ((1164 . 1172) (#("	    " 0 5 (fontified t)) . 1164)) (26110 10964 69340 476000) 0 nil])
([nil nil ((1647 . 1655)) nil (26110 11560 979026 50000) 0 nil])
([nil nil ((1187 . 1191) (#("    " 0 4 (fontified nil)) . 1186) (undo-tree-id176 . -4) (1185 . 1191)) ((#("
    
" 0 1 (fontified t) 1 5 (fontified nil) 5 6 (fontified nil)) . 1185) (undo-tree-id193 . -6) (undo-tree-id194 . -6) (1186 . 1190) (#("    " 0 4 (fontified t)) . 1187) (undo-tree-id195 . -4) (t 26110 10724 168513 613000)) (26110 10724 157108 832000) 0 nil])
([nil nil ((1655 . 1656)) nil (26110 11560 979024 648000) 0 nil])
nil
([nil nil ((1656 . 1662)) nil (26110 11560 979020 901000) 0 nil])
([nil nil ((1603 . 1604) (t 26110 11560 988391 14000)) nil (26110 16290 176452 220000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1602) (undo-tree-id275 . -1) 1603) nil (26110 16290 176451 198000) 0 nil])
([nil nil ((#("
    public boolean getReversedFlag() {
        return r;
   " 0 1 (fontified t) 1 5 (fontified t) 5 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 18 (face font-lock-type-face fontified t) 18 19 (face font-lock-type-face c-type c-decl-id-start fontified t) 19 20 (fontified t) 20 35 (face font-lock-function-name-face fontified t) 35 39 (fontified t) 39 48 (fontified t) 48 54 (face font-lock-keyword-face fontified t) 54 61 (fontified t)) . -2327) (undo-tree-id274 . -61) 2388) nil (26110 16290 176449 375000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2327) (undo-tree-id273 . -1) 2328) nil (26110 16290 176448 32000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t rear-nonsticky t)) . -2327) (undo-tree-id272 . -1) 2328) nil (26110 16290 176446 620000) 0 nil])
([nil nil ((1766 . 1770) (#("    " 0 4 (fontified nil)) . 1765) (undo-tree-id271 . -4) (1764 . 1770)) nil (26110 16290 176445 237000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2252 . 2253) (nil fontified nil 2236 . 2253) (nil fontified nil 2230 . 2236) (nil fontified nil 2191 . 2230) (nil fontified nil 2169 . 2191) (nil fontified nil 2128 . 2169) (nil fontified nil 2123 . 2128) (nil fontified nil 2065 . 2123) (nil fontified nil 2061 . 2065) (nil fontified nil 2027 . 2061) (nil fontified nil 2022 . 2027) (nil fontified nil 2009 . 2022) (nil fontified nil 2002 . 2009) (nil fontified nil 2001 . 2002) (nil fontified nil 2000 . 2001) (nil fontified nil 1995 . 2000) (nil fontified nil 1967 . 1995) (nil fontified nil 1953 . 1967) (nil fontified nil 1952 . 1953) (nil fontified nil 1949 . 1952) (nil fontified nil 1946 . 1949) (nil fontified nil 1940 . 1946) (nil fontified nil 1939 . 1940) (nil fontified nil 1938 . 1939) (nil fontified nil 1925 . 1938) (nil fontified nil 1909 . 1925) (nil fontified nil 1899 . 1909) (nil fontified nil 1898 . 1899) (nil fontified nil 1895 . 1898) (nil fontified nil 1892 . 1895) (nil fontified nil 1879 . 1892) (nil fontified nil 1878 . 1879) (nil fontified nil 1877 . 1878) (nil fontified nil 1868 . 1877) (nil fontified nil 1861 . 1868) (nil fontified nil 1858 . 1861) (nil fontified nil 1857 . 1858) (nil fontified nil 1853 . 1857) (nil fontified nil 1852 . 1853) (nil category c->-as-paren-syntax 1852 . 1853) (nil fontified nil 1851 . 1852) (nil category c-<-as-paren-syntax 1851 . 1852) (nil fontified nil 1846 . 1851) (nil fontified nil 1845 . 1846) (nil fontified nil 1842 . 1845) (nil fontified nil 1839 . 1842) (nil fontified nil 1834 . 1839) (nil fontified nil 1833 . 1834) (nil fontified nil 1832 . 1833) (nil category c->-as-paren-syntax 1832 . 1833) (nil fontified nil 1826 . 1832) (nil fontified nil 1825 . 1826) (nil category c-<-as-paren-syntax 1825 . 1826) (nil fontified nil 1820 . 1825) (nil fontified nil 1819 . 1820) (nil fontified nil 1814 . 1819) (nil fontified nil 1811 . 1814) (nil fontified nil 1804 . 1811) (nil fontified nil 1803 . 1804) (nil fontified nil 1797 . 1803) (nil fontified nil 1796 . 1797) (nil fontified nil 1790 . 1796) (nil fontified nil 1789 . 1790) (nil fontified nil 1788 . 1789) (nil category c->-as-paren-syntax 1788 . 1789) (nil fontified nil 1782 . 1788) (nil fontified nil 1781 . 1782) (nil category c-<-as-paren-syntax 1781 . 1782) (nil fontified nil 1776 . 1781) (nil fontified nil 1775 . 1776) (nil fontified nil 1769 . 1775) (nil fontified nil 1765 . 1769) (1765 . 2253)) nil (26110 16290 176441 450000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-function-name-face fontified t)) . -1790) (undo-tree-id265 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -1791) (undo-tree-id266 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -1792) (undo-tree-id267 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -1793) (undo-tree-id268 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -1794) (undo-tree-id269 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -1795) (undo-tree-id270 . -1) 1796) nil (26110 16290 176432 203000) 0 nil])
([nil nil ((1790 . 1796)) nil (26110 16290 176428 55000) 0 nil])
([nil nil ((1811 . 1812)) nil (26110 16290 176427 554000) 0 nil])
([nil nil ((1812 . 1813)) nil (26110 16290 176426 933000) 0 nil])
([nil nil ((1813 . 1817)) nil (26110 16290 176426 392000) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-type-face fontified t)) . -1814) (undo-tree-id262 . -1) (#("s" 0 1 (face font-lock-type-face fontified t)) . -1815) (undo-tree-id263 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -1816) (undo-tree-id264 . -1) 1817) nil (26110 16290 176425 490000) 0 nil])
([nil nil ((1814 . 1830)) nil (26110 16290 176422 294000) 0 nil])
([nil nil ((1830 . 1832)) nil (26110 16290 176421 653000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -1831) (undo-tree-id261 . -1) 1832) nil (26110 16290 176420 962000) 0 nil])
([nil nil ((1831 . 1832)) nil (26110 16290 176419 799000) 0 nil])
([nil nil ((#("	Lista<String> lista = new Lista<>();
	try{
	    FileReader lectorArchivo = new FileReader(archivo);
	    BufferedReader lector = new BufferedReader(lectorArchivo);
	    
	    String renglon;
	    
	    while((renglon = lector.readLine()) != null)
		lista.agrega(renglon);

	    lector.close();
	    
	} catch(IOException e){
	    System.out.println(\"\\nAlgo saliรณ mal: \\n\");
	    e.printStackTrace();	    
	}

	return lista;
		
    }
" 0 1 (fontified t) 1 6 (face font-lock-type-face fontified t) 6 7 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 7 13 (face font-lock-type-face fontified t) 13 14 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 14 15 (fontified t) 15 20 (face font-lock-variable-name-face fontified t) 20 23 (fontified t) 23 26 (face font-lock-keyword-face fontified t) 26 27 (fontified t) 27 32 (face font-lock-type-face fontified t) 32 33 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 33 34 (fontified t category c->-as-paren-syntax) 34 38 (fontified t) 38 39 (fontified t) 39 42 (face font-lock-keyword-face fontified t) 42 49 (fontified t) 49 58 (face font-lock-type-face fontified t) 58 59 (face font-lock-type-face c-type c-decl-id-start fontified t) 59 60 (fontified t) 60 73 (face font-lock-variable-name-face fontified t) 73 76 (fontified t) 76 79 (face font-lock-keyword-face fontified t) 79 80 (fontified t) 80 90 (face font-lock-type-face fontified t) 90 106 (fontified t) 106 119 (face font-lock-type-face fontified t) 119 120 (face font-lock-type-face c-type c-decl-id-start fontified t) 120 121 (fontified t) 121 127 (face font-lock-variable-name-face fontified t) 127 130 (fontified t) 130 133 (face font-lock-keyword-face fontified t) 133 134 (fontified t) 134 148 (face font-lock-type-face fontified t) 148 176 (fontified t) 176 181 (face font-lock-type-face fontified t) 181 182 (face font-lock-type-face c-type c-decl-id-start fontified t) 182 183 (fontified t) 183 190 (face font-lock-variable-name-face fontified t) 190 203 (fontified t) 203 208 (face font-lock-keyword-face fontified t) 208 242 (fontified t) 242 246 (face font-lock-constant-face fontified t) 246 304 (fontified t) 304 309 (face font-lock-keyword-face fontified t) 309 350 (fontified t) 350 372 (face font-lock-string-face fontified t) 372 411 (fontified t) 411 417 (face font-lock-keyword-face fontified t) 417 433 (fontified t) 433 434 (fontified t rear-nonsticky t)) . 1840) (undo-tree-id260 . -434)) nil (26110 16290 176419 148000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2075 . 2076) (nil fontified nil 1840 . 2076) (1840 . 2076)) nil (26110 16374 262700 858000) 0 nil])
([nil nil ((#(" FileWriter escritorArchivo = new FileWriter(nombreArchivo);
  BufferedWriter escritor = new BufferedWriter(escritorArchivo);
  escritor.write(ord.toString());
  escritor.close();
  System.out.println(\"Archivo guardado correctamente\");
    " 0 1 (fontified t) 1 10 (face font-lock-type-face fontified t) 10 11 (face font-lock-type-face c-type c-decl-id-start fontified t) 11 12 (fontified t) 12 27 (face font-lock-variable-name-face fontified t) 27 30 (fontified t) 30 33 (face font-lock-keyword-face fontified t) 33 34 (fontified t) 34 44 (face font-lock-type-face fontified t) 44 63 (fontified t) 63 76 (face font-lock-type-face fontified t) 76 77 (face font-lock-type-face c-type c-decl-id-start fontified t) 77 78 (fontified t) 78 86 (face font-lock-variable-name-face fontified t) 86 89 (fontified t) 89 92 (face font-lock-keyword-face fontified t) 92 93 (fontified t) 93 107 (face font-lock-type-face fontified t) 107 201 (fontified t) 201 233 (face font-lock-string-face fontified t) 233 234 (fontified t) 234 235 (rear-nonsticky t fontified t) 235 236 (fontified t) 236 240 (fontified t)) . 1841) (undo-tree-id346 . -240)) nil (26110 16597 891751 109000) 0 nil] [nil nil ((#("    
  FileWriter escritorArchivo = new FileWriter(nombreArchivo);
  BufferedWriter escritor = new BufferedWriter(escritorArchivo);
  escritor.write(ord.toString());
  escritor.close();
  System.out.println(\"Archivo guardado correctamente\");
    
    
    public static Lista<String> ordenar(Lista<String> l){
	return l.mergeSort((a,b) -> {
		String aSinMayus = a.toLowerCase().replaceAll(\" \",\"\");
		String aLimpio = Normalizer.normalize(aSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
		String bSinMayus = b.toLowerCase().replaceAll(\" \",\"\");
		String bLimpio = Normalizer.normalize(bSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
		
		return aLimpio.compareTo(bLimpio);
		
	    }); 
	
	" 0 5 (fontified t) 5 7 (fontified t) 7 16 (face font-lock-type-face fontified t) 16 17 (face font-lock-type-face c-type c-decl-id-start fontified t) 17 18 (fontified t) 18 33 (face font-lock-variable-name-face fontified t) 33 36 (fontified t) 36 39 (face font-lock-keyword-face fontified t) 39 40 (fontified t) 40 50 (face font-lock-type-face fontified t) 50 69 (fontified t) 69 82 (face font-lock-type-face fontified t) 82 83 (face font-lock-type-face c-type c-decl-id-start fontified t) 83 84 (fontified t) 84 92 (face font-lock-variable-name-face fontified t) 92 95 (fontified t) 95 98 (face font-lock-keyword-face fontified t) 98 99 (fontified t) 99 113 (face font-lock-type-face fontified t) 113 207 (fontified t) 207 239 (face font-lock-string-face fontified t) 239 240 (fontified t) 240 241 (rear-nonsticky t fontified t) 241 242 (fontified t) 242 246 (fontified t) 246 247 (fontified t) 247 251 (fontified t) 251 252 (fontified t) 252 256 (fontified t) 256 262 (face font-lock-keyword-face fontified t) 262 263 (fontified t) 263 269 (face font-lock-keyword-face fontified t) 269 270 (fontified t) 270 275 (face font-lock-type-face fontified t) 275 276 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 276 282 (face font-lock-type-face fontified t) 282 283 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 283 284 (fontified t) 284 291 (face font-lock-function-name-face fontified t) 291 292 (c-type c-decl-arg-start fontified t) 292 297 (face font-lock-type-face fontified t) 297 298 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 298 299 (face font-lock-type-face fontified t) 299 304 (face font-lock-type-face fontified t) 304 305 (fontified t category c->-as-paren-syntax) 305 306 (fontified t) 306 307 (face font-lock-variable-name-face fontified t) 307 310 (fontified t) 310 311 (fontified t) 311 317 (face font-lock-keyword-face fontified t) 317 330 (fontified t) 330 331 (fontified t) 331 332 (fontified t) 332 333 (fontified t) 333 334 (fontified t) 334 343 (fontified t) 343 348 (face font-lock-type-face fontified t) 348 349 (face font-lock-type-face c-type c-decl-id-start fontified t) 349 350 (fontified t) 350 359 (face font-lock-variable-name-face fontified t) 359 389 (fontified t) 389 392 (face font-lock-string-face fontified t) 392 393 (fontified t) 393 395 (face font-lock-string-face fontified t) 395 400 (fontified t) 400 405 (face font-lock-type-face fontified t) 405 406 (face font-lock-type-face c-type c-decl-id-start fontified t) 406 407 (fontified t) 407 414 (face font-lock-variable-name-face fontified t) 414 437 (fontified t) 437 438 (fontified t) 438 447 (fontified t) 447 448 (fontified t) 448 449 (fontified t) 449 459 (face font-lock-constant-face fontified t) 459 460 (fontified t) 460 464 (face font-lock-constant-face fontified t) 464 465 (fontified t) 465 468 (fontified t) 468 481 (fontified t) 481 489 (face font-lock-string-face fontified t) 489 491 (fontified t) 491 493 (face font-lock-string-face fontified t) 493 498 (fontified t) 498 503 (face font-lock-type-face fontified t) 503 504 (face font-lock-type-face c-type c-decl-id-start fontified t) 504 505 (fontified t) 505 508 (face font-lock-variable-name-face fontified t) 508 514 (face font-lock-variable-name-face fontified t) 514 516 (fontified t) 516 544 (fontified t) 544 547 (face font-lock-string-face fontified t) 547 548 (fontified t) 548 550 (face font-lock-string-face fontified t) 550 555 (fontified t) 555 560 (face font-lock-type-face fontified t) 560 561 (face font-lock-type-face c-type c-decl-id-start fontified t) 561 562 (fontified t) 562 569 (face font-lock-variable-name-face fontified t) 569 592 (fontified t) 592 593 (fontified t) 593 602 (fontified t) 602 603 (fontified t) 603 604 (fontified t) 604 614 (face font-lock-constant-face fontified t) 614 615 (fontified t) 615 619 (face font-lock-constant-face fontified t) 619 620 (fontified t) 620 623 (fontified t) 623 636 (fontified t) 636 644 (face font-lock-string-face fontified t) 644 646 (fontified t) 646 648 (face font-lock-string-face fontified t) 648 656 (fontified t) 656 662 (face font-lock-keyword-face fontified t) 662 680 (fontified t) 680 681 (fontified t) 681 688 (fontified t) 688 704 (fontified t) 704 707 (fontified t)) . 1835) (undo-tree-id256 . -707) (undo-tree-id257 . -5) (undo-tree-id258 . -5) (undo-tree-id259 . -251)) ((1835 . 2542)) (26110 16373 940443 729000) 0 nil])
([nil nil ((1839 . 1840)) nil (26110 16597 891749 575000) 0 nil])
([nil nil ((1835 . 1837)) ((#("
	" 0 1 (fontified t) 1 2 (fontified t)) . 1835)) (26110 16373 730846 289000) 0 nil])
([nil nil ((1837 . 1841) (#("    " 0 4 (fontified nil)) . 1836) (undo-tree-id344 . -4) (1836 . 1841) (#("    " 0 4 (fontified nil)) . 1835) (undo-tree-id345 . -4) (1839 . 1840)) nil (26110 16597 891748 643000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2654 . 2655) (nil fontified nil 1835 . 2655) (1835 . 2655)) ((#(" try {
                    FileWriter escritorArchivo = new FileWriter(nombreArchivo);
                    BufferedWriter escritor = new BufferedWriter(escritorArchivo);
                    escritor.write(ord.toString());
                    escritor.newLine(); // Agregar una lรญnea en blanco para separar la lista ordenada de la reversa
                    escritor.write(ord.reversa().toString());
                    escritor.close();
                    System.out.println(\"Archivo guardado correctamente\");
                } catch (IOException e) {
                    System.out.println(\"\\nAlgo saliรณ mal al guardar la reversa en el archivo: \\n\");
                    e.printStackTrace(); }     
     }
     
 } catch(IOException e) {
     System.out.println(\"\\nAlgo saliรณ mal: \\n\");
     e.printStackTrace();
 }  " 0 1 (fontified nil) 1 4 (face font-lock-keyword-face fontified nil) 4 7 (fontified nil) 7 27 (fontified nil) 27 36 (face font-lock-type-face fontified nil) 36 37 (face font-lock-type-face c-type c-decl-id-start fontified nil) 37 38 (fontified nil) 38 53 (face font-lock-variable-name-face fontified nil) 53 56 (fontified nil) 56 59 (face font-lock-keyword-face fontified nil) 59 60 (fontified nil) 60 70 (face font-lock-type-face fontified nil) 70 87 (fontified nil) 87 107 (fontified nil) 107 120 (face font-lock-type-face fontified nil) 120 121 (face font-lock-type-face c-type c-decl-id-start fontified nil) 121 122 (fontified nil) 122 130 (face font-lock-variable-name-face fontified nil) 130 133 (fontified nil) 133 136 (face font-lock-keyword-face fontified nil) 136 137 (fontified nil) 137 151 (face font-lock-type-face fontified nil) 151 170 (fontified nil) 170 182 (fontified nil) 182 190 (fontified nil) 190 222 (fontified nil) 222 242 (fontified nil) 242 261 (fontified nil) 261 262 (fontified nil c-is-sws t c-in-sws t) 262 263 (face font-lock-comment-delimiter-face fontified nil c-is-sws t c-in-sws t) 263 264 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 264 265 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 265 337 (face font-lock-comment-face fontified nil c-in-sws t) 337 338 (face font-lock-comment-face c-in-sws t fontified nil) 338 339 (c-is-sws t fontified nil) 339 358 (c-is-sws t fontified nil) 358 359 (fontified nil c-is-sws t) 359 400 (fontified nil) 400 420 (fontified nil) 420 438 (fontified nil) 438 458 (fontified nil) 458 477 (fontified nil) 477 509 (face font-lock-string-face fontified nil) 509 512 (fontified nil) 512 528 (fontified nil) 528 530 (fontified nil) 530 535 (face font-lock-keyword-face fontified nil) 535 554 (fontified nil) 554 574 (fontified nil) 574 593 (fontified nil) 593 651 (face font-lock-string-face fontified nil) 651 654 (fontified nil) 654 674 (fontified nil) 674 702 (fontified nil) 702 707 (fontified nil) 707 709 (fontified nil) 709 714 (fontified nil) 714 715 (fontified nil) 715 716 (fontified nil) 716 718 (fontified nil) 718 723 (face font-lock-keyword-face fontified nil) 723 741 (fontified nil) 741 746 (fontified nil) 746 765 (fontified nil) 765 787 (face font-lock-string-face fontified nil) 787 790 (fontified nil) 790 795 (fontified nil) 795 816 (fontified nil) 816 817 (fontified nil) 817 819 (fontified nil) 819 820 (fontified nil rear-nonsticky nil)) . 1835) (undo-tree-id279 . -4) (undo-tree-id280 . -221) (undo-tree-id281 . -709) (undo-tree-id282 . -337) (undo-tree-id283 . -170) (undo-tree-id284 . -182) (undo-tree-id285 . -99) (undo-tree-id286 . -18) (undo-tree-id287 . -4) (nil rear-nonsticky t 2654 . 2655)) (26110 16373 529063 992000) 0 nil])
([nil nil ((1835 . 1836)) nil (26110 16597 891746 539000) 0 nil])
([nil nil ((1835 . 1836) (#(" " 0 1 (fontified t)) . 1835) 1839) ((1835 . 1836) (#("	" 0 1 (fontified t)) . 1835)) (26110 16373 350747 193000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2655 . 2656) (nil fontified nil 1836 . 2656) (1836 . 2656)) nil (26110 16597 891745 757000) 0 nil])
([nil nil ((1842 . 1847) (#("                    " 0 20 (fontified t)) . 1842) (undo-tree-id255 . -11) 1853) ((1842 . 1862) (#("	    " 0 5 (fontified t)) . 1842)) (26110 16372 998907 138000) 0 nil])
([nil nil ((#("   }
     
 } catch(IOException e) {
     System.out.println(\"\\nAlgo saliรณ mal: \\n\");
     e.printStackTrace();
 }  " 0 14 (fontified t) 14 19 (face font-lock-keyword-face fontified t) 19 61 (fontified t) 61 83 (face font-lock-string-face fontified t) 83 115 (fontified t) 115 116 (rear-nonsticky t fontified t)) . 2540) (undo-tree-id343 . -116)) nil (26110 16597 891744 765000) 0 nil])
([nil nil ((1907 . 1912) (#("                    " 0 20 (fontified t)) . 1907) (undo-tree-id254 . -12) 1919) ((1907 . 1927) (#("	    " 0 5 (fontified t)) . 1907)) (26110 16372 813181 119000) 0 nil])
([nil nil ((1835 . 1836) (#("	 " 0 1 (fontified t) 1 2 (fontified t)) . 1835) (undo-tree-id342 . -1) 1842) nil (26110 16597 891743 592000) 0 nil])
([nil nil ((1975 . 1980) (#("                    " 0 20 (fontified t)) . 1975) (undo-tree-id253 . -12) 1987) ((1975 . 1995) ("	    " . 1975)) (26110 16372 648778 457000) 0 nil])
([nil nil ((1842 . 1847) (#("                    " 0 20 (fontified t)) . 1842) (undo-tree-id341 . -13) 1855) nil (26110 16597 891742 169000) 0 nil])
([nil nil ((2012 . 2017) (#("                    " 0 20 (fontified t)) . 2012) (undo-tree-id252 . -12) 2024) ((2012 . 2032) (#("	    " 0 5 (fontified t)) . 2012)) (26110 16372 468951 182000) 0 nil])
([nil nil ((1907 . 1912) (#("                    " 0 20 (fontified t)) . 1907) (undo-tree-id340 . -12) 1919) nil (26110 16597 891740 746000) 0 nil])
([nil nil ((2113 . 2118) (#("                    " 0 20 (c-in-sws t c-is-sws t fontified t)) . 2113) (undo-tree-id251 . -12) 2125) ((2113 . 2133) (#("	    " 0 1 (fontified t c-in-sws t c-is-sws t) 1 5 (fontified t c-in-sws t c-is-sws t)) . 2113)) (26110 16372 306762 627000) 0 nil])
([nil nil ((1975 . 1980) (#("                    " 0 20 (fontified t)) . 1975) (undo-tree-id339 . -12) 1987) nil (26110 16597 891739 333000) 0 nil])
([nil nil ((2272 . 2273) (#("                " 0 16 (fontified t)) . 2272) 2292) ((2272 . 2288) (#("	" 0 1 (fontified t)) . 2272)) (26110 16372 137100 229000) 0 nil])
([nil nil ((2012 . 2017) (#("                    " 0 20 (fontified t)) . 2012) (undo-tree-id338 . -12) 2024) nil (26110 16597 891737 719000) 0 nil])
([nil nil ((2299 . 2304) (#("                    " 0 20 (fontified t)) . 2299) (undo-tree-id250 . -12) 2311) ((2299 . 2319) (#("	    " 0 5 (fontified t)) . 2299)) (26110 16371 972903 804000) 0 nil])
([nil nil ((2113 . 2118) (#("                    " 0 20 (c-in-sws t c-is-sws t fontified t)) . 2113) (undo-tree-id337 . -12) 2125) nil (26110 16597 891735 704000) 0 nil])
([nil nil ((2160 . 2165) (#("                    " 0 20 (fontified t)) . -2160) (undo-tree-id249 . -20) 2180) ((2160 . 2180) (#("	    " 0 5 (fontified t)) . 2160)) (26110 16371 807208 145000) 0 nil])
([nil nil ((2160 . 2165) (#("                    " 0 20 (fontified t)) . 2160) (undo-tree-id336 . -12) 2172) nil (26110 16597 891734 61000) 0 nil])
([nil nil ((2183 . 2188) (#("                    " 0 20 (fontified t)) . 2183) (undo-tree-id248 . -12) 2195) ((2183 . 2203) (#("	    " 0 5 (fontified t)) . 2183)) (26110 16371 630994 776000) 0 nil])
([nil nil ((2257 . 2258) (#("                " 0 16 (fontified t)) . 2257) (undo-tree-id335 . -12) 2269) nil (26110 16597 891732 598000) 0 nil])
([nil nil ((2354 . 2359) (#("                    " 0 20 (fontified t)) . 2354) (undo-tree-id247 . -12) 2366) ((2354 . 2374) (#("	    " 0 5 (fontified t)) . 2354)) (26110 16371 463060 453000) 0 nil])
([nil nil ((2284 . 2289) (#("                    " 0 20 (fontified t)) . 2284) (undo-tree-id334 . -8) 2292) nil (26110 16597 891731 174000) 0 nil])
([nil nil ((2387 . 2391) (#("     " 0 5 (fontified t)) . 2387) 2393) ((2387 . 2392) (#("    " 0 4 (fontified t)) . 2387)) (26110 16371 295014 9000) 0 nil])
([nil nil ((2369 . 2374) (#("                    " 0 20 (fontified t)) . 2369) (undo-tree-id333 . -12) 2381) nil (26110 16597 891729 781000) 0 nil])
([nil nil ((2393 . 2397) (#("     " 0 5 (fontified t)) . -2393) (undo-tree-id246 . -5) 2398) ((2393 . 2398) (#("    " 0 4 (fontified t)) . 2393) (undo-tree-id278 . -4)) (26110 16371 120677 494000) 0 nil])
([nil nil ((2402 . 2403) (#("  " 0 2 (fontified t)) . -2402) (undo-tree-id331 . -2) (undo-tree-id332 . -2) 2404) nil (26110 16597 891728 308000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2398) 2402) ((2398 . 2399)) (26110 16370 960319 228000) 0 nil])
([nil nil ((2411 . 2415) (#(" " 0 1 (fontified t)) . -2411) (undo-tree-id329 . -1) (undo-tree-id330 . -1) 2412) nil (26110 16597 891726 314000) 0 nil])
([nil nil ((2423 . 2427) (#("     " 0 5 (fontified t)) . 2423) (undo-tree-id245 . -3) 2426) ((2423 . 2428) (#("    " 0 4 (fontified t)) . 2423)) (26110 16370 778911 436000) 0 nil])
([nil nil ((2395 . 2396) (#(" " 0 1 (fontified nil)) . 2394) (undo-tree-id328 . -1) (2395 . 2396)) nil (26110 16597 891724 219000) 0 nil])
([nil nil ((2471 . 2475) (#("     " 0 5 (fontified t)) . 2471) (undo-tree-id244 . -4) 2475) ((2471 . 2476) (#("    " 0 4 (fontified t)) . 2471)) (26110 16370 594870 167000) 0 nil])
([nil nil ((1804 . 1805)) nil (26110 16597 891722 966000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2496) 2500) ((2496 . 2497)) (26110 16370 406478 492000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -1804) (undo-tree-id327 . -1) 1805) nil (26110 16597 891722 255000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 2502) (undo-tree-id243 . -3) 2505) ((2502 . 2506)) (26110 16370 236170 962000) 0 nil])
([nil nil ((1804 . 1810)) nil (26110 16597 891720 882000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 2505)) ((2505 . 2509)) (26110 16369 194985 171000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -1804) (undo-tree-id321 . -1) (#("O" 0 1 (face font-lock-variable-name-face fontified t)) . -1805) (undo-tree-id322 . -1) (#("M" 0 1 (face font-lock-variable-name-face fontified t)) . -1806) (undo-tree-id323 . -1) (#("B" 0 1 (face font-lock-variable-name-face fontified t)) . -1807) (undo-tree-id324 . -1) (#("=" 0 1 (fontified t)) . -1808) (undo-tree-id325 . -1) (#("=" 0 1 (fontified t)) . -1809) (undo-tree-id326 . -1) 1810) nil (26110 16597 891719 699000) 0 nil])
([nil nil ((2559 . 2563) (#("	" 0 1 (fontified t)) . 2559)) ((2559 . 2560) (#("    " 0 4 (fontified t)) . 2559) (undo-tree-id277 . -4)) (26110 16369 36321 846000) 0 nil])
([nil nil ((1804 . 1810)) nil (26110 16597 891714 648000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 2599)) ((2599 . 2603)) (26110 16368 875267 941000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -1810) (undo-tree-id320 . -1) 1811) nil (26110 16597 891713 886000) 0 nil])
([nil nil ((#("
} catch(IOException e) {
    System.out.println(\"\\nAlgo saliรณ mal: \\n\");
    e.printStackTrace();
}  " 0 1 (fontified t) 1 3 (fontified t) 3 8 (face font-lock-keyword-face fontified t) 8 26 (fontified t) 26 30 (fontified t) 30 49 (fontified t) 49 71 (face font-lock-string-face fontified t) 71 74 (fontified t) 74 78 (fontified t) 78 99 (fontified t) 99 101 (fontified t) 101 102 (fontified t rear-nonsticky t)) . 2397) (undo-tree-id242 . -102)) ((2397 . 2499)) (26110 16368 702354 568000) 0 nil])
([nil nil ((1810 . 1811)) nil (26110 16597 891712 503000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -2400) (undo-tree-id241 . -1) 2401) ((2400 . 2401)) (26110 16368 509090 62000) 0 nil])
([nil nil ((2189 . 2194) (#("                    " 0 20 (fontified t)) . 2189) (undo-tree-id319 . -12) 2201) nil (26110 16597 891711 841000) 0 nil])
([nil nil ((2402 . 2406)) ((#("    " 0 4 (fontified t)) . 2402)) (26110 16368 323335 358000) 0 nil])
([nil nil ((#("	    escritor.write(ord.toString());
	    escritor.newLine(); // Agregar una lรญnea en blanco para separar la lista ordenada de la reversa
	    escritor.write(ord.reversa().toString());
	    escritor.close();
	    System.out.println(\"Archivo guardado correctamente\");" 0 5 (fontified t) 5 37 (fontified t) 37 42 (fontified t) 42 61 (fontified t) 61 62 (fontified t c-is-sws t c-in-sws t) 62 63 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 63 65 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 65 137 (face font-lock-comment-face fontified t c-in-sws t) 137 138 (face font-lock-comment-face fontified t c-in-sws t) 138 139 (fontified t c-is-sws t) 139 143 (fontified t c-is-sws t) 143 144 (fontified t c-is-sws t) 144 185 (fontified t) 185 190 (fontified t) 190 208 (fontified t) 208 213 (fontified t) 213 232 (fontified t) 232 264 (face font-lock-string-face fontified t) 264 266 (fontified t)) . 1981) (undo-tree-id316 . -266) (undo-tree-id317 . -212) (undo-tree-id318 . -212)) nil (26110 16597 891709 947000) 0 nil])
([nil nil ((2460 . 2461) (#("    " 0 4 (fontified t)) . -2460) (undo-tree-id240 . -4) 2464) ((2460 . 2464) (#("	" 0 1 (fontified t)) . 2460)) (26110 16368 134751 372000) 0 nil])
([nil nil ((1981 . 1986)) nil (26110 16597 891681 424000) 0 nil])
([nil nil ((2497 . 2501)) ((#("    " 0 4 (fontified t)) . 2497)) (26110 16367 994427 50000) 0 nil])
([nil nil ((1986 . 1989)) nil (26110 16597 891680 893000) 0 nil])
([nil nil ((2497 . 2501) (#("    " 0 4 (fontified t)) . 2497)) ((2497 . 2501) (#("    " 0 4 (fontified t)) . 2497)) (26110 16367 786718 424000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t)) . -1986) (undo-tree-id313 . -1) (#("O" 0 1 (fontified t)) . -1987) (undo-tree-id314 . -1) (#("R" 0 1 (fontified t)) . -1988) (undo-tree-id315 . -1) 1989) nil (26110 16597 891680 61000) 0 nil])
([nil nil ((2496 . 2500)) ((#("    " 0 4 (fontified t)) . 2496)) (26110 16367 618780 843000) 0 nil])
([nil nil ((1986 . 1989)) nil (26110 16597 891677 175000) 0 nil])
([nil nil ((2401 . 2405)) ((#("    " 0 4 (fontified t)) . 2401)) (26110 16367 448313 683000) 0 nil])
([nil nil ((1989 . 1991)) nil (26110 16597 891676 463000) 0 nil])
([nil nil ((2400 . 2404)) ((#("    " 0 4 (fontified t)) . 2400)) (26110 16367 265544 113000) 0 nil])
([nil nil ((1990 . 1997)) nil (26110 16597 891675 862000) 0 nil])
([nil nil ((2398 . 2402) (#("	" 0 1 (fontified t)) . 2398)) ((2398 . 2399) (#("    " 0 4 (fontified t)) . 2398)) (26110 16367 96900 398000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1995) (undo-tree-id311 . -1) (#(" " 0 1 (fontified t)) . -1996) (undo-tree-id312 . -1) 1997) nil (26110 16597 891675 60000) 0 nil])
([nil nil ((1804 . 1810)) ((#("nombre" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (face font-lock-variable-name-face fontified t)) . 1804) (undo-tree-id276 . -6)) (26110 16366 914432 3000) 0 nil])
([nil nil ((1995 . 1999)) nil (26110 16597 891673 246000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -1810) (undo-tree-id239 . -1) 1811) ((1810 . 1811)) (26110 16366 616382 647000) 0 nil])
([nil nil ((1999 . 2000)) nil (26110 16597 891672 755000) 0 nil])
([nil nil ((1810 . 1811)) ((#("A" 0 1 (face font-lock-variable-name-face fontified t)) . 1810)) (26110 16366 615350 860000) 0 nil] [nil nil ((1810 . 1811)) ((#("A" 0 1 (face font-lock-variable-name-face fontified t)) . 1810)) (26110 16290 387600 442000) 0 nil])
([nil nil ((2000 . 2006)) nil (26110 16597 891672 163000) 0 nil])
nil
([nil nil ((#("Agregar una lรญnea en blanco para separar la lista ordenada de la reversa" 0 72 (face font-lock-comment-face fontified t c-in-sws t)) . 2046) (undo-tree-id238 . -72)) ((2046 . 2118)) (26110 16290 177662 603000) 0 nil])
([nil nil ((2007 . 2010)) nil (26110 16597 891671 662000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t c-is-sws t c-in-sws t)) . -2043) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -2044) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -2045) (undo-tree-id236 . -1) (undo-tree-id237 . -1) 2046) ((2043 . 2046)) (26110 16290 176336 122000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2042 . 2043) (nil fontified nil 2010 . 2043) (2010 . 2043)) nil (26110 16597 891670 951000) 0 nil])
nil
([nil nil ((2043 . 2049)) nil (26110 16597 891670 179000) 0 nil])
([nil nil ((#("ord.toString()" 0 14 (fontified t)) . 2027) (undo-tree-id310 . -14)) nil (26110 16597 891669 467000) 0 nil])
([nil nil ((2027 . 2032)) nil (26110 16597 891668 144000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2028) (undo-tree-id306 . -1) (#("n" 0 1 (fontified t)) . -2029) (undo-tree-id307 . -1) (#("e" 0 1 (fontified t)) . -2030) (undo-tree-id308 . -1) (#("a" 0 1 (fontified t)) . -2031) (undo-tree-id309 . -1) 2032) nil (26110 16597 891667 72000) 0 nil])
([nil nil ((2028 . 2029)) nil (26110 16597 891664 35000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -2027) (undo-tree-id304 . -1) (#("s" 0 1 (fontified t)) . -2028) (undo-tree-id305 . -1) 2029) nil (26110 16597 891663 73000) 0 nil])
([nil nil ((2027 . 2031)) nil (26110 16597 891660 177000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2028) (undo-tree-id301 . -1) (#("+" 0 1 (fontified t)) . -2029) (undo-tree-id302 . -1) (#(" " 0 1 (fontified t)) . -2030) (undo-tree-id303 . -1) 2031) nil (26110 16597 891659 215000) 0 nil])
([nil nil ((2030 . 2036)) nil (26110 16597 891656 469000) 0 nil])
([nil nil ((2007 . 2008)) nil (26110 16597 891655 817000) 0 nil])
([nil nil ((2032 . 2036) (#("	    " 0 5 (fontified nil)) . 2032) (undo-tree-id300 . -5) (2037 . 2038)) nil (26110 16597 891655 106000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -2036) (undo-tree-id298 . -1) (undo-tree-id299 . -1) 2037) nil (26110 16597 891653 382000) 0 nil])
([nil nil ((2032 . 2037) (#("		  " 0 4 (fontified nil)) . 2032) (undo-tree-id296 . -4) (undo-tree-id297 . -4) (2036 . 2037)) nil (26110 16597 891650 956000) 0 nil])
([nil nil ((2031 . 2036)) nil (26110 16597 891648 982000) 0 nil])
([nil nil ((2009 . 2011) (#("		  " 0 2 (fontified t) 2 4 (fontified t)) . -2009) (undo-tree-id294 . -4) (undo-tree-id295 . -2) 2013) nil (26110 16597 891648 150000) 0 nil])
([nil nil ((2032 . 2044)) nil (26110 16597 891645 875000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2042) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#("e" 0 1 (fontified t)) . -2043) (undo-tree-id292 . -1) (undo-tree-id293 . -1) 2044) nil (26110 16597 891643 981000) 0 nil])
([nil nil ((2042 . 2048)) nil (26110 16597 891631 273000) 0 nil])
([nil nil ((2048 . 2050)) nil (26110 16597 891629 920000) 0 nil])
([nil nil ((2050 . 2051)) nil (26110 16597 891626 211000) 0 nil])
([nil nil ((#(" la reversa en" 0 14 (face font-lock-string-face fontified t)) . -2146) (undo-tree-id347 . -14) 2160 (t 26110 16597 901934 205000)) nil (26110 16613 378954 502000) 0 nil])
([nil nil ((874 . 881) (t 26110 16613 391191 672000)) nil (26110 16943 377875 527000) 0 nil])
([nil nil ((881 . 884)) nil (26110 16943 377874 665000) 0 nil])
([nil nil ((884 . 885)) nil (26110 16943 377873 844000) 0 nil])
([nil nil ((#("i++;" 0 4 (fontified t)) . 842) (undo-tree-id397 . -4) (undo-tree-id398 . -3) (undo-tree-id399 . -2) (undo-tree-id400 . -1) (undo-tree-id401 . -2) (undo-tree-id402 . -3) (undo-tree-id403 . -4) (undo-tree-id404 . -3) (undo-tree-id405 . -3) (undo-tree-id406 . -2) (undo-tree-id407 . -1)) nil (26110 16943 377872 180000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -840) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (#(" " 0 1 (fontified t)) . -841) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) 842) nil (26110 16943 378356 81000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -839) (undo-tree-id410 . -1) (undo-tree-id411 . -1) 840) nil (26110 16948 404449 261000) 0 nil] [nil nil ((#("length) {
		  " 0 10 (fontified t) 10 14 (fontified t)) . -826) (undo-tree-id348 . -14) (undo-tree-id349 . -14) (undo-tree-id350 . -14) (undo-tree-id351 . -14) (undo-tree-id352 . -14) (undo-tree-id353 . -14) (undo-tree-id354 . -14) (undo-tree-id355 . -14) (undo-tree-id356 . -14) (undo-tree-id357 . -14) (undo-tree-id358 . -14) (undo-tree-id359 . -14) (undo-tree-id360 . -14) (undo-tree-id361 . -14) (undo-tree-id362 . -14) (undo-tree-id363 . -14) (undo-tree-id364 . -10) (undo-tree-id365 . -14) 840) ((826 . 840)) (26110 16943 377842 973000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 839)) nil (26110 16948 404446 25000) 0 nil])
nil
([nil nil ((836 . 842) (#("		 		    " 0 3 (fontified t) 3 9 (fontified t)) . 836) (undo-tree-id408 . -3) (undo-tree-id409 . -3) 839) nil (26110 16948 404442 317000) 0 nil])
([nil nil ((1775 . 1782) (t 26110 16948 414422 878000)) nil (26110 16999 215030 448000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1781) (undo-tree-id412 . -1) (undo-tree-id413 . -1) 1782) nil (26110 16999 215027 974000) 0 nil])
([nil nil ((1781 . 1782)) nil (26110 16999 215016 121000) 0 nil])
([nil nil ((2208 . 2209) (t 26110 16999 228629 369000)) nil (26110 17037 337638 50000) 0 nil])
([nil nil ((2209 . 2213)) nil (26110 17037 337637 218000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2212) (undo-tree-id416 . -1) 2213) nil (26110 17037 337636 427000) 0 nil])
([nil nil ((2212 . 2220)) nil (26110 17037 337634 934000) 0 nil])
([nil nil ((2212 . 2214)) nil (26110 17037 337634 112000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -2212) (undo-tree-id414 . -1) (#("r" 0 1 (fontified t)) . -2213) (undo-tree-id415 . -1) 2214) nil (26110 17037 337632 98000) 0 nil])
([nil nil ((2211 . 2212)) nil (26110 17037 337621 828000) 0 nil])
([nil nil ((2221 . 2222)) nil (26110 17037 337618 241000) 0 nil])
([nil nil ((2069 . 2074) (#("	    " 0 5 (fontified nil)) . 2068) (undo-tree-id420 . -5) (2073 . 2074) (t 26110 17037 348121 831000)) nil (26110 17209 913496 461000) 0 nil])
([nil nil ((2074 . 2077)) nil (26110 17209 913494 777000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -2075) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (#("a" 0 1 (fontified t)) . -2076) (undo-tree-id419 . -1) 2077) nil (26110 17209 913492 954000) 0 nil])
([nil nil ((2075 . 2088)) nil (26110 17209 913482 253000) 0 nil])
([nil nil ((2088 . 2090)) nil (26110 17209 913480 870000) 0 nil])
([nil nil ((2090 . 2091)) nil (26110 17209 913477 484000) 0 nil])
([nil nil ((#("try {
	    FileWriter escritorArchivo = new FileWriter(nombreArchivo);
	    BufferedWriter escritor = new BufferedWriter(escritorArchivo);
	    for(String s : lista){
		escritor.write(s);
		escritor.newLine();  
	    }

	    escritor.close();
	} catch (IOException e) {
	    System.out.println(\"\\nAlgo saliรณ mal al guardar el archivo: \\n\");
	    e.printStackTrace();
	}     
	
	return lista;" 0 3 (face font-lock-keyword-face fontified t) 3 6 (fontified t) 6 11 (fontified t) 11 20 (face font-lock-type-face fontified t) 20 21 (face font-lock-type-face c-type c-decl-id-start fontified t) 21 22 (fontified t) 22 37 (face font-lock-variable-name-face fontified t) 37 40 (fontified t) 40 43 (face font-lock-keyword-face fontified t) 43 44 (fontified t) 44 54 (face font-lock-type-face fontified t) 54 71 (fontified t) 71 76 (fontified t) 76 89 (face font-lock-type-face fontified t) 89 90 (face font-lock-type-face c-type c-decl-id-start fontified t) 90 91 (fontified t) 91 99 (face font-lock-variable-name-face fontified t) 99 102 (fontified t) 102 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t) 106 120 (face font-lock-type-face fontified t) 120 139 (fontified t) 139 144 (fontified t) 144 145 (face font-lock-keyword-face fontified t) 145 146 (face font-lock-keyword-face fontified t) 146 147 (face font-lock-keyword-face fontified t) 147 148 (fontified t) 148 149 (face font-lock-type-face fontified t) 149 150 (face font-lock-type-face fontified t) 150 151 (face font-lock-type-face fontified t) 151 152 (face font-lock-type-face fontified t) 152 153 (face font-lock-type-face fontified t) 153 154 (face font-lock-type-face c-type c-decl-id-start fontified t) 154 155 (fontified t) 155 156 (face font-lock-variable-name-face fontified t) 156 157 (fontified t) 157 158 (fontified t) 158 159 (fontified t) 159 160 (fontified t) 160 161 (fontified t) 161 162 (fontified t) 162 163 (fontified t) 163 164 (fontified t) 164 165 (fontified t) 165 166 (fontified t) 166 167 (fontified t) 167 169 (fontified t) 169 184 (fontified t) 184 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t rear-nonsticky t) 187 188 (fontified t) 188 190 (fontified t) 190 191 (fontified t) 191 192 (fontified t) 192 193 (fontified t) 193 194 (fontified t) 194 195 (fontified t) 195 196 (fontified t) 196 197 (fontified t) 197 198 (fontified t) 198 199 (fontified t) 199 200 (fontified t) 200 201 (fontified t) 201 202 (fontified t) 202 203 (fontified t) 203 204 (fontified t) 204 205 (fontified t) 205 206 (fontified t) 206 207 (fontified t) 207 208 (fontified t) 208 209 (fontified t) 209 211 (fontified t) 211 212 (fontified t) 212 217 (fontified t) 217 218 (fontified t) 218 219 (fontified t) 219 220 (fontified t) 220 225 (fontified t) 225 226 (fontified t) 226 227 (fontified t) 227 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 232 (fontified t) 232 233 (fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 236 (fontified t) 236 237 (fontified t) 237 238 (fontified t) 238 239 (fontified t) 239 240 (fontified t) 240 241 (fontified t) 241 242 (fontified t) 242 243 (fontified t) 243 244 (fontified t) 244 245 (fontified t) 245 246 (fontified t) 246 251 (face font-lock-keyword-face fontified t) 251 253 (fontified t) 253 270 (fontified t) 270 275 (fontified t) 275 294 (fontified t) 294 322 (face font-lock-string-face fontified t) 322 338 (face font-lock-string-face fontified t) 338 341 (fontified t) 341 346 (fontified t) 346 366 (fontified t) 366 368 (fontified t) 368 375 (fontified t) 375 376 (fontified t) 376 377 (fontified t) 377 378 (fontified t) 378 379 (face font-lock-keyword-face fontified t) 379 380 (face font-lock-keyword-face fontified t) 380 381 (face font-lock-keyword-face fontified t) 381 382 (face font-lock-keyword-face fontified t) 382 383 (face font-lock-keyword-face fontified t) 383 384 (face font-lock-keyword-face fontified t) 384 385 (fontified t) 385 386 (fontified t) 386 387 (fontified t) 387 388 (fontified t) 388 389 (fontified t) 389 390 (fontified t) 390 391 (fontified t)) . -1849) (undo-tree-id425 . -391) (undo-tree-id426 . -375) (undo-tree-id427 . -139) (undo-tree-id428 . -139) (undo-tree-id429 . -139) (undo-tree-id430 . -167) (undo-tree-id431 . -184) (undo-tree-id432 . -322) 2240 (t 26110 17209 920636 344000)) nil (26110 17629 147665 226000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2087 . 2088) (nil fontified nil 1849 . 2088) (1849 . 2088)) nil (26110 17629 147658 663000) 0 nil])
([nil nil ((1911 . 1914) (#("  " 0 2 (fontified t)) . -1911) (undo-tree-id424 . -2) 1913) nil (26110 17629 147657 672000) 0 nil])
([nil nil ((1977 . 1980) (#("  " 0 2 (fontified t)) . 1977) 1987) nil (26110 17629 147656 28000) 0 nil])
([nil nil ((2012 . 2015) (#("  " 0 2 (fontified t)) . 2012) 2030) nil (26110 17629 147655 187000) 0 nil])
([nil nil ((2033 . 2036) (#("  " 0 2 (fontified t)) . 2033) 2059) nil (26110 17629 147654 205000) 0 nil])
([nil nil ((2090 . 2093) (#("  " 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t)) . -2090) (undo-tree-id423 . -2) 2092) nil (26110 17629 147652 792000) 0 nil])
([nil nil ((1998 . 2001)) nil (26110 17629 147650 498000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -1999) (undo-tree-id421 . -1) (#("a" 0 1 (fontified t)) . -2000) (undo-tree-id422 . -1) 2001) nil (26110 17629 147648 373000) 0 nil])
([nil nil ((1999 . 2002)) nil (26110 17629 147635 689000) 0 nil])
([nil nil ((#("    public static Lista<String> writer(String nombreArchivo, Lista<String> lista){
	  FileWriter escritorArchivo = new FileWriter(nombreArchivo);
	  BufferedWriter escritor = new BufferedWriter(escritorArchivo);
	  escritor.write(ordenar.toString());
	  escritor.close();
	  System.out.println(\"Archivo guardado correctamente\");
	  
    }
" 0 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 12 (face font-lock-keyword-face fontified t) 12 13 (face font-lock-keyword-face fontified t) 13 14 (face font-lock-keyword-face fontified t) 14 15 (face font-lock-keyword-face fontified t) 15 16 (face font-lock-keyword-face fontified t) 16 17 (face font-lock-keyword-face fontified t) 17 18 (fontified t) 18 23 (face font-lock-type-face fontified t) 23 24 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 24 30 (face font-lock-type-face fontified t) 30 31 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 31 32 (fontified t) 32 33 (face font-lock-function-name-face fontified t) 33 34 (face font-lock-function-name-face fontified t) 34 35 (face font-lock-function-name-face fontified t) 35 36 (face font-lock-function-name-face fontified t) 36 37 (face font-lock-function-name-face fontified t) 37 38 (face font-lock-function-name-face fontified t) 38 39 (c-type c-decl-arg-start fontified t) 39 45 (face font-lock-type-face fontified t) 45 46 (fontified t) 46 47 (face font-lock-variable-name-face fontified t) 47 48 (face font-lock-variable-name-face fontified t) 48 49 (face font-lock-variable-name-face fontified t) 49 50 (face font-lock-variable-name-face fontified t) 50 51 (face font-lock-variable-name-face fontified t) 51 52 (face font-lock-variable-name-face fontified t) 52 53 (face font-lock-variable-name-face fontified t) 53 59 (face font-lock-variable-name-face fontified t) 59 60 (c-type c-decl-arg-start fontified t) 60 61 (fontified t) 61 62 (face font-lock-type-face fontified t) 62 63 (face font-lock-type-face fontified t) 63 64 (face font-lock-type-face fontified t) 64 65 (face font-lock-type-face fontified t) 65 66 (face font-lock-type-face fontified t) 66 67 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 67 68 (face font-lock-type-face fontified t) 68 69 (face font-lock-type-face fontified t) 69 70 (face font-lock-type-face fontified t) 70 71 (face font-lock-type-face fontified t) 71 72 (face font-lock-type-face fontified t) 72 73 (face font-lock-type-face fontified t) 73 74 (fontified t category c->-as-paren-syntax) 74 75 (fontified t) 75 76 (face font-lock-variable-name-face fontified t) 76 77 (face font-lock-variable-name-face fontified t) 77 78 (face font-lock-variable-name-face fontified t) 78 79 (face font-lock-variable-name-face fontified t) 79 80 (face font-lock-variable-name-face fontified t) 80 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 86 (fontified t) 86 95 (face font-lock-type-face fontified t) 95 96 (face font-lock-type-face c-type c-decl-id-start fontified t) 96 97 (fontified t) 97 112 (face font-lock-variable-name-face fontified t) 112 115 (fontified t) 115 118 (face font-lock-keyword-face fontified t) 118 119 (fontified t) 119 129 (face font-lock-type-face fontified t) 129 146 (fontified t) 146 149 (fontified t) 149 162 (face font-lock-type-face fontified t) 162 163 (face font-lock-type-face c-type c-decl-id-start fontified t) 163 164 (fontified t) 164 172 (face font-lock-variable-name-face fontified t) 172 175 (fontified t) 175 178 (face font-lock-keyword-face fontified t) 178 179 (fontified t) 179 193 (face font-lock-type-face fontified t) 193 212 (fontified t) 212 215 (fontified t) 215 233 (fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 236 (fontified t) 236 237 (fontified t) 237 249 (fontified t) 249 251 (fontified t) 251 254 (fontified t) 254 272 (fontified t) 272 275 (fontified t) 275 294 (fontified t) 294 326 (face font-lock-string-face fontified t) 326 329 (fontified t) 329 332 (fontified t) 332 333 (fontified t) 333 337 (fontified t) 337 338 (fontified t) 338 339 (fontified t)) . 1765) (undo-tree-id463 . -339) (undo-tree-id464 . -83) (undo-tree-id465 . -84) (undo-tree-id466 . -84) (undo-tree-id467 . -84) (undo-tree-id468 . -84) (undo-tree-id469 . -84) (undo-tree-id470 . -84) (undo-tree-id471 . -84) (undo-tree-id472 . -333) (undo-tree-id473 . -84) (undo-tree-id474 . -84) (undo-tree-id475 . -338) (t 26110 17629 153413 890000)) nil (26110 17802 473572 336000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2299 . 2300) (nil fontified nil 1826 . 2300) (nil fontified nil 1825 . 1826) (nil category c->-as-paren-syntax 1825 . 1826) (nil fontified nil 1819 . 1825) (nil fontified nil 1818 . 1819) (nil category c-<-as-paren-syntax 1818 . 1819) (nil fontified nil 1765 . 1818) (1765 . 2300)) nil (26110 17802 473564 473000) 0 nil])
([nil nil ((2300 . 2304) (#("    " 0 4 (fontified t)) . 2300)) nil (26110 17802 473562 810000) 0 nil])
([nil nil ((1765 . 1769)) nil (26110 17802 473562 88000) 0 nil])
([nil nil ((1840 . 1841) (#("    " 0 4 (fontified t)) . -1840) (undo-tree-id462 . -4) 1844) nil (26110 17802 473561 317000) 0 nil])
([nil nil ((1925 . 1930) (#("        " 0 8 (fontified t)) . -1925) (undo-tree-id461 . -8) 1933) nil (26110 17802 473559 824000) 0 nil])
([nil nil ((1962 . 1964) (#("            " 0 12 (fontified t)) . -1962) (undo-tree-id460 . -12) 1974) nil (26110 17802 473558 121000) 0 nil])
([nil nil ((1990 . 1992) (#("            " 0 12 (fontified t)) . 1990) 2006) nil (26110 17802 473556 278000) 0 nil])
([nil nil ((2065 . 2070) (#("        " 0 1 (c-is-sws t fontified t) 1 8 (c-is-sws t fontified t)) . 2065) 2074) nil (26110 17802 473555 327000) 0 nil])
([nil nil ((2072 . 2077) (#("        " 0 8 (fontified t)) . 2072) 2085) nil (26110 17802 473554 355000) 0 nil])
([nil nil ((2131 . 2132) (#("    " 0 4 (fontified t)) . 2131) 2148) nil (26110 17802 473553 403000) 0 nil])
([nil nil ((2261 . 2262) (#("    " 0 4 (fontified t)) . 2261) 2266) nil (26110 17802 473552 151000) 0 nil])
([nil nil ((2264 . 2268) 2265) nil (26110 17802 473549 877000) 0 nil])
([nil nil ((#("// Agrega un salto de lรญnea despuรฉs de cada elemento" 0 1 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 1 3 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 3 52 (c-in-sws t face font-lock-comment-face fontified t)) . 2012) (undo-tree-id433 . -52) (undo-tree-id434 . -26) (undo-tree-id435 . -25) (undo-tree-id436 . -24) (undo-tree-id437 . -23) (undo-tree-id438 . -22) (undo-tree-id439 . -21) (undo-tree-id440 . -20) (undo-tree-id441 . -19) (undo-tree-id442 . -18) (undo-tree-id443 . -17) (undo-tree-id444 . -16) (undo-tree-id445 . -15) (undo-tree-id446 . -14) (undo-tree-id447 . -13) (undo-tree-id448 . -12) (undo-tree-id449 . -11) (undo-tree-id450 . -10) (undo-tree-id451 . -9) (undo-tree-id452 . -8) (undo-tree-id453 . -7) (undo-tree-id454 . -6) (undo-tree-id455 . -5) (undo-tree-id456 . -4) (undo-tree-id457 . -3) (undo-tree-id458 . -2) (undo-tree-id459 . -1)) nil (26110 17802 473545 419000) 0 nil])
([nil nil ((76 . 77) (t 26110 17802 484191 110000)) nil (26110 18796 76127 370000) 0 nil])
([nil nil ((76 . 83)) nil (26110 18796 76126 609000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -79) (undo-tree-id494 . -1) (#("e" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -80) (undo-tree-id495 . -1) (#("r" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -81) (undo-tree-id496 . -1) (#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -82) (undo-tree-id497 . -1) 83) nil (26110 18796 76125 657000) 0 nil])
([nil nil ((79 . 82)) nil (26110 18796 76122 431000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -79) (undo-tree-id491 . -1) (#("e" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -80) (undo-tree-id492 . -1) (#("r" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -81) (undo-tree-id493 . -1) 82) nil (26110 18796 76121 269000) 0 nil])
([nil nil ((79 . 95)) nil (26110 18796 76118 494000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face fontified t)) . -94) (undo-tree-id490 . -1) 95) nil (26110 18796 76117 802000) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-type-face fontified t)) . -92) (undo-tree-id488 . -1) (#("l" 0 1 (face font-lock-type-face fontified t)) . -93) (undo-tree-id489 . -1) 94) nil (26110 18796 76116 89000) 0 nil])
([nil nil ((92 . 95)) nil (26110 20479 12164 429000) 0 nil])
([nil nil ((95 . 96)) nil (26110 20496 757242 402000) 0 nil] [nil nil ((95 . 96)) ((#(";" 0 1 (fontified t)) . 95)) (26110 20478 522974 606000) 0 nil])
([nil nil ((1940 . 1941)) nil (26110 21406 79532 580000) 0 nil])
([nil nil ((1947 . 1952) (#("	    " 0 5 (fontified nil)) . 1946) (undo-tree-id544 . -5) (1951 . 1952) (t 26110 19136 769246 585000)) ((#("
" 0 1 (fontified nil)) . 1951) (1946 . 1951) (#("	    " 0 5 (fontified t)) . 1947)) (26110 20478 220132 276000) 0 nil] [nil nil ((#("
    public static void writer(String nombreArchivo, Lista<String> lista) {
	try (BufferedWriter escritor = new BufferedWriter(new FileWriter(nombreArchivo))) {
	    for (String elemento : lista) {
		escritor.write(elemento);
		escritor.newLine(); 
	    }
	    System.out.println(\"Archivo guardado correctamente\");
	} catch (IOException e) {
        System.out.println(\"\\nAlgo saliรณ mal al guardar el archivo: \\n\");
        e.printStackTrace();
	}
    }" 0 1 (fontified t) 1 5 (fontified t) 5 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 18 (face font-lock-keyword-face fontified t) 18 19 (fontified t) 19 22 (face font-lock-type-face fontified t) 22 23 (face font-lock-type-face c-type c-decl-id-start fontified t) 23 24 (fontified t) 24 30 (face font-lock-function-name-face fontified t) 30 31 (c-type c-decl-arg-start fontified t) 31 37 (face font-lock-type-face fontified t) 37 38 (fontified t) 38 51 (face font-lock-variable-name-face fontified t) 51 52 (c-type c-decl-arg-start fontified t) 52 53 (fontified t) 53 58 (face font-lock-type-face fontified t) 58 59 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 59 65 (face font-lock-type-face fontified t) 65 66 (fontified t category c->-as-paren-syntax) 66 67 (fontified t) 67 72 (face font-lock-variable-name-face fontified t) 72 76 (fontified t) 76 77 (fontified t) 77 80 (face font-lock-keyword-face fontified t) 80 82 (fontified t) 82 95 (face font-lock-type-face fontified t) 95 96 (face font-lock-type-face c-type c-decl-id-start fontified t) 96 97 (fontified t) 97 105 (face font-lock-variable-name-face fontified t) 105 108 (fontified t) 108 111 (face font-lock-keyword-face fontified t) 111 112 (fontified t) 112 126 (face font-lock-type-face fontified t) 126 127 (fontified t) 127 130 (face font-lock-keyword-face fontified t) 130 131 (fontified t) 131 141 (face font-lock-type-face fontified t) 141 161 (fontified t) 161 166 (fontified t) 166 169 (face font-lock-keyword-face fontified t) 169 171 (fontified t) 171 176 (face font-lock-type-face fontified t) 176 177 (face font-lock-type-face c-type c-decl-id-start fontified t) 177 178 (fontified t) 178 186 (face font-lock-variable-name-face fontified t) 186 198 (fontified t) 198 200 (fontified t) 200 226 (fontified t) 226 228 (fontified t) 228 247 (fontified t) 247 248 (fontified t c-is-sws t c-in-sws t) 248 249 (fontified t) 249 250 (fontified t c-is-sws t) 250 254 (fontified t c-is-sws t) 254 255 (fontified t c-is-sws t) 255 256 (fontified t) 256 261 (fontified t) 261 280 (fontified t) 280 312 (face font-lock-string-face fontified t) 312 315 (fontified t) 315 316 (fontified t) 316 318 (fontified t) 318 323 (face font-lock-keyword-face fontified t) 323 342 (fontified t) 342 369 (fontified t) 369 413 (face font-lock-string-face fontified t) 413 445 (fontified t) 445 446 (fontified t) 446 448 (fontified t) 448 452 (fontified t) 452 453 (fontified t)) . 1785) (undo-tree-id478 . -453) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -248)) ((1785 . 2238)) (26110 19130 56686 916000) 0 nil])
([nil nil ((#("nombreArchivo," 0 13 (fontified t) 13 14 (fontified t)) . -1927) (undo-tree-id658 . -14) (undo-tree-id659 . -14) (undo-tree-id660 . -14) 1941) nil (26110 21417 616257 508000) 0 nil] [nil nil ((1941 . 1947)) ((#(" flase" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 1941) (undo-tree-id644 . -6) (undo-tree-id645 . -6)) (26110 21405 204143 153000) 0 nil])
([nil nil ((1946 . 1951)) ((#("	    " 0 1 (fontified t) 1 5 (fontified t)) . 1946) (undo-tree-id576 . -5) (undo-tree-id577 . -5) (undo-tree-id578 . -5) (undo-tree-id579 . -5) (undo-tree-id580 . -5)) (26110 20477 905969 839000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2472 . 2473) (nil fontified nil 1850 . 2473) (nil fontified nil 1849 . 1850) (nil category c->-as-paren-syntax 1849 . 1850) (nil fontified nil 1843 . 1849) (nil fontified nil 1842 . 1843) (nil category c-<-as-paren-syntax 1842 . 1843) (nil fontified nil 1785 . 1842) (1785 . 2473)) ((#("    public static void writer(String nombreArchivo, Lista<String> lista) {
        File archivo = new File(nombreArchivo);
        try (BufferedWriter escritor = new BufferedWriter(new FileWriter(archivo))) {
            if (archivo.exists()) {
                archivo.delete(); // Borra el archivo existente.
            }
            for (String elemento : lista) {
                escritor.write(elemento);
                escritor.newLine(); 
            }
            System.out.println(\"Archivo guardado correctamente\");
        } catch (IOException e) {
            System.out.println(\"\\nAlgo saliรณ mal al guardar el archivo: \\n\");
            e.printStackTrace();
        }
    }
" 0 4 (fontified nil) 4 10 (face font-lock-keyword-face fontified nil) 10 11 (fontified nil) 11 17 (face font-lock-keyword-face fontified nil) 17 18 (fontified nil) 18 21 (face font-lock-type-face fontified nil) 21 22 (face font-lock-type-face c-type c-decl-id-start fontified nil) 22 23 (fontified nil) 23 29 (face font-lock-function-name-face fontified nil) 29 30 (c-type c-decl-arg-start fontified nil) 30 36 (face font-lock-type-face fontified nil) 36 37 (fontified nil) 37 50 (face font-lock-variable-name-face fontified nil) 50 51 (c-type c-decl-arg-start fontified nil) 51 52 (fontified nil) 52 57 (face font-lock-type-face fontified nil) 57 58 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 58 64 (face font-lock-type-face fontified nil) 64 65 (category c->-as-paren-syntax fontified nil) 65 66 (fontified nil) 66 71 (face font-lock-variable-name-face fontified nil) 71 83 (fontified nil) 83 86 (face font-lock-type-face fontified nil) 86 87 (face font-lock-type-face c-type c-decl-id-start fontified nil) 87 88 (fontified nil) 88 95 (face font-lock-variable-name-face fontified nil) 95 98 (fontified nil) 98 101 (face font-lock-keyword-face fontified nil) 101 102 (fontified nil) 102 106 (face font-lock-type-face fontified nil) 106 131 (fontified nil) 131 134 (face font-lock-keyword-face fontified nil) 134 136 (fontified nil) 136 149 (face font-lock-type-face fontified nil) 149 150 (face font-lock-type-face c-type c-decl-id-start fontified nil) 150 151 (fontified nil) 151 159 (face font-lock-variable-name-face fontified nil) 159 162 (fontified nil) 162 165 (face font-lock-keyword-face fontified nil) 165 166 (fontified nil) 166 180 (face font-lock-type-face fontified nil) 180 181 (fontified nil) 181 184 (face font-lock-keyword-face fontified nil) 184 185 (fontified nil) 185 195 (face font-lock-type-face fontified nil) 195 221 (fontified nil) 221 223 (face font-lock-keyword-face fontified nil) 223 279 (fontified nil) 279 282 (face font-lock-comment-delimiter-face fontified nil) 282 310 (face font-lock-comment-face fontified nil) 310 336 (fontified nil) 336 339 (face font-lock-keyword-face fontified nil) 339 341 (fontified nil) 341 346 (face font-lock-type-face fontified nil) 346 347 (face font-lock-type-face c-type c-decl-id-start fontified nil) 347 348 (fontified nil) 348 356 (face font-lock-variable-name-face fontified nil) 356 492 (fontified nil) 492 524 (face font-lock-string-face fontified nil) 524 537 (fontified nil) 537 542 (face font-lock-keyword-face fontified nil) 542 592 (fontified nil) 592 636 (face font-lock-string-face fontified nil) 636 682 (fontified nil) 682 687 (fontified nil) 687 688 (rear-nonsticky nil fontified nil)) . 1785) (nil fontified t 1837 . 1842) (nil fontified t 1836 . 1837) (nil fontified t 1835 . 1836) (nil fontified t 1822 . 1835) (nil fontified t 1821 . 1822) (nil fontified t 1815 . 1821) (nil fontified t 1814 . 1815) (nil fontified t 1808 . 1814) (nil fontified t 1807 . 1808) (nil fontified t 1806 . 1807) (nil fontified t 1803 . 1806) (nil fontified t 1802 . 1803) (nil fontified t 1796 . 1802) (nil fontified t 1795 . 1796) (nil fontified t 1789 . 1795) (nil fontified t 1785 . 1789) (nil fontified t 1842 . 1843) (nil fontified t 1843 . 1849) (nil fontified t 1849 . 1850) (nil fontified t 2467 . 2472) (nil fontified t 2421 . 2467) (nil fontified t 2377 . 2421) (nil fontified t 2327 . 2377) (nil fontified t 2322 . 2327) (nil fontified t 2309 . 2322) (nil fontified t 2277 . 2309) (nil fontified t 2141 . 2277) (nil fontified t 2133 . 2141) (nil fontified t 2132 . 2133) (nil fontified t 2131 . 2132) (nil fontified t 2126 . 2131) (nil fontified t 2124 . 2126) (nil fontified t 2121 . 2124) (nil fontified t 2095 . 2121) (nil fontified t 2067 . 2095) (nil fontified t 2064 . 2067) (nil fontified t 2008 . 2064) (nil fontified t 2006 . 2008) (nil fontified t 1980 . 2006) (nil fontified t 1970 . 1980) (nil fontified t 1969 . 1970) (nil fontified t 1966 . 1969) (nil fontified t 1965 . 1966) (nil fontified t 1951 . 1965) (nil fontified t 1950 . 1951) (nil fontified t 1947 . 1950) (nil fontified t 1944 . 1947) (nil fontified t 1936 . 1944) (nil fontified t 1935 . 1936) (nil fontified t 1934 . 1935) (nil fontified t 1921 . 1934) (nil fontified t 1919 . 1921) (nil fontified t 1916 . 1919) (nil fontified t 1891 . 1916) (nil fontified t 1887 . 1891) (nil fontified t 1886 . 1887) (nil fontified t 1883 . 1886) (nil fontified t 1880 . 1883) (nil fontified t 1873 . 1880) (nil fontified t 1872 . 1873) (nil fontified t 1871 . 1872) (nil fontified t 1868 . 1871) (nil fontified t 1856 . 1868) (nil fontified t 1851 . 1856) (nil fontified t 1850 . 1851) (nil rear-nonsticky t 2472 . 2473)) (26110 19128 886932 444000) 0 nil])
([nil nil ((1927 . 1933)) nil (26110 21417 616254 313000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1943) (undo-tree-id581 . -1) (#("a" 0 1 (fontified t)) . -1944) (undo-tree-id582 . -1) (#("s" 0 1 (fontified t)) . -1945) (undo-tree-id583 . -1) (#("e" 0 1 (fontified t)) . -1946) (undo-tree-id584 . -1) 1947) ((1943 . 1947)) (26110 21404 388003 856000) 0 nil])
([nil nil ((1951 . 1955)) ((#("FILE" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 1951) (undo-tree-id572 . -4) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -4)) (26110 20477 678748 310000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -2472) (undo-tree-id476 . -1) (#("
" 0 1 (fontified t rear-nonsticky t)) . -2473) (undo-tree-id477 . -1) 2474) ((2472 . 2474) (t 26110 18796 87628 766000)) (26110 18796 76097 364000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1930) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (#("r" 0 1 (fontified t)) . -1931) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (#("e" 0 1 (fontified t)) . -1932) (undo-tree-id656 . -1) (undo-tree-id657 . -1) 1933) nil (26110 21417 616251 688000) 0 nil])
([nil nil ((1943 . 1947)) ((#("alse" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (face font-lock-constant-face fontified t)) . 1943)) (26110 21403 938040 558000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -1952) (undo-tree-id541 . -1) (#("L" 0 1 (fontified t)) . -1953) (undo-tree-id542 . -1) (#("E" 0 1 (fontified t)) . -1954) (undo-tree-id543 . -1) 1955) ((1952 . 1955)) (26110 20477 383878 580000) 0 nil])
nil
([nil nil ((1930 . 1940)) nil (26110 21417 616232 223000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1893) (undo-tree-id607 . -1) (#("e" 0 1 (fontified t)) . -1894) (undo-tree-id608 . -1) (#("w" 0 1 (fontified t)) . -1895) (undo-tree-id609 . -1) (#(" " 0 1 (fontified t)) . -1896) (undo-tree-id610 . -1) (#("B" 0 1 (face font-lock-type-face fontified t)) . -1897) (undo-tree-id611 . -1) (#("u" 0 1 (face font-lock-type-face fontified t)) . -1898) (undo-tree-id612 . -1) (#("f" 0 1 (face font-lock-type-face fontified t)) . -1899) (undo-tree-id613 . -1) (#("f" 0 1 (face font-lock-type-face fontified t)) . -1900) (undo-tree-id614 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -1901) (undo-tree-id615 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -1902) (undo-tree-id616 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -1903) (undo-tree-id617 . -1) (#("d" 0 1 (face font-lock-type-face fontified t)) . -1904) (undo-tree-id618 . -1) (#("W" 0 1 (face font-lock-type-face fontified t)) . -1905) (undo-tree-id619 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -1906) (undo-tree-id620 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -1907) (undo-tree-id621 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -1908) (undo-tree-id622 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -1909) (undo-tree-id623 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -1910) (undo-tree-id624 . -1) (#("(" 0 1 (fontified t)) . -1911) (undo-tree-id625 . -1) 1912 (t 26110 20496 769417 608000)) ((1893 . 1912)) (26110 21403 465740 705000) 0 nil])
([nil nil ((1952 . 1960)) ((#("ile f = " 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face c-type c-decl-id-start fontified t) 3 4 (fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 1952) (undo-tree-id570 . -8) (undo-tree-id571 . -8)) (26110 20477 137127 207000) 0 nil])
([nil nil ((1940 . 1941) (t 26110 21417 626422 628000)) nil (26110 21595 577963 110000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1928) (undo-tree-id606 . -1) 1929) ((1928 . 1929)) (26110 21403 255725 395000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1955) (undo-tree-id536 . -1) (#("f" 0 1 (fontified t)) . -1956) (undo-tree-id537 . -1) (#(" " 0 1 (fontified t)) . -1957) (undo-tree-id538 . -1) (#("=" 0 1 (fontified t)) . -1958) (undo-tree-id539 . -1) (#(" " 0 1 (fontified t)) . -1959) (undo-tree-id540 . -1) 1960) ((1955 . 1960)) (26110 20476 895621 989000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1940) (undo-tree-id672 . -1) (undo-tree-id673 . -1) 1941) nil (26110 21595 577962 8000) 0 nil])
([nil nil ((#("B" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1867) (undo-tree-id592 . -1) (#("u" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1868) (undo-tree-id593 . -1) (#("f" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1869) (undo-tree-id594 . -1) (#("f" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1870) (undo-tree-id595 . -1) (#("e" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1871) (undo-tree-id596 . -1) (#("r" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1872) (undo-tree-id597 . -1) (#("e" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1873) (undo-tree-id598 . -1) (#("d" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1874) (undo-tree-id599 . -1) (#("W" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1875) (undo-tree-id600 . -1) (#("r" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1876) (undo-tree-id601 . -1) (#("i" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1877) (undo-tree-id602 . -1) (#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1878) (undo-tree-id603 . -1) (#("e" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1879) (undo-tree-id604 . -1) (#("r" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1880) (undo-tree-id605 . -1) 1881) ((1867 . 1881)) (26110 21403 47410 835000) 0 nil])
([nil nil ((1955 . 1958)) ((#("Out" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 1955) (undo-tree-id568 . -3) (undo-tree-id569 . -3)) (26110 20476 648503 196000) 0 nil])
([nil nil ((1940 . 1941)) nil (26110 21595 577959 533000) 0 nil])
([nil nil ((1867 . 1868)) ((#("F" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 1867) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1)) (26110 21402 827887 274000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t)) . -1955) (undo-tree-id533 . -1) (#("u" 0 1 (fontified t)) . -1956) (undo-tree-id534 . -1) (#("t" 0 1 (fontified t)) . -1957) (undo-tree-id535 . -1) 1958) ((1955 . 1958)) (26110 20476 309246 667000) 0 nil])
([nil nil ((1941 . 1945)) nil (26110 21595 577958 631000) 0 nil])
([nil nil ((1868 . 1876)) ((#("ileWRITE" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 1868) (undo-tree-id637 . -8) (undo-tree-id638 . -4) (undo-tree-id639 . -8)) (26110 21402 586963 46000) 0 nil])
([nil nil ((#("File" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -1951) (undo-tree-id532 . -4) 1955) ((1951 . 1955)) (26110 20476 79285 113000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1942) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (#("a" 0 1 (fontified t)) . -1943) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (#("l" 0 1 (fontified t)) . -1944) (undo-tree-id670 . -1) (undo-tree-id671 . -1) 1945) nil (26110 21616 451269 999000) 0 nil])
([nil nil ((#("R" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1872) (undo-tree-id588 . -1) (#("I" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1873) (undo-tree-id589 . -1) (#("T" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1874) (undo-tree-id590 . -1) (#("E" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1875) (undo-tree-id591 . -1) 1876) ((1872 . 1876)) (26110 21402 360057 782000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1949 . 1950) (nil fontified nil 1949 . 1950) (nil fontified nil 1948 . 1949) (nil fontified nil 1947 . 1948) (nil fontified nil 1946 . 1947) (1946 . 1950)) ((#("File" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (rear-nonsticky nil fontified nil)) . 1946) (undo-tree-id566 . -4) (undo-tree-id567 . -4) (nil rear-nonsticky t 1949 . 1950)) (26110 20475 828441 394000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1940) (undo-tree-id677 . -1) (#(" " 0 1 (fontified t)) . -1941) (undo-tree-id678 . -1) 1942) nil (26110 21936 470208 545000) 0 nil] [nil nil ((1942 . 1947)) ((#("false" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (face font-lock-constant-face fontified t) 4 5 (face font-lock-constant-face fontified t)) . 1942) (undo-tree-id674 . -5) (undo-tree-id675 . -5) (undo-tree-id676 . -5) (t 26110 21595 591112 271000)) (26110 21595 577936 671000) 0 nil])
([nil nil ((1872 . 1874)) ((#("Ri" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 1872) (undo-tree-id635 . -2) (undo-tree-id636 . -2)) (26110 21401 866698 238000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t)) . -1946) (undo-tree-id528 . -1) (#("i" 0 1 (fontified t)) . -1947) (undo-tree-id529 . -1) (#("l" 0 1 (fontified t)) . -1948) (undo-tree-id530 . -1) (#("e" 0 1 (rear-nonsticky t fontified t)) . -1949) (undo-tree-id531 . -1) 1950) ((1946 . 1950)) (26110 20475 375532 215000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3081 . 3082) (nil fontified nil 2927 . 3082) (nil fontified nil 2926 . 2927) (nil category c->-as-paren-syntax 2926 . 2927) (nil fontified nil 2920 . 2926) (nil fontified nil 2919 . 2920) (nil category c-<-as-paren-syntax 2919 . 2920) (nil fontified nil 2915 . 2919) (nil fontified nil 2914 . 2915) (nil fontified nil 2906 . 2914) (nil fontified nil 2876 . 2906) (nil fontified nil 2867 . 2876) (nil fontified nil 2857 . 2867) (nil fontified nil 2856 . 2857) (nil category c->-as-paren-syntax 2856 . 2857) (nil fontified nil 2850 . 2856) (nil fontified nil 2849 . 2850) (nil category c-<-as-paren-syntax 2849 . 2850) (nil fontified nil 2830 . 2849) (nil fontified nil 2829 . 2830) (nil category c->-as-paren-syntax 2829 . 2830) (nil fontified nil 2823 . 2829) (nil fontified nil 2822 . 2823) (nil category c-<-as-paren-syntax 2822 . 2823) (nil fontified nil 2806 . 2822) (2806 . 3082)) nil (26110 21958 89571 230000) 0 nil] [nil nil ((nil rear-nonsticky nil 3215 . 3216) (nil fontified nil 3015 . 3216) (nil fontified nil 3014 . 3015) (nil category c->-as-paren-syntax 3014 . 3015) (nil fontified nil 3008 . 3014) (nil fontified nil 3007 . 3008) (nil category c-<-as-paren-syntax 3007 . 3008) (nil fontified nil 3003 . 3007) (nil fontified nil 3002 . 3003) (nil fontified nil 2994 . 3002) (nil fontified nil 2964 . 2994) (nil fontified nil 2955 . 2964) (nil fontified nil 2945 . 2955) (nil fontified nil 2944 . 2945) (nil category c->-as-paren-syntax 2944 . 2945) (nil fontified nil 2938 . 2944) (nil fontified nil 2937 . 2938) (nil category c-<-as-paren-syntax 2937 . 2938) (nil fontified nil 2918 . 2937) (nil fontified nil 2917 . 2918) (nil category c->-as-paren-syntax 2917 . 2918) (nil fontified nil 2911 . 2917) (nil fontified nil 2910 . 2911) (nil category c-<-as-paren-syntax 2910 . 2911) (nil fontified nil 2811 . 2910) (2811 . 3216)) ((#("public class Banderas {
    // No need for file-related fields or constructor
    
    public Lista<String> processInput(Lista<String> input) {
        // Process the input as needed
        Lista<String> result;
        if (r) {
            result = reverso(input);
        } else {
            result = ordenar(input);
        }
        return result;
    }
    
    // Other methods remain unchanged
}
" 0 6 (face font-lock-keyword-face fontified nil) 6 7 (fontified nil) 7 11 (face font-lock-keyword-face fontified nil) 11 12 (c-type c-decl-type-start face font-lock-keyword-face fontified nil) 12 13 (fontified nil) 13 21 (face font-lock-type-face fontified nil) 21 24 (fontified nil) 24 28 (c-is-sws t c-in-sws t fontified nil) 28 29 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified nil) 29 31 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 31 78 (c-in-sws t face font-lock-comment-face fontified nil) 78 83 (c-in-sws t fontified nil) 83 87 (c-in-sws t c-is-sws t fontified nil) 87 88 (c-is-sws t face font-lock-keyword-face fontified nil) 88 93 (face font-lock-keyword-face fontified nil) 93 94 (fontified nil) 94 99 (face font-lock-type-face fontified nil) 99 100 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 100 106 (face font-lock-type-face fontified nil) 106 107 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 107 108 (fontified nil) 108 120 (face font-lock-function-name-face fontified nil) 120 121 (c-type c-decl-arg-start fontified nil) 121 126 (face font-lock-type-face fontified nil) 126 127 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 127 133 (face font-lock-type-face fontified nil) 133 134 (category c->-as-paren-syntax fontified nil) 134 135 (fontified nil) 135 140 (face font-lock-variable-name-face fontified nil) 140 144 (fontified nil) 144 152 (fontified nil c-is-sws t c-in-sws t) 152 153 (face font-lock-comment-delimiter-face fontified nil c-is-sws t c-in-sws t) 153 155 (face font-lock-comment-delimiter-face fontified nil c-in-sws t) 155 183 (face font-lock-comment-face fontified nil c-in-sws t) 183 191 (fontified nil c-in-sws t c-is-sws t) 191 192 (face font-lock-type-face fontified nil c-is-sws t) 192 196 (face font-lock-type-face fontified nil) 196 197 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 197 203 (face font-lock-type-face fontified nil) 203 204 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 204 205 (fontified nil) 205 211 (face font-lock-variable-name-face fontified nil) 211 221 (fontified nil) 221 223 (face font-lock-keyword-face fontified nil) 223 277 (fontified nil) 277 281 (face font-lock-keyword-face fontified nil) 281 339 (fontified nil) 339 345 (face font-lock-keyword-face fontified nil) 345 369 (fontified nil) 369 372 (face font-lock-comment-delimiter-face fontified nil) 372 403 (face font-lock-comment-face fontified nil) 403 404 (fontified nil) 404 405 (rear-nonsticky nil fontified nil)) . 2811) (undo-tree-id679 . -78) (undo-tree-id680 . -78) (nil rear-nonsticky t 3215 . 3216)) (26110 21936 469192 79000) 0 nil])
nil
([nil nil ((#("R" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1872) (undo-tree-id585 . -1) (#("i" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1873) (undo-tree-id587 . -1) 1874) ((1872 . 1874)) (26110 21401 489982 796000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2002 . 2003) (nil fontified nil 1946 . 2003) (1946 . 2003)) ((#("FileOutputStream fos = new FileOutputStream(file, false);" 0 1 (face font-lock-type-face fontified nil) 1 2 (face font-lock-type-face fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face fontified nil) 5 6 (face font-lock-type-face fontified nil) 6 7 (face font-lock-type-face fontified nil) 7 8 (face font-lock-type-face fontified nil) 8 9 (face font-lock-type-face fontified nil) 9 10 (face font-lock-type-face fontified nil) 10 11 (face font-lock-type-face fontified nil) 11 12 (face font-lock-type-face fontified nil) 12 13 (face font-lock-type-face fontified nil) 13 14 (face font-lock-type-face fontified nil) 14 15 (face font-lock-type-face fontified nil) 15 16 (face font-lock-type-face c-type c-decl-id-start fontified nil) 16 17 (fontified nil) 17 18 (face font-lock-variable-name-face fontified nil) 18 19 (face font-lock-variable-name-face fontified nil) 19 20 (face font-lock-variable-name-face fontified nil) 20 21 (fontified nil) 21 22 (fontified nil) 22 23 (fontified nil) 23 24 (face font-lock-keyword-face fontified nil) 24 25 (face font-lock-keyword-face fontified nil) 25 26 (face font-lock-keyword-face fontified nil) 26 27 (fontified nil) 27 28 (face font-lock-type-face fontified nil) 28 29 (face font-lock-type-face fontified nil) 29 30 (face font-lock-type-face fontified nil) 30 31 (face font-lock-type-face fontified nil) 31 32 (face font-lock-type-face fontified nil) 32 33 (face font-lock-type-face fontified nil) 33 34 (face font-lock-type-face fontified nil) 34 35 (face font-lock-type-face fontified nil) 35 36 (face font-lock-type-face fontified nil) 36 37 (face font-lock-type-face fontified nil) 37 38 (face font-lock-type-face fontified nil) 38 39 (face font-lock-type-face fontified nil) 39 40 (face font-lock-type-face fontified nil) 40 41 (face font-lock-type-face fontified nil) 41 42 (face font-lock-type-face fontified nil) 42 43 (face font-lock-type-face fontified nil) 43 44 (fontified nil) 44 45 (fontified nil) 45 46 (fontified nil) 46 47 (fontified nil) 47 48 (fontified nil) 48 49 (fontified nil) 49 50 (fontified nil) 50 51 (face font-lock-constant-face fontified nil) 51 52 (face font-lock-constant-face fontified nil) 52 53 (face font-lock-constant-face fontified nil) 53 54 (face font-lock-constant-face fontified nil) 54 55 (face font-lock-constant-face fontified nil) 55 56 (fontified nil) 56 57 (fontified nil rear-nonsticky nil)) . 1946) (undo-tree-id563 . -56) (undo-tree-id564 . -56) (undo-tree-id565 . -56) (nil rear-nonsticky t 2002 . 2003)) (26110 20475 139295 126000) 0 nil])
([nil nil ((2805 . 2810)) nil (26110 21958 89565 139000) 0 nil])
nil
([nil nil ((1872 . 1877)) ((#("riter" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 1872)) (26110 21401 282637 969000) 0 nil])
([nil nil ((2002 . 2003)) ((#("`" 0 1 (fontified t)) . 2002) (undo-tree-id561 . -1) (undo-tree-id562 . -1)) (26110 20474 907910 415000) 0 nil])
([nil nil ((#("y" 0 1 (face font-lock-string-face fontified t)) . -653) (undo-tree-id757 . -1) 654 (t 26110 21958 100354 376000)) nil (26110 24579 718085 626000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -2005) (undo-tree-id626 . -1) (#("e" 0 1 (fontified t)) . -2006) (undo-tree-id627 . -1) (#("w" 0 1 (face font-lock-keyword-face fontified t)) . -2007) (undo-tree-id628 . -1) (#("L" 0 1 (fontified t)) . -2008) (undo-tree-id629 . -1) (#("i" 0 1 (fontified t)) . -2009) (undo-tree-id630 . -1) (#("n" 0 1 (fontified t)) . -2010) (undo-tree-id631 . -1) (#("e" 0 1 (fontified t)) . -2011) (undo-tree-id632 . -1) 2012 (t 26110 21196 228566 252000)) ((2005 . 2012)) (26110 21400 948113 713000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t)) . -2002) (undo-tree-id527 . -1) 2003) ((2002 . 2003)) (26110 20474 381485 691000) 0 nil])
([nil nil ((653 . 659)) nil (26110 24579 718083 10000) 0 nil])
([nil nil ((2005 . 2010)) ((#("close" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 2005)) (26110 21400 394080 81000) 0 nil])
([nil nil ((1946 . 1951) 2002) ((#("	    " 0 4 (fontified t) 4 5 (fontified t)) . 1946)) (26110 20474 152514 806000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -657) (undo-tree-id755 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -658) (undo-tree-id756 . -1) 659) nil (26110 24579 718081 518000) 0 nil])
([nil nil ((#("		escritor.close(); 
" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t)) . 1994) (undo-tree-id633 . -21) (undo-tree-id634 . -20) (t 26110 21224 106441 372000)) ((1994 . 2015) (t 26110 21349 837288 845000)) (26110 21349 827661 175000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1995) (undo-tree-id523 . -1) (#("i" 0 1 (fontified t)) . -1996) (undo-tree-id524 . -1) (#("l" 0 1 (fontified t)) . -1997) (undo-tree-id525 . -1) (#("e" 0 1 (fontified t)) . -1998) (undo-tree-id526 . -1) 1999) ((1995 . 1999)) (26110 20473 947284 522000) 0 nil])
([nil nil ((657 . 678)) nil (26110 24579 718077 229000) 0 nil])
nil
([nil nil ((1995 . 1997)) ((#("np" 0 1 (fontified t) 1 2 (fontified t)) . 1995) (undo-tree-id559 . -2) (undo-tree-id560 . -2)) (26110 20473 730912 528000) 0 nil])
([nil nil ((678 . 680)) nil (26110 24579 718076 257000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1996) (undo-tree-id522 . -1) 1997) ((1996 . 1997)) (26110 20473 506938 446000) 0 nil])
([nil nil ((#("x" 0 1 (face font-lock-string-face fontified t)) . -679) (undo-tree-id754 . -1) 680) nil (26110 24579 718075 255000) 0 nil])
([nil nil ((1996 . 2008)) ((#("ombreArchivp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t)) . 1996) (undo-tree-id556 . -12) (undo-tree-id557 . -11) (undo-tree-id558 . -12)) (26110 20473 288637 288000) 0 nil])
([nil nil ((679 . 680)) nil (26110 24579 718073 392000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -2007) (undo-tree-id521 . -1) 2008) ((2007 . 2008)) (26110 20473 7461 389000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -679) (undo-tree-id753 . -1) 680) nil (26110 24579 718072 370000) 0 nil])
([nil nil ((2007 . 2008)) ((#("o" 0 1 (fontified t)) . 2007)) (26110 20472 704322 733000) 0 nil])
([nil nil ((679 . 683)) nil (26110 24579 718070 226000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2062) (undo-tree-id513 . -1) (#("s" 0 1 (fontified t)) . -2063) (undo-tree-id514 . -1) (#("c" 0 1 (fontified t)) . -2064) (undo-tree-id515 . -1) (#("r" 0 1 (fontified t)) . -2065) (undo-tree-id516 . -1) (#("i" 0 1 (fontified t)) . -2066) (undo-tree-id517 . -1) (#("t" 0 1 (fontified t)) . -2067) (undo-tree-id518 . -1) (#("o" 0 1 (fontified t)) . -2068) (undo-tree-id519 . -1) (#("r" 0 1 (fontified t)) . -2069) (undo-tree-id520 . -1) 2070) ((2062 . 2070)) (26110 20472 436265 507000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-string-face fontified t)) . -682) (undo-tree-id752 . -1) 683) nil (26110 24579 718069 264000) 0 nil])
([nil nil ((2062 . 2064)) ((#("of" 0 1 (fontified t) 1 2 (fontified t)) . 2062) (undo-tree-id554 . -2) (undo-tree-id555 . -2)) (26110 20472 154636 229000) 0 nil])
([nil nil ((682 . 685)) nil (26110 24579 718067 260000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -2062) (undo-tree-id511 . -1) (#("f" 0 1 (fontified t)) . -2063) (undo-tree-id512 . -1) 2064) ((2062 . 2064)) (26110 20471 838482 105000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -679) (undo-tree-id746 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -680) (undo-tree-id747 . -1) (#("z" 0 1 (face font-lock-string-face fontified t)) . -681) (undo-tree-id748 . -1) (#("=" 0 1 (face font-lock-string-face fontified t)) . -682) (undo-tree-id749 . -1) (#("=" 0 1 (face font-lock-string-face fontified t)) . -683) (undo-tree-id750 . -1) (#("=" 0 1 (face font-lock-string-face fontified t)) . -684) (undo-tree-id751 . -1) 685) nil (26110 24579 718065 446000) 0 nil])
([nil nil ((2062 . 2065)) ((#("fos" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 2062)) (26110 20471 480860 290000) 0 nil])
([nil nil ((679 . 682)) nil (26110 24579 718058 152000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -2091) (undo-tree-id509 . -1) (#("r" 0 1 (fontified t)) . -2092) (undo-tree-id510 . -1) 2093) ((2091 . 2093)) (26110 20471 172417 186000) 0 nil])
([nil nil ((#("ERES UN NACO OTE" 0 16 (face font-lock-string-face fontified t)) . 805) (undo-tree-id745 . -16)) nil (26110 24579 718057 250000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2085) (undo-tree-id503 . -1) (#("s" 0 1 (fontified t)) . -2086) (undo-tree-id504 . -1) (#("c" 0 1 (fontified t)) . -2087) (undo-tree-id505 . -1) (#("r" 0 1 (fontified t)) . -2088) (undo-tree-id506 . -1) (#("i" 0 1 (fontified t)) . -2089) (undo-tree-id507 . -1) (#("t" 0 1 (fontified t)) . -2090) (undo-tree-id508 . -1) 2091) ((2085 . 2091)) (26110 20470 762099 259000) 0 nil])
([nil nil ((nil rear-nonsticky nil 847 . 848) (nil fontified nil 847 . 848) (nil fontified nil 846 . 847) (nil fontified nil 845 . 846) (nil fontified nil 844 . 845) (nil fontified nil 843 . 844) (nil fontified nil 842 . 843) (nil fontified nil 841 . 842) (nil fontified nil 840 . 841) (nil fontified nil 839 . 840) (nil fontified nil 838 . 839) (nil fontified nil 837 . 838) (nil fontified nil 836 . 837) (nil fontified nil 835 . 836) (nil fontified nil 834 . 835) (nil fontified nil 833 . 834) (nil fontified nil 832 . 833) (nil fontified nil 831 . 832) (nil fontified nil 830 . 831) (nil fontified nil 829 . 830) (nil fontified nil 828 . 829) (nil fontified nil 827 . 828) (nil fontified nil 826 . 827) (nil fontified nil 825 . 826) (nil fontified nil 824 . 825) (nil fontified nil 823 . 824) (nil fontified nil 822 . 823) (nil fontified nil 821 . 822) (nil fontified nil 820 . 821) (nil fontified nil 819 . 820) (nil fontified nil 818 . 819) (nil fontified nil 817 . 818) (nil fontified nil 816 . 817) (nil fontified nil 815 . 816) (nil fontified nil 814 . 815) (nil fontified nil 813 . 814) (nil fontified nil 812 . 813) (nil fontified nil 811 . 812) (nil fontified nil 810 . 811) (nil fontified nil 809 . 810) (nil fontified nil 808 . 809) (nil fontified nil 807 . 808) (nil fontified nil 806 . 807) (nil fontified nil 805 . 806) (805 . 848)) nil (26110 24579 718052 611000) 0 nil])
([nil nil ((2085 . 2088)) ((#("fos" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 2085)) (26110 20470 445096 414000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -817) (undo-tree-id744 . -1) 818) nil (26110 24579 718042 692000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 1950) (#("o" 0 1 (fontified t)) . 1950) (#("f" 0 1 (fontified t)) . 1950) (#(" " 0 1 (fontified t)) . 1950) (#("m" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 1950) (#("a" 0 1 (face font-lock-type-face fontified t)) . 1950) (#("e" 0 1 (face font-lock-type-face fontified t)) . 1950) (#("r" 0 1 (face font-lock-type-face fontified t)) . 1950) (#("t" 0 1 (face font-lock-type-face fontified t)) . 1950) (#("S" 0 1 (face font-lock-type-face fontified t)) . 1950) (#("t" 0 1 (face font-lock-type-face fontified t)) . 1950) (#("u" 0 1 (face font-lock-type-face fontified t)) . 1950) (#("p" 0 1 (face font-lock-type-face fontified t)) . 1950) (#("t" 0 1 (face font-lock-type-face fontified t)) . 1950) (#("u" 0 1 (face font-lock-type-face fontified t)) . 1950) (#("O" 0 1 (face font-lock-type-face fontified t)) . 1950) (#("e" 0 1 (face font-lock-type-face fontified t)) . 1950) (#("l" 0 1 (face font-lock-type-face fontified t)) . 1950) (#("i" 0 1 (face font-lock-type-face fontified t)) . 1950) (#("F" 0 1 (face font-lock-type-face fontified t)) . 1950) (#(" " 0 1 (fontified t)) . 1950) (t 26110 20215 4213 272000)) ((1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951)) (26110 20470 65353 849000) 0 nil] [nil nil ((#("    public static void writer(String nombreArchivo, Lista<String> lista) {
	try (BufferedWriter escritor = new BufferedWriter(new FileWriter(nombreArchivo))) {
	    FileOutputStream fos = new FileOutputStream(nombreArchivo, false);	    
	    for (String elemento : lista) {
		fos.write(elemento);
		fos.newLine(); 
	    }
	    System.out.println(\"Archivo guardado correctamente\");
	} catch (IOException e) {
        System.out.println(\"\\nAlgo saliรณ mal al guardar el archivo: \\n\");
        e.printStackTrace();
	}
    }
" 0 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 17 (face font-lock-keyword-face fontified t) 17 18 (fontified t) 18 21 (face font-lock-type-face fontified t) 21 22 (face font-lock-type-face c-type c-decl-id-start fontified t) 22 23 (fontified t) 23 29 (face font-lock-function-name-face fontified t) 29 30 (c-type c-decl-arg-start fontified t) 30 36 (face font-lock-type-face fontified t) 36 37 (fontified t) 37 50 (face font-lock-variable-name-face fontified t) 50 51 (c-type c-decl-arg-start fontified t) 51 52 (fontified t) 52 57 (face font-lock-type-face fontified t) 57 58 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 58 64 (face font-lock-type-face fontified t) 64 65 (category c->-as-paren-syntax fontified t) 65 66 (fontified t) 66 71 (face font-lock-variable-name-face fontified t) 71 75 (fontified t) 75 76 (fontified t) 76 79 (face font-lock-keyword-face fontified t) 79 81 (fontified t) 81 94 (face font-lock-type-face fontified t) 94 95 (face font-lock-type-face c-type c-decl-id-start fontified t) 95 96 (fontified t) 96 104 (face font-lock-variable-name-face fontified t) 104 107 (fontified t) 107 110 (face font-lock-keyword-face fontified t) 110 111 (fontified t) 111 125 (face font-lock-type-face fontified t) 125 126 (fontified t) 126 129 (face font-lock-keyword-face fontified t) 129 130 (fontified t) 130 140 (face font-lock-type-face fontified t) 140 160 (fontified t) 160 165 (fontified t) 165 180 (face font-lock-type-face fontified t) 180 181 (face font-lock-type-face c-type c-decl-id-start fontified t) 181 182 (fontified t) 182 185 (face font-lock-variable-name-face fontified t) 185 188 (fontified t) 188 191 (face font-lock-keyword-face fontified t) 191 192 (fontified t) 192 208 (face font-lock-type-face fontified t) 208 209 (fontified t) 209 210 (fontified t) 210 211 (fontified t) 211 212 (fontified t) 212 213 (fontified t) 213 214 (fontified t) 214 215 (fontified t) 215 216 (fontified t) 216 217 (fontified t) 217 218 (fontified t) 218 219 (fontified t) 219 220 (fontified t) 220 221 (fontified t) 221 222 (fontified t) 222 223 (fontified t) 223 224 (fontified t) 224 229 (face font-lock-constant-face fontified t) 229 230 (fontified t) 230 231 (fontified t rear-nonsticky t) 231 236 (fontified t) 236 237 (fontified t) 237 242 (fontified t) 242 245 (face font-lock-keyword-face fontified t) 245 247 (fontified t) 247 252 (face font-lock-type-face fontified t) 252 253 (face font-lock-type-face c-type c-decl-id-start fontified t) 253 254 (fontified t) 254 262 (face font-lock-variable-name-face fontified t) 262 272 (fontified t) 272 273 (fontified t) 273 274 (fontified t) 274 276 (fontified t) 276 277 (fontified t) 277 278 (fontified t) 278 279 (fontified t) 279 296 (fontified t) 296 297 (fontified t) 297 299 (fontified t) 299 300 (fontified t) 300 301 (fontified t) 301 302 (fontified t) 302 313 (fontified t) 313 314 (fontified t) 314 315 (fontified t) 315 316 (fontified t) 316 320 (fontified t) 320 321 (fontified t) 321 322 (fontified t) 322 327 (fontified t) 327 346 (fontified t) 346 378 (face font-lock-string-face fontified t) 378 381 (fontified t) 381 382 (fontified t) 382 384 (fontified t) 384 389 (face font-lock-keyword-face fontified t) 389 408 (fontified t) 408 435 (fontified t) 435 479 (face font-lock-string-face fontified t) 479 511 (fontified t) 511 512 (fontified t) 512 514 (fontified t) 514 518 (fontified t) 518 519 (fontified t) 519 520 (fontified t rear-nonsticky t)) . 1786) (undo-tree-id498 . -520) (undo-tree-id499 . -314) (undo-tree-id500 . -519) (undo-tree-id501 . -160) (undo-tree-id502 . -160)) ((1786 . 2306)) (26110 20211 841031 622000) 0 nil])
([nil nil ((817 . 818)) nil (26110 24579 718041 69000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 1950) (#("r" 0 1 (fontified t)) . 1950) (#("t" 0 1 (fontified t)) . 1950) (#("S" 0 1 (fontified t)) . 1950) (#("t" 0 1 (fontified t)) . 1950) (#("u" 0 1 (fontified t)) . 1950) (#("p" 0 1 (fontified t)) . 1950) (#("t" 0 1 (fontified t)) . 1950) (#("u" 0 1 (fontified t)) . 1950) (#("O" 0 1 (fontified t)) . 1950) (#("e" 0 1 (fontified t)) . 1950) (#("l" 0 1 (fontified t)) . 1950) (#("i" 0 1 (fontified t)) . 1950) (#("F" 0 1 (fontified t)) . 1950) (#(" " 0 1 (fontified t)) . 1950) (#("w" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . 1950) (#("e" 0 1 (face font-lock-type-face fontified t)) . 1950) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . 1950) (#(" " 0 1 (fontified t)) . 1950) (#("=" 0 1 (fontified t)) . 1950) (#(" " 0 1 (fontified t)) . 1950)) ((1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951)) (26110 20469 824839 695000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2416 . 2417) (nil fontified nil 1850 . 2417) (nil fontified nil 1849 . 1850) (nil category c->-as-paren-syntax 1849 . 1850) (nil fontified nil 1843 . 1849) (nil fontified nil 1842 . 1843) (nil category c-<-as-paren-syntax 1842 . 1843) (nil fontified nil 1786 . 1842) (1786 . 2417)) ((#("    public static void writer(String nombreArchivo, List<String> lista) {
        try (FileOutputStream fos = new FileOutputStream(nombreArchivo, false);
             BufferedWriter escritor = new BufferedWriter(new OutputStreamWriter(fos, StandardCharsets.UTF_8))) {
            for (String elemento : lista) {
                escritor.write(elemento);
                escritor.newLine(); 
            }
            System.out.println(\"Archivo guardado correctamente\");
        } catch (IOException e) {
            System.out.println(\"\\nAlgo saliรณ mal al guardar el archivo: \\n\");
            e.printStackTrace();
        }
    }" 0 4 (fontified nil) 4 10 (face font-lock-keyword-face fontified nil) 10 11 (fontified nil) 11 17 (face font-lock-keyword-face fontified nil) 17 18 (fontified nil) 18 21 (face font-lock-type-face fontified nil) 21 22 (face font-lock-type-face c-type c-decl-id-start fontified nil) 22 23 (fontified nil) 23 29 (face font-lock-function-name-face fontified nil) 29 30 (c-type c-decl-arg-start fontified nil) 30 36 (face font-lock-type-face fontified nil) 36 37 (fontified nil) 37 50 (face font-lock-variable-name-face fontified nil) 50 51 (c-type c-decl-arg-start fontified nil) 51 52 (fontified nil) 52 56 (face font-lock-type-face fontified nil) 56 57 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 57 63 (face font-lock-type-face fontified nil) 63 64 (category c->-as-paren-syntax fontified nil) 64 65 (fontified nil) 65 70 (face font-lock-variable-name-face fontified nil) 70 82 (fontified nil) 82 85 (face font-lock-keyword-face fontified nil) 85 87 (fontified nil) 87 102 (face font-lock-type-face fontified nil) 102 103 (face font-lock-type-face c-type c-decl-id-start fontified nil) 103 104 (fontified nil) 104 107 (face font-lock-variable-name-face fontified nil) 107 110 (fontified nil) 110 113 (face font-lock-keyword-face fontified nil) 113 114 (fontified nil) 114 130 (face font-lock-type-face fontified nil) 130 146 (fontified nil) 146 151 (face font-lock-constant-face fontified nil) 151 167 (fontified nil) 167 180 (face font-lock-type-face fontified nil) 180 181 (face font-lock-type-face c-type c-decl-id-start fontified nil) 181 182 (fontified nil) 182 190 (face font-lock-variable-name-face fontified nil) 190 193 (fontified nil) 193 196 (face font-lock-keyword-face fontified nil) 196 197 (fontified nil) 197 211 (face font-lock-type-face fontified nil) 211 212 (fontified nil) 212 215 (face font-lock-keyword-face fontified nil) 215 216 (fontified nil) 216 234 (face font-lock-type-face fontified nil) 234 240 (fontified nil) 240 256 (face font-lock-constant-face fontified nil) 256 280 (fontified nil) 280 283 (face font-lock-keyword-face fontified nil) 283 285 (fontified nil) 285 290 (face font-lock-type-face fontified nil) 290 291 (face font-lock-type-face c-type c-decl-id-start fontified nil) 291 292 (fontified nil) 292 300 (face font-lock-variable-name-face fontified nil) 300 436 (fontified nil) 436 468 (face font-lock-string-face fontified nil) 468 481 (fontified nil) 481 486 (face font-lock-keyword-face fontified nil) 486 536 (fontified nil) 536 580 (face font-lock-string-face fontified nil) 580 630 (fontified nil) 630 631 (rear-nonsticky nil fontified nil)) . 1786) (undo-tree-id545 . -79) (nil rear-nonsticky t 2416 . 2417) (t 26110 20167 972809 538000)) (26110 20167 962636 94000) 0 nil])
([nil nil ((#("    public Lista<String> processInput(Lista<String> input) {
        // Process the input as needed
        Lista<String> result;
        if (r) {
            result = reverso(input);
        } else {
            result = ordenar(input);
        }
        return result;
    }
" 0 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 16 (face font-lock-type-face fontified t) 16 17 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 17 23 (face font-lock-type-face fontified t) 23 24 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 24 25 (fontified t) 25 37 (face font-lock-function-name-face fontified t) 37 38 (c-type c-decl-arg-start fontified t) 38 43 (face font-lock-type-face fontified t) 43 44 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 44 50 (face font-lock-type-face fontified t) 50 51 (fontified t category c->-as-paren-syntax) 51 52 (fontified t) 52 57 (face font-lock-variable-name-face fontified t) 57 61 (fontified t) 61 69 (fontified t c-is-sws t c-in-sws t) 69 70 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 70 72 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 72 100 (face font-lock-comment-face fontified t c-in-sws t) 100 108 (fontified t c-in-sws t c-is-sws t) 108 109 (face font-lock-type-face fontified t c-is-sws t) 109 113 (face font-lock-type-face fontified t) 113 114 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 114 120 (face font-lock-type-face fontified t) 120 121 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 121 122 (fontified t) 122 128 (face font-lock-variable-name-face fontified t) 128 138 (fontified t) 138 140 (face font-lock-keyword-face fontified t) 140 194 (fontified t) 194 198 (face font-lock-keyword-face fontified t) 198 256 (fontified t) 256 262 (face font-lock-keyword-face fontified t) 262 275 (fontified t) 275 276 (fontified t rear-nonsticky t) 276 277 (fontified t)) . 2866) (undo-tree-id742 . -277) (undo-tree-id743 . -99)) nil (26110 24579 718040 147000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 1950) (#("a" 0 1 (fontified t)) . 1950) (#("f" 0 1 (face font-lock-constant-face fontified t)) . 1950) (#(" " 0 1 (fontified t)) . 1950) (#("," 0 1 (fontified t)) . 1950) (#("o" 0 1 (fontified t)) . 1950) (#("v" 0 1 (fontified t)) . 1950) (#("i" 0 1 (fontified t)) . 1950) (#("h" 0 1 (fontified t)) . 1950) (#("c" 0 1 (fontified t)) . 1950) (#("r" 0 1 (fontified t)) . 1950) (#("A" 0 1 (fontified t)) . 1950) (#("e" 0 1 (fontified t)) . 1950) (#("r" 0 1 (fontified t)) . 1950) (#("b" 0 1 (fontified t)) . 1950) (#("m" 0 1 (fontified t)) . 1950) (#("o" 0 1 (fontified t)) . 1950) (#("n" 0 1 (fontified t)) . 1950) (#("(" 0 1 (fontified t)) . 1950) (#("m" 0 1 (fontified t)) . 1950) (#("a" 0 1 (fontified t)) . 1950)) ((1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951)) (26110 20469 611288 71000) 0 nil])
nil
([nil nil ((2866 . 2870) (#("    " 0 4 (fontified t)) . 2866) (undo-tree-id741 . -4)) nil (26110 24579 718036 500000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . 1950) (#(";" 0 1 (fontified t rear-nonsticky t)) . 1950) (#(")" 0 1 (fontified t)) . 1950) (#("e" 0 1 (fontified t)) . 1950) (#("s" 0 1 (fontified t)) . 1950)) ((1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951) (1950 . 1951)) (26110 20469 408426 578000) 0 nil])
([nil nil ((2868 . 2872) (#("    " 0 4 (fontified nil)) . 2867) (undo-tree-id740 . -4) (2867 . 2872) (#("    " 0 4 (fontified nil)) . 2867) (2866 . 2867)) nil (26110 24579 718034 205000) 0 nil])
([nil nil ((1940 . 1941) (t 26110 20234 844979 282000)) ((#("," 0 1 (fontified t)) . 1940) (undo-tree-id552 . -1) (undo-tree-id553 . -1)) (26110 20469 205815 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3273 . 3274) (nil fontified nil 2958 . 3274) (nil fontified nil 2957 . 2958) (nil category c->-as-paren-syntax 2957 . 2958) (nil fontified nil 2956 . 2957) (nil category c-<-as-paren-syntax 2956 . 2957) (nil fontified nil 2936 . 2956) (nil fontified nil 2935 . 2936) (nil category c->-as-paren-syntax 2935 . 2936) (nil fontified nil 2929 . 2935) (nil fontified nil 2928 . 2929) (nil category c-<-as-paren-syntax 2928 . 2929) (nil fontified nil 2898 . 2928) (nil fontified nil 2897 . 2898) (nil category c->-as-paren-syntax 2897 . 2898) (nil fontified nil 2891 . 2897) (nil fontified nil 2890 . 2891) (nil category c-<-as-paren-syntax 2890 . 2891) (nil fontified nil 2867 . 2890) (2867 . 3274)) nil (26110 24579 718030 568000) 0 nil])
([nil nil ((1941 . 1944)) ((#(" fl" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 1941) (undo-tree-id549 . -3) (undo-tree-id550 . -2) (undo-tree-id551 . -3)) (26110 20468 987779 325000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2865) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) 2866) nil (26110 24579 718025 108000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1943) (undo-tree-id546 . -1) 1944) ((1943 . 1944)) (26110 20468 756259 972000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-function-name-face fontified t)) . -2898) (undo-tree-id724 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -2899) (undo-tree-id725 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -2900) (undo-tree-id726 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -2901) (undo-tree-id727 . -1) (#("E" 0 1 (face font-lock-function-name-face fontified t)) . -2902) (undo-tree-id728 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -2903) (undo-tree-id729 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -2904) (undo-tree-id730 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -2905) (undo-tree-id731 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -2906) (undo-tree-id732 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -2907) (undo-tree-id733 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -2908) (undo-tree-id734 . -1) 2909) nil (26110 24579 718015 880000) 0 nil])
([nil nil ((1943 . 1947)) ((#("alse" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (face font-lock-constant-face fontified t)) . 1943) (undo-tree-id548 . -4) (t 26110 20456 660262 915000)) (26110 20456 649485 249000) 0 nil])
([nil nil ((2898 . 2900)) nil (26110 24579 718000 99000) 0 nil])
nil
([nil nil ((#("v" 0 1 (face font-lock-function-name-face fontified t)) . -2898) (undo-tree-id722 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -2899) (undo-tree-id723 . -1) 2900) nil (26110 24579 717999 7000) 0 nil])
([nil nil ((2898 . 2901)) nil (26110 24579 717995 650000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -2928) (undo-tree-id715 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -2929) (undo-tree-id716 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -2930) (undo-tree-id717 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -2931) (undo-tree-id718 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -2932) (undo-tree-id719 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -2933) (undo-tree-id720 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -2934) (undo-tree-id721 . -1) 2935) nil (26110 24579 717993 506000) 0 nil])
([nil nil ((2928 . 2931)) nil (26110 24579 717985 150000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-variable-name-face fontified t)) . -2977) (undo-tree-id713 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -2978) (undo-tree-id714 . -1) 2979) nil (26110 24579 717983 767000) 0 nil])
([nil nil ((2977 . 2983)) nil (26110 24579 717979 659000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -2979) (undo-tree-id709 . -1) (#("c" 0 1 (face font-lock-variable-name-face fontified t)) . -2980) (undo-tree-id710 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -2981) (undo-tree-id711 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2982) (undo-tree-id712 . -1) 2983) nil (26110 24579 717978 276000) 0 nil])
([nil nil ((2979 . 2983)) nil (26110 24579 717973 116000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2980) (undo-tree-id706 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -2981) (undo-tree-id707 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -2982) (undo-tree-id708 . -1) 2983) nil (26110 24579 717971 844000) 0 nil])
([nil nil ((2980 . 2982)) nil (26110 24579 717967 335000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2980) (undo-tree-id704 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -2981) (undo-tree-id705 . -1) 2982) nil (26110 24579 717965 792000) 0 nil])
([nil nil ((2980 . 2983)) nil (26110 24579 717962 546000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -3062) (undo-tree-id700 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -3063) (undo-tree-id701 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -3064) (undo-tree-id702 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -3065) (undo-tree-id703 . -1) 3066) nil (26110 24579 717961 93000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -3061) (undo-tree-id699 . -1) 3062) nil (26110 24579 717955 151000) 0 nil])
([nil nil ((3061 . 3068)) nil (26110 24582 479407 22000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -3090) (undo-tree-id788 . -1) (#("i" 0 1 (fontified t)) . -3091) (undo-tree-id789 . -1) (#("n" 0 1 (fontified t)) . -3092) (undo-tree-id790 . -1) (#("e" 0 1 (fontified t)) . -3093) (undo-tree-id791 . -1) (#("a" 0 1 (fontified t)) . -3094) (undo-tree-id792 . -1) 3095) nil (26110 24862 255898 684000) 0 nil] [nil nil ((#("(" 0 1 (fontified t)) . -3089) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (#("l" 0 1 (fontified t)) . -3090) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (#("i" 0 1 (fontified t)) . -3091) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (#("n" 0 1 (fontified t)) . -3092) (undo-tree-id696 . -1) (#("e" 0 1 (fontified t)) . -3093) (undo-tree-id697 . -1) (#("a" 0 1 (fontified t)) . -3094) (undo-tree-id698 . -1) 3095) ((3089 . 3095)) (26110 24581 793219 275000) 0 nil])
([nil nil ((3090 . 3097)) nil (26110 24862 255894 768000) 0 nil])
([nil nil ((3089 . 3091)) ((#("re" 0 1 (fontified t) 1 2 (fontified t)) . 3089) (undo-tree-id758 . -2) (undo-tree-id759 . -1) (undo-tree-id760 . -2) (undo-tree-id761 . -1) (undo-tree-id762 . -2)) (26110 24579 720073 432000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -3100) (undo-tree-id786 . -1) (#("r" 0 1 (fontified t)) . -3101) (undo-tree-id787 . -1) 3102) nil (26110 24862 255893 817000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3089) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (#("e" 0 1 (fontified t)) . -3090) (undo-tree-id685 . -1) (undo-tree-id686 . -1) 3091) ((3089 . 3091)) (26110 24579 717927 297000) 0 nil])
([nil nil ((3100 . 3106)) nil (26110 24862 255891 493000) 0 nil])
nil
([nil nil ((#("n" 0 1 (fontified t)) . -3145) (undo-tree-id780 . -1) (#("t" 0 1 (fontified t)) . -3146) (undo-tree-id781 . -1) (#("r" 0 1 (fontified t)) . -3147) (undo-tree-id782 . -1) (#("a" 0 1 (fontified t)) . -3148) (undo-tree-id783 . -1) (#("d" 0 1 (fontified t)) . -3149) (undo-tree-id784 . -1) (#("a" 0 1 (fontified t)) . -3150) (undo-tree-id785 . -1) 3151) nil (26110 24862 255848 776000) 0 nil])
([nil nil ((3145 . 3147)) nil (26110 24862 255833 812000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3144) (undo-tree-id777 . -1) (#("c" 0 1 (fontified t)) . -3145) (undo-tree-id778 . -1) (#("a" 0 1 (fontified t)) . -3146) (undo-tree-id779 . -1) 3147) nil (26110 24862 255832 460000) 0 nil])
([nil nil ((3144 . 3148)) nil (26110 24862 255829 496000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3146) (undo-tree-id775 . -1) (#("t" 0 1 (fontified t)) . -3147) (undo-tree-id776 . -1) 3148) nil (26110 24862 255828 434000) 0 nil])
([nil nil ((3146 . 3147)) nil (26110 24862 255813 721000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3258) (undo-tree-id771 . -1) (#("a" 0 1 (fontified t)) . -3259) (undo-tree-id772 . -1) (#("d" 0 1 (fontified t)) . -3260) (undo-tree-id773 . -1) (#("a" 0 1 (fontified t)) . -3261) (undo-tree-id774 . -1) 3262) nil (26110 24862 255812 639000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3255) (undo-tree-id768 . -1) (#("n" 0 1 (fontified t)) . -3256) (undo-tree-id769 . -1) (#("t" 0 1 (fontified t)) . -3257) (undo-tree-id770 . -1) 3258) nil (26110 24862 255808 653000) 0 nil])
([nil nil ((3255 . 3258)) nil (26110 24862 255805 178000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -3155) (undo-tree-id763 . -1) (#("i" 0 1 (fontified t)) . -3156) (undo-tree-id764 . -1) (#("n" 0 1 (fontified t)) . -3157) (undo-tree-id765 . -1) (#("e" 0 1 (fontified t)) . -3158) (undo-tree-id766 . -1) (#("a" 0 1 (fontified t)) . -3159) (undo-tree-id767 . -1) 3160) nil (26110 24862 255802 133000) 0 nil])
([nil nil ((3155 . 3162)) nil (26110 24862 255786 178000) 0 nil])
([nil nil ((270 . 271) (t 26110 24862 268314 491000)) nil (26110 24906 479260 228000) 0 nil])
([nil nil ((270 . 274)) nil (26110 24906 479259 306000) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-type-face c-type c-decl-type-start fontified t)) . -270) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (#("M" 0 1 (face font-lock-type-face c-type c-decl-type-start fontified t)) . -271) (undo-tree-id848 . -1) (#("p" 0 1 (face font-lock-type-face c-type c-decl-type-start fontified t)) . -272) (undo-tree-id849 . -1) (#("o" 0 1 (face font-lock-type-face c-type c-decl-type-start fontified t)) . -273) (undo-tree-id850 . -1) 274) nil (26110 24906 479257 944000) 0 nil])
([nil nil ((270 . 276)) nil (26110 24906 479254 188000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face c-type c-decl-type-start fontified t)) . -274) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (#("r" 0 1 (face font-lock-type-face c-type c-decl-type-start fontified t)) . -275) (undo-tree-id844 . -1) (undo-tree-id845 . -1) 276) nil (26110 24906 479252 615000) 0 nil])
([nil nil ((274 . 275)) nil (26110 24906 479248 158000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-type-face c-type c-decl-type-start fontified t)) . -274) (undo-tree-id838 . -1) (undo-tree-id839 . -1) 275) nil (26110 24906 479247 6000) 0 nil])
([nil nil ((274 . 277)) nil (26110 24906 479243 520000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-type-face c-type c-decl-type-start fontified t)) . -270) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (#("m" 0 1 (face font-lock-type-face c-type c-decl-type-start fontified t)) . -271) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (#("p" 0 1 (face font-lock-type-face c-type c-decl-type-start fontified t)) . -272) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (#("o" 0 1 (face font-lock-type-face c-type c-decl-type-start fontified t)) . -273) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (#("r" 0 1 (face font-lock-type-face c-type c-decl-type-start fontified t)) . -274) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -275) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (#(" " 0 1 (fontified t)) . -276) (undo-tree-id836 . -1) (undo-tree-id837 . -1) 277) nil (26110 24906 479239 223000) 0 nil])
([nil nil ((nil rear-nonsticky nil 302 . 303) (nil fontified nil 270 . 303) (270 . 303)) nil (26110 24906 479201 59000) 0 nil])
([nil nil ((#("    public static Lista<String> cat() {
        Lista<String> cat = new Lista<>();
        try (BufferedReader lector = new BufferedReader(new InputStreamReader(System.in))) {
            String renglon;
            while ((renglon = lector.readLine()) != null)
                cat.agrega(renglon);
        } catch (IOException e) {
            e.printStackTrace();
        }
        return cat;
    }
" 0 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 17 (face font-lock-keyword-face fontified t) 17 18 (fontified t) 18 23 (face font-lock-type-face fontified t) 23 24 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 24 30 (face font-lock-type-face fontified t) 30 31 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 31 32 (fontified t) 32 33 (face font-lock-function-name-face fontified t) 33 34 (face font-lock-function-name-face fontified t) 34 35 (face font-lock-function-name-face fontified t) 35 39 (fontified t) 39 40 (fontified t) 40 48 (fontified t) 48 53 (face font-lock-type-face fontified t) 53 54 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 54 60 (face font-lock-type-face fontified t) 60 61 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 61 62 (fontified t) 62 63 (face font-lock-variable-name-face fontified t) 63 64 (face font-lock-variable-name-face fontified t) 64 65 (face font-lock-variable-name-face fontified t) 65 67 (fontified t) 67 68 (fontified t) 68 71 (face font-lock-keyword-face fontified t) 71 72 (fontified t) 72 77 (face font-lock-type-face fontified t) 77 78 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 78 79 (fontified t category c->-as-paren-syntax) 79 83 (fontified t) 83 91 (fontified t) 91 94 (face font-lock-keyword-face fontified t) 94 96 (fontified t) 96 109 (face font-lock-type-face fontified t) 109 110 (face font-lock-type-face c-type c-decl-id-start fontified t) 110 111 (fontified t) 111 112 (face font-lock-variable-name-face fontified t) 112 113 (face font-lock-variable-name-face fontified t) 113 114 (face font-lock-variable-name-face fontified t) 114 115 (face font-lock-variable-name-face fontified t) 115 116 (face font-lock-variable-name-face fontified t) 116 117 (face font-lock-variable-name-face fontified t) 117 119 (fontified t) 119 120 (fontified t) 120 123 (face font-lock-keyword-face fontified t) 123 124 (fontified t) 124 138 (face font-lock-type-face fontified t) 138 139 (fontified t) 139 142 (face font-lock-keyword-face fontified t) 142 143 (fontified t) 143 160 (face font-lock-type-face fontified t) 160 176 (fontified t) 176 188 (fontified t) 188 193 (face font-lock-type-face fontified t) 193 194 (face font-lock-type-face c-type c-decl-id-start fontified t) 194 195 (fontified t) 195 196 (face font-lock-variable-name-face fontified t) 196 197 (face font-lock-variable-name-face fontified t) 197 198 (face font-lock-variable-name-face fontified t) 198 199 (face font-lock-variable-name-face fontified t) 199 200 (face font-lock-variable-name-face fontified t) 200 201 (face font-lock-variable-name-face fontified t) 201 202 (face font-lock-variable-name-face fontified t) 202 203 (fontified t) 203 204 (fontified t) 204 216 (fontified t) 216 221 (face font-lock-keyword-face fontified t) 221 223 (fontified t) 223 224 (fontified t) 224 225 (fontified t) 225 226 (fontified t) 226 227 (fontified t) 227 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 233 (fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 236 (fontified t) 236 237 (fontified t) 237 238 (fontified t) 238 239 (fontified t) 239 240 (fontified t) 240 252 (fontified t) 252 256 (fontified t) 256 260 (face font-lock-constant-face fontified t) 260 262 (fontified t) 262 278 (fontified t) 278 279 (fontified t) 279 280 (fontified t) 280 281 (fontified t) 281 289 (fontified t) 289 290 (fontified t) 290 291 (fontified t) 291 292 (fontified t) 292 293 (fontified t) 293 294 (fontified t) 294 295 (fontified t) 295 296 (fontified t) 296 298 (fontified t) 298 299 (fontified t) 299 309 (fontified t) 309 314 (face font-lock-keyword-face fontified t) 314 376 (fontified t) 376 384 (fontified t) 384 390 (face font-lock-keyword-face fontified t) 390 391 (fontified t) 391 392 (fontified t) 392 393 (fontified t) 393 394 (fontified t) 394 395 (fontified t) 395 396 (fontified t) 396 400 (fontified t) 400 401 (fontified t rear-nonsticky t) 401 402 (fontified t)) . 2900) (undo-tree-id943 . -402) (t 26110 24906 494014 828000)) nil (26110 26390 691216 204000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3366 . 3367) (nil fontified nil 2954 . 3367) (nil fontified nil 2953 . 2954) (nil category c->-as-paren-syntax 2953 . 2954) (nil fontified nil 2947 . 2953) (nil fontified nil 2946 . 2947) (nil category c-<-as-paren-syntax 2946 . 2947) (nil fontified nil 2900 . 2946) (2900 . 3367)) nil (26110 26390 691214 701000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -2956) (undo-tree-id938 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -2957) (undo-tree-id939 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -2958) (undo-tree-id940 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -2959) (undo-tree-id941 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -2960) (undo-tree-id942 . -1) 2961) nil (26110 26390 691212 747000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -2965) (undo-tree-id931 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -2966) (undo-tree-id932 . -1) (#("c" 0 1 (face font-lock-variable-name-face fontified t)) . -2967) (undo-tree-id933 . -1) (#("h" 0 1 (face font-lock-variable-name-face fontified t)) . -2968) (undo-tree-id934 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -2969) (undo-tree-id935 . -1) (#("v" 0 1 (face font-lock-variable-name-face fontified t)) . -2970) (undo-tree-id936 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2971) (undo-tree-id937 . -1) 2972) nil (26110 26390 691208 159000) 0 nil])
([nil nil ((2965 . 2966)) nil (26110 26390 691203 270000) 0 nil])
([nil nil ((#("F" 0 1 (face font-lock-variable-name-face fontified t)) . -2965) (undo-tree-id930 . -1) 2966) nil (26110 26390 691202 629000) 0 nil])
([nil nil ((2965 . 2966)) nil (26110 26390 691201 407000) 0 nil])
([nil nil ((2966 . 2969)) nil (26110 26390 691200 906000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -2967) (undo-tree-id928 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -2968) (undo-tree-id929 . -1) 2969) nil (26110 26390 691200 134000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -2966) (undo-tree-id927 . -1) 2967) nil (26110 26390 691198 321000) 0 nil])
([nil nil ((#("// Agregar una nueva lรญnea despuรฉs de cada lรญnea" 0 1 (c-is-sws t face font-lock-comment-delimiter-face fontified t) 1 3 (face font-lock-comment-delimiter-face fontified t) 3 48 (face font-lock-comment-face fontified t)) . -3150) (undo-tree-id926 . -48) 3198) nil (26110 26390 691197 79000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3038) (undo-tree-id919 . -1) (#("r" 0 1 (fontified t)) . -3039) (undo-tree-id920 . -1) (#("c" 0 1 (fontified t)) . -3040) (undo-tree-id921 . -1) (#("h" 0 1 (fontified t)) . -3041) (undo-tree-id922 . -1) (#("i" 0 1 (fontified t)) . -3042) (undo-tree-id923 . -1) (#("v" 0 1 (fontified t)) . -3043) (undo-tree-id924 . -1) (#("o" 0 1 (fontified t)) . -3044) (undo-tree-id925 . -1) 3045) nil (26110 26390 691195 256000) 0 nil])
([nil nil ((3038 . 3039)) nil (26110 26390 691190 256000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -3070) (undo-tree-id915 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -3071) (undo-tree-id916 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -3072) (undo-tree-id917 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -3073) (undo-tree-id918 . -1) 3074) nil (26110 26390 691189 224000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -3073) (undo-tree-id909 . -1) (#("i" 0 1 (fontified t)) . -3074) (undo-tree-id910 . -1) (#("n" 0 1 (fontified t)) . -3075) (undo-tree-id911 . -1) (#("e" 0 1 (fontified t)) . -3076) (undo-tree-id912 . -1) (#("a" 0 1 (fontified t)) . -3077) (undo-tree-id913 . -1) (#("s" 0 1 (fontified t)) . -3078) (undo-tree-id914 . -1) 3079) nil (26110 26390 691185 528000) 0 nil])
([nil nil ((3073 . 3075)) nil (26110 26390 691181 240000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3073) (undo-tree-id907 . -1) (#("e" 0 1 (fontified t)) . -3074) (undo-tree-id908 . -1) 3075) nil (26110 26390 691180 448000) 0 nil])
([nil nil ((3073 . 3082)) nil (26110 26390 691178 485000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -3110) (undo-tree-id902 . -1) (#("i" 0 1 (fontified t)) . -3111) (undo-tree-id903 . -1) (#("n" 0 1 (fontified t)) . -3112) (undo-tree-id904 . -1) (#("e" 0 1 (fontified t)) . -3113) (undo-tree-id905 . -1) (#("a" 0 1 (fontified t)) . -3114) (undo-tree-id906 . -1) 3115) nil (26110 26390 691177 22000) 0 nil])
([nil nil ((3110 . 3111)) nil (26110 26390 691172 855000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -3218) (undo-tree-id881 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -3219) (undo-tree-id882 . -1) (#("b" 0 1 (face font-lock-string-face fontified t)) . -3220) (undo-tree-id883 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -3221) (undo-tree-id884 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -3222) (undo-tree-id885 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -3223) (undo-tree-id886 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -3224) (undo-tree-id887 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -3225) (undo-tree-id888 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -3226) (undo-tree-id889 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -3227) (undo-tree-id890 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -3228) (undo-tree-id891 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -3229) (undo-tree-id892 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -3230) (undo-tree-id893 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -3231) (undo-tree-id894 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -3232) (undo-tree-id895 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -3233) (undo-tree-id896 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -3234) (undo-tree-id897 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -3235) (undo-tree-id898 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -3236) (undo-tree-id899 . -1) (#(":" 0 1 (face font-lock-string-face fontified t)) . -3237) (undo-tree-id900 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -3238) (undo-tree-id901 . -1) 3239) nil (26110 26390 691169 889000) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-string-face fontified t)) . -3206) (undo-tree-id869 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -3207) (undo-tree-id870 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -3208) (undo-tree-id871 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -3209) (undo-tree-id872 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -3210) (undo-tree-id873 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -3211) (undo-tree-id874 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -3212) (undo-tree-id875 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -3213) (undo-tree-id876 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -3214) (undo-tree-id877 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -3215) (undo-tree-id878 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -3216) (undo-tree-id879 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -3217) (undo-tree-id880 . -1) 3218) nil (26110 26390 691154 311000) 0 nil])
([nil nil ((3206 . 3209)) nil (26110 26390 691146 466000) 0 nil])
([nil nil ((3209 . 3210)) nil (26110 26390 691145 985000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-string-face fontified t)) . -3209) (undo-tree-id868 . -1) 3210) nil (26110 26390 691145 324000) 0 nil])
([nil nil ((3209 . 3216)) nil (26110 26390 691143 942000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-string-face fontified t)) . -3212) (undo-tree-id864 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -3213) (undo-tree-id865 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -3214) (undo-tree-id866 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -3215) (undo-tree-id867 . -1) 3216) nil (26110 26390 691142 720000) 0 nil])
([nil nil ((3212 . 3216)) nil (26110 26390 691139 383000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . -3215) (undo-tree-id863 . -1) 3216) nil (26110 26390 691138 311000) 0 nil])
([nil nil ((3215 . 3217)) nil (26110 26390 691136 418000) 0 nil])
([nil nil ((3217 . 3219)) nil (26110 26390 691135 937000) 0 nil])
([nil nil ((3212 . 3233)) nil (26110 26390 691135 376000) 0 nil])
([nil nil ((3233 . 3236)) nil (26110 26390 691134 765000) 0 nil])
([nil nil ((3243 . 3244)) nil (26110 26390 691134 94000) 0 nil])
([nil nil ((3244 . 3245)) nil (26110 26390 691133 162000) 0 nil])
([nil nil ((3256 . 3259)) nil (26110 26390 691131 629000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3256) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (#("+" 0 1 (fontified t)) . -3257) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (#(" " 0 1 (fontified t)) . -3258) (undo-tree-id861 . -1) (undo-tree-id862 . -1) 3259) nil (26110 26390 691127 382000) 0 nil])
([nil nil ((2896 . 2900) (#("    " 0 4 (fontified nil)) . 2895) (undo-tree-id968 . -4) (undo-tree-id969 . -4) (undo-tree-id970 . -4) (undo-tree-id971 . -4) (undo-tree-id972 . -4) (2899 . 2900) (t 26110 26390 703261 886000)) nil (26110 26462 16310 866000) 0 nil])
([nil nil ((2895 . 2899)) nil (26110 26462 16307 290000) 0 nil])
([nil nil ((2896 . 2900) (#("    " 0 4 (fontified nil)) . 2895) (undo-tree-id967 . -4) (2899 . 2900)) nil (26110 26462 16306 398000) 0 nil])
([nil nil ((2900 . 2909)) nil (26110 26462 16304 745000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -2907) (undo-tree-id965 . -1) (#("n" 0 1 (fontified t)) . -2908) (undo-tree-id966 . -1) 2909) nil (26110 26462 16303 793000) 0 nil])
([nil nil ((2907 . 2912)) nil (26110 26462 16300 267000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2908) (undo-tree-id961 . -1) (#("i" 0 1 (fontified t)) . -2909) (undo-tree-id962 . -1) (#("t" 0 1 (fontified t)) . -2910) (undo-tree-id963 . -1) (#("a" 0 1 (fontified t)) . -2911) (undo-tree-id964 . -1) 2912) nil (26110 26462 16299 105000) 0 nil])
([nil nil ((2908 . 2912)) nil (26110 26462 16295 248000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2911) (undo-tree-id960 . -1) 2912) nil (26110 26462 16294 577000) 0 nil])
([nil nil ((2911 . 2912)) nil (26110 26462 16293 64000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -2907) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (#("i" 0 1 (fontified t)) . -2908) (undo-tree-id956 . -1) (#("s" 0 1 (fontified t)) . -2909) (undo-tree-id957 . -1) (#("t" 0 1 (fontified t)) . -2910) (undo-tree-id958 . -1) (#("a" 0 1 (fontified t)) . -2911) (undo-tree-id959 . -1) 2912) nil (26110 26462 16291 491000) 0 nil])
([nil nil ((2907 . 2914)) nil (26110 26462 16286 151000) 0 nil])
([nil nil ((2913 . 2916)) nil (26110 26462 16285 630000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-type-face fontified t)) . -2915) (undo-tree-id952 . -1) (undo-tree-id953 . -1) 2916) nil (26110 26462 16284 929000) 0 nil])
([nil nil ((2915 . 2919)) nil (26110 26462 16282 755000) 0 nil])
([nil nil ((2920 . 2922)) nil (26110 26462 16282 154000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2921) (undo-tree-id950 . -1) (undo-tree-id951 . -1) 2922) nil (26110 26462 16281 262000) 0 nil])
([nil nil ((2921 . 2923)) nil (26110 26462 16279 218000) 0 nil])
([nil nil ((2923 . 2926)) nil (26110 26462 16278 497000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -2924) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (#("g" 0 1 (face font-lock-variable-name-face fontified t)) . -2925) (undo-tree-id948 . -1) (undo-tree-id949 . -1) 2926) nil (26110 26462 16276 553000) 0 nil])
([nil nil ((2924 . 2930)) nil (26110 26462 16262 568000) 0 nil])
([nil nil ((2930 . 2931)) nil (26110 26462 16259 81000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3286) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (#("r" 0 1 (fontified t)) . -3287) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (#("c" 0 1 (fontified t)) . -3288) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (#("h" 0 1 (fontified t)) . -3289) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (#("i" 0 1 (fontified t)) . -3290) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (#("v" 0 1 (fontified t)) . -3291) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (#("o" 0 1 (fontified t)) . -3292) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) 3293 (t 26110 26462 27103 670000)) nil (26110 26484 887796 469000) 0 nil])
([nil nil ((3286 . 3287)) nil (26110 26484 887736 68000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-function-name-face fontified t)) . -2960) (undo-tree-id1021 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -2961) (undo-tree-id1022 . -1) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -2962) (undo-tree-id1023 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -2963) (undo-tree-id1024 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -2964) (undo-tree-id1025 . -1) (#("b" 0 1 (face font-lock-function-name-face fontified t)) . -2965) (undo-tree-id1026 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -2966) (undo-tree-id1027 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -2967) (undo-tree-id1028 . -1) (#("E" 0 1 (face font-lock-function-name-face fontified t)) . -2968) (undo-tree-id1029 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -2969) (undo-tree-id1030 . -1) (#("A" 0 1 (face font-lock-function-name-face fontified t)) . -2970) (undo-tree-id1031 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -2971) (undo-tree-id1032 . -1) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -2972) (undo-tree-id1033 . -1) (#("h" 0 1 (face font-lock-function-name-face fontified t)) . -2973) (undo-tree-id1034 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -2974) (undo-tree-id1035 . -1) (#("v" 0 1 (face font-lock-function-name-face fontified t)) . -2975) (undo-tree-id1036 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -2976) (undo-tree-id1037 . -1) 2977 (t 26110 26484 899679 159000)) nil (26110 26538 844441 831000) 0 nil])
([nil nil ((2960 . 2963)) nil (26110 26538 844428 907000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-function-name-face fontified t)) . -2962) (undo-tree-id1020 . -1) 2963) nil (26110 26538 844428 316000) 0 nil])
([nil nil ((2962 . 2963)) nil (26110 26538 844427 14000) 0 nil])
([nil nil ((2964 . 2974)) nil (26110 26538 844426 503000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2972) (undo-tree-id1019 . -1) 2973) nil (26110 26538 844425 872000) 0 nil])
([nil nil ((2972 . 2973)) nil (26110 26538 844424 599000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2972) (undo-tree-id1018 . -1) 2973) nil (26110 26538 844423 788000) 0 nil])
([nil nil ((2972 . 2973)) nil (26110 26538 844422 35000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2972) (undo-tree-id1017 . -1) 2973) nil (26110 26538 844421 33000) 0 nil])
([nil nil ((2972 . 2973)) nil (26110 26539 195867 158000) 0 nil])
([nil nil ((#("," 0 1 (c-type c-decl-arg-start fontified t)) . -2989) (undo-tree-id1048 . -1) (#(" " 0 1 (fontified t)) . -2990) (undo-tree-id1049 . -1) (#("S" 0 1 (face font-lock-type-face fontified t)) . -2991) (undo-tree-id1050 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -2992) (undo-tree-id1051 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -2993) (undo-tree-id1052 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -2994) (undo-tree-id1053 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -2995) (undo-tree-id1054 . -1) (#("g" 0 1 (face font-lock-type-face fontified t)) . -2996) (undo-tree-id1055 . -1) (#(" " 0 1 (fontified t)) . -2997) (undo-tree-id1056 . -1) (#("f" 0 1 (face font-lock-variable-name-face fontified t)) . -2998) (undo-tree-id1057 . -1) 2999) nil (26110 26605 719238 239000) 0 nil] [nil nil ((#(" Lista<String> l" 0 1 (fontified t) 1 6 (face font-lock-type-face fontified t) 6 7 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 7 13 (face font-lock-type-face fontified t) 13 14 (fontified t category c->-as-paren-syntax) 14 15 (fontified t) 15 16 (face font-lock-variable-name-face fontified t)) . -2973) (undo-tree-id1016 . -16) 2989) ((2973 . 2989)) (26110 26538 845188 770000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -3092) (undo-tree-id1047 . -1) 3093) nil (26110 26605 719223 561000) 0 nil])
([nil nil ((#("," 0 1 (c-type c-decl-arg-start fontified t)) . -2973) (undo-tree-id1015 . -1) 2974) ((2973 . 2974)) (26110 26538 844411 856000) 0 nil])
([nil nil ((3092 . 3097)) nil (26110 26605 719221 808000) 0 nil])
nil
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -3093) (undo-tree-id1043 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -3094) (undo-tree-id1044 . -1) (#("g" 0 1 (face font-lock-variable-name-face fontified t)) . -3095) (undo-tree-id1045 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -3096) (undo-tree-id1046 . -1) 3097) nil (26110 26605 719220 616000) 0 nil])
([nil nil ((3093 . 3097)) nil (26110 26605 719215 837000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -3092) (undo-tree-id1038 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -3093) (undo-tree-id1039 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -3094) (undo-tree-id1040 . -1) (#("g" 0 1 (face font-lock-variable-name-face fontified t)) . -3095) (undo-tree-id1041 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -3096) (undo-tree-id1042 . -1) 3097) nil (26110 26605 719211 409000) 0 nil])
([nil nil ((3092 . 3095)) nil (26110 26605 719188 947000) 0 nil])
([nil nil ((3095 . 3100)) nil (26110 27148 817146 309000) 0 nil])
([nil nil ((#("ublic static void cat(String f, Lista<String> l) {
        try (BufferedWriter out = new BufferedWriter(new FileWriter(f))) {
            for (String columnas : renglones)
                out.write(l + System.lineSeparator()); 
        } catch (IOException e) {
            System.out.println(\"Ups.. oucrriรณ un error con el archivo: \" + f);
            System.exit(-1);
        }
    }" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 16 (face font-lock-type-face fontified t) 16 17 (face font-lock-type-face c-type c-decl-id-start fontified t) 17 18 (fontified t) 18 19 (face font-lock-function-name-face fontified t) 19 20 (face font-lock-function-name-face fontified t) 20 21 (face font-lock-function-name-face fontified t) 21 22 (c-type c-decl-arg-start fontified t) 22 23 (face font-lock-type-face fontified t) 23 24 (face font-lock-type-face fontified t) 24 25 (face font-lock-type-face fontified t) 25 26 (face font-lock-type-face fontified t) 26 27 (face font-lock-type-face fontified t) 27 28 (face font-lock-type-face fontified t) 28 29 (fontified t) 29 30 (face font-lock-variable-name-face fontified t) 30 31 (c-type c-decl-arg-start fontified t) 31 32 (fontified t) 32 37 (face font-lock-type-face fontified t) 37 38 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 38 44 (face font-lock-type-face fontified t) 44 45 (fontified t category c->-as-paren-syntax) 45 46 (fontified t) 46 47 (face font-lock-variable-name-face fontified t) 47 50 (fontified t) 50 51 (fontified t) 51 59 (fontified t) 59 62 (face font-lock-keyword-face fontified t) 62 64 (fontified t) 64 77 (fontified t face font-lock-type-face) 77 78 (fontified t face font-lock-type-face c-type c-decl-id-start) 78 79 (fontified t) 79 82 (fontified t face font-lock-variable-name-face) 82 85 (fontified t) 85 88 (fontified t face font-lock-keyword-face) 88 89 (fontified t) 89 103 (fontified t face font-lock-type-face) 103 104 (fontified t) 104 107 (fontified t face font-lock-keyword-face) 107 108 (fontified t) 108 118 (fontified t face font-lock-type-face) 118 119 (fontified t) 119 120 (fontified t) 120 122 (fontified t) 122 126 (fontified t) 126 138 (fontified t) 138 141 (face font-lock-keyword-face fontified t) 141 143 (fontified t) 143 148 (face font-lock-type-face fontified t) 148 149 (face font-lock-type-face c-type c-decl-id-start fontified t) 149 150 (fontified t) 150 151 (face font-lock-variable-name-face fontified t) 151 152 (face font-lock-variable-name-face fontified t) 152 153 (face font-lock-variable-name-face fontified t) 153 154 (face font-lock-variable-name-face fontified t) 154 155 (face font-lock-variable-name-face fontified t) 155 156 (face font-lock-variable-name-face fontified t) 156 157 (face font-lock-variable-name-face fontified t) 157 158 (face font-lock-variable-name-face fontified t) 158 160 (fontified t) 160 161 (fontified t) 161 162 (fontified t) 162 163 (fontified t) 163 164 (fontified t) 164 165 (fontified t) 165 166 (fontified t) 166 167 (fontified t) 167 168 (fontified t) 168 169 (fontified t) 169 170 (fontified t) 170 172 (fontified t) 172 198 (fontified t) 198 199 (fontified t) 199 225 (fontified t) 225 226 (fontified t) 226 227 (fontified t) 227 228 (fontified t) 228 236 (fontified t) 236 237 (fontified t) 237 238 (fontified t) 238 243 (face font-lock-keyword-face fontified t) 243 262 (fontified t) 262 293 (fontified t) 293 294 (face font-lock-string-face fontified t) 294 295 (face font-lock-string-face fontified t) 295 296 (face font-lock-string-face fontified t) 296 297 (face font-lock-string-face fontified t) 297 298 (face font-lock-string-face fontified t) 298 299 (face font-lock-string-face fontified t) 299 300 (face font-lock-string-face fontified t) 300 301 (face font-lock-string-face fontified t) 301 302 (face font-lock-string-face fontified t) 302 303 (face font-lock-string-face fontified t) 303 304 (face font-lock-string-face fontified t) 304 305 (face font-lock-string-face fontified t) 305 306 (face font-lock-string-face fontified t) 306 307 (face font-lock-string-face fontified t) 307 308 (face font-lock-string-face fontified t) 308 309 (face font-lock-string-face fontified t) 309 310 (face font-lock-string-face fontified t) 310 311 (face font-lock-string-face fontified t) 311 312 (face font-lock-string-face fontified t) 312 313 (face font-lock-string-face fontified t) 313 314 (face font-lock-string-face fontified t) 314 315 (face font-lock-string-face fontified t) 315 316 (face font-lock-string-face fontified t) 316 317 (face font-lock-string-face fontified t) 317 318 (face font-lock-string-face fontified t) 318 319 (face font-lock-string-face fontified t) 319 320 (face font-lock-string-face fontified t) 320 321 (face font-lock-string-face fontified t) 321 322 (face font-lock-string-face fontified t) 322 323 (face font-lock-string-face fontified t) 323 324 (face font-lock-string-face fontified t) 324 325 (face font-lock-string-face fontified t) 325 326 (face font-lock-string-face fontified t) 326 327 (face font-lock-string-face fontified t) 327 328 (face font-lock-string-face fontified t) 328 329 (face font-lock-string-face fontified t) 329 330 (face font-lock-string-face fontified t) 330 331 (face font-lock-string-face fontified t) 331 332 (face font-lock-string-face fontified t) 332 333 (face font-lock-string-face fontified t) 333 334 (face font-lock-string-face fontified t) 334 337 (fontified t) 337 338 (fontified t) 338 340 (fontified t) 340 341 (fontified t) 341 384 (fontified t) 384 385 (fontified t rear-nonsticky t)) . 2942) (undo-tree-id1121 . -385) (undo-tree-id1122 . -227) (undo-tree-id1123 . -31) (t 26110 27154 847765 911000)) nil (26110 27289 948239 51000) 0 nil] [nil nil ((#("package mx.unam.ciencias.edd.proyecto1;
import mx.unam.ciencias.edd.Lista;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.BufferedReader;
import java.io.IOException;
import java.text.Normalizer;
import java.io.InputStreamReader;

public class Banderas{
    String[] argumentos;
    boolean r = false;
    boolean o = false;
    String id = \"\";
    String file = \"\";
    
    public Banderas(String[] args){
	argumentos = args;
    }

    public void argumentos(String[] argumentos){
	for(int i = 0; i<argumentos.length; i++){
	    if(argumentos[i].equals(\"-r\")){
		if(r){
		    System.out.println(\"La bandera -r solo se puede colocar una vez\");
		    System.exit(-1);
		}

		r = true;
	    } else if(argumentos[i].equals(\"-o\")){
		if(o){
		    System.out.println(\"La bandera -o solo se puede colocar una vez\");
		    System.exit(-1);
		}

		if(i+1 < argumentos.length) {
		    id = argumentos[i+1];
		    i++;
		} else {
		    System.out.println(\"ERROR\");
		}
		
		o = true;
		
	    } 
	 
	}
	
    }

    public Lista<String> reader(String archivo){
    
	Lista<String> lista = new Lista<>();
	try{
	    FileReader lectorArchivo = new FileReader(archivo);
	    BufferedReader lector = new BufferedReader(lectorArchivo);
	    
	    String renglon;
	    
	    while((renglon = lector.readLine()) != null)
		lista.agrega(renglon);

	    lector.close();
	    
	} catch(IOException e){
	    System.out.println(\"\\nAlgo saliรณ mal: \\n\");
	    e.printStackTrace();	    
	}

	return lista;
		
    }

    public Lista<String> fileReader(String[] args){
	Lista<String> l = new Lista<>();
	for(int i=0; i < args.length; i++){
	    String b = args[i];
	    if(b.equals(\"-r\") || b.equals(\"-o\"))
		continue;
	    
	    Lista<String> fr = reader(args[i]);
	    for(String r : fr)
		l.agrega(r);
	}
	return l;
    }


    public static void writer(String nombreArchivo, Lista<String> lista) {
	try (BufferedWriter escritor = new BufferedWriter(new FileWriter(nombreArchivo))) {
	    for (String elemento : lista) {
		escritor.write(elemento);
		escritor.newLine(); 
	    }
	    System.out.println(\"Archivo guardado correctamente\");
	} catch (IOException e) {
        System.out.println(\"\\nAlgo saliรณ mal al guardar el archivo: \\n\");
        e.printStackTrace();
	}
    }
    
    
    public static Lista<String> ordenar(Lista<String> l){
	return l.mergeSort((a,b) -> {
		String aSinMayus = a.toLowerCase().replaceAll(\" \",\"\");
		String aLimpio = Normalizer.normalize(aSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
		String bSinMayus = b.toLowerCase().replaceAll(\" \",\"\");
		String bLimpio = Normalizer.normalize(bSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
		
		return aLimpio.compareTo(bLimpio);
		
	    }); 
	
	
    }

    public static Lista<String> reverso(Lista<String> l){
	return ordenar(l).reversa();
    }

    static Lista<String> renglones;
    
    public static void cat(String f, Lista<String> l) {
        try (BufferedWriter out = new BufferedWriter(new FileWriter(f))) {
            for (String columnas : renglones)
                out.write(l + System.lineSeparator()); 
        } catch (IOException e) {
            System.out.println(\"Ups.. oucrriรณ un error con el archivo: \" + f);
            System.exit(-1);
        }
    }    
}
" 0 7 (face font-lock-keyword-face fontified t) 7 29 (fontified t) 29 37 (face font-lock-constant-face fontified t) 37 38 (face font-lock-constant-face c-type c-decl-id-start fontified t) 38 40 (fontified t) 40 46 (face font-lock-keyword-face fontified t) 46 47 (fontified t) 47 49 (face font-lock-constant-face fontified t) 49 50 (fontified t) 50 54 (face font-lock-constant-face fontified t) 54 55 (fontified t) 55 63 (face font-lock-constant-face fontified t) 63 64 (fontified t) 64 67 (face font-lock-constant-face fontified t) 67 68 (fontified t) 68 72 (face font-lock-type-face fontified t) 72 73 (face font-lock-type-face c-type c-decl-id-start fontified t) 73 75 (fontified t) 75 76 (face font-lock-keyword-face fontified t) 76 77 (face font-lock-keyword-face fontified t) 77 78 (face font-lock-keyword-face fontified t) 78 79 (face font-lock-keyword-face fontified t) 79 80 (face font-lock-keyword-face fontified t) 80 81 (face font-lock-keyword-face fontified t) 81 82 (fontified t) 82 83 (face font-lock-constant-face fontified t) 83 84 (face font-lock-constant-face fontified t) 84 85 (face font-lock-constant-face fontified t) 85 86 (face font-lock-constant-face fontified t) 86 87 (fontified t) 87 88 (face font-lock-constant-face fontified t) 88 89 (face font-lock-constant-face fontified t) 89 90 (fontified t) 90 91 (face font-lock-type-face fontified t) 91 92 (face font-lock-type-face fontified t) 92 93 (face font-lock-type-face fontified t) 93 94 (face font-lock-type-face c-type c-decl-id-start fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 102 (face font-lock-keyword-face fontified t) 102 103 (fontified t) 103 107 (face font-lock-constant-face fontified t) 107 108 (fontified t) 108 110 (face font-lock-constant-face fontified t) 110 111 (fontified t) 111 120 (face font-lock-type-face fontified t) 120 121 (face font-lock-type-face c-type c-decl-id-start fontified t) 121 122 (fontified t) 122 123 (fontified t) 123 129 (face font-lock-keyword-face fontified t) 129 130 (fontified t) 130 134 (face font-lock-constant-face fontified t) 134 135 (fontified t) 135 137 (face font-lock-constant-face fontified t) 137 138 (fontified t) 138 147 (face font-lock-type-face fontified t) 147 148 (face font-lock-type-face c-type c-decl-id-start fontified t) 148 150 (fontified t) 150 156 (face font-lock-keyword-face fontified t) 156 157 (fontified t) 157 161 (face font-lock-constant-face fontified t) 161 162 (fontified t) 162 164 (face font-lock-constant-face fontified t) 164 165 (fontified t) 165 178 (face font-lock-type-face fontified t) 178 179 (face font-lock-type-face c-type c-decl-id-start fontified t) 179 181 (fontified t) 181 187 (face font-lock-keyword-face fontified t) 187 188 (fontified t) 188 192 (face font-lock-constant-face fontified t) 192 193 (fontified t) 193 195 (face font-lock-constant-face fontified t) 195 196 (fontified t) 196 209 (face font-lock-type-face fontified t) 209 210 (face font-lock-type-face c-type c-decl-id-start fontified t) 210 212 (fontified t) 212 218 (face font-lock-keyword-face fontified t) 218 219 (fontified t) 219 223 (face font-lock-constant-face fontified t) 223 224 (fontified t) 224 226 (face font-lock-constant-face fontified t) 226 227 (fontified t) 227 237 (face font-lock-type-face fontified t) 237 238 (face font-lock-type-face c-type c-decl-id-start fontified t) 238 240 (fontified t) 240 246 (face font-lock-keyword-face fontified t) 246 247 (fontified t) 247 251 (face font-lock-constant-face fontified t) 251 252 (fontified t) 252 256 (face font-lock-constant-face fontified t) 256 257 (fontified t) 257 266 (face font-lock-type-face fontified t) 266 267 (face font-lock-type-face c-type c-decl-id-start fontified t) 267 269 (fontified t) 269 275 (face font-lock-keyword-face fontified t) 275 276 (fontified t) 276 280 (face font-lock-constant-face fontified t) 280 281 (fontified t) 281 283 (face font-lock-constant-face fontified t) 283 284 (fontified t) 284 300 (face font-lock-type-face fontified t) 300 301 (face font-lock-type-face c-type c-decl-id-start fontified t) 301 302 (rear-nonsticky t fontified t) 302 303 (fontified t) 303 304 (fontified t) 304 310 (face font-lock-keyword-face fontified t) 310 311 (fontified t) 311 315 (face font-lock-keyword-face fontified t) 315 316 (c-type c-decl-type-start face font-lock-keyword-face fontified t) 316 317 (fontified t) 317 324 (face font-lock-type-face fontified t) 324 325 (face font-lock-type-face fontified t) 325 326 (fontified t) 326 331 (fontified t) 331 337 (face font-lock-type-face fontified t) 337 338 (fontified t) 338 339 (c-type c-decl-id-start fontified t) 339 340 (fontified t) 340 350 (face font-lock-variable-name-face fontified t) 350 356 (fontified t) 356 362 (face font-lock-type-face fontified t) 362 363 (face font-lock-type-face c-type c-decl-id-start fontified t) 363 364 (fontified t) 364 365 (face font-lock-variable-name-face fontified t) 365 368 (fontified t) 368 373 (face font-lock-constant-face fontified t) 373 379 (fontified t) 379 385 (face font-lock-type-face fontified t) 385 386 (face font-lock-type-face c-type c-decl-id-start fontified t) 386 387 (fontified t) 387 388 (face font-lock-variable-name-face fontified t) 388 391 (fontified t) 391 396 (face font-lock-constant-face fontified t) 396 402 (fontified t) 402 407 (face font-lock-type-face fontified t) 407 408 (face font-lock-type-face c-type c-decl-id-start fontified t) 408 409 (fontified t) 409 411 (face font-lock-variable-name-face fontified t) 411 414 (fontified t) 414 416 (face font-lock-string-face fontified t) 416 422 (fontified t) 422 427 (face font-lock-type-face fontified t) 427 428 (face font-lock-type-face c-type c-decl-id-start fontified t) 428 429 (fontified t) 429 433 (face font-lock-variable-name-face fontified t) 433 436 (fontified t) 436 438 (face font-lock-string-face fontified t) 438 449 (fontified t) 449 455 (face font-lock-keyword-face fontified t) 455 465 (fontified t) 465 471 (fontified t) 471 512 (fontified t) 512 518 (face font-lock-keyword-face fontified t) 518 519 (fontified t) 519 522 (face font-lock-type-face fontified t) 522 523 (face font-lock-type-face c-type c-decl-id-start fontified t) 523 524 (fontified t) 524 534 (face font-lock-function-name-face fontified t) 534 535 (c-type c-decl-arg-start fontified t) 535 541 (face font-lock-type-face fontified t) 541 544 (fontified t) 544 554 (face font-lock-variable-name-face fontified t) 554 557 (fontified t) 557 558 (fontified t) 558 561 (face font-lock-keyword-face fontified t) 561 562 (fontified t) 562 564 (face font-lock-type-face fontified t) 564 565 (face font-lock-type-face c-type c-decl-id-start fontified t) 565 566 (fontified t) 566 567 (face font-lock-variable-name-face fontified t) 567 586 (fontified t) 586 592 (face font-lock-type-face fontified t) 592 605 (fontified t) 605 607 (face font-lock-keyword-face fontified t) 607 629 (fontified t) 629 633 (face font-lock-string-face fontified t) 633 639 (fontified t) 639 641 (face font-lock-keyword-face fontified t) 641 646 (fontified t) 646 671 (fontified t) 671 672 (face font-lock-string-face fontified t) 672 673 (face font-lock-string-face fontified t) 673 674 (face font-lock-string-face fontified t) 674 675 (face font-lock-string-face fontified t) 675 676 (face font-lock-string-face fontified t) 676 677 (face font-lock-string-face fontified t) 677 678 (face font-lock-string-face fontified t) 678 679 (face font-lock-string-face fontified t) 679 680 (face font-lock-string-face fontified t) 680 681 (face font-lock-string-face fontified t) 681 682 (face font-lock-string-face fontified t) 682 683 (face font-lock-string-face fontified t) 683 684 (face font-lock-string-face fontified t) 684 685 (face font-lock-string-face fontified t) 685 686 (face font-lock-string-face fontified t) 686 687 (face font-lock-string-face fontified t) 687 688 (face font-lock-string-face fontified t) 688 689 (face font-lock-string-face fontified t) 689 690 (face font-lock-string-face fontified t) 690 691 (face font-lock-string-face fontified t) 691 692 (face font-lock-string-face fontified t) 692 693 (face font-lock-string-face fontified t) 693 694 (face font-lock-string-face fontified t) 694 695 (face font-lock-string-face fontified t) 695 696 (face font-lock-string-face fontified t) 696 697 (face font-lock-string-face fontified t) 697 698 (face font-lock-string-face fontified t) 698 699 (face font-lock-string-face fontified t) 699 700 (face font-lock-string-face fontified t) 700 701 (face font-lock-string-face fontified t) 701 702 (face font-lock-string-face fontified t) 702 703 (face font-lock-string-face fontified t) 703 704 (face font-lock-string-face fontified t) 704 705 (face font-lock-string-face fontified t) 705 706 (face font-lock-string-face fontified t) 706 707 (face font-lock-string-face fontified t) 707 708 (face font-lock-string-face fontified t) 708 709 (face font-lock-string-face fontified t) 709 710 (face font-lock-string-face fontified t) 710 711 (face font-lock-string-face fontified t) 711 712 (face font-lock-string-face fontified t) 712 713 (face font-lock-string-face fontified t) 713 714 (face font-lock-string-face fontified t) 714 715 (face font-lock-string-face fontified t) 715 716 (face font-lock-string-face fontified t) 716 719 (fontified t) 719 746 (fontified t) 746 753 (fontified t) 753 757 (face font-lock-constant-face fontified t) 757 766 (fontified t) 766 770 (face font-lock-keyword-face fontified t) 770 771 (fontified t) 771 773 (face font-lock-keyword-face fontified t) 773 795 (fontified t) 795 799 (face font-lock-string-face fontified t) 799 805 (fontified t) 805 807 (face font-lock-keyword-face fontified t) 807 812 (fontified t) 812 837 (fontified t) 837 838 (face font-lock-string-face fontified t) 838 839 (face font-lock-string-face fontified t) 839 840 (face font-lock-string-face fontified t) 840 841 (face font-lock-string-face fontified t) 841 842 (face font-lock-string-face fontified t) 842 843 (face font-lock-string-face fontified t) 843 844 (face font-lock-string-face fontified t) 844 845 (face font-lock-string-face fontified t) 845 846 (face font-lock-string-face fontified t) 846 847 (face font-lock-string-face fontified t) 847 848 (face font-lock-string-face fontified t) 848 849 (face font-lock-string-face fontified t) 849 850 (face font-lock-string-face fontified t) 850 851 (face font-lock-string-face fontified t) 851 852 (face font-lock-string-face fontified t) 852 853 (face font-lock-string-face fontified t) 853 854 (face font-lock-string-face fontified t) 854 855 (face font-lock-string-face fontified t) 855 856 (face font-lock-string-face fontified t) 856 857 (face font-lock-string-face fontified t) 857 858 (face font-lock-string-face fontified t) 858 859 (face font-lock-string-face fontified t) 859 860 (face font-lock-string-face fontified t) 860 861 (face font-lock-string-face fontified t) 861 862 (face font-lock-string-face fontified t) 862 863 (face font-lock-string-face fontified t) 863 864 (face font-lock-string-face fontified t) 864 865 (face font-lock-string-face fontified t) 865 866 (face font-lock-string-face fontified t) 866 867 (face font-lock-string-face fontified t) 867 868 (face font-lock-string-face fontified t) 868 869 (face font-lock-string-face fontified t) 869 870 (face font-lock-string-face fontified t) 870 871 (face font-lock-string-face fontified t) 871 872 (face font-lock-string-face fontified t) 872 873 (face font-lock-string-face fontified t) 873 874 (face font-lock-string-face fontified t) 874 875 (face font-lock-string-face fontified t) 875 876 (face font-lock-string-face fontified t) 876 877 (face font-lock-string-face fontified t) 877 878 (face font-lock-string-face fontified t) 878 879 (face font-lock-string-face fontified t) 879 880 (face font-lock-string-face fontified t) 880 881 (face font-lock-string-face fontified t rear-nonsticky t) 881 882 (face font-lock-string-face fontified t) 882 885 (fontified t) 885 908 (fontified t) 908 913 (fontified t) 913 915 (fontified t) 915 917 (face font-lock-keyword-face fontified t) 917 935 (fontified t) 935 945 (fontified t) 945 951 (fontified t) 951 972 (fontified t) 972 973 (fontified t) 973 979 (fontified t) 979 980 (fontified t) 980 981 (fontified t) 981 982 (fontified t) 982 983 (fontified t) 983 984 (fontified t) 984 987 (fontified t) 987 988 (fontified t) 988 992 (face font-lock-keyword-face fontified t) 992 1020 (fontified t) 1020 1027 (face font-lock-string-face fontified t) 1027 1043 (fontified t) 1043 1047 (face font-lock-constant-face fontified t) 1047 1060 (fontified t) 1060 1062 (fontified t) 1062 1063 (fontified t) 1063 1066 (fontified t) 1066 1067 (fontified t) 1067 1068 (fontified t) 1068 1072 (fontified t) 1072 1074 (fontified t) 1074 1075 (fontified t) 1075 1079 (fontified t) 1079 1085 (face font-lock-keyword-face fontified t) 1085 1086 (fontified t) 1086 1091 (face font-lock-type-face fontified t) 1091 1092 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1092 1098 (face font-lock-type-face fontified t) 1098 1099 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 1099 1100 (fontified t) 1100 1106 (face font-lock-function-name-face fontified t) 1106 1107 (c-type c-decl-arg-start fontified t) 1107 1113 (face font-lock-type-face fontified t) 1113 1114 (fontified t) 1114 1121 (face font-lock-variable-name-face fontified t) 1121 1124 (fontified t) 1124 1129 (fontified t) 1129 1130 (fontified t) 1130 1135 (face font-lock-type-face fontified t) 1135 1136 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1136 1142 (face font-lock-type-face fontified t) 1142 1143 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 1143 1144 (fontified t) 1144 1149 (face font-lock-variable-name-face fontified t) 1149 1152 (fontified t) 1152 1155 (face font-lock-keyword-face fontified t) 1155 1156 (fontified t) 1156 1161 (face font-lock-type-face fontified t) 1161 1162 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1162 1163 (fontified t category c->-as-paren-syntax) 1163 1167 (fontified t) 1167 1168 (fontified t) 1168 1171 (face font-lock-keyword-face fontified t) 1171 1178 (fontified t) 1178 1187 (face font-lock-type-face fontified t) 1187 1188 (face font-lock-type-face c-type c-decl-id-start fontified t) 1188 1189 (fontified t) 1189 1202 (face font-lock-variable-name-face fontified t) 1202 1205 (fontified t) 1205 1208 (face font-lock-keyword-face fontified t) 1208 1209 (fontified t) 1209 1219 (face font-lock-type-face fontified t) 1219 1235 (fontified t) 1235 1248 (face font-lock-type-face fontified t) 1248 1249 (face font-lock-type-face c-type c-decl-id-start fontified t) 1249 1250 (fontified t) 1250 1256 (face font-lock-variable-name-face fontified t) 1256 1259 (fontified t) 1259 1262 (face font-lock-keyword-face fontified t) 1262 1263 (fontified t) 1263 1277 (face font-lock-type-face fontified t) 1277 1305 (fontified t) 1305 1310 (face font-lock-type-face fontified t) 1310 1311 (face font-lock-type-face c-type c-decl-id-start fontified t) 1311 1312 (fontified t) 1312 1319 (face font-lock-variable-name-face fontified t) 1319 1332 (fontified t) 1332 1337 (face font-lock-keyword-face fontified t) 1337 1371 (fontified t) 1371 1375 (face font-lock-constant-face fontified t) 1375 1379 (fontified t) 1379 1384 (fontified t) 1384 1433 (fontified t) 1433 1438 (face font-lock-keyword-face fontified t) 1438 1479 (fontified t) 1479 1501 (face font-lock-string-face fontified t) 1501 1540 (fontified t) 1540 1546 (face font-lock-keyword-face fontified t) 1546 1547 (fontified t) 1547 1552 (fontified t) 1552 1563 (fontified t) 1563 1564 (fontified t) 1564 1568 (fontified t) 1568 1569 (face font-lock-keyword-face fontified t) 1569 1570 (face font-lock-keyword-face fontified t) 1570 1571 (face font-lock-keyword-face fontified t) 1571 1572 (face font-lock-keyword-face fontified t) 1572 1573 (face font-lock-keyword-face fontified t) 1573 1574 (face font-lock-keyword-face fontified t) 1574 1575 (fontified t) 1575 1576 (face font-lock-type-face fontified t) 1576 1577 (face font-lock-type-face fontified t) 1577 1578 (face font-lock-type-face fontified t) 1578 1579 (face font-lock-type-face fontified t) 1579 1580 (face font-lock-type-face fontified t) 1580 1581 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1581 1582 (face font-lock-type-face fontified t) 1582 1583 (face font-lock-type-face fontified t) 1583 1584 (face font-lock-type-face fontified t) 1584 1585 (face font-lock-type-face fontified t) 1585 1586 (face font-lock-type-face fontified t) 1586 1587 (face font-lock-type-face fontified t) 1587 1588 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 1588 1589 (fontified t) 1589 1590 (face font-lock-function-name-face fontified t) 1590 1591 (face font-lock-function-name-face fontified t) 1591 1592 (face font-lock-function-name-face fontified t) 1592 1593 (face font-lock-function-name-face fontified t) 1593 1594 (face font-lock-function-name-face fontified t) 1594 1595 (face font-lock-function-name-face fontified t) 1595 1596 (face font-lock-function-name-face fontified t) 1596 1597 (face font-lock-function-name-face fontified t) 1597 1598 (face font-lock-function-name-face fontified t) 1598 1599 (face font-lock-function-name-face fontified t) 1599 1600 (c-type c-decl-arg-start fontified t) 1600 1601 (face font-lock-type-face fontified t) 1601 1602 (face font-lock-type-face fontified t) 1602 1603 (face font-lock-type-face fontified t) 1603 1604 (face font-lock-type-face fontified t) 1604 1605 (face font-lock-type-face fontified t) 1605 1606 (face font-lock-type-face fontified t) 1606 1607 (fontified t) 1607 1608 (fontified t) 1608 1609 (fontified t) 1609 1610 (face font-lock-variable-name-face fontified t) 1610 1611 (face font-lock-variable-name-face fontified t) 1611 1612 (face font-lock-variable-name-face fontified t) 1612 1613 (face font-lock-variable-name-face fontified t) 1613 1614 (fontified t) 1614 1615 (fontified t) 1615 1616 (fontified t) 1616 1617 (fontified t) 1617 1618 (face font-lock-type-face fontified t) 1618 1619 (face font-lock-type-face fontified t) 1619 1620 (face font-lock-type-face fontified t) 1620 1621 (face font-lock-type-face fontified t) 1621 1622 (face font-lock-type-face fontified t) 1622 1623 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1623 1624 (face font-lock-type-face fontified t) 1624 1625 (face font-lock-type-face fontified t) 1625 1626 (face font-lock-type-face fontified t) 1626 1627 (face font-lock-type-face fontified t) 1627 1628 (face font-lock-type-face fontified t) 1628 1629 (face font-lock-type-face fontified t) 1629 1630 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 1630 1631 (fontified t) 1631 1632 (face font-lock-variable-name-face fontified t) 1632 1633 (fontified t) 1633 1634 (fontified t) 1634 1635 (fontified t) 1635 1636 (face font-lock-keyword-face fontified t) 1636 1637 (face font-lock-keyword-face fontified t) 1637 1638 (face font-lock-keyword-face fontified t) 1638 1639 (fontified t) 1639 1640 (face font-lock-type-face fontified t) 1640 1641 (face font-lock-type-face fontified t) 1641 1642 (face font-lock-type-face fontified t) 1642 1643 (face font-lock-type-face fontified t) 1643 1644 (face font-lock-type-face fontified t) 1644 1645 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1645 1646 (fontified t category c->-as-paren-syntax) 1646 1647 (fontified t) 1647 1648 (fontified t) 1648 1649 (fontified t) 1649 1650 (fontified t) 1650 1651 (fontified t) 1651 1652 (face font-lock-keyword-face fontified t) 1652 1653 (face font-lock-keyword-face fontified t) 1653 1654 (face font-lock-keyword-face fontified t) 1654 1655 (fontified t) 1655 1656 (face font-lock-type-face fontified t) 1656 1657 (face font-lock-type-face fontified t) 1657 1658 (face font-lock-type-face c-type c-decl-id-start fontified t) 1658 1659 (fontified t) 1659 1660 (face font-lock-variable-name-face fontified t) 1660 1661 (fontified t) 1661 1662 (fontified t) 1662 1663 (fontified t) 1663 1664 (fontified t) 1664 1665 (fontified t) 1665 1666 (fontified t) 1666 1667 (fontified t) 1667 1668 (fontified t) 1668 1669 (fontified t) 1669 1670 (fontified t) 1670 1671 (fontified t) 1671 1672 (fontified t) 1672 1673 (fontified t) 1673 1674 (face font-lock-type-face fontified t) 1674 1675 (face font-lock-type-face fontified t) 1675 1676 (face font-lock-type-face fontified t) 1676 1677 (face font-lock-type-face fontified t) 1677 1678 (face font-lock-type-face fontified t) 1678 1679 (face font-lock-type-face fontified t) 1679 1680 (fontified t) 1680 1681 (fontified t) 1681 1682 (fontified t) 1682 1683 (fontified t) 1683 1684 (fontified t) 1684 1685 (fontified t) 1685 1686 (fontified t) 1686 1687 (fontified t) 1687 1692 (fontified t) 1692 1693 (face font-lock-type-face fontified t) 1693 1694 (face font-lock-type-face fontified t) 1694 1695 (face font-lock-type-face fontified t) 1695 1696 (face font-lock-type-face fontified t) 1696 1697 (face font-lock-type-face fontified t) 1697 1698 (face font-lock-type-face c-type c-decl-id-start fontified t) 1698 1699 (fontified t) 1699 1700 (face font-lock-variable-name-face fontified t) 1700 1701 (fontified t) 1701 1702 (fontified t) 1702 1703 (fontified t) 1703 1704 (fontified t) 1704 1705 (fontified t) 1705 1706 (fontified t) 1706 1707 (fontified t) 1707 1708 (fontified t) 1708 1709 (fontified t) 1709 1710 (fontified t) 1710 1711 (fontified t) 1711 1712 (fontified t) 1712 1717 (fontified t) 1717 1718 (face font-lock-keyword-face fontified t) 1718 1719 (face font-lock-keyword-face fontified t) 1719 1720 (fontified t) 1720 1721 (fontified t) 1721 1722 (fontified t) 1722 1723 (fontified t) 1723 1724 (fontified t) 1724 1725 (fontified t) 1725 1726 (fontified t) 1726 1727 (fontified t) 1727 1728 (fontified t) 1728 1729 (fontified t) 1729 1730 (face font-lock-string-face fontified t) 1730 1731 (face font-lock-string-face fontified t) 1731 1732 (face font-lock-string-face fontified t) 1732 1733 (face font-lock-string-face fontified t) 1733 1734 (fontified t) 1734 1735 (fontified t) 1735 1736 (fontified t) 1736 1737 (fontified t) 1737 1738 (fontified t) 1738 1739 (fontified t) 1739 1740 (fontified t) 1740 1741 (fontified t) 1741 1742 (fontified t) 1742 1743 (fontified t) 1743 1744 (fontified t) 1744 1745 (fontified t) 1745 1746 (fontified t) 1746 1747 (fontified t) 1747 1748 (face font-lock-string-face fontified t) 1748 1749 (face font-lock-string-face fontified t) 1749 1750 (face font-lock-string-face fontified t) 1750 1751 (face font-lock-string-face fontified t) 1751 1752 (fontified t rear-nonsticky t) 1752 1753 (fontified t) 1753 1754 (fontified t) 1754 1756 (fontified t) 1756 1757 (face font-lock-keyword-face fontified t) 1757 1758 (face font-lock-keyword-face fontified t) 1758 1759 (face font-lock-keyword-face fontified t) 1759 1760 (face font-lock-keyword-face fontified t) 1760 1761 (face font-lock-keyword-face fontified t) 1761 1762 (face font-lock-keyword-face fontified t) 1762 1763 (face font-lock-keyword-face fontified t) 1763 1764 (face font-lock-keyword-face fontified t) 1764 1765 (fontified t) 1765 1771 (fontified t) 1771 1772 (fontified t) 1772 1777 (fontified t) 1777 1778 (face font-lock-type-face fontified t) 1778 1779 (face font-lock-type-face fontified t) 1779 1780 (face font-lock-type-face fontified t) 1780 1781 (face font-lock-type-face fontified t) 1781 1782 (face font-lock-type-face fontified t) 1782 1783 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1783 1784 (face font-lock-type-face fontified t) 1784 1785 (face font-lock-type-face fontified t) 1785 1786 (face font-lock-type-face fontified t) 1786 1787 (face font-lock-type-face fontified t) 1787 1788 (face font-lock-type-face fontified t) 1788 1789 (face font-lock-type-face fontified t) 1789 1790 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 1790 1791 (fontified t) 1791 1792 (face font-lock-variable-name-face fontified t) 1792 1793 (face font-lock-variable-name-face fontified t) 1793 1794 (fontified t) 1794 1795 (fontified t) 1795 1796 (fontified t) 1796 1797 (fontified t) 1797 1798 (fontified t) 1798 1799 (fontified t) 1799 1800 (fontified t) 1800 1801 (fontified t) 1801 1802 (fontified t) 1802 1803 (fontified t) 1803 1804 (fontified t) 1804 1805 (fontified t) 1805 1806 (fontified t) 1806 1807 (fontified t) 1807 1808 (fontified t) 1808 1809 (fontified t) 1809 1810 (fontified t) 1810 1811 (fontified t) 1811 1812 (fontified t) 1812 1813 (fontified t) 1813 1818 (fontified t) 1818 1819 (face font-lock-keyword-face fontified t) 1819 1820 (face font-lock-keyword-face fontified t) 1820 1821 (face font-lock-keyword-face fontified t) 1821 1822 (fontified t) 1822 1823 (face font-lock-type-face fontified t) 1823 1824 (face font-lock-type-face fontified t) 1824 1825 (face font-lock-type-face fontified t) 1825 1826 (face font-lock-type-face fontified t) 1826 1827 (face font-lock-type-face fontified t) 1827 1828 (face font-lock-type-face c-type c-decl-id-start fontified t) 1828 1829 (fontified t) 1829 1830 (face font-lock-variable-name-face fontified t) 1830 1831 (fontified t) 1831 1832 (fontified t) 1832 1833 (fontified t) 1833 1834 (fontified t) 1834 1835 (fontified t) 1835 1836 (fontified t) 1836 1837 (fontified t) 1837 1839 (fontified t) 1839 1840 (fontified t) 1840 1841 (fontified t) 1841 1842 (fontified t) 1842 1843 (fontified t) 1843 1844 (fontified t) 1844 1845 (fontified t) 1845 1846 (fontified t) 1846 1847 (fontified t) 1847 1848 (fontified t) 1848 1849 (fontified t) 1849 1850 (fontified t) 1850 1851 (fontified t) 1851 1852 (fontified t) 1852 1853 (fontified t) 1853 1854 (fontified t) 1854 1855 (fontified t) 1855 1856 (fontified t) 1856 1857 (face font-lock-keyword-face fontified t) 1857 1858 (face font-lock-keyword-face fontified t) 1858 1859 (face font-lock-keyword-face fontified t) 1859 1860 (face font-lock-keyword-face fontified t) 1860 1861 (face font-lock-keyword-face fontified t) 1861 1862 (face font-lock-keyword-face fontified t) 1862 1863 (fontified t) 1863 1864 (fontified t) 1864 1865 (fontified t) 1865 1866 (fontified t) 1866 1870 (fontified t) 1870 1871 (fontified t) 1871 1872 (fontified t) 1872 1873 (fontified t) 1873 1874 (fontified t) 1874 1878 (fontified t) 1878 1884 (face font-lock-keyword-face fontified t) 1884 1885 (fontified t) 1885 1891 (face font-lock-keyword-face fontified t) 1891 1892 (fontified t) 1892 1895 (face font-lock-type-face fontified t) 1895 1896 (face font-lock-type-face c-type c-decl-id-start fontified t) 1896 1897 (fontified t) 1897 1903 (face font-lock-function-name-face fontified t) 1903 1904 (c-type c-decl-arg-start fontified t) 1904 1910 (face font-lock-type-face fontified t) 1910 1911 (fontified t) 1911 1924 (face font-lock-variable-name-face fontified t) 1924 1925 (c-type c-decl-arg-start fontified t) 1925 1926 (fontified t) 1926 1931 (face font-lock-type-face fontified t) 1931 1932 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1932 1938 (face font-lock-type-face fontified t) 1938 1939 (fontified t category c->-as-paren-syntax) 1939 1940 (fontified t) 1940 1945 (face font-lock-variable-name-face fontified t) 1945 1949 (fontified t) 1949 1950 (fontified t) 1950 1953 (face font-lock-keyword-face fontified t) 1953 1955 (fontified t) 1955 1956 (face font-lock-type-face fontified t) 1956 1957 (face font-lock-type-face fontified t) 1957 1958 (face font-lock-type-face fontified t) 1958 1959 (face font-lock-type-face fontified t) 1959 1960 (face font-lock-type-face fontified t) 1960 1961 (face font-lock-type-face fontified t) 1961 1962 (face font-lock-type-face fontified t) 1962 1963 (face font-lock-type-face fontified t) 1963 1964 (face font-lock-type-face fontified t) 1964 1965 (face font-lock-type-face fontified t) 1965 1966 (face font-lock-type-face fontified t) 1966 1967 (face font-lock-type-face fontified t) 1967 1968 (face font-lock-type-face fontified t) 1968 1969 (face font-lock-type-face c-type c-decl-id-start fontified t) 1969 1970 (fontified t) 1970 1978 (face font-lock-variable-name-face fontified t) 1978 1980 (fontified t) 1980 1981 (fontified t) 1981 1982 (face font-lock-keyword-face fontified t) 1982 1983 (face font-lock-keyword-face fontified t) 1983 1984 (face font-lock-keyword-face fontified t) 1984 1985 (fontified t) 1985 1986 (face font-lock-type-face fontified t) 1986 1987 (face font-lock-type-face fontified t) 1987 1988 (face font-lock-type-face fontified t) 1988 1989 (face font-lock-type-face fontified t) 1989 1990 (face font-lock-type-face fontified t) 1990 1991 (face font-lock-type-face fontified t) 1991 1992 (face font-lock-type-face fontified t) 1992 1993 (face font-lock-type-face fontified t) 1993 1994 (face font-lock-type-face fontified t) 1994 1995 (face font-lock-type-face fontified t) 1995 1996 (face font-lock-type-face fontified t) 1996 1997 (face font-lock-type-face fontified t) 1997 1998 (face font-lock-type-face fontified t) 1998 1999 (face font-lock-type-face fontified t) 1999 2000 (fontified t) 2000 2003 (face font-lock-keyword-face fontified t) 2003 2004 (fontified t) 2004 2014 (face font-lock-type-face fontified t) 2014 2015 (fontified t) 2015 2016 (fontified t) 2016 2017 (fontified t) 2017 2018 (fontified t) 2018 2019 (fontified t) 2019 2020 (fontified t) 2020 2021 (fontified t) 2021 2022 (fontified t) 2022 2023 (fontified t) 2023 2024 (fontified t) 2024 2025 (fontified t) 2025 2026 (fontified t) 2026 2027 (fontified t) 2027 2028 (fontified t) 2028 2029 (fontified t) 2029 2030 (fontified t) 2030 2034 (fontified t) 2034 2039 (fontified t) 2039 2042 (face font-lock-keyword-face fontified t) 2042 2044 (fontified t) 2044 2049 (face font-lock-type-face fontified t) 2049 2050 (face font-lock-type-face c-type c-decl-id-start fontified t) 2050 2051 (fontified t) 2051 2059 (face font-lock-variable-name-face fontified t) 2059 2062 (fontified t) 2062 2067 (fontified t) 2067 2069 (fontified t) 2069 2070 (fontified t) 2070 2071 (fontified t) 2071 2073 (fontified t) 2073 2074 (fontified t) 2074 2075 (fontified t) 2075 2076 (fontified t) 2076 2077 (fontified t) 2077 2078 (fontified t) 2078 2079 (fontified t) 2079 2080 (fontified t) 2080 2081 (fontified t) 2081 2098 (fontified t) 2098 2099 (fontified t) 2099 2101 (fontified t) 2101 2102 (fontified t) 2102 2103 (fontified t) 2103 2104 (fontified t) 2104 2105 (fontified t) 2105 2106 (fontified t) 2106 2107 (fontified t) 2107 2108 (fontified t) 2108 2109 (fontified t) 2109 2110 (fontified t) 2110 2111 (fontified t) 2111 2112 (fontified t) 2112 2113 (fontified t) 2113 2114 (fontified t) 2114 2115 (fontified t) 2115 2116 (fontified t) 2116 2117 (fontified t) 2117 2120 (fontified t) 2120 2121 (fontified t) 2121 2122 (fontified t) 2122 2123 (fontified t) 2123 2127 (fontified t) 2127 2128 (fontified t) 2128 2129 (fontified t) 2129 2134 (fontified t) 2134 2153 (fontified t) 2153 2185 (face font-lock-string-face fontified t) 2185 2188 (fontified t) 2188 2189 (fontified t) 2189 2191 (fontified t) 2191 2196 (face font-lock-keyword-face fontified t) 2196 2215 (fontified t) 2215 2242 (fontified t) 2242 2246 (face font-lock-string-face fontified t) 2246 2286 (face font-lock-string-face fontified t) 2286 2288 (fontified t) 2288 2318 (fontified t) 2318 2319 (fontified t) 2319 2321 (fontified t) 2321 2325 (fontified t) 2325 2326 (fontified t) 2326 2327 (fontified t rear-nonsticky t) 2327 2331 (fontified t) 2331 2332 (fontified t) 2332 2336 (fontified t) 2336 2337 (fontified t) 2337 2341 (fontified t) 2341 2347 (face font-lock-keyword-face fontified t) 2347 2348 (fontified t) 2348 2354 (face font-lock-keyword-face fontified t) 2354 2355 (fontified t) 2355 2360 (face font-lock-type-face fontified t) 2360 2361 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 2361 2367 (face font-lock-type-face fontified t) 2367 2368 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 2368 2369 (fontified t) 2369 2376 (face font-lock-function-name-face fontified t) 2376 2377 (c-type c-decl-arg-start fontified t) 2377 2382 (face font-lock-type-face fontified t) 2382 2383 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 2383 2384 (face font-lock-type-face fontified t) 2384 2385 (face font-lock-type-face fontified t) 2385 2389 (face font-lock-type-face fontified t) 2389 2390 (fontified t category c->-as-paren-syntax) 2390 2391 (fontified t) 2391 2392 (face font-lock-variable-name-face fontified t) 2392 2395 (fontified t) 2395 2396 (fontified t) 2396 2402 (face font-lock-keyword-face fontified t) 2402 2415 (fontified t) 2415 2416 (fontified t) 2416 2417 (fontified t) 2417 2418 (fontified t) 2418 2419 (fontified t) 2419 2428 (fontified t) 2428 2433 (face font-lock-type-face fontified t) 2433 2434 (face font-lock-type-face c-type c-decl-id-start fontified t) 2434 2435 (fontified t) 2435 2444 (face font-lock-variable-name-face fontified t) 2444 2455 (fontified t) 2455 2474 (fontified t) 2474 2477 (face font-lock-string-face fontified t) 2477 2478 (fontified t) 2478 2480 (face font-lock-string-face fontified t) 2480 2483 (fontified t) 2483 2485 (fontified t) 2485 2490 (face font-lock-type-face fontified t) 2490 2491 (face font-lock-type-face c-type c-decl-id-start fontified t) 2491 2492 (fontified t) 2492 2494 (face font-lock-variable-name-face fontified t) 2494 2499 (face font-lock-variable-name-face fontified t) 2499 2501 (fontified t) 2501 2522 (fontified t) 2522 2523 (fontified t) 2523 2532 (fontified t) 2532 2533 (fontified t) 2533 2534 (fontified t) 2534 2544 (face font-lock-constant-face fontified t) 2544 2545 (fontified t) 2545 2549 (face font-lock-constant-face fontified t) 2549 2550 (fontified t) 2550 2553 (fontified t) 2553 2566 (fontified t) 2566 2574 (face font-lock-string-face fontified t) 2574 2576 (fontified t) 2576 2578 (face font-lock-string-face fontified t) 2578 2583 (fontified t) 2583 2588 (face font-lock-type-face fontified t) 2588 2589 (face font-lock-type-face c-type c-decl-id-start fontified t) 2589 2590 (fontified t) 2590 2593 (face font-lock-variable-name-face fontified t) 2593 2599 (face font-lock-variable-name-face fontified t) 2599 2601 (fontified t) 2601 2629 (fontified t) 2629 2632 (face font-lock-string-face fontified t) 2632 2633 (fontified t) 2633 2635 (face font-lock-string-face fontified t) 2635 2640 (fontified t) 2640 2645 (face font-lock-type-face fontified t) 2645 2646 (face font-lock-type-face c-type c-decl-id-start fontified t) 2646 2647 (fontified t) 2647 2654 (face font-lock-variable-name-face fontified t) 2654 2677 (fontified t) 2677 2678 (fontified t) 2678 2687 (fontified t) 2687 2688 (fontified t) 2688 2689 (fontified t) 2689 2699 (face font-lock-constant-face fontified t) 2699 2700 (fontified t) 2700 2704 (face font-lock-constant-face fontified t) 2704 2705 (fontified t) 2705 2708 (fontified t) 2708 2721 (fontified t) 2721 2729 (face font-lock-string-face fontified t) 2729 2731 (fontified t) 2731 2733 (face font-lock-string-face fontified t) 2733 2741 (fontified t) 2741 2747 (face font-lock-keyword-face fontified t) 2747 2765 (fontified t) 2765 2766 (fontified t) 2766 2773 (fontified t) 2773 2789 (fontified t) 2789 2792 (fontified t) 2792 2793 (fontified t) 2793 2797 (fontified t) 2797 2798 (fontified t) 2798 2799 (fontified t) 2799 2800 (fontified t) 2800 2804 (fontified t) 2804 2810 (face font-lock-keyword-face fontified t) 2810 2811 (fontified t) 2811 2817 (face font-lock-keyword-face fontified t) 2817 2818 (fontified t) 2818 2823 (face font-lock-type-face fontified t) 2823 2824 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 2824 2830 (face font-lock-type-face fontified t) 2830 2831 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 2831 2832 (fontified t) 2832 2839 (face font-lock-function-name-face fontified t) 2839 2840 (c-type c-decl-arg-start fontified t) 2840 2845 (face font-lock-type-face fontified t) 2845 2846 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 2846 2852 (face font-lock-type-face fontified t) 2852 2853 (fontified t category c->-as-paren-syntax) 2853 2854 (fontified t) 2854 2855 (face font-lock-variable-name-face fontified t) 2855 2858 (fontified t) 2858 2859 (fontified t) 2859 2865 (face font-lock-keyword-face fontified t) 2865 2873 (fontified t) 2873 2874 (fontified t) 2874 2875 (fontified t) 2875 2888 (fontified t) 2888 2893 (fontified t) 2893 2894 (fontified t) 2894 2895 (fontified t) 2895 2899 (fontified t) 2899 2900 (face font-lock-keyword-face fontified t) 2900 2901 (face font-lock-keyword-face fontified t) 2901 2902 (face font-lock-keyword-face fontified t) 2902 2903 (face font-lock-keyword-face fontified t) 2903 2904 (face font-lock-keyword-face fontified t) 2904 2905 (face font-lock-keyword-face fontified t) 2905 2906 (fontified t) 2906 2907 (face font-lock-type-face fontified t) 2907 2908 (face font-lock-type-face fontified t) 2908 2909 (face font-lock-type-face fontified t) 2909 2910 (face font-lock-type-face fontified t) 2910 2911 (face font-lock-type-face fontified t) 2911 2912 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 2912 2913 (face font-lock-type-face fontified t) 2913 2914 (face font-lock-type-face fontified t) 2914 2915 (face font-lock-type-face fontified t) 2915 2916 (face font-lock-type-face fontified t) 2916 2917 (face font-lock-type-face fontified t) 2917 2918 (face font-lock-type-face fontified t) 2918 2919 (c-type c-decl-id-start category c->-as-paren-syntax fontified t) 2919 2920 (fontified t) 2920 2921 (face font-lock-variable-name-face fontified t) 2921 2922 (face font-lock-variable-name-face fontified t) 2922 2923 (face font-lock-variable-name-face fontified t) 2923 2924 (face font-lock-variable-name-face fontified t) 2924 2925 (face font-lock-variable-name-face fontified t) 2925 2926 (face font-lock-variable-name-face fontified t) 2926 2927 (face font-lock-variable-name-face fontified t) 2927 2928 (face font-lock-variable-name-face fontified t) 2928 2929 (face font-lock-variable-name-face fontified t) 2929 2930 (fontified t) 2930 2931 (fontified t) 2931 2935 (fontified t) 2935 2936 (fontified t) 2936 2940 (fontified t) 2940 2946 (face font-lock-keyword-face fontified t) 2946 2947 (fontified t) 2947 2953 (face font-lock-keyword-face fontified t) 2953 2954 (fontified t) 2954 2957 (face font-lock-type-face fontified t) 2957 2958 (face font-lock-type-face c-type c-decl-id-start fontified t) 2958 2959 (fontified t) 2959 2960 (face font-lock-function-name-face fontified t) 2960 2961 (face font-lock-function-name-face fontified t) 2961 2962 (face font-lock-function-name-face fontified t) 2962 2963 (c-type c-decl-arg-start fontified t) 2963 2964 (face font-lock-type-face fontified t) 2964 2965 (face font-lock-type-face fontified t) 2965 2966 (face font-lock-type-face fontified t) 2966 2967 (face font-lock-type-face fontified t) 2967 2968 (face font-lock-type-face fontified t) 2968 2969 (face font-lock-type-face fontified t) 2969 2970 (fontified t) 2970 2971 (face font-lock-variable-name-face fontified t) 2971 2972 (c-type c-decl-arg-start fontified t) 2972 2973 (fontified t) 2973 2978 (face font-lock-type-face fontified t) 2978 2979 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 2979 2985 (face font-lock-type-face fontified t) 2985 2986 (category c->-as-paren-syntax fontified t) 2986 2987 (fontified t) 2987 2988 (face font-lock-variable-name-face fontified t) 2988 2991 (fontified t) 2991 2992 (fontified t) 2992 3000 (fontified t) 3000 3003 (face font-lock-keyword-face fontified t) 3003 3005 (fontified t) 3005 3018 (face font-lock-type-face fontified t) 3018 3019 (face font-lock-type-face c-type c-decl-id-start fontified t) 3019 3020 (fontified t) 3020 3023 (face font-lock-variable-name-face fontified t) 3023 3026 (fontified t) 3026 3029 (face font-lock-keyword-face fontified t) 3029 3030 (fontified t) 3030 3044 (face font-lock-type-face fontified t) 3044 3045 (fontified t) 3045 3048 (face font-lock-keyword-face fontified t) 3048 3049 (fontified t) 3049 3059 (face font-lock-type-face fontified t) 3059 3060 (fontified t) 3060 3061 (fontified t) 3061 3063 (fontified t) 3063 3067 (fontified t) 3067 3079 (fontified t) 3079 3082 (face font-lock-keyword-face fontified t) 3082 3084 (fontified t) 3084 3089 (face font-lock-type-face fontified t) 3089 3090 (face font-lock-type-face c-type c-decl-id-start fontified t) 3090 3091 (fontified t) 3091 3092 (face font-lock-variable-name-face fontified t) 3092 3093 (face font-lock-variable-name-face fontified t) 3093 3094 (face font-lock-variable-name-face fontified t) 3094 3095 (face font-lock-variable-name-face fontified t) 3095 3096 (face font-lock-variable-name-face fontified t) 3096 3097 (face font-lock-variable-name-face fontified t) 3097 3098 (face font-lock-variable-name-face fontified t) 3098 3099 (face font-lock-variable-name-face fontified t) 3099 3101 (fontified t) 3101 3102 (fontified t) 3102 3103 (fontified t) 3103 3104 (fontified t) 3104 3105 (fontified t) 3105 3106 (fontified t) 3106 3107 (fontified t) 3107 3108 (fontified t) 3108 3109 (fontified t) 3109 3110 (fontified t) 3110 3111 (fontified t) 3111 3113 (fontified t) 3113 3139 (fontified t) 3139 3140 (fontified t) 3140 3166 (fontified t) 3166 3167 (fontified t) 3167 3168 (fontified t) 3168 3169 (fontified t) 3169 3177 (fontified t) 3177 3178 (fontified t c-is-sws t) 3178 3179 (fontified t) 3179 3184 (face font-lock-keyword-face fontified t) 3184 3203 (fontified t) 3203 3234 (fontified t) 3234 3235 (face font-lock-string-face fontified t) 3235 3236 (face font-lock-string-face fontified t) 3236 3237 (face font-lock-string-face fontified t) 3237 3238 (face font-lock-string-face fontified t) 3238 3239 (face font-lock-string-face fontified t) 3239 3240 (face font-lock-string-face fontified t) 3240 3241 (face font-lock-string-face fontified t) 3241 3242 (face font-lock-string-face fontified t) 3242 3243 (face font-lock-string-face fontified t) 3243 3244 (face font-lock-string-face fontified t) 3244 3245 (face font-lock-string-face fontified t) 3245 3246 (face font-lock-string-face fontified t) 3246 3247 (face font-lock-string-face fontified t) 3247 3248 (face font-lock-string-face fontified t) 3248 3249 (face font-lock-string-face fontified t) 3249 3250 (face font-lock-string-face fontified t) 3250 3251 (face font-lock-string-face fontified t) 3251 3252 (face font-lock-string-face fontified t) 3252 3253 (face font-lock-string-face fontified t) 3253 3254 (face font-lock-string-face fontified t) 3254 3255 (face font-lock-string-face fontified t) 3255 3256 (face font-lock-string-face fontified t) 3256 3257 (face font-lock-string-face fontified t) 3257 3258 (face font-lock-string-face fontified t) 3258 3259 (face font-lock-string-face fontified t) 3259 3260 (face font-lock-string-face fontified t) 3260 3261 (face font-lock-string-face fontified t) 3261 3262 (face font-lock-string-face fontified t) 3262 3263 (face font-lock-string-face fontified t) 3263 3264 (face font-lock-string-face fontified t) 3264 3265 (face font-lock-string-face fontified t) 3265 3266 (face font-lock-string-face fontified t) 3266 3267 (face font-lock-string-face fontified t) 3267 3268 (face font-lock-string-face fontified t) 3268 3269 (face font-lock-string-face fontified t) 3269 3270 (face font-lock-string-face fontified t) 3270 3271 (face font-lock-string-face fontified t) 3271 3272 (face font-lock-string-face fontified t) 3272 3273 (face font-lock-string-face fontified t) 3273 3274 (face font-lock-string-face fontified t) 3274 3275 (face font-lock-string-face fontified t) 3275 3278 (fontified t) 3278 3279 (fontified t) 3279 3281 (fontified t) 3281 3282 (fontified t) 3282 3325 (fontified t) 3325 3326 (fontified t rear-nonsticky t) 3326 3330 (fontified t) 3330 3331 (fontified t) 3331 3333 (fontified t)) . 1) (undo-tree-id1058 . -3333) (undo-tree-id1060 . -714) (undo-tree-id1061 . -715) (undo-tree-id1062 . -838) (undo-tree-id1063 . -838) (undo-tree-id1064 . -2894) (undo-tree-id1065 . -2894) (undo-tree-id1066 . -2936) (undo-tree-id1067 . -269) (undo-tree-id1068 . -2936) (undo-tree-id1069 . -2936) (undo-tree-id1070 . -3168) (undo-tree-id1071 . -2972) (undo-tree-id1072 . -3333) (t 26110 26605 730047 208000)) ((1 . 3334)) (26110 27148 470353 76000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2936) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (#(" " 0 1 (fontified t)) . -2937) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (#(" " 0 1 (fontified t)) . -2938) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (#(" " 0 1 (fontified t)) . -2939) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (#(" " 0 1 (fontified t)) . -2940) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (#("p" 0 1 (fontified t)) . -2941) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) 2942) nil (26110 27289 948231 787000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4729 . 4730) (nil fontified nil 4399 . 4730) (nil fontified nil 4398 . 4399) (nil category c->-as-paren-syntax 4398 . 4399) (nil fontified nil 4392 . 4398) (nil fontified nil 4391 . 4392) (nil category c-<-as-paren-syntax 4391 . 4392) (nil fontified nil 4010 . 4391) (nil fontified nil 4009 . 4010) (nil category c->-as-paren-syntax 4009 . 4010) (nil fontified nil 4003 . 4009) (nil fontified nil 4002 . 4003) (nil category c-<-as-paren-syntax 4002 . 4003) (nil fontified nil 3954 . 4002) (nil fontified nil 3953 . 3954) (nil category c->-as-paren-syntax 3953 . 3954) (nil fontified nil 3947 . 3953) (nil fontified nil 3946 . 3947) (nil category c-<-as-paren-syntax 3946 . 3947) (nil fontified nil 3437 . 3946) (nil fontified nil 3436 . 3437) (nil category c->-as-paren-syntax 3436 . 3437) (nil fontified nil 3430 . 3436) (nil fontified nil 3429 . 3430) (nil category c-<-as-paren-syntax 3429 . 3430) (nil fontified nil 3338 . 3429) (nil fontified nil 3337 . 3338) (nil category c->-as-paren-syntax 3337 . 3338) (nil fontified nil 3331 . 3337) (nil fontified nil 3330 . 3331) (nil category c-<-as-paren-syntax 3330 . 3331) (nil fontified nil 3316 . 3330) (nil fontified nil 3315 . 3316) (nil category c->-as-paren-syntax 3315 . 3316) (nil fontified nil 3309 . 3315) (nil fontified nil 3308 . 3309) (nil category c-<-as-paren-syntax 3308 . 3309) (nil fontified nil 2825 . 3308) (nil fontified nil 2824 . 2825) (nil category c->-as-paren-syntax 2824 . 2825) (nil fontified nil 2818 . 2824) (nil fontified nil 2817 . 2818) (nil category c-<-as-paren-syntax 2817 . 2818) (nil fontified nil 2803 . 2817) (nil fontified nil 2802 . 2803) (nil category c->-as-paren-syntax 2802 . 2803) (nil fontified nil 2796 . 2802) (nil fontified nil 2795 . 2796) (nil category c-<-as-paren-syntax 2795 . 2796) (nil fontified nil 2305 . 2795) (nil fontified nil 2304 . 2305) (nil category c->-as-paren-syntax 2304 . 2305) (nil fontified nil 2298 . 2304) (nil fontified nil 2297 . 2298) (nil category c-<-as-paren-syntax 2297 . 2298) (nil fontified nil 2122 . 2297) (nil fontified nil 2121 . 2122) (nil category c->-as-paren-syntax 2121 . 2122) (nil fontified nil 2115 . 2121) (nil fontified nil 2114 . 2115) (nil category c-<-as-paren-syntax 2114 . 2115) (nil fontified nil 1942 . 2114) (nil fontified nil 1941 . 1942) (nil category c->-as-paren-syntax 1941 . 1942) (nil fontified nil 1940 . 1941) (nil category c-<-as-paren-syntax 1940 . 1941) (nil fontified nil 1926 . 1940) (nil fontified nil 1925 . 1926) (nil category c->-as-paren-syntax 1925 . 1926) (nil fontified nil 1919 . 1925) (nil fontified nil 1918 . 1919) (nil category c-<-as-paren-syntax 1918 . 1919) (nil fontified nil 1877 . 1918) (nil fontified nil 1876 . 1877) (nil category c->-as-paren-syntax 1876 . 1877) (nil fontified nil 1870 . 1876) (nil fontified nil 1869 . 1870) (nil category c-<-as-paren-syntax 1869 . 1870) (nil fontified nil 1382 . 1869) (nil fontified nil 1381 . 1382) (nil category c->-as-paren-syntax 1381 . 1382) (nil fontified nil 1380 . 1381) (nil category c-<-as-paren-syntax 1380 . 1381) (nil fontified nil 1362 . 1380) (nil fontified nil 1361 . 1362) (nil category c->-as-paren-syntax 1361 . 1362) (nil fontified nil 1355 . 1361) (nil fontified nil 1354 . 1355) (nil category c-<-as-paren-syntax 1354 . 1355) (nil fontified nil 1316 . 1354) (nil fontified nil 1315 . 1316) (nil category c->-as-paren-syntax 1315 . 1316) (nil fontified nil 1309 . 1315) (nil fontified nil 1308 . 1309) (nil category c-<-as-paren-syntax 1308 . 1309) (nil fontified nil 1 . 1308) (1 . 4730)) ((#("import mx.unam.ciencias.edd.Lista;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.BufferedReader;
import java.io.IOException;
import java.text.Normalizer;
import java.io.InputStreamReader;

public class Banderas {
    String[] argumentos;
    boolean r = false;
    boolean o = false;
    String id = \"\";
    String file = \"\";
    
    public Banderas(String[] args){
        argumentos = args;
    }

    public void argumentos(String[] argumentos){
        for(int i = 0; i < argumentos.length; i++){
            if(argumentos[i].equals(\"-r\")){
                if(r){
                    System.out.println(\"La bandera -r solo se puede colocar una vez\");
                    System.exit(-1);
                }
                r = true;
            } else if(argumentos[i].equals(\"-o\")){
                if(o){
                    System.out.println(\"La bandera -o solo se puede colocar una vez\");
                    System.exit(-1);
                }

                if(i+1 < argumentos.length) {
                    id = argumentos[i+1];
                    i++;
                } else {
                    System.out.println(\"ERROR\");
                }
                o = true;
            }
        }
    }

    public Lista<String> reader(String archivo){
        Lista<String> lista = new Lista<>();
        try{
            FileReader lectorArchivo = new FileReader(archivo);
            BufferedReader lector = new BufferedReader(lectorArchivo);
            String renglon;
            while((renglon = lector.readLine()) != null)
                lista.agrega(renglon);
            lector.close();
        } catch(IOException e){
            System.out.println(\"\\nAlgo saliรณ mal: \\n\");
            e.printStackTrace();   
        }
        return lista;    
    }

    public Lista<String> fileReader(String[] args){
        Lista<String> l = new Lista<>();
        for(int i=0; i < args.length; i++){
            String b = args[i];
            if(b.equals(\"-r\") || b.equals(\"-o\"))
                continue;
            Lista<String> fr = reader(args[i]);
            for(String r : fr)
                l.agrega(r);
        }
        return l;
    }

    public static void writer(String nombreArchivo, Lista<String> lista) {
        try (BufferedWriter escritor = new BufferedWriter(new FileWriter(nombreArchivo))) {
            for (String elemento : lista) {
                escritor.write(elemento);
                escritor.newLine(); 
            }
            System.out.println(\"Archivo guardado correctamente\");
        } catch (IOException e) {
            System.out.println(\"\\nAlgo saliรณ mal al guardar el archivo: \\n\");
            e.printStackTrace();
        }
    }

    public static Lista<String> ordenar(Lista<String> l){
        return l.mergeSort((a,b) -> {
            String aSinMayus = a.toLowerCase().replaceAll(\" \",\"\");
            String aLimpio = Normalizer.normalize(aSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
            String bSinMayus = b.toLowerCase().replaceAll(\" \",\"\");
            String bLimpio = Normalizer.normalize(bSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
            return aLimpio.compareTo(bLimpio);
        }); 
    }

    public static Lista<String> reverso(Lista<String> l){
        return ordenar(l).reversa();
    }

    public static void cat(String f, Lista<String> l) {
        try (BufferedWriter out = new BufferedWriter(new FileWriter(f))) {
            for (String renglon : l)
                out.write(renglon + System.lineSeparator()); 
        } catch (IOException e) {
            System.out.println(\"Ups.. ocurriรณ un error con el archivo: \" + f);
            System.exit(-1);
        }
    }    
}

public class Proyecto1 {
    public static void main(String args[]) {
        Banderas bandera = new Banderas(args);
        bandera.argumentos(args);
        Lista<String> lista = bandera.fileReader(args);
        Lista<String> file;

        if (bandera.r)
            file = Banderas.reverso(lista);
        else
            file = Banderas.ordenar(lista);

        if (bandera.o) {
            Banderas.writer(bandera.id, file);
            System.out.println(\"Guardado en: \" + bandera.id);
        } else {
            for (String a : file)
                System.out.println(a);
        }

        Lista<String> listaOrd = Banderas.ordenar(lista);
    
        if(bandera.o){
            Banderas.cat(bandera.id, listaOrd);
            System.out.println(\"Archivo guardado correctamente en: \" + bandera.id);
        } else {
            for (String reng : listaOrd) {
                System.out.println(reng);
            }
        }
    }
}
" 0 6 (face font-lock-keyword-face fontified nil) 6 7 (fontified nil) 7 9 (face font-lock-constant-face fontified nil) 9 10 (fontified nil) 10 14 (face font-lock-constant-face fontified nil) 14 15 (fontified nil) 15 23 (face font-lock-constant-face fontified nil) 23 24 (fontified nil) 24 27 (face font-lock-constant-face fontified nil) 27 28 (fontified nil) 28 32 (face font-lock-type-face fontified nil) 32 33 (face font-lock-type-face c-type c-decl-id-start fontified nil) 33 35 (fontified nil) 35 41 (face font-lock-keyword-face fontified nil) 41 42 (fontified nil) 42 46 (face font-lock-constant-face fontified nil) 46 47 (fontified nil) 47 49 (face font-lock-constant-face fontified nil) 49 50 (fontified nil) 50 53 (face font-lock-type-face fontified nil) 53 54 (face font-lock-type-face c-type c-decl-id-start fontified nil) 54 56 (fontified nil) 56 62 (face font-lock-keyword-face fontified nil) 62 63 (fontified nil) 63 67 (face font-lock-constant-face fontified nil) 67 68 (fontified nil) 68 70 (face font-lock-constant-face fontified nil) 70 71 (fontified nil) 71 80 (face font-lock-type-face fontified nil) 80 81 (face font-lock-type-face c-type c-decl-id-start fontified nil) 81 83 (fontified nil) 83 89 (face font-lock-keyword-face fontified nil) 89 90 (fontified nil) 90 94 (face font-lock-constant-face fontified nil) 94 95 (fontified nil) 95 97 (face font-lock-constant-face fontified nil) 97 98 (fontified nil) 98 107 (face font-lock-type-face fontified nil) 107 108 (face font-lock-type-face c-type c-decl-id-start fontified nil) 108 110 (fontified nil) 110 116 (face font-lock-keyword-face fontified nil) 116 117 (fontified nil) 117 121 (face font-lock-constant-face fontified nil) 121 122 (fontified nil) 122 124 (face font-lock-constant-face fontified nil) 124 125 (fontified nil) 125 138 (face font-lock-type-face fontified nil) 138 139 (face font-lock-type-face c-type c-decl-id-start fontified nil) 139 141 (fontified nil) 141 147 (face font-lock-keyword-face fontified nil) 147 148 (fontified nil) 148 152 (face font-lock-constant-face fontified nil) 152 153 (fontified nil) 153 155 (face font-lock-constant-face fontified nil) 155 156 (fontified nil) 156 169 (face font-lock-type-face fontified nil) 169 170 (face font-lock-type-face c-type c-decl-id-start fontified nil) 170 172 (fontified nil) 172 178 (face font-lock-keyword-face fontified nil) 178 179 (fontified nil) 179 183 (face font-lock-constant-face fontified nil) 183 184 (fontified nil) 184 186 (face font-lock-constant-face fontified nil) 186 187 (fontified nil) 187 197 (face font-lock-type-face fontified nil) 197 198 (face font-lock-type-face c-type c-decl-id-start fontified nil) 198 200 (fontified nil) 200 206 (face font-lock-keyword-face fontified nil) 206 207 (fontified nil) 207 211 (face font-lock-constant-face fontified nil) 211 212 (fontified nil) 212 216 (face font-lock-constant-face fontified nil) 216 217 (fontified nil) 217 226 (face font-lock-type-face fontified nil) 226 227 (face font-lock-type-face c-type c-decl-id-start fontified nil) 227 229 (fontified nil) 229 235 (face font-lock-keyword-face fontified nil) 235 236 (fontified nil) 236 240 (face font-lock-constant-face fontified nil) 240 241 (fontified nil) 241 243 (face font-lock-constant-face fontified nil) 243 244 (fontified nil) 244 260 (face font-lock-type-face fontified nil) 260 261 (face font-lock-type-face c-type c-decl-id-start fontified nil) 261 264 (fontified nil) 264 270 (face font-lock-keyword-face fontified nil) 270 271 (fontified nil) 271 275 (face font-lock-keyword-face fontified nil) 275 276 (c-type c-decl-type-start face font-lock-keyword-face fontified nil) 276 277 (fontified nil) 277 285 (face font-lock-type-face fontified nil) 285 292 (fontified nil) 292 298 (face font-lock-type-face fontified nil) 298 299 (fontified nil) 299 300 (c-type c-decl-id-start fontified nil) 300 301 (fontified nil) 301 311 (face font-lock-variable-name-face fontified nil) 311 317 (fontified nil) 317 323 (face font-lock-type-face fontified nil) 323 324 (face font-lock-type-face c-type c-decl-id-start fontified nil) 324 325 (fontified nil) 325 326 (face font-lock-variable-name-face fontified nil) 326 329 (fontified nil) 329 334 (face font-lock-constant-face fontified nil) 334 340 (fontified nil) 340 346 (face font-lock-type-face fontified nil) 346 347 (face font-lock-type-face c-type c-decl-id-start fontified nil) 347 348 (fontified nil) 348 349 (face font-lock-variable-name-face fontified nil) 349 352 (fontified nil) 352 357 (face font-lock-constant-face fontified nil) 357 363 (fontified nil) 363 368 (face font-lock-type-face fontified nil) 368 369 (face font-lock-type-face c-type c-decl-id-start fontified nil) 369 370 (fontified nil) 370 372 (face font-lock-variable-name-face fontified nil) 372 375 (fontified nil) 375 377 (face font-lock-string-face fontified nil) 377 383 (fontified nil) 383 388 (face font-lock-type-face fontified nil) 388 389 (face font-lock-type-face c-type c-decl-id-start fontified nil) 389 390 (fontified nil) 390 394 (face font-lock-variable-name-face fontified nil) 394 397 (fontified nil) 397 399 (face font-lock-string-face fontified nil) 399 410 (fontified nil) 410 416 (face font-lock-keyword-face fontified nil) 416 480 (fontified nil) 480 486 (face font-lock-keyword-face fontified nil) 486 487 (fontified nil) 487 490 (face font-lock-type-face fontified nil) 490 491 (face font-lock-type-face c-type c-decl-id-start fontified nil) 491 492 (fontified nil) 492 502 (face font-lock-function-name-face fontified nil) 502 503 (c-type c-decl-arg-start fontified nil) 503 509 (face font-lock-type-face fontified nil) 509 512 (fontified nil) 512 522 (face font-lock-variable-name-face fontified nil) 522 533 (fontified nil) 533 536 (face font-lock-keyword-face fontified nil) 536 537 (fontified nil) 537 539 (face font-lock-type-face fontified nil) 539 540 (face font-lock-type-face c-type c-decl-id-start fontified nil) 540 541 (fontified nil) 541 542 (face font-lock-variable-name-face fontified nil) 542 563 (fontified nil) 563 569 (face font-lock-type-face fontified nil) 569 589 (fontified nil) 589 591 (face font-lock-keyword-face fontified nil) 591 613 (fontified nil) 613 617 (face font-lock-string-face fontified nil) 617 637 (fontified nil) 637 639 (face font-lock-keyword-face fontified nil) 639 683 (fontified nil) 683 728 (face font-lock-string-face fontified nil) 728 806 (fontified nil) 806 810 (face font-lock-constant-face fontified nil) 810 826 (fontified nil) 826 830 (face font-lock-keyword-face fontified nil) 830 831 (fontified nil) 831 833 (face font-lock-keyword-face fontified nil) 833 855 (fontified nil) 855 859 (face font-lock-string-face fontified nil) 859 879 (fontified nil) 879 881 (face font-lock-keyword-face fontified nil) 881 925 (fontified nil) 925 970 (face font-lock-string-face fontified nil) 970 1045 (fontified nil) 1045 1047 (face font-lock-keyword-face fontified nil) 1047 1160 (fontified nil) 1160 1164 (face font-lock-keyword-face fontified nil) 1164 1206 (fontified nil) 1206 1213 (face font-lock-string-face fontified nil) 1213 1254 (fontified nil) 1254 1258 (face font-lock-constant-face fontified nil) 1258 1295 (fontified nil) 1295 1301 (face font-lock-keyword-face fontified nil) 1301 1302 (fontified nil) 1302 1307 (face font-lock-type-face fontified nil) 1307 1308 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 1308 1314 (face font-lock-type-face fontified nil) 1314 1315 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 1315 1316 (fontified nil) 1316 1322 (face font-lock-function-name-face fontified nil) 1322 1323 (c-type c-decl-arg-start fontified nil) 1323 1329 (face font-lock-type-face fontified nil) 1329 1330 (fontified nil) 1330 1337 (face font-lock-variable-name-face fontified nil) 1337 1348 (fontified nil) 1348 1353 (face font-lock-type-face fontified nil) 1353 1354 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 1354 1360 (face font-lock-type-face fontified nil) 1360 1361 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 1361 1362 (fontified nil) 1362 1367 (face font-lock-variable-name-face fontified nil) 1367 1370 (fontified nil) 1370 1373 (face font-lock-keyword-face fontified nil) 1373 1374 (fontified nil) 1374 1379 (face font-lock-type-face fontified nil) 1379 1380 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 1380 1381 (category c->-as-paren-syntax fontified nil) 1381 1393 (fontified nil) 1393 1396 (face font-lock-keyword-face fontified nil) 1396 1410 (fontified nil) 1410 1419 (face font-lock-type-face fontified nil) 1419 1420 (face font-lock-type-face c-type c-decl-id-start fontified nil) 1420 1421 (fontified nil) 1421 1434 (face font-lock-variable-name-face fontified nil) 1434 1437 (fontified nil) 1437 1440 (face font-lock-keyword-face fontified nil) 1440 1441 (fontified nil) 1441 1451 (face font-lock-type-face fontified nil) 1451 1474 (fontified nil) 1474 1487 (face font-lock-type-face fontified nil) 1487 1488 (face font-lock-type-face c-type c-decl-id-start fontified nil) 1488 1489 (fontified nil) 1489 1495 (face font-lock-variable-name-face fontified nil) 1495 1498 (fontified nil) 1498 1500 (face font-lock-keyword-face fontified nil) 1500 1501 (face font-lock-keyword-face fontified nil) 1501 1502 (fontified nil) 1502 1516 (face font-lock-type-face fontified nil) 1516 1533 (fontified nil) 1533 1545 (fontified nil) 1545 1550 (face font-lock-type-face fontified nil) 1550 1551 (face font-lock-type-face c-type c-decl-id-start fontified nil) 1551 1552 (fontified nil) 1552 1559 (face font-lock-variable-name-face fontified nil) 1559 1573 (fontified nil) 1573 1578 (face font-lock-keyword-face fontified nil) 1578 1612 (fontified nil) 1612 1616 (face font-lock-constant-face fontified nil) 1616 1685 (fontified nil) 1685 1695 (fontified nil) 1695 1700 (face font-lock-keyword-face fontified nil) 1700 1748 (fontified nil) 1748 1770 (face font-lock-string-face fontified nil) 1770 1827 (fontified nil) 1827 1833 (face font-lock-keyword-face fontified nil) 1833 1856 (fontified nil) 1856 1862 (face font-lock-keyword-face fontified nil) 1862 1863 (fontified nil) 1863 1868 (face font-lock-type-face fontified nil) 1868 1869 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 1869 1875 (face font-lock-type-face fontified nil) 1875 1876 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 1876 1877 (fontified nil) 1877 1887 (face font-lock-function-name-face fontified nil) 1887 1888 (c-type c-decl-arg-start fontified nil) 1888 1894 (face font-lock-type-face fontified nil) 1894 1897 (fontified nil) 1897 1901 (face font-lock-variable-name-face fontified nil) 1901 1912 (fontified nil) 1912 1917 (face font-lock-type-face fontified nil) 1917 1918 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 1918 1924 (face font-lock-type-face fontified nil) 1924 1925 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 1925 1926 (fontified nil) 1926 1927 (face font-lock-variable-name-face fontified nil) 1927 1930 (fontified nil) 1930 1933 (face font-lock-keyword-face fontified nil) 1933 1934 (fontified nil) 1934 1939 (face font-lock-type-face fontified nil) 1939 1940 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 1940 1941 (category c->-as-paren-syntax fontified nil) 1941 1953 (fontified nil) 1953 1956 (face font-lock-keyword-face fontified nil) 1956 1957 (fontified nil) 1957 1959 (face font-lock-type-face fontified nil) 1959 1960 (face font-lock-type-face c-type c-decl-id-start fontified nil) 1960 1961 (fontified nil) 1961 1962 (face font-lock-variable-name-face fontified nil) 1962 1975 (fontified nil) 1975 1981 (face font-lock-type-face fontified nil) 1981 2001 (fontified nil) 2001 2006 (face font-lock-type-face fontified nil) 2006 2007 (face font-lock-type-face c-type c-decl-id-start fontified nil) 2007 2008 (fontified nil) 2008 2009 (face font-lock-variable-name-face fontified nil) 2009 2033 (fontified nil) 2033 2035 (face font-lock-keyword-face fontified nil) 2035 2045 (fontified nil) 2045 2049 (face font-lock-string-face fontified nil) 2049 2063 (fontified nil) 2063 2067 (face font-lock-string-face fontified nil) 2067 2086 (fontified nil) 2086 2094 (face font-lock-keyword-face fontified nil) 2094 2108 (fontified nil) 2108 2113 (face font-lock-type-face fontified nil) 2113 2114 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 2114 2120 (face font-lock-type-face fontified nil) 2120 2121 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 2121 2122 (fontified nil) 2122 2124 (face font-lock-variable-name-face fontified nil) 2124 2156 (fontified nil) 2156 2159 (face font-lock-keyword-face fontified nil) 2159 2160 (fontified nil) 2160 2165 (face font-lock-type-face fontified nil) 2165 2166 (face font-lock-type-face c-type c-decl-id-start fontified nil) 2166 2167 (fontified nil) 2167 2168 (face font-lock-variable-name-face fontified nil) 2168 2222 (fontified nil) 2222 2228 (face font-lock-keyword-face fontified nil) 2228 2238 (fontified nil) 2238 2243 (fontified nil) 2243 2249 (face font-lock-keyword-face fontified nil) 2249 2250 (fontified nil) 2250 2256 (face font-lock-keyword-face fontified nil) 2256 2257 (fontified nil) 2257 2260 (face font-lock-type-face fontified nil) 2260 2261 (face font-lock-type-face c-type c-decl-id-start fontified nil) 2261 2262 (fontified nil) 2262 2268 (face font-lock-function-name-face fontified nil) 2268 2269 (c-type c-decl-arg-start fontified nil) 2269 2275 (face font-lock-type-face fontified nil) 2275 2276 (fontified nil) 2276 2289 (face font-lock-variable-name-face fontified nil) 2289 2290 (c-type c-decl-arg-start fontified nil) 2290 2291 (fontified nil) 2291 2296 (face font-lock-type-face fontified nil) 2296 2297 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 2297 2303 (face font-lock-type-face fontified nil) 2303 2304 (category c->-as-paren-syntax fontified nil) 2304 2305 (fontified nil) 2305 2310 (face font-lock-variable-name-face fontified nil) 2310 2322 (fontified nil) 2322 2325 (face font-lock-keyword-face fontified nil) 2325 2327 (fontified nil) 2327 2340 (face font-lock-type-face fontified nil) 2340 2341 (face font-lock-type-face c-type c-decl-id-start fontified nil) 2341 2342 (fontified nil) 2342 2350 (face font-lock-variable-name-face fontified nil) 2350 2353 (fontified nil) 2353 2356 (face font-lock-keyword-face fontified nil) 2356 2357 (fontified nil) 2357 2371 (face font-lock-type-face fontified nil) 2371 2372 (fontified nil) 2372 2375 (face font-lock-keyword-face fontified nil) 2375 2376 (fontified nil) 2376 2386 (face font-lock-type-face fontified nil) 2386 2418 (fontified nil) 2418 2421 (face font-lock-keyword-face fontified nil) 2421 2423 (fontified nil) 2423 2428 (face font-lock-type-face fontified nil) 2428 2429 (face font-lock-type-face c-type c-decl-id-start fontified nil) 2429 2430 (fontified nil) 2430 2438 (face font-lock-variable-name-face fontified nil) 2438 2574 (fontified nil) 2574 2606 (face font-lock-string-face fontified nil) 2606 2609 (fontified nil) 2609 2619 (fontified nil) 2619 2624 (face font-lock-keyword-face fontified nil) 2624 2674 (fontified nil) 2674 2718 (face font-lock-string-face fontified nil) 2718 2775 (fontified nil) 2775 2781 (face font-lock-keyword-face fontified nil) 2781 2782 (fontified nil) 2782 2788 (face font-lock-keyword-face fontified nil) 2788 2789 (fontified nil) 2789 2794 (face font-lock-type-face fontified nil) 2794 2795 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 2795 2801 (face font-lock-type-face fontified nil) 2801 2802 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 2802 2803 (fontified nil) 2803 2810 (face font-lock-function-name-face fontified nil) 2810 2811 (c-type c-decl-arg-start fontified nil) 2811 2816 (face font-lock-type-face fontified nil) 2816 2817 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 2817 2823 (face font-lock-type-face fontified nil) 2823 2824 (category c->-as-paren-syntax fontified nil) 2824 2825 (fontified nil) 2825 2826 (face font-lock-variable-name-face fontified nil) 2826 2837 (fontified nil) 2837 2843 (face font-lock-keyword-face fontified nil) 2843 2879 (fontified nil) 2879 2884 (face font-lock-type-face fontified nil) 2884 2885 (face font-lock-type-face c-type c-decl-id-start fontified nil) 2885 2886 (fontified nil) 2886 2895 (face font-lock-variable-name-face fontified nil) 2895 2925 (fontified nil) 2925 2928 (face font-lock-string-face fontified nil) 2928 2929 (fontified nil) 2929 2931 (face font-lock-string-face fontified nil) 2931 2946 (fontified nil) 2946 2951 (face font-lock-type-face fontified nil) 2951 2952 (face font-lock-type-face c-type c-decl-id-start fontified nil) 2952 2953 (fontified nil) 2953 2960 (face font-lock-variable-name-face fontified nil) 2960 2995 (fontified nil) 2995 3005 (face font-lock-constant-face fontified nil) 3005 3006 (fontified nil) 3006 3010 (face font-lock-constant-face fontified nil) 3010 3027 (fontified nil) 3027 3035 (face font-lock-string-face fontified nil) 3035 3037 (fontified nil) 3037 3039 (face font-lock-string-face fontified nil) 3039 3054 (fontified nil) 3054 3059 (face font-lock-type-face fontified nil) 3059 3060 (face font-lock-type-face c-type c-decl-id-start fontified nil) 3060 3061 (fontified nil) 3061 3070 (face font-lock-variable-name-face fontified nil) 3070 3100 (fontified nil) 3100 3103 (face font-lock-string-face fontified nil) 3103 3104 (fontified nil) 3104 3106 (face font-lock-string-face fontified nil) 3106 3121 (fontified nil) 3121 3126 (face font-lock-type-face fontified nil) 3126 3127 (face font-lock-type-face c-type c-decl-id-start fontified nil) 3127 3128 (fontified nil) 3128 3135 (face font-lock-variable-name-face fontified nil) 3135 3170 (fontified nil) 3170 3180 (face font-lock-constant-face fontified nil) 3180 3181 (fontified nil) 3181 3185 (face font-lock-constant-face fontified nil) 3185 3202 (fontified nil) 3202 3210 (face font-lock-string-face fontified nil) 3210 3212 (fontified nil) 3212 3214 (face font-lock-string-face fontified nil) 3214 3229 (fontified nil) 3229 3235 (face font-lock-keyword-face fontified nil) 3235 3288 (fontified nil) 3288 3294 (face font-lock-keyword-face fontified nil) 3294 3295 (fontified nil) 3295 3301 (face font-lock-keyword-face fontified nil) 3301 3302 (fontified nil) 3302 3307 (face font-lock-type-face fontified nil) 3307 3308 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 3308 3314 (face font-lock-type-face fontified nil) 3314 3315 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 3315 3316 (fontified nil) 3316 3323 (face font-lock-function-name-face fontified nil) 3323 3324 (c-type c-decl-arg-start fontified nil) 3324 3329 (face font-lock-type-face fontified nil) 3329 3330 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 3330 3336 (face font-lock-type-face fontified nil) 3336 3337 (category c->-as-paren-syntax fontified nil) 3337 3338 (fontified nil) 3338 3339 (face font-lock-variable-name-face fontified nil) 3339 3350 (fontified nil) 3350 3356 (face font-lock-keyword-face fontified nil) 3356 3385 (fontified nil) 3385 3390 (fontified nil) 3390 3396 (face font-lock-keyword-face fontified nil) 3396 3397 (fontified nil) 3397 3403 (face font-lock-keyword-face fontified nil) 3403 3404 (fontified nil) 3404 3407 (face font-lock-type-face fontified nil) 3407 3408 (face font-lock-type-face c-type c-decl-id-start fontified nil) 3408 3409 (fontified nil) 3409 3412 (face font-lock-function-name-face fontified nil) 3412 3413 (c-type c-decl-arg-start fontified nil) 3413 3419 (face font-lock-type-face fontified nil) 3419 3420 (fontified nil) 3420 3421 (face font-lock-variable-name-face fontified nil) 3421 3422 (c-type c-decl-arg-start fontified nil) 3422 3423 (fontified nil) 3423 3428 (face font-lock-type-face fontified nil) 3428 3429 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 3429 3435 (face font-lock-type-face fontified nil) 3435 3436 (category c->-as-paren-syntax fontified nil) 3436 3437 (fontified nil) 3437 3438 (face font-lock-variable-name-face fontified nil) 3438 3450 (fontified nil) 3450 3453 (face font-lock-keyword-face fontified nil) 3453 3455 (fontified nil) 3455 3468 (face font-lock-type-face fontified nil) 3468 3469 (face font-lock-type-face c-type c-decl-id-start fontified nil) 3469 3470 (fontified nil) 3470 3473 (face font-lock-variable-name-face fontified nil) 3473 3476 (fontified nil) 3476 3479 (face font-lock-keyword-face fontified nil) 3479 3480 (fontified nil) 3480 3494 (face font-lock-type-face fontified nil) 3494 3495 (fontified nil) 3495 3498 (face font-lock-keyword-face fontified nil) 3498 3499 (fontified nil) 3499 3509 (face font-lock-type-face fontified nil) 3509 3529 (fontified nil) 3529 3532 (face font-lock-keyword-face fontified nil) 3532 3534 (fontified nil) 3534 3539 (face font-lock-type-face fontified nil) 3539 3540 (face font-lock-type-face c-type c-decl-id-start fontified nil) 3540 3541 (fontified nil) 3541 3548 (face font-lock-variable-name-face fontified nil) 3548 3554 (fontified nil) 3554 3626 (fontified nil) 3626 3631 (face font-lock-keyword-face fontified nil) 3631 3681 (fontified nil) 3681 3722 (face font-lock-string-face fontified nil) 3722 3781 (fontified nil) 3781 3787 (face font-lock-keyword-face fontified nil) 3787 3788 (fontified nil) 3788 3792 (face font-lock-keyword-face fontified nil) 3792 3793 (c-type c-decl-type-start face font-lock-keyword-face fontified nil) 3793 3794 (fontified nil) 3794 3803 (face font-lock-type-face fontified nil) 3803 3810 (fontified nil) 3810 3816 (face font-lock-keyword-face fontified nil) 3816 3817 (fontified nil) 3817 3823 (face font-lock-keyword-face fontified nil) 3823 3824 (fontified nil) 3824 3827 (face font-lock-type-face fontified nil) 3827 3828 (face font-lock-type-face c-type c-decl-id-start fontified nil) 3828 3829 (fontified nil) 3829 3833 (face font-lock-function-name-face fontified nil) 3833 3834 (c-type c-decl-arg-start fontified nil) 3834 3840 (face font-lock-type-face fontified nil) 3840 3841 (fontified nil) 3841 3845 (face font-lock-variable-name-face fontified nil) 3845 3859 (fontified nil) 3859 3866 (face font-lock-type-face fontified nil) 3866 3867 (face font-lock-type-face c-type c-decl-id-start fontified nil) 3867 3868 (fontified nil) 3868 3875 (face font-lock-variable-name-face fontified nil) 3875 3878 (fontified nil) 3878 3881 (face font-lock-keyword-face fontified nil) 3881 3882 (fontified nil) 3882 3890 (face font-lock-type-face fontified nil) 3890 3940 (fontified nil) 3940 3945 (face font-lock-type-face fontified nil) 3945 3946 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 3946 3952 (face font-lock-type-face fontified nil) 3952 3953 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 3953 3954 (fontified nil) 3954 3959 (face font-lock-variable-name-face fontified nil) 3959 3996 (fontified nil) 3996 4001 (face font-lock-type-face fontified nil) 4001 4002 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 4002 4008 (face font-lock-type-face fontified nil) 4008 4009 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 4009 4010 (fontified nil) 4010 4014 (face font-lock-variable-name-face fontified nil) 4014 4025 (fontified nil) 4025 4027 (face font-lock-keyword-face fontified nil) 4027 4092 (fontified nil) 4092 4096 (face font-lock-keyword-face fontified nil) 4096 4141 (fontified nil) 4141 4150 (fontified nil) 4150 4152 (face font-lock-keyword-face fontified nil) 4152 4167 (fontified nil) 4167 4245 (fontified nil) 4245 4260 (face font-lock-string-face fontified nil) 4260 4286 (fontified nil) 4286 4290 (face font-lock-keyword-face fontified nil) 4290 4305 (fontified nil) 4305 4308 (face font-lock-keyword-face fontified nil) 4308 4310 (fontified nil) 4310 4315 (face font-lock-type-face fontified nil) 4315 4316 (face font-lock-type-face c-type c-decl-id-start fontified nil) 4316 4317 (fontified nil) 4317 4318 (face font-lock-variable-name-face fontified nil) 4318 4385 (fontified nil) 4385 4390 (face font-lock-type-face fontified nil) 4390 4391 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 4391 4397 (face font-lock-type-face fontified nil) 4397 4398 (c-type c-decl-id-start fontified nil category c->-as-paren-syntax) 4398 4399 (fontified nil) 4399 4407 (face font-lock-variable-name-face fontified nil) 4407 4448 (fontified nil) 4448 4450 (face font-lock-keyword-face fontified nil) 4450 4542 (fontified nil) 4542 4579 (face font-lock-string-face fontified nil) 4579 4605 (fontified nil) 4605 4609 (face font-lock-keyword-face fontified nil) 4609 4624 (fontified nil) 4624 4627 (face font-lock-keyword-face fontified nil) 4627 4629 (fontified nil) 4629 4634 (face font-lock-type-face fontified nil) 4634 4635 (face font-lock-type-face c-type c-decl-id-start fontified nil) 4635 4636 (fontified nil) 4636 4640 (face font-lock-variable-name-face fontified nil) 4640 4728 (fontified nil) 4728 4729 (fontified nil rear-nonsticky nil)) . 1) (undo-tree-id1073 . -3385) (undo-tree-id1074 . -2609) (undo-tree-id1075 . -2238) (undo-tree-id1076 . -3283) (undo-tree-id1077 . -3385) (nil rear-nonsticky t 4729 . 4730) (t 26110 27118 367210 829000)) (26110 27118 355162 708000) 0 nil])
([nil nil ((#("    static Lista<String> renglones;
" 0 4 (fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (face font-lock-keyword-face fontified t) 6 7 (face font-lock-keyword-face fontified t) 7 8 (face font-lock-keyword-face fontified t) 8 9 (face font-lock-keyword-face fontified t) 9 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 12 (face font-lock-type-face fontified t) 12 13 (face font-lock-type-face fontified t) 13 14 (face font-lock-type-face fontified t) 14 15 (face font-lock-type-face fontified t) 15 16 (face font-lock-type-face fontified t) 16 17 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 17 18 (face font-lock-type-face fontified t) 18 19 (face font-lock-type-face fontified t) 19 20 (face font-lock-type-face fontified t) 20 21 (face font-lock-type-face fontified t) 21 22 (face font-lock-type-face fontified t) 22 23 (face font-lock-type-face fontified t) 23 24 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 24 25 (fontified t) 25 26 (face font-lock-variable-name-face fontified t) 26 27 (face font-lock-variable-name-face fontified t) 27 28 (face font-lock-variable-name-face fontified t) 28 29 (face font-lock-variable-name-face fontified t) 29 30 (face font-lock-variable-name-face fontified t) 30 31 (face font-lock-variable-name-face fontified t) 31 32 (face font-lock-variable-name-face fontified t) 32 33 (face font-lock-variable-name-face fontified t) 33 34 (face font-lock-variable-name-face fontified t) 34 35 (fontified t) 35 36 (fontified t)) . 2896) (undo-tree-id1137 . -36) (t 26110 27289 963529 340000)) nil (26110 27534 378094 800000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -2895) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) 2896) nil (26110 27534 378092 516000) 0 nil])
([nil nil ((#("package mx.unam.ciencias.edd.proyecto1;
import mx.unam.ciencias.edd.Lista;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.BufferedReader;
import java.io.IOException;
import java.text.Normalizer;
import java.io.InputStreamReader;

public class Banderas{
    String[] argumentos;
    boolean r = false;
    boolean o = false;
    String id = \"\";
    String file = \"\";
    
    public Banderas(String[] args){
	argumentos = args;
    }

    public void argumentos(String[] argumentos){
	for(int i = 0; i<argumentos.length; i++){
	    if(argumentos[i].equals(\"-r\")){
		if(r){
		    System.out.println(\"La bandera -r solo se puede colocar una vez\");
		    System.exit(-1);
		}

		r = true;
	    } else if(argumentos[i].equals(\"-o\")){
		if(o){
		    System.out.println(\"La bandera -o solo se puede colocar una vez\");
		    System.exit(-1);
		}

		if(i+1 < argumentos.length) {
		    id = argumentos[i+1];
		    i++;
		} else {
		    System.out.println(\"ERROR\");
		}
		
		o = true;
		
	    } 
	 
	}
	
    }

    public Lista<String> reader(String archivo){
    
	Lista<String> lista = new Lista<>();
	try{
	    FileReader lectorArchivo = new FileReader(archivo);
	    BufferedReader lector = new BufferedReader(lectorArchivo);
	    
	    String renglon;
	    
	    while((renglon = lector.readLine()) != null)
		lista.agrega(renglon);

	    lector.close();
	    
	} catch(IOException e){
	    System.out.println(\"\\nAlgo saliรณ mal: \\n\");
	    e.printStackTrace();	    
	}

	return lista;
		
    }

    public Lista<String> fileReader(String[] args){
	Lista<String> l = new Lista<>();
	for(int i=0; i < args.length; i++){
	    String b = args[i];
	    if(b.equals(\"-r\") || b.equals(\"-o\"))
		continue;
	    
	    Lista<String> fr = reader(args[i]);
	    for(String r : fr)
		l.agrega(r);
	}
	return l;
    }


    public static void writer(String nombreArchivo, Lista<String> lista) {
	try (BufferedWriter escritor = new BufferedWriter(new FileWriter(nombreArchivo))) {
	    for (String elemento : lista) {
		escritor.write(elemento);
		escritor.newLine(); 
	    }
	    System.out.println(\"Archivo guardado correctamente\");
	} catch (IOException e) {
        System.out.println(\"\\nAlgo saliรณ mal al guardar el archivo: \\n\");
        e.printStackTrace();
	}
    }
    
    
    public static Lista<String> ordenar(Lista<String> l){
	return l.mergeSort((a,b) -> {
		String aSinMayus = a.toLowerCase().replaceAll(\" \",\"\");
		String aLimpio = Normalizer.normalize(aSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
		String bSinMayus = b.toLowerCase().replaceAll(\" \",\"\");
		String bLimpio = Normalizer.normalize(bSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
		
		return aLimpio.compareTo(bLimpio);
		
	    }); 
	
	
    }

    public static Lista<String> reverso(Lista<String> l){
	return ordenar(l).reversa();
    }
        
}" 0 7 (face font-lock-keyword-face fontified t) 7 29 (fontified t) 29 37 (face font-lock-constant-face fontified t) 37 38 (face font-lock-constant-face c-type c-decl-id-start fontified t) 38 40 (fontified t) 40 46 (face font-lock-keyword-face fontified t) 46 47 (fontified t) 47 49 (face font-lock-constant-face fontified t) 49 50 (fontified t) 50 54 (face font-lock-constant-face fontified t) 54 55 (fontified t) 55 63 (face font-lock-constant-face fontified t) 63 64 (fontified t) 64 67 (face font-lock-constant-face fontified t) 67 68 (fontified t) 68 72 (face font-lock-type-face fontified t) 72 73 (face font-lock-type-face c-type c-decl-id-start fontified t) 73 75 (fontified t) 75 76 (face font-lock-keyword-face fontified t) 76 77 (face font-lock-keyword-face fontified t) 77 78 (face font-lock-keyword-face fontified t) 78 79 (face font-lock-keyword-face fontified t) 79 80 (face font-lock-keyword-face fontified t) 80 81 (face font-lock-keyword-face fontified t) 81 82 (fontified t) 82 83 (face font-lock-constant-face fontified t) 83 84 (face font-lock-constant-face fontified t) 84 85 (face font-lock-constant-face fontified t) 85 86 (face font-lock-constant-face fontified t) 86 87 (fontified t) 87 88 (face font-lock-constant-face fontified t) 88 89 (face font-lock-constant-face fontified t) 89 90 (fontified t) 90 91 (face font-lock-type-face fontified t) 91 92 (face font-lock-type-face fontified t) 92 93 (face font-lock-type-face fontified t) 93 94 (face font-lock-type-face c-type c-decl-id-start fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 102 (face font-lock-keyword-face fontified t) 102 103 (fontified t) 103 107 (face font-lock-constant-face fontified t) 107 108 (fontified t) 108 110 (face font-lock-constant-face fontified t) 110 111 (fontified t) 111 120 (face font-lock-type-face fontified t) 120 121 (face font-lock-type-face c-type c-decl-id-start fontified t) 121 122 (fontified t) 122 123 (fontified t) 123 129 (face font-lock-keyword-face fontified t) 129 130 (fontified t) 130 134 (face font-lock-constant-face fontified t) 134 135 (fontified t) 135 137 (face font-lock-constant-face fontified t) 137 138 (fontified t) 138 147 (face font-lock-type-face fontified t) 147 148 (face font-lock-type-face c-type c-decl-id-start fontified t) 148 150 (fontified t) 150 156 (face font-lock-keyword-face fontified t) 156 157 (fontified t) 157 161 (face font-lock-constant-face fontified t) 161 162 (fontified t) 162 164 (face font-lock-constant-face fontified t) 164 165 (fontified t) 165 178 (face font-lock-type-face fontified t) 178 179 (face font-lock-type-face c-type c-decl-id-start fontified t) 179 181 (fontified t) 181 187 (face font-lock-keyword-face fontified t) 187 188 (fontified t) 188 192 (face font-lock-constant-face fontified t) 192 193 (fontified t) 193 195 (face font-lock-constant-face fontified t) 195 196 (fontified t) 196 209 (face font-lock-type-face fontified t) 209 210 (face font-lock-type-face c-type c-decl-id-start fontified t) 210 212 (fontified t) 212 218 (face font-lock-keyword-face fontified t) 218 219 (fontified t) 219 223 (face font-lock-constant-face fontified t) 223 224 (fontified t) 224 226 (face font-lock-constant-face fontified t) 226 227 (fontified t) 227 237 (face font-lock-type-face fontified t) 237 238 (face font-lock-type-face c-type c-decl-id-start fontified t) 238 240 (fontified t) 240 246 (face font-lock-keyword-face fontified t) 246 247 (fontified t) 247 251 (face font-lock-constant-face fontified t) 251 252 (fontified t) 252 256 (face font-lock-constant-face fontified t) 256 257 (fontified t) 257 266 (face font-lock-type-face fontified t) 266 267 (face font-lock-type-face c-type c-decl-id-start fontified t) 267 269 (fontified t) 269 275 (face font-lock-keyword-face fontified t) 275 276 (fontified t) 276 280 (face font-lock-constant-face fontified t) 280 281 (fontified t) 281 283 (face font-lock-constant-face fontified t) 283 284 (fontified t) 284 300 (face font-lock-type-face fontified t) 300 301 (face font-lock-type-face c-type c-decl-id-start fontified t) 301 302 (rear-nonsticky t fontified t) 302 303 (fontified t) 303 304 (fontified t) 304 310 (face font-lock-keyword-face fontified t) 310 311 (fontified t) 311 315 (face font-lock-keyword-face fontified t) 315 316 (c-type c-decl-type-start face font-lock-keyword-face fontified t) 316 317 (fontified t) 317 324 (face font-lock-type-face fontified t) 324 325 (face font-lock-type-face fontified t) 325 326 (fontified t) 326 331 (fontified t) 331 337 (face font-lock-type-face fontified t) 337 338 (fontified t) 338 339 (c-type c-decl-id-start fontified t) 339 340 (fontified t) 340 350 (face font-lock-variable-name-face fontified t) 350 356 (fontified t) 356 362 (face font-lock-type-face fontified t) 362 363 (face font-lock-type-face c-type c-decl-id-start fontified t) 363 364 (fontified t) 364 365 (face font-lock-variable-name-face fontified t) 365 368 (fontified t) 368 373 (face font-lock-constant-face fontified t) 373 379 (fontified t) 379 385 (face font-lock-type-face fontified t) 385 386 (face font-lock-type-face c-type c-decl-id-start fontified t) 386 387 (fontified t) 387 388 (face font-lock-variable-name-face fontified t) 388 391 (fontified t) 391 396 (face font-lock-constant-face fontified t) 396 402 (fontified t) 402 407 (face font-lock-type-face fontified t) 407 408 (face font-lock-type-face c-type c-decl-id-start fontified t) 408 409 (fontified t) 409 411 (face font-lock-variable-name-face fontified t) 411 414 (fontified t) 414 416 (face font-lock-string-face fontified t) 416 422 (fontified t) 422 427 (face font-lock-type-face fontified t) 427 428 (face font-lock-type-face c-type c-decl-id-start fontified t) 428 429 (fontified t) 429 433 (face font-lock-variable-name-face fontified t) 433 436 (fontified t) 436 438 (face font-lock-string-face fontified t) 438 449 (fontified t) 449 455 (face font-lock-keyword-face fontified t) 455 465 (fontified t) 465 471 (fontified t) 471 512 (fontified t) 512 518 (face font-lock-keyword-face fontified t) 518 519 (fontified t) 519 522 (face font-lock-type-face fontified t) 522 523 (face font-lock-type-face c-type c-decl-id-start fontified t) 523 524 (fontified t) 524 534 (face font-lock-function-name-face fontified t) 534 535 (c-type c-decl-arg-start fontified t) 535 541 (face font-lock-type-face fontified t) 541 544 (fontified t) 544 554 (face font-lock-variable-name-face fontified t) 554 557 (fontified t) 557 558 (fontified t) 558 561 (face font-lock-keyword-face fontified t) 561 562 (fontified t) 562 564 (face font-lock-type-face fontified t) 564 565 (face font-lock-type-face c-type c-decl-id-start fontified t) 565 566 (fontified t) 566 567 (face font-lock-variable-name-face fontified t) 567 586 (fontified t) 586 592 (face font-lock-type-face fontified t) 592 605 (fontified t) 605 607 (face font-lock-keyword-face fontified t) 607 629 (fontified t) 629 633 (face font-lock-string-face fontified t) 633 639 (fontified t) 639 641 (face font-lock-keyword-face fontified t) 641 646 (fontified t) 646 671 (fontified t) 671 672 (face font-lock-string-face fontified t) 672 673 (face font-lock-string-face fontified t) 673 674 (face font-lock-string-face fontified t) 674 675 (face font-lock-string-face fontified t) 675 676 (face font-lock-string-face fontified t) 676 677 (face font-lock-string-face fontified t) 677 678 (face font-lock-string-face fontified t) 678 679 (face font-lock-string-face fontified t) 679 680 (face font-lock-string-face fontified t) 680 681 (face font-lock-string-face fontified t) 681 682 (face font-lock-string-face fontified t) 682 683 (face font-lock-string-face fontified t) 683 684 (face font-lock-string-face fontified t) 684 685 (face font-lock-string-face fontified t) 685 686 (face font-lock-string-face fontified t) 686 687 (face font-lock-string-face fontified t) 687 688 (face font-lock-string-face fontified t) 688 689 (face font-lock-string-face fontified t) 689 690 (face font-lock-string-face fontified t) 690 691 (face font-lock-string-face fontified t) 691 692 (face font-lock-string-face fontified t) 692 693 (face font-lock-string-face fontified t) 693 694 (face font-lock-string-face fontified t) 694 695 (face font-lock-string-face fontified t) 695 696 (face font-lock-string-face fontified t) 696 697 (face font-lock-string-face fontified t) 697 698 (face font-lock-string-face fontified t) 698 699 (face font-lock-string-face fontified t) 699 700 (face font-lock-string-face fontified t) 700 701 (face font-lock-string-face fontified t) 701 702 (face font-lock-string-face fontified t) 702 703 (face font-lock-string-face fontified t) 703 704 (face font-lock-string-face fontified t) 704 705 (face font-lock-string-face fontified t) 705 706 (face font-lock-string-face fontified t) 706 707 (face font-lock-string-face fontified t) 707 708 (face font-lock-string-face fontified t) 708 709 (face font-lock-string-face fontified t) 709 710 (face font-lock-string-face fontified t) 710 711 (face font-lock-string-face fontified t) 711 712 (face font-lock-string-face fontified t) 712 713 (face font-lock-string-face fontified t) 713 714 (face font-lock-string-face fontified t) 714 715 (face font-lock-string-face fontified t) 715 716 (face font-lock-string-face fontified t) 716 719 (fontified t) 719 746 (fontified t) 746 753 (fontified t) 753 757 (face font-lock-constant-face fontified t) 757 766 (fontified t) 766 770 (face font-lock-keyword-face fontified t) 770 771 (fontified t) 771 773 (face font-lock-keyword-face fontified t) 773 795 (fontified t) 795 799 (face font-lock-string-face fontified t) 799 805 (fontified t) 805 807 (face font-lock-keyword-face fontified t) 807 812 (fontified t) 812 837 (fontified t) 837 838 (face font-lock-string-face fontified t) 838 839 (face font-lock-string-face fontified t) 839 840 (face font-lock-string-face fontified t) 840 841 (face font-lock-string-face fontified t) 841 842 (face font-lock-string-face fontified t) 842 843 (face font-lock-string-face fontified t) 843 844 (face font-lock-string-face fontified t) 844 845 (face font-lock-string-face fontified t) 845 846 (face font-lock-string-face fontified t) 846 847 (face font-lock-string-face fontified t) 847 848 (face font-lock-string-face fontified t) 848 849 (face font-lock-string-face fontified t) 849 850 (face font-lock-string-face fontified t) 850 851 (face font-lock-string-face fontified t) 851 852 (face font-lock-string-face fontified t) 852 853 (face font-lock-string-face fontified t) 853 854 (face font-lock-string-face fontified t) 854 855 (face font-lock-string-face fontified t) 855 856 (face font-lock-string-face fontified t) 856 857 (face font-lock-string-face fontified t) 857 858 (face font-lock-string-face fontified t) 858 859 (face font-lock-string-face fontified t) 859 860 (face font-lock-string-face fontified t) 860 861 (face font-lock-string-face fontified t) 861 862 (face font-lock-string-face fontified t) 862 863 (face font-lock-string-face fontified t) 863 864 (face font-lock-string-face fontified t) 864 865 (face font-lock-string-face fontified t) 865 866 (face font-lock-string-face fontified t) 866 867 (face font-lock-string-face fontified t) 867 868 (face font-lock-string-face fontified t) 868 869 (face font-lock-string-face fontified t) 869 870 (face font-lock-string-face fontified t) 870 871 (face font-lock-string-face fontified t) 871 872 (face font-lock-string-face fontified t) 872 873 (face font-lock-string-face fontified t) 873 874 (face font-lock-string-face fontified t) 874 875 (face font-lock-string-face fontified t) 875 876 (face font-lock-string-face fontified t) 876 877 (face font-lock-string-face fontified t) 877 878 (face font-lock-string-face fontified t) 878 879 (face font-lock-string-face fontified t) 879 880 (face font-lock-string-face fontified t) 880 881 (face font-lock-string-face fontified t rear-nonsticky t) 881 882 (face font-lock-string-face fontified t) 882 885 (fontified t) 885 908 (fontified t) 908 913 (fontified t) 913 915 (fontified t) 915 917 (face font-lock-keyword-face fontified t) 917 935 (fontified t) 935 945 (fontified t) 945 951 (fontified t) 951 972 (fontified t) 972 973 (fontified t) 973 979 (fontified t) 979 980 (fontified t) 980 981 (fontified t) 981 982 (fontified t) 982 983 (fontified t) 983 984 (fontified t) 984 987 (fontified t) 987 988 (fontified t) 988 992 (face font-lock-keyword-face fontified t) 992 1020 (fontified t) 1020 1027 (face font-lock-string-face fontified t) 1027 1043 (fontified t) 1043 1047 (face font-lock-constant-face fontified t) 1047 1060 (fontified t) 1060 1062 (fontified t) 1062 1063 (fontified t) 1063 1066 (fontified t) 1066 1067 (fontified t) 1067 1068 (fontified t) 1068 1072 (fontified t) 1072 1074 (fontified t) 1074 1075 (fontified t) 1075 1079 (fontified t) 1079 1085 (face font-lock-keyword-face fontified t) 1085 1086 (fontified t) 1086 1091 (face font-lock-type-face fontified t) 1091 1092 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 1092 1098 (face font-lock-type-face fontified t) 1098 1099 (c-type c-decl-id-start category c->-as-paren-syntax fontified t) 1099 1100 (fontified t) 1100 1106 (face font-lock-function-name-face fontified t) 1106 1107 (c-type c-decl-arg-start fontified t) 1107 1113 (face font-lock-type-face fontified t) 1113 1114 (fontified t) 1114 1121 (face font-lock-variable-name-face fontified t) 1121 1124 (fontified t) 1124 1129 (fontified t) 1129 1130 (fontified t) 1130 1135 (face font-lock-type-face fontified t) 1135 1136 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 1136 1142 (face font-lock-type-face fontified t) 1142 1143 (c-type c-decl-id-start category c->-as-paren-syntax fontified t) 1143 1144 (fontified t) 1144 1149 (face font-lock-variable-name-face fontified t) 1149 1152 (fontified t) 1152 1155 (face font-lock-keyword-face fontified t) 1155 1156 (fontified t) 1156 1161 (face font-lock-type-face fontified t) 1161 1162 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 1162 1163 (category c->-as-paren-syntax fontified t) 1163 1167 (fontified t) 1167 1168 (fontified t) 1168 1171 (face font-lock-keyword-face fontified t) 1171 1178 (fontified t) 1178 1187 (face font-lock-type-face fontified t) 1187 1188 (face font-lock-type-face c-type c-decl-id-start fontified t) 1188 1189 (fontified t) 1189 1202 (face font-lock-variable-name-face fontified t) 1202 1205 (fontified t) 1205 1208 (face font-lock-keyword-face fontified t) 1208 1209 (fontified t) 1209 1219 (face font-lock-type-face fontified t) 1219 1235 (fontified t) 1235 1248 (face font-lock-type-face fontified t) 1248 1249 (face font-lock-type-face c-type c-decl-id-start fontified t) 1249 1250 (fontified t) 1250 1256 (face font-lock-variable-name-face fontified t) 1256 1259 (fontified t) 1259 1262 (face font-lock-keyword-face fontified t) 1262 1263 (fontified t) 1263 1277 (face font-lock-type-face fontified t) 1277 1305 (fontified t) 1305 1310 (face font-lock-type-face fontified t) 1310 1311 (face font-lock-type-face c-type c-decl-id-start fontified t) 1311 1312 (fontified t) 1312 1319 (face font-lock-variable-name-face fontified t) 1319 1332 (fontified t) 1332 1337 (face font-lock-keyword-face fontified t) 1337 1371 (fontified t) 1371 1375 (face font-lock-constant-face fontified t) 1375 1379 (fontified t) 1379 1384 (fontified t) 1384 1433 (fontified t) 1433 1438 (face font-lock-keyword-face fontified t) 1438 1479 (fontified t) 1479 1500 (face font-lock-string-face fontified t) 1500 1501 (face font-lock-string-face fontified t) 1501 1503 (fontified t) 1503 1540 (fontified t) 1540 1546 (face font-lock-keyword-face fontified t) 1546 1547 (fontified t) 1547 1552 (fontified t) 1552 1563 (fontified t) 1563 1564 (fontified t) 1564 1568 (fontified t) 1568 1569 (face font-lock-keyword-face fontified t) 1569 1570 (face font-lock-keyword-face fontified t) 1570 1571 (face font-lock-keyword-face fontified t) 1571 1572 (face font-lock-keyword-face fontified t) 1572 1573 (face font-lock-keyword-face fontified t) 1573 1574 (face font-lock-keyword-face fontified t) 1574 1575 (fontified t) 1575 1576 (face font-lock-type-face fontified t) 1576 1577 (face font-lock-type-face fontified t) 1577 1578 (face font-lock-type-face fontified t) 1578 1579 (face font-lock-type-face fontified t) 1579 1580 (face font-lock-type-face fontified t) 1580 1581 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1581 1582 (face font-lock-type-face fontified t) 1582 1583 (face font-lock-type-face fontified t) 1583 1584 (face font-lock-type-face fontified t) 1584 1585 (face font-lock-type-face fontified t) 1585 1586 (face font-lock-type-face fontified t) 1586 1587 (face font-lock-type-face fontified t) 1587 1588 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 1588 1589 (fontified t) 1589 1590 (face font-lock-function-name-face fontified t) 1590 1591 (face font-lock-function-name-face fontified t) 1591 1592 (face font-lock-function-name-face fontified t) 1592 1593 (face font-lock-function-name-face fontified t) 1593 1594 (face font-lock-function-name-face fontified t) 1594 1595 (face font-lock-function-name-face fontified t) 1595 1596 (face font-lock-function-name-face fontified t) 1596 1597 (face font-lock-function-name-face fontified t) 1597 1598 (face font-lock-function-name-face fontified t) 1598 1599 (face font-lock-function-name-face fontified t) 1599 1600 (c-type c-decl-arg-start fontified t) 1600 1601 (face font-lock-type-face fontified t) 1601 1602 (face font-lock-type-face fontified t) 1602 1603 (face font-lock-type-face fontified t) 1603 1604 (face font-lock-type-face fontified t) 1604 1605 (face font-lock-type-face fontified t) 1605 1606 (face font-lock-type-face fontified t) 1606 1607 (fontified t) 1607 1608 (fontified t) 1608 1609 (fontified t) 1609 1610 (face font-lock-variable-name-face fontified t) 1610 1611 (face font-lock-variable-name-face fontified t) 1611 1612 (face font-lock-variable-name-face fontified t) 1612 1613 (face font-lock-variable-name-face fontified t) 1613 1614 (fontified t) 1614 1615 (fontified t) 1615 1616 (fontified t) 1616 1617 (fontified t) 1617 1618 (face font-lock-type-face fontified t) 1618 1619 (face font-lock-type-face fontified t) 1619 1620 (face font-lock-type-face fontified t) 1620 1621 (face font-lock-type-face fontified t) 1621 1622 (face font-lock-type-face fontified t) 1622 1623 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1623 1624 (face font-lock-type-face fontified t) 1624 1625 (face font-lock-type-face fontified t) 1625 1626 (face font-lock-type-face fontified t) 1626 1627 (face font-lock-type-face fontified t) 1627 1628 (face font-lock-type-face fontified t) 1628 1629 (face font-lock-type-face fontified t) 1629 1630 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 1630 1631 (fontified t) 1631 1632 (face font-lock-variable-name-face fontified t) 1632 1633 (fontified t) 1633 1634 (fontified t) 1634 1635 (fontified t) 1635 1636 (face font-lock-keyword-face fontified t) 1636 1637 (face font-lock-keyword-face fontified t) 1637 1638 (face font-lock-keyword-face fontified t) 1638 1639 (fontified t) 1639 1640 (face font-lock-type-face fontified t) 1640 1641 (face font-lock-type-face fontified t) 1641 1642 (face font-lock-type-face fontified t) 1642 1643 (face font-lock-type-face fontified t) 1643 1644 (face font-lock-type-face fontified t) 1644 1645 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1645 1646 (fontified t category c->-as-paren-syntax) 1646 1647 (fontified t) 1647 1648 (fontified t) 1648 1649 (fontified t) 1649 1650 (fontified t) 1650 1651 (fontified t) 1651 1652 (face font-lock-keyword-face fontified t) 1652 1653 (face font-lock-keyword-face fontified t) 1653 1654 (face font-lock-keyword-face fontified t) 1654 1655 (fontified t) 1655 1656 (face font-lock-type-face fontified t) 1656 1657 (face font-lock-type-face fontified t) 1657 1658 (face font-lock-type-face c-type c-decl-id-start fontified t) 1658 1659 (fontified t) 1659 1660 (face font-lock-variable-name-face fontified t) 1660 1661 (fontified t) 1661 1662 (fontified t) 1662 1663 (fontified t) 1663 1664 (fontified t) 1664 1665 (fontified t) 1665 1666 (fontified t) 1666 1667 (fontified t) 1667 1668 (fontified t) 1668 1669 (fontified t) 1669 1670 (fontified t) 1670 1671 (fontified t) 1671 1672 (fontified t) 1672 1673 (fontified t) 1673 1674 (face font-lock-type-face fontified t) 1674 1675 (face font-lock-type-face fontified t) 1675 1676 (face font-lock-type-face fontified t) 1676 1677 (face font-lock-type-face fontified t) 1677 1678 (face font-lock-type-face fontified t) 1678 1679 (face font-lock-type-face fontified t) 1679 1680 (fontified t) 1680 1681 (fontified t) 1681 1682 (fontified t) 1682 1683 (fontified t) 1683 1684 (fontified t) 1684 1685 (fontified t) 1685 1686 (fontified t) 1686 1687 (fontified t) 1687 1692 (fontified t) 1692 1693 (face font-lock-type-face fontified t) 1693 1694 (face font-lock-type-face fontified t) 1694 1695 (face font-lock-type-face fontified t) 1695 1696 (face font-lock-type-face fontified t) 1696 1697 (face font-lock-type-face fontified t) 1697 1698 (face font-lock-type-face c-type c-decl-id-start fontified t) 1698 1699 (fontified t) 1699 1700 (face font-lock-variable-name-face fontified t) 1700 1701 (fontified t) 1701 1702 (fontified t) 1702 1703 (fontified t) 1703 1704 (fontified t) 1704 1705 (fontified t) 1705 1706 (fontified t) 1706 1707 (fontified t) 1707 1708 (fontified t) 1708 1709 (fontified t) 1709 1710 (fontified t) 1710 1711 (fontified t) 1711 1712 (fontified t) 1712 1717 (fontified t) 1717 1718 (face font-lock-keyword-face fontified t) 1718 1719 (face font-lock-keyword-face fontified t) 1719 1720 (fontified t) 1720 1721 (fontified t) 1721 1722 (fontified t) 1722 1723 (fontified t) 1723 1724 (fontified t) 1724 1725 (fontified t) 1725 1726 (fontified t) 1726 1727 (fontified t) 1727 1728 (fontified t) 1728 1729 (fontified t) 1729 1730 (face font-lock-string-face fontified t) 1730 1731 (face font-lock-string-face fontified t) 1731 1732 (face font-lock-string-face fontified t) 1732 1733 (face font-lock-string-face fontified t) 1733 1734 (fontified t) 1734 1735 (fontified t) 1735 1736 (fontified t) 1736 1737 (fontified t) 1737 1738 (fontified t) 1738 1739 (fontified t) 1739 1740 (fontified t) 1740 1741 (fontified t) 1741 1742 (fontified t) 1742 1743 (fontified t) 1743 1744 (fontified t) 1744 1745 (fontified t) 1745 1746 (fontified t) 1746 1747 (fontified t) 1747 1748 (face font-lock-string-face fontified t) 1748 1749 (face font-lock-string-face fontified t) 1749 1750 (face font-lock-string-face fontified t) 1750 1751 (face font-lock-string-face fontified t) 1751 1752 (fontified t rear-nonsticky t) 1752 1753 (fontified t) 1753 1754 (fontified t) 1754 1756 (fontified t) 1756 1757 (face font-lock-keyword-face fontified t) 1757 1758 (face font-lock-keyword-face fontified t) 1758 1759 (face font-lock-keyword-face fontified t) 1759 1760 (face font-lock-keyword-face fontified t) 1760 1761 (face font-lock-keyword-face fontified t) 1761 1762 (face font-lock-keyword-face fontified t) 1762 1763 (face font-lock-keyword-face fontified t) 1763 1764 (face font-lock-keyword-face fontified t) 1764 1765 (fontified t) 1765 1771 (fontified t) 1771 1772 (fontified t) 1772 1777 (fontified t) 1777 1778 (face font-lock-type-face fontified t) 1778 1779 (face font-lock-type-face fontified t) 1779 1780 (face font-lock-type-face fontified t) 1780 1781 (face font-lock-type-face fontified t) 1781 1782 (face font-lock-type-face fontified t) 1782 1783 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1783 1784 (face font-lock-type-face fontified t) 1784 1785 (face font-lock-type-face fontified t) 1785 1786 (face font-lock-type-face fontified t) 1786 1787 (face font-lock-type-face fontified t) 1787 1788 (face font-lock-type-face fontified t) 1788 1789 (face font-lock-type-face fontified t) 1789 1790 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 1790 1791 (fontified t) 1791 1792 (face font-lock-variable-name-face fontified t) 1792 1793 (face font-lock-variable-name-face fontified t) 1793 1794 (fontified t) 1794 1795 (fontified t) 1795 1796 (fontified t) 1796 1797 (fontified t) 1797 1798 (fontified t) 1798 1799 (fontified t) 1799 1800 (fontified t) 1800 1801 (fontified t) 1801 1802 (fontified t) 1802 1803 (fontified t) 1803 1804 (fontified t) 1804 1805 (fontified t) 1805 1806 (fontified t) 1806 1807 (fontified t) 1807 1808 (fontified t) 1808 1809 (fontified t) 1809 1810 (fontified t) 1810 1811 (fontified t) 1811 1812 (fontified t) 1812 1813 (fontified t) 1813 1818 (fontified t) 1818 1819 (face font-lock-keyword-face fontified t) 1819 1820 (face font-lock-keyword-face fontified t) 1820 1821 (face font-lock-keyword-face fontified t) 1821 1822 (fontified t) 1822 1823 (face font-lock-type-face fontified t) 1823 1824 (face font-lock-type-face fontified t) 1824 1825 (face font-lock-type-face fontified t) 1825 1826 (face font-lock-type-face fontified t) 1826 1827 (face font-lock-type-face fontified t) 1827 1828 (face font-lock-type-face c-type c-decl-id-start fontified t) 1828 1829 (fontified t) 1829 1830 (face font-lock-variable-name-face fontified t) 1830 1831 (fontified t) 1831 1832 (fontified t) 1832 1833 (fontified t) 1833 1834 (fontified t) 1834 1835 (fontified t) 1835 1836 (fontified t) 1836 1837 (fontified t) 1837 1839 (fontified t) 1839 1840 (fontified t) 1840 1841 (fontified t) 1841 1842 (fontified t) 1842 1843 (fontified t) 1843 1844 (fontified t) 1844 1845 (fontified t) 1845 1846 (fontified t) 1846 1847 (fontified t) 1847 1848 (fontified t) 1848 1849 (fontified t) 1849 1850 (fontified t) 1850 1851 (fontified t) 1851 1852 (fontified t) 1852 1853 (fontified t) 1853 1854 (fontified t) 1854 1855 (fontified t) 1855 1856 (fontified t) 1856 1857 (face font-lock-keyword-face fontified t) 1857 1858 (face font-lock-keyword-face fontified t) 1858 1859 (face font-lock-keyword-face fontified t) 1859 1860 (face font-lock-keyword-face fontified t) 1860 1861 (face font-lock-keyword-face fontified t) 1861 1862 (face font-lock-keyword-face fontified t) 1862 1863 (fontified t) 1863 1864 (fontified t) 1864 1865 (fontified t) 1865 1866 (fontified t) 1866 1870 (fontified t) 1870 1871 (fontified t) 1871 1872 (fontified t) 1872 1873 (fontified t) 1873 1874 (fontified t) 1874 1878 (fontified t) 1878 1884 (face font-lock-keyword-face fontified t) 1884 1885 (fontified t) 1885 1891 (face font-lock-keyword-face fontified t) 1891 1892 (fontified t) 1892 1895 (face font-lock-type-face fontified t) 1895 1896 (face font-lock-type-face c-type c-decl-id-start fontified t) 1896 1897 (fontified t) 1897 1903 (face font-lock-function-name-face fontified t) 1903 1904 (c-type c-decl-arg-start fontified t) 1904 1910 (face font-lock-type-face fontified t) 1910 1911 (fontified t) 1911 1924 (face font-lock-variable-name-face fontified t) 1924 1925 (c-type c-decl-arg-start fontified t) 1925 1926 (fontified t) 1926 1931 (face font-lock-type-face fontified t) 1931 1932 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1932 1938 (face font-lock-type-face fontified t) 1938 1939 (fontified t category c->-as-paren-syntax) 1939 1940 (fontified t) 1940 1945 (face font-lock-variable-name-face fontified t) 1945 1949 (fontified t) 1949 1950 (fontified t) 1950 1953 (face font-lock-keyword-face fontified t) 1953 1955 (fontified t) 1955 1956 (face font-lock-type-face fontified t) 1956 1957 (face font-lock-type-face fontified t) 1957 1958 (face font-lock-type-face fontified t) 1958 1959 (face font-lock-type-face fontified t) 1959 1960 (face font-lock-type-face fontified t) 1960 1961 (face font-lock-type-face fontified t) 1961 1962 (face font-lock-type-face fontified t) 1962 1963 (face font-lock-type-face fontified t) 1963 1964 (face font-lock-type-face fontified t) 1964 1965 (face font-lock-type-face fontified t) 1965 1966 (face font-lock-type-face fontified t) 1966 1967 (face font-lock-type-face fontified t) 1967 1968 (face font-lock-type-face fontified t) 1968 1969 (face font-lock-type-face c-type c-decl-id-start fontified t) 1969 1970 (fontified t) 1970 1978 (face font-lock-variable-name-face fontified t) 1978 1980 (fontified t) 1980 1981 (fontified t) 1981 1982 (face font-lock-keyword-face fontified t) 1982 1983 (face font-lock-keyword-face fontified t) 1983 1984 (face font-lock-keyword-face fontified t) 1984 1985 (fontified t) 1985 1986 (face font-lock-type-face fontified t) 1986 1987 (face font-lock-type-face fontified t) 1987 1988 (face font-lock-type-face fontified t) 1988 1989 (face font-lock-type-face fontified t) 1989 1990 (face font-lock-type-face fontified t) 1990 1991 (face font-lock-type-face fontified t) 1991 1992 (face font-lock-type-face fontified t) 1992 1993 (face font-lock-type-face fontified t) 1993 1994 (face font-lock-type-face fontified t) 1994 1995 (face font-lock-type-face fontified t) 1995 1996 (face font-lock-type-face fontified t) 1996 1997 (face font-lock-type-face fontified t) 1997 1998 (face font-lock-type-face fontified t) 1998 1999 (face font-lock-type-face fontified t) 1999 2000 (fontified t) 2000 2003 (face font-lock-keyword-face fontified t) 2003 2004 (fontified t) 2004 2014 (face font-lock-type-face fontified t) 2014 2015 (fontified t) 2015 2016 (fontified t) 2016 2017 (fontified t) 2017 2018 (fontified t) 2018 2019 (fontified t) 2019 2020 (fontified t) 2020 2021 (fontified t) 2021 2022 (fontified t) 2022 2023 (fontified t) 2023 2024 (fontified t) 2024 2025 (fontified t) 2025 2026 (fontified t) 2026 2027 (fontified t) 2027 2028 (fontified t) 2028 2029 (fontified t) 2029 2030 (fontified t) 2030 2034 (fontified t) 2034 2039 (fontified t) 2039 2042 (face font-lock-keyword-face fontified t) 2042 2044 (fontified t) 2044 2049 (face font-lock-type-face fontified t) 2049 2050 (face font-lock-type-face c-type c-decl-id-start fontified t) 2050 2051 (fontified t) 2051 2059 (face font-lock-variable-name-face fontified t) 2059 2062 (fontified t) 2062 2067 (fontified t) 2067 2069 (fontified t) 2069 2070 (fontified t) 2070 2071 (fontified t) 2071 2073 (fontified t) 2073 2074 (fontified t) 2074 2075 (fontified t) 2075 2076 (fontified t) 2076 2077 (fontified t) 2077 2078 (fontified t) 2078 2079 (fontified t) 2079 2080 (fontified t) 2080 2081 (fontified t) 2081 2098 (fontified t) 2098 2099 (fontified t) 2099 2101 (fontified t) 2101 2102 (fontified t) 2102 2103 (fontified t) 2103 2104 (fontified t) 2104 2105 (fontified t) 2105 2106 (fontified t) 2106 2107 (fontified t) 2107 2108 (fontified t) 2108 2109 (fontified t) 2109 2110 (fontified t) 2110 2111 (fontified t) 2111 2112 (fontified t) 2112 2113 (fontified t) 2113 2114 (fontified t) 2114 2115 (fontified t) 2115 2116 (fontified t) 2116 2117 (fontified t) 2117 2120 (fontified t) 2120 2121 (fontified t) 2121 2122 (fontified t) 2122 2123 (fontified t) 2123 2127 (fontified t) 2127 2128 (fontified t) 2128 2129 (fontified t) 2129 2134 (fontified t) 2134 2153 (fontified t) 2153 2185 (face font-lock-string-face fontified t) 2185 2188 (fontified t) 2188 2189 (fontified t) 2189 2191 (fontified t) 2191 2196 (face font-lock-keyword-face fontified t) 2196 2215 (fontified t) 2215 2242 (fontified t) 2242 2246 (face font-lock-string-face fontified t) 2246 2286 (face font-lock-string-face fontified t) 2286 2288 (fontified t) 2288 2318 (fontified t) 2318 2319 (fontified t) 2319 2321 (fontified t) 2321 2325 (fontified t) 2325 2326 (fontified t) 2326 2327 (fontified t rear-nonsticky t) 2327 2331 (fontified t) 2331 2332 (fontified t) 2332 2336 (fontified t) 2336 2337 (fontified t) 2337 2341 (fontified t) 2341 2347 (face font-lock-keyword-face fontified t) 2347 2348 (fontified t) 2348 2354 (face font-lock-keyword-face fontified t) 2354 2355 (fontified t) 2355 2360 (face font-lock-type-face fontified t) 2360 2361 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 2361 2367 (face font-lock-type-face fontified t) 2367 2368 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 2368 2369 (fontified t) 2369 2376 (face font-lock-function-name-face fontified t) 2376 2377 (c-type c-decl-arg-start fontified t) 2377 2382 (face font-lock-type-face fontified t) 2382 2383 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 2383 2384 (face font-lock-type-face fontified t) 2384 2385 (face font-lock-type-face fontified t) 2385 2389 (face font-lock-type-face fontified t) 2389 2390 (fontified t category c->-as-paren-syntax) 2390 2391 (fontified t) 2391 2392 (face font-lock-variable-name-face fontified t) 2392 2395 (fontified t) 2395 2396 (fontified t) 2396 2402 (face font-lock-keyword-face fontified t) 2402 2415 (fontified t) 2415 2416 (fontified t) 2416 2417 (fontified t) 2417 2418 (fontified t) 2418 2419 (fontified t) 2419 2428 (fontified t) 2428 2433 (face font-lock-type-face fontified t) 2433 2434 (face font-lock-type-face c-type c-decl-id-start fontified t) 2434 2435 (fontified t) 2435 2444 (face font-lock-variable-name-face fontified t) 2444 2455 (fontified t) 2455 2474 (fontified t) 2474 2477 (face font-lock-string-face fontified t) 2477 2478 (fontified t) 2478 2480 (face font-lock-string-face fontified t) 2480 2483 (fontified t) 2483 2485 (fontified t) 2485 2490 (face font-lock-type-face fontified t) 2490 2491 (face font-lock-type-face c-type c-decl-id-start fontified t) 2491 2492 (fontified t) 2492 2494 (face font-lock-variable-name-face fontified t) 2494 2499 (face font-lock-variable-name-face fontified t) 2499 2501 (fontified t) 2501 2522 (fontified t) 2522 2523 (fontified t) 2523 2532 (fontified t) 2532 2533 (fontified t) 2533 2534 (fontified t) 2534 2544 (face font-lock-constant-face fontified t) 2544 2545 (fontified t) 2545 2549 (face font-lock-constant-face fontified t) 2549 2550 (fontified t) 2550 2553 (fontified t) 2553 2566 (fontified t) 2566 2574 (face font-lock-string-face fontified t) 2574 2576 (fontified t) 2576 2578 (face font-lock-string-face fontified t) 2578 2583 (fontified t) 2583 2588 (face font-lock-type-face fontified t) 2588 2589 (face font-lock-type-face c-type c-decl-id-start fontified t) 2589 2590 (fontified t) 2590 2593 (face font-lock-variable-name-face fontified t) 2593 2599 (face font-lock-variable-name-face fontified t) 2599 2601 (fontified t) 2601 2629 (fontified t) 2629 2632 (face font-lock-string-face fontified t) 2632 2633 (fontified t) 2633 2635 (face font-lock-string-face fontified t) 2635 2640 (fontified t) 2640 2645 (face font-lock-type-face fontified t) 2645 2646 (face font-lock-type-face c-type c-decl-id-start fontified t) 2646 2647 (fontified t) 2647 2654 (face font-lock-variable-name-face fontified t) 2654 2677 (fontified t) 2677 2678 (fontified t) 2678 2687 (fontified t) 2687 2688 (fontified t) 2688 2689 (fontified t) 2689 2699 (face font-lock-constant-face fontified t) 2699 2700 (fontified t) 2700 2704 (face font-lock-constant-face fontified t) 2704 2705 (fontified t) 2705 2708 (fontified t) 2708 2721 (fontified t) 2721 2729 (face font-lock-string-face fontified t) 2729 2731 (fontified t) 2731 2733 (face font-lock-string-face fontified t) 2733 2741 (fontified t) 2741 2747 (face font-lock-keyword-face fontified t) 2747 2765 (fontified t) 2765 2766 (fontified t) 2766 2773 (fontified t) 2773 2789 (fontified t) 2789 2792 (fontified t) 2792 2793 (fontified t) 2793 2797 (fontified t) 2797 2798 (fontified t) 2798 2799 (fontified t) 2799 2800 (fontified t) 2800 2804 (fontified t) 2804 2810 (face font-lock-keyword-face fontified t) 2810 2811 (fontified t) 2811 2817 (face font-lock-keyword-face fontified t) 2817 2818 (fontified t) 2818 2823 (face font-lock-type-face fontified t) 2823 2824 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 2824 2830 (face font-lock-type-face fontified t) 2830 2831 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 2831 2832 (fontified t) 2832 2839 (face font-lock-function-name-face fontified t) 2839 2840 (c-type c-decl-arg-start fontified t) 2840 2845 (face font-lock-type-face fontified t) 2845 2846 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 2846 2852 (face font-lock-type-face fontified t) 2852 2853 (fontified t category c->-as-paren-syntax) 2853 2854 (fontified t) 2854 2855 (face font-lock-variable-name-face fontified t) 2855 2858 (fontified t) 2858 2859 (fontified t) 2859 2865 (face font-lock-keyword-face fontified t) 2865 2873 (fontified t) 2873 2874 (fontified t) 2874 2875 (fontified t) 2875 2888 (fontified t) 2888 2893 (fontified t) 2893 2894 (fontified t) 2894 2898 (fontified t) 2898 2902 (fontified t) 2902 2903 (fontified t) 2903 2904 (fontified t)) . 1) (undo-tree-id1124 . -2904) (undo-tree-id1125 . -2894) (undo-tree-id1126 . -2894) (undo-tree-id1127 . -2898) (undo-tree-id1128 . -269) (undo-tree-id1129 . -2898) (undo-tree-id1130 . -2898) (undo-tree-id1131 . -2898) (undo-tree-id1132 . -2898) (undo-tree-id1133 . -2898) (undo-tree-id1134 . -2894)) nil (26110 27534 378087 636000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4800 . 4801) (nil fontified nil 4181 . 4801) (nil fontified nil 4180 . 4181) (nil category c->-as-paren-syntax 4180 . 4181) (nil fontified nil 4174 . 4180) (nil fontified nil 4173 . 4174) (nil category c-<-as-paren-syntax 4173 . 4174) (nil fontified nil 4159 . 4173) (nil fontified nil 4158 . 4159) (nil category c->-as-paren-syntax 4158 . 4159) (nil fontified nil 4152 . 4158) (nil fontified nil 4151 . 4152) (nil category c-<-as-paren-syntax 4151 . 4152) (nil fontified nil 3411 . 4151) (nil fontified nil 3410 . 3411) (nil category c->-as-paren-syntax 3410 . 3411) (nil fontified nil 3404 . 3410) (nil fontified nil 3403 . 3404) (nil category c-<-as-paren-syntax 3403 . 3404) (nil fontified nil 3036 . 3403) (nil fontified nil 3035 . 3036) (nil category c->-as-paren-syntax 3035 . 3036) (nil fontified nil 3029 . 3035) (nil fontified nil 3028 . 3029) (nil category c-<-as-paren-syntax 3028 . 3029) (nil fontified nil 3024 . 3028) (nil fontified nil 3023 . 3024) (nil fontified nil 3011 . 3023) (nil fontified nil 2959 . 3011) (nil fontified nil 2946 . 2959) (nil fontified nil 2791 . 2946) (nil fontified nil 2790 . 2791) (nil category c->-as-paren-syntax 2790 . 2791) (nil fontified nil 2789 . 2790) (nil category c-<-as-paren-syntax 2789 . 2790) (nil fontified nil 2775 . 2789) (nil fontified nil 2774 . 2775) (nil category c->-as-paren-syntax 2774 . 2775) (nil fontified nil 2768 . 2774) (nil fontified nil 2767 . 2768) (nil category c-<-as-paren-syntax 2767 . 2768) (nil fontified nil 2726 . 2767) (nil fontified nil 2725 . 2726) (nil category c->-as-paren-syntax 2725 . 2726) (nil fontified nil 2719 . 2725) (nil fontified nil 2718 . 2719) (nil category c-<-as-paren-syntax 2718 . 2719) (nil fontified nil 1903 . 2718) (nil fontified nil 1902 . 1903) (nil category c->-as-paren-syntax 1902 . 1903) (nil fontified nil 1901 . 1902) (nil category c-<-as-paren-syntax 1901 . 1902) (nil fontified nil 1883 . 1901) (nil fontified nil 1882 . 1883) (nil category c->-as-paren-syntax 1882 . 1883) (nil fontified nil 1876 . 1882) (nil fontified nil 1875 . 1876) (nil category c-<-as-paren-syntax 1875 . 1876) (nil fontified nil 1837 . 1875) (nil fontified nil 1836 . 1837) (nil category c->-as-paren-syntax 1836 . 1837) (nil fontified nil 1830 . 1836) (nil fontified nil 1829 . 1830) (nil category c-<-as-paren-syntax 1829 . 1830) (nil fontified nil 1 . 1829) (1 . 4801)) nil (26110 27534 378062 208000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4792) (undo-tree-id1153 . -1) (#(" " 0 1 (fontified t)) . -4793) (undo-tree-id1154 . -1) (#(" " 0 1 (fontified t)) . -4794) (undo-tree-id1155 . -1) (#(" " 0 1 (fontified t)) . -4795) (undo-tree-id1156 . -1) (#(" " 0 1 (fontified t)) . -4796) (undo-tree-id1157 . -1) (#(" " 0 1 (fontified t)) . -4797) (undo-tree-id1158 . -1) (#(" " 0 1 (fontified t)) . -4798) (undo-tree-id1159 . -1) (#(" " 0 1 (fontified t)) . -4799) (undo-tree-id1160 . -1) 4800 (t 26110 27534 389077 527000)) nil (26110 27582 882790 285000) 0 nil])
([nil nil ((4792 . 4798)) nil (26110 27582 882783 121000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4794) (undo-tree-id1149 . -1) (#(" " 0 1 (fontified t)) . -4795) (undo-tree-id1150 . -1) (#(" " 0 1 (fontified t)) . -4796) (undo-tree-id1151 . -1) (#(" " 0 1 (fontified t)) . -4797) (undo-tree-id1152 . -1) 4798) nil (26110 27582 882781 999000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4793) (undo-tree-id1140 . -1) (#(" " 0 1 (fontified t)) . -4794) (undo-tree-id1141 . -1) (#(" " 0 1 (fontified t)) . -4795) (undo-tree-id1142 . -1) (#(" " 0 1 (fontified t)) . -4796) (undo-tree-id1143 . -1) (#(" " 0 1 (fontified t)) . -4797) (undo-tree-id1144 . -1) (#(" " 0 1 (fontified t)) . -4798) (undo-tree-id1145 . -1) (#(" " 0 1 (fontified t)) . -4799) (undo-tree-id1146 . -1) (#(" " 0 1 (fontified nil)) . -4800) (undo-tree-id1147 . -1) (#("	" 0 1 (fontified nil)) . 4801) (undo-tree-id1148 . -1) (4793 . 4801) 4794) nil (26110 27582 882777 170000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5167 . 5168) (nil fontified nil 5048 . 5168) (nil fontified nil 5047 . 5048) (nil category c->-as-paren-syntax 5047 . 5048) (nil fontified nil 5041 . 5047) (nil fontified nil 5040 . 5041) (nil category c-<-as-paren-syntax 5040 . 5041) (nil fontified nil 5026 . 5040) (nil fontified nil 5025 . 5026) (nil category c->-as-paren-syntax 5025 . 5026) (nil fontified nil 5019 . 5025) (nil fontified nil 5018 . 5019) (nil category c-<-as-paren-syntax 5018 . 5019) (nil fontified nil 4793 . 5018) (4793 . 5168)) nil (26110 27582 882769 345000) 0 nil])
([nil nil ((4793 . 4798) (#("        " 0 8 (fontified t)) . 4793) (undo-tree-id1139 . -1) 4794) nil (26110 27582 882766 279000) 0 nil])
([nil nil ((4809 . 4813)) nil (26110 27582 882763 204000) 0 nil])
([nil current ((5159 . 5163) (#("     " 0 5 (fontified nil)) . -5159) (undo-tree-id1138 . -5) (#("   " 0 3 (fontified t)) . 5164)) nil (26110 27582 882759 727000) 0 nil])
nil
