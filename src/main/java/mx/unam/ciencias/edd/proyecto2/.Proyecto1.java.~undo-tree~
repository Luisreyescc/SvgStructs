(undo-tree-save-format-version . 1)
"34df12f5691bd3595c525830c5836ea23638fbe7"
[nil nil nil nil (26103 21861 734947 588000) 0 nil]
([nil nil ((173 . 183) (t 26103 21342 384315 741000)) nil (26103 21861 734946 286000) 0 nil])
([nil nil ((222 . 232)) nil (26103 21861 734945 514000) 0 nil])
([nil nil ((285 . 291)) nil (26103 21861 734944 683000) 0 nil])
([nil nil ((291 . 295)) nil (26103 21861 734944 162000) 0 nil])
([nil nil ((338 . 347)) nil (26103 21861 734943 591000) 0 nil])
([nil nil ((347 . 348)) nil (26103 21861 734942 969000) 0 nil])
([nil nil ((348 . 349)) nil (26103 21861 734942 118000) 0 nil])
([nil nil ((#("," 0 1 (c-type c-decl-arg-start fontified t)) . -347) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#(" " 0 1 (fontified t)) . -348) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 349) nil (26103 21861 734939 573000) 0 nil])
([nil nil ((347 . 348)) nil (26103 21861 734917 131000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -172) (undo-tree-id75 . -1) (#("p" 0 1 (face font-lock-constant-face fontified t)) . -173) (undo-tree-id76 . -1) (#("r" 0 1 (face font-lock-constant-face fontified t)) . -174) (undo-tree-id77 . -1) (#("o" 0 1 (face font-lock-constant-face fontified t)) . -175) (undo-tree-id78 . -1) (#("y" 0 1 (face font-lock-constant-face fontified t)) . -176) (undo-tree-id79 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -177) (undo-tree-id80 . -1) (#("c" 0 1 (face font-lock-constant-face fontified t)) . -178) (undo-tree-id81 . -1) (#("t" 0 1 (face font-lock-constant-face fontified t)) . -179) (undo-tree-id82 . -1) (#("o" 0 1 (face font-lock-constant-face fontified t)) . -180) (undo-tree-id83 . -1) (#("1" 0 1 (face font-lock-constant-face fontified t)) . -181) (undo-tree-id84 . -1) 182 (t 26103 21861 738226 314000)) nil (26103 22014 690919 402000) 0 nil])
([nil nil ((#("proyecto1." 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (face font-lock-constant-face fontified t) 4 5 (face font-lock-constant-face fontified t) 5 6 (face font-lock-constant-face fontified t) 6 7 (face font-lock-constant-face fontified t) 7 8 (face font-lock-constant-face fontified t) 8 9 (face font-lock-constant-face fontified t) 9 10 (fontified t)) . -212) (undo-tree-id74 . -10) 222) nil (26103 22014 690912 28000) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-constant-face fontified t)) . -273) (undo-tree-id73 . -1) 274) nil (26103 22014 690910 776000) 0 nil])
([nil nil ((#("proyecto" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t) 2 3 (face font-lock-constant-face fontified t) 3 4 (face font-lock-constant-face fontified t) 4 5 (face font-lock-constant-face fontified t) 5 6 (face font-lock-constant-face fontified t) 6 7 (face font-lock-constant-face fontified t) 7 8 (face font-lock-constant-face fontified t)) . -265) (undo-tree-id72 . -8) 273) nil (26103 22014 690909 353000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -264) (undo-tree-id71 . -1) 265) nil (26103 22014 690907 770000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-constant-face fontified t)) . -313) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("t" 0 1 (face font-lock-constant-face fontified t)) . -314) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("o" 0 1 (face font-lock-constant-face fontified t)) . -315) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("1" 0 1 (face font-lock-constant-face fontified t)) . -316) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 317) nil (26103 22014 690904 614000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -307) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("p" 0 1 (face font-lock-constant-face fontified t)) . -308) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("r" 0 1 (face font-lock-constant-face fontified t)) . -309) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("o" 0 1 (face font-lock-constant-face fontified t)) . -310) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("y" 0 1 (face font-lock-constant-face fontified t)) . -311) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -312) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 313) nil (26103 22014 690888 214000) 0 nil])
([nil nil ((#("
import mx.unam.ciencias.edd.Coleccion;
import mx.unam.ciencias.edd.ExcepcionIndiceInvalido;
import mx.unam.ciencias.edd.IteradorLista;" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 10 (face font-lock-constant-face fontified t) 10 11 (fontified t) 11 15 (face font-lock-constant-face fontified t) 15 16 (fontified t) 16 24 (face font-lock-constant-face fontified t) 24 25 (fontified t) 25 27 (face font-lock-constant-face fontified t) 27 28 (face font-lock-constant-face fontified t) 28 29 (fontified t) 29 37 (face font-lock-type-face fontified t) 37 38 (face font-lock-type-face c-type c-decl-id-start fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 46 (face font-lock-keyword-face fontified t) 46 47 (fontified t) 47 49 (face font-lock-constant-face fontified t) 49 50 (fontified t) 50 54 (face font-lock-constant-face fontified t) 54 55 (fontified t) 55 63 (face font-lock-constant-face fontified t) 63 64 (fontified t) 64 67 (face font-lock-constant-face fontified t) 67 68 (fontified t) 68 90 (face font-lock-type-face fontified t) 90 91 (face font-lock-type-face c-type c-decl-id-start fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 99 (face font-lock-keyword-face fontified t) 99 100 (fontified t) 100 102 (face font-lock-constant-face fontified t) 102 103 (fontified t) 103 107 (face font-lock-constant-face fontified t) 107 108 (fontified t) 108 116 (face font-lock-constant-face fontified t) 116 117 (fontified t) 117 119 (face font-lock-constant-face fontified t) 119 120 (face font-lock-constant-face fontified t) 120 121 (fontified t) 121 133 (face font-lock-type-face fontified t) 133 134 (face font-lock-type-face c-type c-decl-id-start fontified t) 134 135 (fontified t)) . 144) (undo-tree-id85 . -135) (undo-tree-id86 . -26) (undo-tree-id87 . -26) (undo-tree-id88 . -122) (t 26103 22014 696517 474000)) nil (26103 22042 17788 682000) 0 nil])
([nil nil ((1 . 2) (t 26103 22042 22881 341000)) nil (26103 22132 559100 676000) 0 nil])
([nil nil ((nil rear-nonsticky nil 39 . 40) (nil fontified nil 1 . 40) (1 . 40)) nil (26103 22132 559098 452000) 0 nil])
([nil nil ((40 . 41)) nil (26103 22132 559094 415000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -220) (undo-tree-id31 . -1) 221 (t 26103 22132 565215 954000)) nil (26103 24255 878644 995000) 0 nil])
([nil nil ((807 . 810)) nil (26103 24255 878643 592000) 0 nil])
([nil nil ((577 . 583)) nil (26103 24255 878642 991000) 0 nil])
([nil nil ((583 . 587)) nil (26103 24255 878642 490000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -586) (undo-tree-id30 . -1) 587) nil (26103 24255 878641 749000) 0 nil])
([nil nil ((586 . 589)) nil (26103 24255 878640 446000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -588) (undo-tree-id29 . -1) 589) nil (26103 24255 878639 634000) 0 nil])
([nil nil ((588 . 590)) nil (26103 24255 878638 11000) 0 nil])
([nil nil ((589 . 590)) nil (26103 24255 878637 530000) 0 nil])
([nil nil ((590 . 594)) nil (26103 24255 878637 70000) 0 nil])
([nil nil ((#("R" 0 1 (face font-lock-type-face fontified t)) . -590) (undo-tree-id25 . -1) (#("I" 0 1 (face font-lock-type-face fontified t)) . -591) (undo-tree-id26 . -1) (#("N" 0 1 (face font-lock-type-face fontified t)) . -592) (undo-tree-id27 . -1) (#("G" 0 1 (face font-lock-type-face fontified t)) . -593) (undo-tree-id28 . -1) 594) nil (26103 24255 878636 138000) 0 nil])
([nil nil ((590 . 595)) nil (26103 24255 878633 312000) 0 nil])
([nil nil ((596 . 602)) nil (26103 24255 878632 821000) 0 nil])
([nil nil ((602 . 603)) nil (26103 24255 878632 340000) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-variable-name-face fontified t)) . -597) (undo-tree-id19 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -598) (undo-tree-id20 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -599) (undo-tree-id21 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -600) (undo-tree-id22 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -601) (undo-tree-id23 . -1) (#(";" 0 1 (fontified t)) . -602) (undo-tree-id24 . -1) 603) nil (26103 24255 878631 98000) 0 nil])
([nil nil ((597 . 602)) nil (26103 24255 878626 840000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -600) (undo-tree-id17 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -601) (undo-tree-id18 . -1) 602) nil (26103 24255 878625 958000) 0 nil])
([nil nil ((600 . 602)) nil (26103 24255 878624 125000) 0 nil])
([nil nil ((602 . 603)) nil (26103 24255 878623 644000) 0 nil])
([nil nil ((603 . 609)) nil (26103 24255 878623 63000) 0 nil])
([nil nil ((609 . 614)) nil (26103 24255 878622 521000) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-variable-name-face fontified t)) . -613) (undo-tree-id16 . -1) 614) nil (26103 24255 878621 810000) 0 nil])
([nil nil ((613 . 622)) nil (26103 24255 878620 628000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-variable-name-face fontified t)) . -619) (undo-tree-id13 . -1) (#("f" 0 1 (face font-lock-variable-name-face fontified t)) . -620) (undo-tree-id14 . -1) (#(" " 0 1 (fontified t)) . -621) (undo-tree-id15 . -1) 622) nil (26103 24255 878619 626000) 0 nil])
([nil nil ((619 . 633)) nil (26103 24255 878617 241000) 0 nil])
([nil nil ((633 . 638)) nil (26103 24255 878616 390000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -637) (undo-tree-id12 . -1) 638) nil (26103 24255 878615 608000) 0 nil])
([nil nil ((637 . 640)) nil (26103 24255 878614 276000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -639) (undo-tree-id11 . -1) 640) nil (26103 24255 878613 474000) 0 nil])
([nil nil ((639 . 640)) nil (26103 24255 878612 51000) 0 nil])
([nil nil ((640 . 642)) nil (26103 24255 878611 560000) 0 nil])
([nil nil ((642 . 643)) nil (26103 24255 878611 39000) 0 nil])
([nil nil ((876 . 879)) nil (26103 24255 878610 288000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -876) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#("I" 0 1 (fontified t)) . -877) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("S" 0 1 (fontified t)) . -878) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 879) nil (26103 24255 878607 913000) 0 nil])
([nil nil ((876 . 888)) nil (26103 24255 878588 947000) 0 nil])
([nil nil ((888 . 890)) nil (26103 24255 878588 326000) 0 nil])
([nil nil ((889 . 896)) nil (26103 24255 878587 223000) 0 nil])
([nil nil ((897 . 898)) nil (26103 24255 878583 677000) 0 nil])
([nil nil ((602 . 607) (t 26103 24255 884375 265000)) nil (26103 24293 883779 160000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -602) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("=" 0 1 (fontified t)) . -603) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#(" " 0 1 (fontified t)) . -604) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("\"" 0 1 (face font-lock-warning-face fontified t)) . -605) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -606) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 607 (t 26103 24293 889677 334000)) nil (26103 24308 947372 638000) 0 nil])
([nil nil ((602 . 614) (t 26103 24308 953756 388000)) nil (26103 24601 2400 356000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-type-face fontified t)) . -612) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -613) (undo-tree-id61 . -1) (undo-tree-id62 . -1) 614) nil (26103 24601 2398 12000) 0 nil])
([nil nil ((612 . 616)) nil (26103 24601 2384 626000) 0 nil])
([nil nil ((616 . 618)) nil (26103 24601 2381 119000) 0 nil])
([nil nil ((923 . 928) (#("	    " 0 5 (fontified nil)) . 922) (undo-tree-id63 . -5) (921 . 928) (t 26103 24601 8982 155000)) nil (26103 24825 747814 717000) 0 nil])
([nil nil ((928 . 942)) nil (26103 24825 747805 480000) 0 nil])
([nil nil ((942 . 944)) nil (26103 24825 747804 147000) 0 nil])
([nil nil ((944 . 945)) nil (26103 24825 747800 951000) 0 nil])
([nil nil ((861 . 863) (t 26103 24825 753055 245000)) nil (26103 24840 670324 47000) 0 nil])
([nil nil ((#("//System.out.println(renglon);
" 0 1 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 2 30 (c-in-sws t face font-lock-comment-face fontified t) 30 31 (c-in-sws t face font-lock-comment-face fontified t)) . -861) (undo-tree-id86 . -31) 892 (t 26103 24840 676855 168000)) nil (26103 24944 173154 61000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -869) (undo-tree-id84 . -1) (#("	" 0 1 (c-is-sws t fontified nil)) . 870) (undo-tree-id85 . -1) (862 . 870) 863) nil (26103 24944 173152 408000) 0 nil])
([nil nil ((859 . 861) (#("			       " 0 2 (c-is-sws t c-in-sws t fontified t) 2 3 (c-is-sws t fontified t) 3 10 (fontified t)) . -859) (undo-tree-id82 . -10) (undo-tree-id83 . -2) 869) nil (26103 24944 173150 14000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -890) (undo-tree-id81 . -1) 891) nil (26103 24944 173148 10000) 0 nil])
([nil nil ((913 . 919)) nil (26103 24944 173146 687000) 0 nil])
([nil nil ((809 . 814) (#("	    " 0 5 (fontified nil)) . 808) (undo-tree-id80 . -5) (813 . 814)) nil (26103 24944 173146 26000) 0 nil])
([nil nil ((788 . 793) (#("	    " 0 5 (fontified nil)) . 787) (undo-tree-id79 . -5) (792 . 793)) nil (26103 24944 173144 523000) 0 nil])
([nil nil ((661 . 666) (#("	    " 0 5 (fontified nil)) . 660) (undo-tree-id78 . -5) (665 . 666)) nil (26103 24944 173143 81000) 0 nil])
([nil nil ((579 . 584) (#("	    " 0 5 (fontified nil)) . 578) (undo-tree-id77 . -5) (583 . 584)) nil (26103 24944 173141 538000) 0 nil])
([nil nil ((896 . 901) (#("	    " 0 5 (fontified nil)) . 895) (undo-tree-id76 . -5) (900 . 901)) nil (26103 24944 173140 5000) 0 nil])
([nil nil ((405 . 406) (#("	" 0 1 (fontified t)) . 405)) nil (26103 24944 173138 442000) 0 nil])
([nil nil ((406 . 408)) nil (26103 24944 173137 670000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -406) (undo-tree-id74 . -1) (#("S" 0 1 (fontified t)) . -407) (undo-tree-id75 . -1) 408) nil (26103 24944 173136 758000) 0 nil])
([nil nil ((406 . 412)) nil (26103 24944 173134 905000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -406) (undo-tree-id68 . -1) (#("r" 0 1 (fontified t)) . -407) (undo-tree-id69 . -1) (#("e" 0 1 (fontified t)) . -408) (undo-tree-id70 . -1) (#("u" 0 1 (fontified t)) . -409) (undo-tree-id71 . -1) (#("=" 0 1 (fontified t)) . -410) (undo-tree-id72 . -1) (#("=" 0 1 (fontified t)) . -411) (undo-tree-id73 . -1) 412) nil (26103 24944 173133 663000) 0 nil])
([nil nil ((406 . 407)) nil (26103 24944 173128 72000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -406) (undo-tree-id67 . -1) 407) nil (26103 24944 173127 331000) 0 nil])
([nil nil ((406 . 407)) nil (26103 24944 173125 918000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -406) (undo-tree-id66 . -1) 407) nil (26103 24944 173125 307000) 0 nil])
([nil nil ((406 . 407)) nil (26103 24944 173123 934000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -406) (undo-tree-id65 . -1) 407) nil (26103 24944 173122 892000) 0 nil])
([nil nil ((406 . 408)) nil (26103 24944 173121 49000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -407) (undo-tree-id64 . -1) 408) nil (26103 24944 173119 375000) 0 nil])
([nil nil ((407 . 411)) nil (26103 24944 173110 639000) 0 nil])
([nil nil ((411 . 429)) nil (26103 24944 173110 28000) 0 nil])
([nil nil ((428 . 429)) nil (26103 24944 173108 685000) 0 nil])
([nil nil ((430 . 431)) nil (26103 24944 173105 479000) 0 nil])
([nil nil ((529 . 534) (t 26103 24944 176703 471000)) nil (26103 25525 270771 126000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -530) (undo-tree-id216 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -531) (undo-tree-id217 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -532) (undo-tree-id218 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -533) (undo-tree-id219 . -1) 534) nil (26103 25525 270770 3000) 0 nil])
([nil nil ((530 . 551)) nil (26103 25525 270766 176000) 0 nil])
([nil nil ((551 . 555)) nil (26103 25525 270765 695000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-comment-face fontified t)) . -553) (undo-tree-id214 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -554) (undo-tree-id215 . -1) 555) nil (26103 25525 270764 904000) 0 nil])
([nil nil ((553 . 556)) nil (26103 25525 270763 41000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-comment-face fontified t)) . -555) (undo-tree-id213 . -1) 556) nil (26103 25525 270762 299000) 0 nil])
([nil nil ((555 . 566)) nil (26103 25525 270761 177000) 0 nil])
([nil nil ((566 . 567)) nil (26103 25525 270760 596000) 0 nil])
([nil nil ((567 . 569) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 567) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . 566) (undo-tree-id212 . -1) (567 . 568)) nil (26103 25525 270759 885000) 0 nil])
([nil nil ((569 . 570)) nil (26103 25525 270758 402000) 0 nil])
([nil nil ((570 . 580)) nil (26103 25525 270757 921000) 0 nil])
([nil nil ((#("a" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -579) (undo-tree-id211 . -1) 580) nil (26103 25525 270757 360000) 0 nil])
([nil nil ((579 . 580)) nil (26103 25525 270756 208000) 0 nil])
([nil nil ((#("/" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -579) (undo-tree-id210 . -1) 580) nil (26103 25525 270755 416000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -542) (undo-tree-id204 . -1) (#("a" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -543) (undo-tree-id205 . -1) (#("s" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -544) (undo-tree-id206 . -1) (#("a" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -545) (undo-tree-id207 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -546) (undo-tree-id208 . -1) (#("d" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -547) (undo-tree-id209 . -1) 548) nil (26103 25525 270753 683000) 0 nil])
([nil nil ((542 . 549)) nil (26103 25525 270749 505000) 0 nil])
([nil nil ((580 . 591)) nil (26103 25525 270749 14000) 0 nil])
([nil nil ((591 . 592)) nil (26103 25525 270748 493000) 0 nil])
([nil nil ((592 . 596)) nil (26103 25525 270748 3000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-comment-face fontified t)) . -591) (undo-tree-id199 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -592) (undo-tree-id200 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t)) . -593) (undo-tree-id201 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -594) (undo-tree-id202 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -595) (undo-tree-id203 . -1) 596) nil (26103 25525 270746 750000) 0 nil])
([nil nil ((591 . 593)) nil (26103 25525 270743 83000) 0 nil])
([nil nil ((#("s" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -593) (undo-tree-id198 . -1) 594) nil (26103 25525 270742 522000) 0 nil])
([nil nil ((593 . 594)) nil (26103 25525 270741 330000) 0 nil])
([nil nil ((591 . 595)) nil (26103 25525 270740 799000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -593) (undo-tree-id196 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -594) (undo-tree-id197 . -1) 595) nil (26103 25525 270740 108000) 0 nil])
([nil nil ((593 . 610)) nil (26103 25525 270737 944000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -608) (undo-tree-id194 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -609) (undo-tree-id195 . -1) 610) nil (26103 25525 270737 223000) 0 nil])
([nil nil ((608 . 611)) nil (26103 25525 270735 479000) 0 nil])
([nil nil ((#("þ" 0 1 (face font-lock-comment-face fontified t)) . -608) (undo-tree-id191 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -609) (undo-tree-id192 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -610) (undo-tree-id193 . -1) 611) nil (26103 25525 270734 718000) 0 nil])
([nil nil ((608 . 609)) nil (26103 25525 270732 424000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -608) (undo-tree-id190 . -1) 609) nil (26103 25525 270731 853000) 0 nil])
([nil nil ((608 . 612)) nil (26103 25525 270730 680000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-comment-face fontified t)) . -610) (undo-tree-id188 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -611) (undo-tree-id189 . -1) 612) nil (26103 25525 270730 9000) 0 nil])
([nil nil ((610 . 611)) nil (26103 25525 270728 176000) 0 nil])
([nil nil ((#("ó" 0 1 (face font-lock-comment-face fontified t)) . -610) (undo-tree-id187 . -1) 611) nil (26103 25525 270727 585000) 0 nil])
([nil nil ((610 . 611)) nil (26103 25525 270726 272000) 0 nil])
([nil nil ((#("µ" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -610) (undo-tree-id186 . -1) 611) nil (26103 25525 270725 541000) 0 nil])
([nil nil ((610 . 617)) nil (26103 25525 270724 208000) 0 nil])
([nil nil ((#(" " 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -616) (undo-tree-id185 . -1) 617) nil (26103 25525 270723 597000) 0 nil])
([nil nil ((616 . 628)) nil (26103 25525 270722 385000) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -626) (undo-tree-id183 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -627) (undo-tree-id184 . -1) 628) nil (26103 25525 270721 704000) 0 nil])
([nil nil ((626 . 634)) nil (26103 25525 270719 630000) 0 nil])
([nil nil ((634 . 637)) nil (26103 25525 270719 139000) 0 nil])
([nil nil ((637 . 638)) nil (26103 25525 270718 588000) 0 nil])
([nil nil ((638 . 644)) nil (26103 25525 270718 77000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -307) (undo-tree-id182 . -1) 308) nil (26103 25525 270717 386000) 0 nil])
([nil nil ((307 . 308)) nil (26103 25525 270716 123000) 0 nil])
([nil nil ((371 . 376)) nil (26103 25525 270715 512000) 0 nil])
([nil nil ((372 . 374) (#("	   " 0 4 (c-in-sws t face font-lock-comment-face fontified nil)) . 372) (undo-tree-id181 . -4) (376 . 377)) nil (26103 25525 270714 921000) 0 nil])
([nil nil ((375 . 376)) nil (26103 25525 270713 629000) 0 nil])
([nil nil ((372 . 373) (#("	 " 0 2 (face font-lock-comment-delimiter-face c-in-sws t fontified nil)) . 372) (undo-tree-id180 . -2) (374 . 375)) nil (26103 25525 270712 977000) 0 nil])
([nil nil ((374 . 375)) nil (26103 25525 270711 645000) 0 nil])
([nil nil ((372 . 374) (#("	" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -372) (undo-tree-id179 . -1) 373) nil (26103 25525 270711 24000) 0 nil])
([nil nil ((376 . 380)) nil (26103 25525 270709 351000) 0 nil])
([nil nil ((#("á" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -379) (undo-tree-id178 . -1) 380) nil (26103 25525 270708 740000) 0 nil])
([nil nil ((379 . 380)) nil (26103 25525 270707 347000) 0 nil])
([nil nil ((#("d" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -379) (undo-tree-id177 . -1) 380) nil (26103 25525 270706 656000) 0 nil])
([nil nil ((379 . 385)) nil (26103 25525 270701 967000) 0 nil])
([nil nil ((#("d" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -381) (undo-tree-id173 . -1) (#(" " 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -382) (undo-tree-id174 . -1) (#("p" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -383) (undo-tree-id175 . -1) (#("o" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -384) (undo-tree-id176 . -1) 385) nil (26103 25525 270700 975000) 0 nil])
([nil nil ((381 . 391)) nil (26103 25525 270697 579000) 0 nil])
([nil nil ((#("s" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -381) (undo-tree-id163 . -1) (#(" " 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -382) (undo-tree-id164 . -1) (#("p" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -383) (undo-tree-id165 . -1) (#("o" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -384) (undo-tree-id166 . -1) (#("d" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -385) (undo-tree-id167 . -1) (#("e" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -386) (undo-tree-id168 . -1) (#("m" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -387) (undo-tree-id169 . -1) (#("o" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -388) (undo-tree-id170 . -1) (#("s" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -389) (undo-tree-id171 . -1) (#(" " 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -390) (undo-tree-id172 . -1) 391) nil (26103 25525 270696 146000) 0 nil])
([nil nil ((381 . 383)) nil (26103 25525 270689 744000) 0 nil])
([nil nil ((383 . 397)) nil (26103 25525 270689 253000) 0 nil])
([nil nil ((#("d" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -393) (undo-tree-id159 . -1) (#("n" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -394) (undo-tree-id160 . -1) (#("o" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -395) (undo-tree-id161 . -1) (#(" " 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -396) (undo-tree-id162 . -1) 397) nil (26103 25525 270688 382000) 0 nil])
([nil nil ((393 . 408)) nil (26103 25525 270685 276000) 0 nil])
([nil nil ((#("l" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -387) (undo-tree-id138 . -1) (#(" " 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -388) (undo-tree-id139 . -1) (#("s" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -389) (undo-tree-id140 . -1) (#("e" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -390) (undo-tree-id141 . -1) (#("g" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -391) (undo-tree-id142 . -1) (#("u" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -392) (undo-tree-id143 . -1) (#("n" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -393) (undo-tree-id144 . -1) (#("d" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -394) (undo-tree-id145 . -1) (#("o" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -395) (undo-tree-id146 . -1) (#(" " 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -396) (undo-tree-id147 . -1) (#("a" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -397) (undo-tree-id148 . -1) (#("r" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -398) (undo-tree-id149 . -1) (#("g" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -399) (undo-tree-id150 . -1) (#("u" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -400) (undo-tree-id151 . -1) (#("n" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -401) (undo-tree-id152 . -1) (#("m" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -402) (undo-tree-id153 . -1) (#("e" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -403) (undo-tree-id154 . -1) (#("n" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -404) (undo-tree-id155 . -1) (#("t" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -405) (undo-tree-id156 . -1) (#("o" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -406) (undo-tree-id157 . -1) (#(" " 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -407) (undo-tree-id158 . -1) 408) nil (26103 25525 270682 841000) 0 nil])
([nil nil ((#("e" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -383) (undo-tree-id134 . -1) (#("n" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -384) (undo-tree-id135 . -1) (#(" " 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -385) (undo-tree-id136 . -1) (#("e" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -386) (undo-tree-id137 . -1) 387) nil (26103 25525 270668 214000) 0 nil])
([nil nil ((376 . 378)) nil (26103 25525 270664 447000) 0 nil])
([nil nil ((384 . 405)) nil (26103 25525 270663 926000) 0 nil])
([nil nil ((405 . 415)) nil (26103 25525 270663 465000) 0 nil])
([nil nil ((#("a" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -414) (undo-tree-id133 . -1) 415) nil (26103 25525 270662 844000) 0 nil])
([nil nil ((414 . 419)) nil (26103 25525 270661 672000) 0 nil])
([nil nil ((769 . 775)) nil (26103 25525 270661 51000) 0 nil])
([nil nil ((775 . 777)) nil (26103 25525 270660 540000) 0 nil])
([nil nil ((777 . 779)) nil (26103 25525 270660 9000) 0 nil])
([nil nil ((779 . 781)) nil (26103 25525 270659 528000) 0 nil])
([nil nil ((780 . 784)) nil (26103 25525 270658 987000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -780) (undo-tree-id129 . -1) (#("a" 0 1 (fontified t)) . -781) (undo-tree-id130 . -1) (#("n" 0 1 (fontified t)) . -782) (undo-tree-id131 . -1) (#("d" 0 1 (fontified t)) . -783) (undo-tree-id132 . -1) 784) nil (26103 25525 270658 35000) 0 nil])
([nil nil ((780 . 786)) nil (26103 25525 270651 994000) 0 nil])
([nil nil ((778 . 785)) nil (26103 25525 270651 533000) 0 nil])
([nil nil ((785 . 791)) nil (26103 25525 270650 962000) 0 nil])
([nil nil ((790 . 792)) nil (26103 25525 270650 481000) 0 nil])
([nil nil ((795 . 798)) nil (26103 25525 270650 0) 0 nil])
([nil nil ((796 . 798) (#("		" 0 2 (fontified t)) . 796)) nil (26103 25525 270649 289000) 0 nil])
([nil nil ((798 . 800)) nil (26103 25525 270648 538000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -798) (undo-tree-id128 . -1) 799) nil (26103 25525 270647 896000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face fontified t)) . -798) (undo-tree-id127 . -1) 799) nil (26103 25525 270646 494000) 0 nil])
([nil nil ((798 . 809)) nil (26103 25525 270645 362000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -808) (undo-tree-id126 . -1) 809) nil (26103 25525 270644 710000) 0 nil])
([nil nil ((808 . 809)) nil (26103 25525 270643 568000) 0 nil])
([nil nil ((809 . 810)) nil (26103 25525 270643 77000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -808) (undo-tree-id124 . -1) (#("p" 0 1 (fontified t)) . -809) (undo-tree-id125 . -1) 810) nil (26103 25525 270642 406000) 0 nil])
([nil nil ((808 . 815)) nil (26103 25525 270640 503000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -812) (undo-tree-id121 . -1) (#("n" 0 1 (fontified t)) . -813) (undo-tree-id122 . -1) (#("l" 0 1 (fontified t)) . -814) (undo-tree-id123 . -1) 815) nil (26103 25525 270639 621000) 0 nil])
([nil nil ((812 . 816)) nil (26103 25525 270637 56000) 0 nil])
([nil nil ((816 . 818)) nil (26103 25525 270636 595000) 0 nil])
([nil nil ((817 . 819)) nil (26103 25525 270636 74000) 0 nil])
([nil nil ((818 . 822)) nil (26103 25525 270635 593000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -821) (undo-tree-id120 . -1) 822) nil (26103 25525 270634 952000) 0 nil])
([nil nil ((821 . 822)) nil (26103 25525 270633 720000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . -821) (undo-tree-id119 . -1) 822) nil (26103 25525 270633 139000) 0 nil])
([nil nil ((821 . 832)) nil (26103 25525 270631 857000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t)) . -831) (undo-tree-id118 . -1) 832) nil (26103 25525 270631 205000) 0 nil])
([nil nil ((831 . 839)) nil (26103 25525 270630 83000) 0 nil])
([nil nil ((841 . 842)) nil (26103 25525 270629 562000) 0 nil])
([nil nil ((849 . 854)) nil (26103 25525 270629 81000) 0 nil])
([nil nil ((854 . 855) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 854) (undo-tree-id117 . -4) (850 . 854) 854) nil (26103 25525 270628 320000) 0 nil])
([nil nil ((855 . 857)) nil (26103 25525 270626 947000) 0 nil])
([nil nil ((857 . 859)) nil (26103 25525 270626 386000) 0 nil])
([nil nil ((858 . 859)) nil (26103 25525 270625 915000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -858) (undo-tree-id116 . -1) 859) nil (26103 25525 270625 234000) 0 nil])
([nil nil ((858 . 871)) nil (26103 25525 270624 22000) 0 nil])
([nil nil ((870 . 871)) nil (26103 25525 270623 441000) 0 nil])
([nil nil ((871 . 872)) nil (26103 25525 270622 930000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-string-face fontified t)) . -791) (undo-tree-id115 . -1) 792) nil (26103 25525 270622 259000) 0 nil])
([nil nil ((791 . 792)) nil (26103 25525 270621 117000) 0 nil])
([nil nil ((874 . 875)) nil (26103 25525 270620 636000) 0 nil])
([nil nil ((875 . 877)) nil (26103 25525 270620 145000) 0 nil])
([nil nil ((878 . 883) (#("	    " 0 5 (fontified nil)) . 877) (undo-tree-id114 . -5) (876 . 883)) nil (26103 25525 270619 383000) 0 nil])
([nil nil ((877 . 879)) nil (26103 25525 270618 1000) 0 nil])
([nil nil ((879 . 881)) nil (26103 25525 270617 530000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -880) (undo-tree-id113 . -1) 881) nil (26103 25525 270616 949000) 0 nil])
([nil nil ((880 . 892)) nil (26103 25525 270615 476000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -890) (undo-tree-id111 . -1) (#("p" 0 1 (fontified t)) . -891) (undo-tree-id112 . -1) 892) nil (26103 25525 270614 795000) 0 nil])
([nil nil ((890 . 892)) nil (26103 25525 270613 11000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -891) (undo-tree-id110 . -1) 892) nil (26103 25525 270612 340000) 0 nil])
([nil nil ((891 . 897)) nil (26103 25525 270611 178000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -894) (undo-tree-id107 . -1) (#("l" 0 1 (fontified t)) . -895) (undo-tree-id108 . -1) (#("n" 0 1 (fontified t)) . -896) (undo-tree-id109 . -1) 897) nil (26103 25525 270610 387000) 0 nil])
([nil nil ((894 . 897)) nil (26103 25525 270608 72000) 0 nil])
([nil nil ((897 . 899)) nil (26103 25525 270607 591000) 0 nil])
([nil nil ((898 . 900)) nil (26103 25525 270607 50000) 0 nil])
([nil nil ((899 . 906)) nil (26103 25525 270606 559000) 0 nil])
([nil nil ((#("T" 0 1 (face font-lock-string-face fontified t)) . -899) (undo-tree-id100 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -900) (undo-tree-id101 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -901) (undo-tree-id102 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -902) (undo-tree-id103 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -903) (undo-tree-id104 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -904) (undo-tree-id105 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -905) (undo-tree-id106 . -1) 906) nil (26103 25525 270605 307000) 0 nil])
([nil nil ((899 . 915)) nil (26103 25525 270600 578000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-string-face fontified t)) . -913) (undo-tree-id98 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -914) (undo-tree-id99 . -1) 915) nil (26103 25525 270599 767000) 0 nil])
([nil nil ((913 . 916)) nil (26103 25525 270597 984000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . -912) (undo-tree-id94 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -913) (undo-tree-id95 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -914) (undo-tree-id96 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -915) (undo-tree-id97 . -1) 916) nil (26103 25525 270596 952000) 0 nil])
([nil nil ((912 . 915)) nil (26103 25525 270592 694000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . -913) (undo-tree-id92 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -914) (undo-tree-id93 . -1) 915) nil (26103 25525 270591 612000) 0 nil])
([nil nil ((913 . 919)) nil (26103 25525 270588 676000) 0 nil])
([nil nil ((921 . 922)) nil (26103 25525 270588 85000) 0 nil])
([nil nil ((929 . 934)) nil (26103 25525 270587 524000) 0 nil])
([nil nil ((934 . 935) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 934) (undo-tree-id91 . -4) (930 . 934) 934) nil (26103 25525 270586 622000) 0 nil])
([nil nil ((935 . 936)) nil (26103 25525 270585 90000) 0 nil])
([nil nil ((1283 . 1284)) nil (26103 25525 270584 398000) 0 nil])
([nil nil ((938 . 940) (#("	    " 0 5 (fontified t)) . -938) (undo-tree-id90 . -5) 943) nil (26103 25525 270583 707000) 0 nil])
([nil nil ((977 . 979) (#("	    " 0 5 (fontified t)) . -977) (undo-tree-id89 . -5) 982) nil (26103 25525 270579 639000) 0 nil])
([nil nil ((1015 . 1017) (#("	    " 0 5 (fontified t)) . -1015) (undo-tree-id88 . -5) 1020) nil (26103 25525 270578 16000) 0 nil])
([nil nil ((1075 . 1077) (#("	    " 0 5 (fontified t)) . -1075) (undo-tree-id87 . -5) 1080) nil (26103 25525 270575 822000) 0 nil])
([nil nil ((1137 . 1139) (#("	    " 0 5 (fontified t)) . 1137) 1146) nil (26103 25525 270566 926000) 0 nil])
([nil nil ((1156 . 1158) (#("	    " 0 5 (fontified t)) . 1156) 1169) nil (26103 25525 270566 74000) 0 nil])
([nil nil ((1204 . 1210) (#("		" 0 2 (fontified t)) . 1204) 1214) nil (26103 25525 270564 942000) 0 nil])
([nil nil ((1233 . 1235) (#("	    " 0 5 (fontified t)) . 1233) 1239) nil (26103 25525 270563 349000) 0 nil])
([nil nil ((1237 . 1239)) nil (26103 25525 270561 536000) 0 nil])
([nil nil ((1240 . 1242) (#("	    " 0 5 (fontified t)) . 1240) 1249) nil (26103 25525 270557 518000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -785) (undo-tree-id231 . -1) (#("=" 0 1 (fontified t)) . -786) (undo-tree-id232 . -1) (#("=" 0 1 (fontified t)) . -787) (undo-tree-id233 . -1) (#(" " 0 1 (fontified t)) . -788) (undo-tree-id234 . -1) 789 (t 26103 25525 279117 543000)) nil (26103 25782 673357 367000) 0 nil])
([nil nil ((785 . 792)) nil (26103 25782 673353 680000) 0 nil])
([nil nil ((792 . 793)) nil (26103 25782 673353 29000) 0 nil])
([nil nil ((797 . 798)) nil (26103 25782 673352 478000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -870) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (#("=" 0 1 (fontified t)) . -871) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (#("=" 0 1 (fontified t)) . -872) (undo-tree-id229 . -1) (undo-tree-id230 . -1) 873) nil (26103 25782 673351 155000) 0 nil])
([nil nil ((870 . 877)) nil (26103 25782 673344 593000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -877) (undo-tree-id220 . -1) (undo-tree-id221 . -1) 878) nil (26103 25782 673342 840000) 0 nil])
([nil nil ((877 . 878)) nil (26103 25782 673332 89000) 0 nil])
([nil nil ((882 . 883)) nil (26103 25782 673328 663000) 0 nil])
([nil nil ((458 . 459) (#("	" 0 1 (fontified nil)) . 457) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (458 . 459) (456 . 457) (t 26103 25782 680163 708000)) nil (26103 25903 478787 834000) 0 nil])
([nil nil ((457 . 458)) nil (26103 25903 478785 469000) 0 nil])
([nil nil ((456 . 457)) nil (26103 25912 824489 120000) 0 nil])
([nil nil ((297 . 298) (#("	" 0 1 (fontified nil)) . 296) (undo-tree-id333 . -1) (297 . 298)) nil (26103 26098 927476 141000) 0 nil] [nil nil ((424 . 425) (#("	" 0 1 (fontified nil c-is-sws t)) . 423) (undo-tree-id244 . -1) (424 . 425)) ((#("
" 0 1 (c-is-sws t fontified nil)) . 424) (423 . 424) (#("	" 0 1 (c-is-sws t fontified t)) . 424)) (26103 25912 429923 8000) 0 nil])
([nil nil ((298 . 300)) nil (26103 26098 927474 568000) 0 nil])
([nil nil ((423 . 424)) ((#("	" 0 1 (c-is-sws t fontified t)) . 423) (undo-tree-id251 . -1) (undo-tree-id252 . -1)) (26103 25912 44499 572000) 0 nil])
([nil nil ((300 . 301)) nil (26103 26098 927473 696000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t c-is-sws t)) . -429) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#(" " 0 1 (fontified nil c-is-sws t)) . -430) (undo-tree-id241 . -1) (#("	" 0 1 (c-is-sws t fontified nil)) . 431) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (423 . 431) 424) ((#("        " 0 6 (c-in-sws t c-is-sws t fontified nil) 6 7 (c-is-sws t fontified nil) 7 8 (c-is-sws t fontified nil)) . 423) (undo-tree-id247 . -7) (undo-tree-id248 . -6) (undo-tree-id249 . -6) (undo-tree-id250 . -6) (429 . 432)) (26103 25903 479172 986000) 0 nil])
([nil nil ((301 . 302)) nil (26103 26098 927473 115000) 0 nil])
([nil nil ((#("parametro. */
      " 0 1 (face font-lock-comment-face c-in-sws t fontified t) 1 2 (face font-lock-comment-face c-in-sws t fontified t) 2 3 (face font-lock-comment-face c-in-sws t fontified t) 3 4 (face font-lock-comment-face c-in-sws t fontified t) 4 5 (face font-lock-comment-face c-in-sws t fontified t) 5 6 (face font-lock-comment-face c-in-sws t fontified t) 6 7 (face font-lock-comment-face c-in-sws t fontified t) 7 8 (face font-lock-comment-face c-in-sws t fontified t) 8 9 (face font-lock-comment-face c-in-sws t fontified t) 9 10 (c-in-sws t face font-lock-comment-face fontified t) 10 11 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 11 12 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 12 13 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 13 14 (c-is-sws t fontified t) 14 20 (fontified t c-is-sws t)) . -409) (undo-tree-id235 . -20) (undo-tree-id236 . -20) (undo-tree-id237 . -14) (undo-tree-id238 . -20) 429) ((409 . 429)) (26103 25903 478771 122000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -301) (undo-tree-id332 . -1) 302) nil (26103 26098 927472 404000) 0 nil])
nil
([nil nil ((301 . 302)) nil (26103 26098 927471 251000) 0 nil])
([nil nil ((301 . 305)) nil (26103 26098 927470 730000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -304) (undo-tree-id331 . -1) 305) nil (26103 26098 927470 49000) 0 nil])
([nil nil ((304 . 309)) nil (26103 26098 927468 887000) 0 nil])
([nil nil ((309 . 311)) nil (26103 26098 927468 346000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -308) (undo-tree-id328 . -1) (#("t" 0 1 (fontified t)) . -309) (undo-tree-id329 . -1) (#("h" 0 1 (fontified t)) . -310) (undo-tree-id330 . -1) 311) nil (26103 26098 927467 364000) 0 nil])
([nil nil ((308 . 312)) nil (26103 26098 927465 50000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -310) (undo-tree-id326 . -1) (#("t" 0 1 (fontified t)) . -311) (undo-tree-id327 . -1) 312) nil (26103 26098 927464 278000) 0 nil])
([nil nil ((310 . 316)) nil (26103 26098 927462 485000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -315) (undo-tree-id325 . -1) 316) nil (26103 26098 927461 834000) 0 nil])
([nil nil ((315 . 316)) nil (26103 26098 927460 551000) 0 nil])
([nil nil ((317 . 319)) nil (26103 26098 927460 50000) 0 nil])
([nil nil ((318 . 320)) nil (26103 26098 927459 519000) 0 nil])
([nil nil ((320 . 321) (#("	" 0 1 (fontified nil)) . 319) (undo-tree-id324 . -1) (320 . 321)) nil (26103 26098 927458 818000) 0 nil])
([nil nil ((319 . 324)) nil (26103 26098 927457 385000) 0 nil])
([nil nil ((324 . 329)) nil (26103 26098 927456 844000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -328) (undo-tree-id323 . -1) 329) nil (26103 26098 927456 163000) 0 nil])
([nil nil ((328 . 342)) nil (26103 26098 927454 420000) 0 nil])
([nil nil ((342 . 344)) nil (26103 26098 927453 869000) 0 nil])
([nil nil ((343 . 345)) nil (26103 26098 927453 348000) 0 nil])
([nil nil ((344 . 350)) nil (26103 26098 927452 777000) 0 nil])
([nil nil ((#("D" 0 1 (face font-lock-string-face fontified t)) . -344) (undo-tree-id317 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -345) (undo-tree-id318 . -1) (#("b" 0 1 (face font-lock-string-face fontified t)) . -346) (undo-tree-id319 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -347) (undo-tree-id320 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -348) (undo-tree-id321 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -349) (undo-tree-id322 . -1) 350) nil (26103 26098 927451 594000) 0 nil])
([nil nil ((344 . 346)) nil (26103 26098 927447 246000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-string-face fontified t)) . -345) (undo-tree-id316 . -1) 346) nil (26103 26098 927446 304000) 0 nil])
([nil nil ((345 . 347)) nil (26103 26098 927445 82000) 0 nil])
([nil nil ((347 . 348)) nil (26103 26098 927444 481000) 0 nil])
([nil nil ((348 . 349)) nil (26103 26098 927443 770000) 0 nil])
([nil nil ((349 . 353)) nil (26103 26098 927443 159000) 0 nil])
([nil nil ((#("j" 0 1 (face font-lock-string-face fontified t)) . -349) (undo-tree-id312 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -350) (undo-tree-id313 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -351) (undo-tree-id314 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -352) (undo-tree-id315 . -1) 353) nil (26103 26098 927442 46000) 0 nil])
([nil nil ((349 . 357)) nil (26103 26098 927438 921000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -355) (undo-tree-id310 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -356) (undo-tree-id311 . -1) 357) nil (26103 26098 927438 169000) 0 nil])
([nil nil ((355 . 356)) nil (26103 26098 927436 316000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -355) (undo-tree-id309 . -1) 356) nil (26103 26098 927435 664000) 0 nil])
([nil nil ((355 . 363)) nil (26103 26098 927434 462000) 0 nil])
([nil nil ((363 . 367)) nil (26103 26098 927433 821000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-string-face fontified t)) . -363) (undo-tree-id305 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -364) (undo-tree-id306 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -365) (undo-tree-id307 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -366) (undo-tree-id308 . -1) 367) nil (26103 26098 927432 739000) 0 nil])
([nil nil ((363 . 369)) nil (26103 26098 927429 653000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-string-face fontified t)) . -367) (undo-tree-id303 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -368) (undo-tree-id304 . -1) 369) nil (26103 26098 927428 872000) 0 nil])
([nil nil ((367 . 371)) nil (26103 26098 927427 58000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -350) (undo-tree-id282 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -351) (undo-tree-id283 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -352) (undo-tree-id284 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -353) (undo-tree-id285 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -354) (undo-tree-id286 . -1) (#("j" 0 1 (face font-lock-string-face fontified t)) . -355) (undo-tree-id287 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -356) (undo-tree-id288 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -357) (undo-tree-id289 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -358) (undo-tree-id290 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -359) (undo-tree-id291 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -360) (undo-tree-id292 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -361) (undo-tree-id293 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -362) (undo-tree-id294 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -363) (undo-tree-id295 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -364) (undo-tree-id296 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -365) (undo-tree-id297 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -366) (undo-tree-id298 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -367) (undo-tree-id299 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -368) (undo-tree-id300 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -369) (undo-tree-id301 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -370) (undo-tree-id302 . -1) 371) nil (26103 26098 927424 223000) 0 nil])
([nil nil ((#("U" 0 1 (face font-lock-string-face fontified t)) . -344) (undo-tree-id276 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -345) (undo-tree-id277 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -346) (undo-tree-id278 . -1) (#(":" 0 1 (face font-lock-string-face fontified t)) . -347) (undo-tree-id279 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -348) (undo-tree-id280 . -1) (#("j" 0 1 (face font-lock-string-face fontified t)) . -349) (undo-tree-id281 . -1) 350) nil (26103 26098 927409 245000) 0 nil])
([nil nil ((344 . 352)) nil (26103 26098 927404 456000) 0 nil])
([nil nil ((352 . 363)) nil (26103 26098 927403 955000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-string-face fontified t)) . -362) (undo-tree-id275 . -1) 363) nil (26103 26098 927403 183000) 0 nil])
([nil nil ((362 . 383)) nil (26103 26098 927401 991000) 0 nil])
([nil nil ((383 . 388)) nil (26103 26098 927401 520000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -387) (undo-tree-id274 . -1) 388) nil (26103 26098 927400 719000) 0 nil])
([nil nil ((387 . 389)) nil (26103 26098 927399 486000) 0 nil])
([nil nil ((391 . 392)) nil (26103 26098 927399 26000) 0 nil])
([nil nil ((392 . 398)) nil (26103 26098 927398 515000) 0 nil])
([nil nil ((398 . 403)) nil (26103 26098 927397 964000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -401) (undo-tree-id272 . -1) (#("u" 0 1 (fontified t)) . -402) (undo-tree-id273 . -1) 403) nil (26103 26098 927397 82000) 0 nil])
([nil nil ((401 . 404)) nil (26103 26098 927394 968000) 0 nil])
([nil nil ((404 . 405)) nil (26103 26098 927394 427000) 0 nil])
([nil nil ((410 . 411) (#("	" 0 1 (fontified nil)) . 409) (undo-tree-id271 . -1) (408 . 411)) nil (26103 26098 927393 545000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -592) (undo-tree-id264 . -1) (#("r" 0 1 (fontified t)) . -593) (undo-tree-id265 . -1) (#("g" 0 1 (fontified t)) . -594) (undo-tree-id266 . -1) (#("s" 0 1 (fontified t)) . -595) (undo-tree-id267 . -1) (#("[" 0 1 (fontified t)) . -596) (undo-tree-id268 . -1) (#("1" 0 1 (fontified t)) . -597) (undo-tree-id269 . -1) (#("]" 0 1 (fontified t)) . -598) (undo-tree-id270 . -1) 599) nil (26103 26098 927391 271000) 0 nil])
([nil nil ((592 . 594)) nil (26103 26098 927374 780000) 0 nil])
([nil nil ((595 . 597)) nil (26103 26098 927374 219000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -574) (undo-tree-id257 . -1) (#(" " 0 1 (fontified t)) . -575) (undo-tree-id258 . -1) (#(" " 0 1 (fontified t)) . -576) (undo-tree-id259 . -1) (#(" " 0 1 (fontified t)) . -577) (undo-tree-id260 . -1) (#(" " 0 1 (fontified t)) . -578) (undo-tree-id261 . -1) (#(" " 0 1 (fontified nil)) . -579) (undo-tree-id262 . -1) (#("	" 0 1 (fontified nil)) . 580) (undo-tree-id263 . -1) (572 . 580) 573) nil (26103 26098 927372 325000) 0 nil])
([nil nil ((597 . 598) (#("	" 0 1 (fontified t)) . 597)) nil (26103 26098 927365 422000) 0 nil])
([nil nil ((598 . 600)) nil (26103 26098 927364 611000) 0 nil])
([nil nil ((600 . 602)) nil (26103 26098 927364 80000) 0 nil])
([nil nil ((601 . 604)) nil (26103 26098 927363 539000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -603) (undo-tree-id256 . -1) 604) nil (26103 26098 927362 867000) 0 nil])
([nil nil ((603 . 614)) nil (26103 26098 927361 194000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -613) (undo-tree-id255 . -1) 614) nil (26103 26098 927360 423000) 0 nil])
([nil nil ((613 . 614)) nil (26103 26098 927358 780000) 0 nil])
([nil nil ((614 . 616)) nil (26103 26098 927358 279000) 0 nil])
([nil nil ((617 . 619)) nil (26103 26098 927357 758000) 0 nil])
([nil nil ((620 . 621) (#("	" 0 1 (fontified nil)) . 619) (undo-tree-id254 . -1) (618 . 621)) nil (26103 26098 927356 786000) 0 nil])
([nil nil ((619 . 624)) nil (26103 26098 927354 752000) 0 nil])
([nil nil ((624 . 640)) nil (26103 26098 927354 201000) 0 nil])
([nil nil ((639 . 640)) nil (26103 26098 927353 420000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -639) (undo-tree-id253 . -1) 640) nil (26103 26098 927351 797000) 0 nil])
([nil nil ((639 . 640)) nil (26103 26098 927342 689000) 0 nil])
([nil nil ((641 . 642)) nil (26103 26098 927339 113000) 0 nil])
([nil nil ((1056 . 1065) (t 26103 26098 934164 713000)) nil (26103 27181 268320 850000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1055) (undo-tree-id343 . -1) (#("a" 0 1 (fontified t)) . -1056) (undo-tree-id344 . -1) (#("s" 0 1 (fontified t)) . -1057) (undo-tree-id345 . -1) (#("l" 0 1 (fontified t)) . -1058) (undo-tree-id346 . -1) (#("d" 0 1 (fontified t)) . -1059) (undo-tree-id347 . -1) (#("f" 0 1 (fontified t)) . -1060) (undo-tree-id348 . -1) (#("a" 0 1 (fontified t)) . -1061) (undo-tree-id349 . -1) (#("l" 0 1 (fontified t)) . -1062) (undo-tree-id350 . -1) (#("k" 0 1 (fontified t)) . -1063) (undo-tree-id351 . -1) (#("j" 0 1 (fontified t)) . -1064) (undo-tree-id352 . -1) 1065) nil (26103 27181 268318 987000) 0 nil])
([nil nil ((1055 . 1056)) nil (26103 27181 268311 684000) 0 nil])
([nil nil ((1415 . 1416)) nil (26103 27181 268310 952000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1415) (undo-tree-id342 . -1) 1416) nil (26103 27181 268310 241000) 0 nil])
([nil nil ((1415 . 1416)) nil (26103 27181 268308 879000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -1415) (undo-tree-id341 . -1) 1416) nil (26103 27181 268308 238000) 0 nil])
([nil nil ((1415 . 1416)) nil (26103 27181 268306 805000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1415) (undo-tree-id340 . -1) 1416) nil (26103 27181 268306 14000) 0 nil])
([nil nil ((1415 . 1420)) nil (26103 27181 268303 599000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1418) (undo-tree-id338 . -1) (#("e" 0 1 (fontified t)) . -1419) (undo-tree-id339 . -1) 1420) nil (26103 27181 268302 577000) 0 nil])
([nil nil ((1418 . 1432)) nil (26103 27181 268300 283000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1429) (undo-tree-id335 . -1) (#("n" 0 1 (fontified t)) . -1430) (undo-tree-id336 . -1) (#("l" 0 1 (fontified t)) . -1431) (undo-tree-id337 . -1) 1432) nil (26103 27181 268298 690000) 0 nil])
([nil nil ((1429 . 1431)) nil (26103 27181 268289 413000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1430) (undo-tree-id334 . -1) 1431) nil (26103 27181 268287 851000) 0 nil])
([nil nil ((1430 . 1433)) nil (26103 27181 268278 935000) 0 nil])
([nil nil ((1433 . 1434)) nil (26103 27181 268277 622000) 0 nil])
([nil nil ((1450 . 1451)) nil (26103 27254 622822 323000) 0 nil])
([nil nil ((964 . 965) (t 26103 27256 246313 404000)) nil (26103 29281 954478 130000) 0 nil] [nil nil ((#("." 0 1 (fontified t)) . -1439) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (#("t" 0 1 (fontified t)) . -1440) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (#("o" 0 1 (fontified t)) . -1441) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (#("S" 0 1 (fontified t)) . -1442) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (#("t" 0 1 (fontified t)) . -1443) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (#("r" 0 1 (fontified t)) . -1444) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (#("i" 0 1 (fontified t)) . -1445) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (#("n" 0 1 (fontified t)) . -1446) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (#("g" 0 1 (fontified t)) . -1447) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (#("(" 0 1 (fontified t)) . -1448) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (#(")" 0 1 (fontified t)) . -1449) (undo-tree-id428 . -1) (undo-tree-id429 . -1) 1450 (t 26103 27181 277600 347000)) ((1439 . 1450) (t 26103 27223 748232 911000)) (26103 27223 742565 498000) 0 nil])
([nil nil ((#("
		System.out.println(\"se tiene que reversar\");" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t) 24 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t) 26 27 (face font-lock-string-face fontified t) 27 28 (face font-lock-string-face fontified t) 28 29 (face font-lock-string-face fontified t) 29 30 (face font-lock-string-face fontified t) 30 31 (face font-lock-string-face fontified t) 31 32 (face font-lock-string-face fontified t) 32 33 (face font-lock-string-face fontified t) 33 34 (face font-lock-string-face fontified t) 34 35 (face font-lock-string-face fontified t) 35 36 (face font-lock-string-face fontified t) 36 37 (face font-lock-string-face fontified t) 37 38 (face font-lock-string-face fontified t) 38 39 (face font-lock-string-face fontified t) 39 40 (face font-lock-string-face fontified t) 40 41 (face font-lock-string-face fontified t) 41 42 (face font-lock-string-face fontified t) 42 43 (face font-lock-string-face fontified t) 43 44 (face font-lock-string-face fontified t) 44 45 (face font-lock-string-face fontified t) 45 46 (fontified t) 46 47 (fontified t)) . 964) (undo-tree-id436 . -47)) nil (26103 29281 954477 109000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1305 . 1306) (nil fontified nil 1305 . 1306) (nil fontified nil 1304 . 1305) (nil fontified nil 1303 . 1304) (nil fontified nil 1302 . 1303) (nil fontified nil 1301 . 1302) (nil fontified nil 1300 . 1301) (nil fontified nil 1299 . 1300) (nil fontified nil 1298 . 1299) (nil fontified nil 1297 . 1298) (nil fontified nil 1296 . 1297) (nil fontified nil 1295 . 1296) (nil fontified nil 1294 . 1295) (nil fontified nil 1293 . 1294) (nil fontified nil 1292 . 1293) (nil fontified nil 1291 . 1292) (nil fontified nil 1290 . 1291) (nil fontified nil 1289 . 1290) (nil fontified nil 1288 . 1289) (nil fontified nil 1287 . 1288) (nil fontified nil 1286 . 1287) (nil fontified nil 1285 . 1286) (nil fontified nil 1284 . 1285) (nil fontified nil 1283 . 1284) (nil fontified nil 1282 . 1283) (nil fontified nil 1281 . 1282) (nil fontified nil 1280 . 1281) (nil fontified nil 1279 . 1280) (nil fontified nil 1278 . 1279) (nil fontified nil 1277 . 1278) (nil fontified nil 1276 . 1277) (nil fontified nil 1275 . 1276) (nil fontified nil 1274 . 1275) (nil fontified nil 1273 . 1274) (nil fontified nil 1272 . 1273) (nil fontified nil 1271 . 1272) (nil fontified nil 1270 . 1271) (nil fontified nil 1269 . 1270) (nil fontified nil 1267 . 1269) (nil fontified nil 1266 . 1267) (nil fontified nil 1264 . 1266) (nil fontified nil 1263 . 1264) (nil fontified nil 1262 . 1263) (nil fontified nil 1260 . 1262) (nil fontified nil 1259 . 1260) (nil fontified nil 1258 . 1259) (nil fontified nil 1257 . 1258) (nil fontified nil 1256 . 1257) (nil fontified nil 1255 . 1256) (nil fontified nil 1254 . 1255) (nil fontified nil 1253 . 1254) (nil fontified nil 1252 . 1253) (nil fontified nil 1251 . 1252) (nil fontified nil 1250 . 1251) (nil fontified nil 1249 . 1250) (nil fontified nil 1248 . 1249) (nil fontified nil 1247 . 1248) (nil fontified nil 1246 . 1247) (nil fontified nil 1245 . 1246) (nil fontified nil 1244 . 1245) (nil fontified nil 1243 . 1244) (nil fontified nil 1242 . 1243) (nil fontified nil 1241 . 1242) (nil fontified nil 1240 . 1241) (nil fontified nil 1239 . 1240) (nil fontified nil 1238 . 1239) (nil fontified nil 1237 . 1238) (nil fontified nil 1231 . 1237) (nil fontified nil 1228 . 1231) (nil fontified nil 1224 . 1228) (nil fontified nil 1190 . 1224) (nil fontified nil 1185 . 1190) (nil fontified nil 1183 . 1185) (nil fontified nil 1182 . 1183) (nil fontified nil 1180 . 1182) (nil fontified nil 1173 . 1180) (nil fontified nil 1172 . 1173) (nil fontified nil 1171 . 1172) (nil fontified nil 1166 . 1171) (nil fontified nil 1164 . 1166) (nil fontified nil 1163 . 1164) (nil fontified nil 1146 . 1163) (nil fontified nil 1132 . 1146) (nil fontified nil 1131 . 1132) (nil fontified nil 1128 . 1131) (nil fontified nil 1125 . 1128) (nil fontified nil 1119 . 1125) (nil fontified nil 1118 . 1119) (nil fontified nil 1117 . 1118) (nil fontified nil 1104 . 1117) (nil fontified nil 1102 . 1104) (nil fontified nil 1085 . 1102) (nil fontified nil 1075 . 1085) (nil fontified nil 1074 . 1075) (nil fontified nil 1071 . 1074) (nil fontified nil 1070 . 1071) (nil fontified nil 1068 . 1070) (nil fontified nil 1055 . 1068) (nil fontified nil 1054 . 1055) (nil fontified nil 1053 . 1054) (nil fontified nil 1044 . 1053) (nil fontified nil 1042 . 1044) (nil fontified nil 1041 . 1042) (nil fontified nil 1040 . 1041) (nil fontified nil 1039 . 1040) (nil fontified nil 1038 . 1039) (nil fontified nil 1037 . 1038) (nil fontified nil 1036 . 1037) (nil fontified nil 1035 . 1036) (nil fontified nil 1034 . 1035) (nil fontified nil 1033 . 1034) (nil fontified nil 1032 . 1033) (nil fontified nil 1031 . 1032) (nil fontified nil 1030 . 1031) (nil fontified nil 1029 . 1030) (nil fontified nil 1028 . 1029) (nil fontified nil 1027 . 1028) (nil fontified nil 1026 . 1027) (nil fontified nil 1025 . 1026) (nil fontified nil 1024 . 1025) (nil fontified nil 1023 . 1024) (nil fontified nil 1022 . 1023) (nil fontified nil 1021 . 1022) (nil fontified nil 1020 . 1021) (nil fontified nil 1019 . 1020) (nil fontified nil 1018 . 1019) (nil fontified nil 1017 . 1018) (nil fontified nil 1016 . 1017) (nil fontified nil 1015 . 1016) (nil fontified nil 1014 . 1015) (nil fontified nil 1013 . 1014) (nil fontified nil 1012 . 1013) (nil fontified nil 1011 . 1012) (nil fontified nil 1010 . 1011) (nil fontified nil 1009 . 1010) (nil fontified nil 1008 . 1009) (nil fontified nil 1007 . 1008) (nil fontified nil 1006 . 1007) (nil fontified nil 1004 . 1006) (nil fontified nil 1003 . 1004) (nil fontified nil 1002 . 1003) (nil fontified nil 1001 . 1002) (nil fontified nil 1000 . 1001) (nil fontified nil 999 . 1000) (nil category c->-as-paren-syntax 999 . 1000) (nil fontified nil 998 . 999) (nil category c-<-as-paren-syntax 998 . 999) (nil fontified nil 997 . 998) (nil fontified nil 996 . 997) (nil fontified nil 995 . 996) (nil fontified nil 994 . 995) (nil fontified nil 993 . 994) (nil fontified nil 992 . 993) (nil fontified nil 991 . 992) (nil fontified nil 990 . 991) (nil fontified nil 989 . 990) (nil fontified nil 988 . 989) (nil fontified nil 987 . 988) (nil fontified nil 986 . 987) (nil fontified nil 985 . 986) (nil fontified nil 984 . 985) (nil fontified nil 983 . 984) (nil fontified nil 982 . 983) (nil fontified nil 981 . 982) (nil fontified nil 980 . 981) (nil fontified nil 979 . 980) (nil category c->-as-paren-syntax 979 . 980) (nil fontified nil 978 . 979) (nil fontified nil 977 . 978) (nil fontified nil 976 . 977) (nil fontified nil 975 . 976) (nil fontified nil 974 . 975) (nil fontified nil 973 . 974) (nil fontified nil 972 . 973) (nil category c-<-as-paren-syntax 972 . 973) (nil fontified nil 971 . 972) (nil fontified nil 970 . 971) (nil fontified nil 969 . 970) (nil fontified nil 968 . 969) (nil fontified nil 967 . 968) (nil fontified nil 965 . 967) (nil fontified nil 964 . 965) (964 . 1306)) nil (26103 29281 954470 206000) 0 nil])
([nil nil ((1306 . 1309)) nil (26103 29281 954449 738000) 0 nil])
([nil nil ((1266 . 1267)) nil (26103 29281 954448 896000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1266) (undo-tree-id434 . -1) (undo-tree-id435 . -1) 1267) nil (26103 29281 954447 714000) 0 nil])
([nil nil ((1265 . 1267) (#("		" 0 2 (fontified nil)) . 1264) (undo-tree-id430 . -2) (undo-tree-id431 . -2) (undo-tree-id432 . -2) (undo-tree-id433 . -2) (1266 . 1267)) nil (26103 29281 954444 668000) 0 nil])
([nil nil ((1267 . 1280)) nil (26103 29281 954433 808000) 0 nil])
([nil nil ((1280 . 1282)) nil (26103 29281 954432 396000) 0 nil])
([nil nil ((1282 . 1283)) nil (26103 29281 954428 639000) 0 nil])
([nil nil ((1311 . 1319) (t 26103 29281 960272 226000)) nil (26103 29315 65058 891000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1318) (undo-tree-id438 . -1) 1319) nil (26103 29315 65057 489000) 0 nil])
([nil nil ((1318 . 1320)) nil (26103 29315 65055 295000) 0 nil])
([nil nil ((1320 . 1321)) nil (26103 29315 65053 752000) 0 nil])
([nil nil ((#("
		lista.reversa();" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 1264) (undo-tree-id437 . -19)) nil (26103 29315 65050 506000) 0 nil])
([nil nil ((1417 . 1419) (t 26103 29315 69625 604000)) nil (26103 50885 98316 613000) 0 nil])
([nil nil ((1876 . 1877)) nil (26103 50885 98315 171000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -1876) (undo-tree-id0 . -1) 1877) nil (26103 50885 98311 464000) 0 nil])
([nil nil ((966 . 967) (t 26103 50885 102834 940000)) nil (26103 50980 192754 863000) 0 nil])
([nil nil ((965 . 967) (#("	" 0 1 (fontified nil)) . 965) (967 . 968)) nil (26103 50980 192754 41000) 0 nil])
([nil nil ((1317 . 1318)) nil (26103 50980 192753 230000) 0 nil])
([nil nil ((1318 . 1319)) nil (26103 50980 192752 699000) 0 nil])
([nil nil ((1322 . 1332)) nil (26103 50980 192752 118000) 0 nil])
([nil nil ((1332 . 1333)) nil (26103 50980 192751 617000) 0 nil])
([nil nil ((1333 . 1334)) nil (26103 50980 192751 16000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1332) (undo-tree-id25 . -1) (#("p" 0 1 (fontified t)) . -1333) (undo-tree-id26 . -1) 1334) nil (26103 50980 192750 304000) 0 nil])
([nil nil ((1332 . 1340)) nil (26103 50980 192748 521000) 0 nil])
([nil nil ((1340 . 1342)) nil (26103 50980 192747 900000) 0 nil])
([nil nil ((1341 . 1343)) nil (26103 50980 192747 429000) 0 nil])
([nil nil ((1342 . 1343)) nil (26103 50980 192746 898000) 0 nil])
([nil nil ((1343 . 1345)) nil (26103 50980 192746 427000) 0 nil])
([nil nil ((#("Q" 0 1 (face font-lock-string-face fontified t)) . -1343) (undo-tree-id23 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -1344) (undo-tree-id24 . -1) 1345) nil (26103 50980 192745 696000) 0 nil])
([nil nil ((1343 . 1356)) nil (26103 50980 192743 822000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -1350) (undo-tree-id17 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1351) (undo-tree-id18 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -1352) (undo-tree-id19 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1353) (undo-tree-id20 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1354) (undo-tree-id21 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -1355) (undo-tree-id22 . -1) 1356) nil (26103 50980 192742 660000) 0 nil])
([nil nil ((1350 . 1364)) nil (26103 50980 192738 332000) 0 nil])
([nil nil ((1364 . 1370)) nil (26103 50980 192737 821000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -1369) (undo-tree-id16 . -1) 1370) nil (26103 50980 192737 190000) 0 nil])
([nil nil ((1369 . 1370)) nil (26103 50980 192735 897000) 0 nil])
([nil nil ((1434 . 1435)) nil (26103 50980 192735 437000) 0 nil])
([nil nil ((1435 . 1437)) nil (26103 50980 192734 876000) 0 nil])
([nil nil ((1437 . 1439)) nil (26103 50980 192734 14000) 0 nil])
([nil nil ((1823 . 1825) (#("		" 0 2 (fontified nil)) . 1822) (undo-tree-id15 . -2) (1821 . 1825)) nil (26103 50980 192733 242000) 0 nil])
([nil nil ((1825 . 1831)) nil (26103 50980 192731 770000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -1830) (undo-tree-id14 . -1) 1831) nil (26103 50980 192730 998000) 0 nil])
([nil nil ((1830 . 1832)) nil (26103 50980 192729 836000) 0 nil])
([nil nil ((1831 . 1833)) nil (26103 50980 192729 355000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-type-face fontified t)) . -1832) (undo-tree-id13 . -1) 1833) nil (26103 50980 192728 554000) 0 nil])
([nil nil ((1832 . 1836)) nil (26103 50980 192726 730000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -1825) (undo-tree-id2 . -1) (#("i" 0 1 (fontified t)) . -1826) (undo-tree-id3 . -1) (#("s" 0 1 (fontified t)) . -1827) (undo-tree-id4 . -1) (#("t" 0 1 (fontified t)) . -1828) (undo-tree-id5 . -1) (#("a" 0 1 (fontified t)) . -1829) (undo-tree-id6 . -1) (#("<" 0 1 (c-<>-c-types-set t fontified t)) . -1830) (undo-tree-id7 . -1) (#("S" 0 1 (face font-lock-type-face fontified t)) . -1831) (undo-tree-id8 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -1832) (undo-tree-id9 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -1833) (undo-tree-id10 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -1834) (undo-tree-id11 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -1835) (undo-tree-id12 . -1) 1836) nil (26103 50980 192723 965000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -1825) (undo-tree-id1 . -1) 1826) nil (26103 50980 192711 933000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1476) (undo-tree-id27 . -1) (#("1" 0 1 (fontified t)) . -1477) (undo-tree-id28 . -1) (#("2" 0 1 (fontified t)) . -1478) (undo-tree-id29 . -1) 1479 (t 26103 50980 202141 220000)) nil (26103 51011 18853 686000) 0 nil])
([nil nil ((1476 . 1479)) nil (26103 51011 18841 874000) 0 nil])
([nil nil ((1372 . 1373)) nil (26103 51011 18838 107000) 0 nil])
([nil nil ((#("
		System.out.println(lista.toString());" 0 1 (fontified nil) 1 40 (fontified t)) . 1789) (undo-tree-id48 . -40) (#("	" 0 1 (fontified nil)) . 1789) (undo-tree-id49 . -1) (1781 . 1789) 1782 (t 26103 51011 28593 350000)) nil (26103 51145 201750 650000) 0 nil])
([nil nil ((1781 . 1783) (#("	        " 0 1 (fontified nil) 1 9 (fontified nil)) . 1780) (undo-tree-id46 . -9) (undo-tree-id47 . -9) (1789 . 1790)) nil (26103 51145 201748 145000) 0 nil])
([nil nil ((1783 . 1789)) nil (26103 51145 201745 791000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -1788) (undo-tree-id45 . -1) 1789) nil (26103 51145 201744 889000) 0 nil])
([nil nil ((1788 . 1790)) nil (26103 51145 201743 617000) 0 nil])
([nil nil ((1789 . 1795)) nil (26103 51145 201742 735000) 0 nil])
([nil nil ((1796 . 1798)) nil (26103 51145 201742 94000) 0 nil])
([nil nil ((1798 . 1804)) nil (26103 51145 201741 573000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -1802) (undo-tree-id43 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -1803) (undo-tree-id44 . -1) 1804) nil (26103 51145 201740 731000) 0 nil])
([nil nil ((1802 . 1819)) nil (26103 51145 201738 667000) 0 nil])
([nil nil ((1819 . 1821)) nil (26103 51145 201738 76000) 0 nil])
([nil nil ((1821 . 1822)) nil (26103 51145 201737 455000) 0 nil])
([nil nil ((1822 . 1825)) nil (26103 51145 201736 774000) 0 nil])
([nil nil ((#("new Lista<>();
		" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face fontified t) 8 9 (face font-lock-type-face fontified t) 9 10 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 10 11 (category c->-as-paren-syntax fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 17 (fontified t)) . 1808) (undo-tree-id42 . -17)) nil (26103 51145 201735 842000) 0 nil])
([nil nil ((1808 . 1824)) nil (26103 51145 201734 650000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1822) (undo-tree-id40 . -1) (#("t" 0 1 (fontified t)) . -1823) (undo-tree-id41 . -1) 1824) nil (26103 51145 201733 828000) 0 nil])
([nil nil ((1822 . 1823)) nil (26103 51145 201731 895000) 0 nil])
([nil nil ((1823 . 1825)) nil (26103 51145 201731 253000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1808) (undo-tree-id35 . -1) (#("i" 0 1 (fontified t)) . -1809) (undo-tree-id36 . -1) (#("s" 0 1 (fontified t)) . -1810) (undo-tree-id37 . -1) (#("t" 0 1 (fontified t)) . -1811) (undo-tree-id38 . -1) (#("a" 0 1 (fontified t)) . -1812) (undo-tree-id39 . -1) 1813) nil (26103 51145 201730 51000) 0 nil])
([nil nil ((1808 . 1816)) nil (26103 51145 201725 653000) 0 nil])
([nil nil ((1827 . 1832)) nil (26103 51145 201725 142000) 0 nil])
([nil nil ((1832 . 1833)) nil (26103 51145 201724 391000) 0 nil])
([nil nil ((1833 . 1834)) nil (26103 51145 201723 609000) 0 nil])
([nil nil ((1834 . 1836)) nil (26103 51145 201722 988000) 0 nil])
([nil nil ((1835 . 1836)) nil (26103 51145 201722 327000) 0 nil])
([nil nil ((1836 . 1837)) nil (26103 51145 201721 766000) 0 nil])
([nil nil ((1837 . 1838)) nil (26103 51145 201721 14000) 0 nil])
([nil nil ((1839 . 1843)) nil (26103 51145 201720 313000) 0 nil])
([nil nil ((1843 . 1845)) nil (26103 51145 201719 101000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -1843) (undo-tree-id33 . -1) (#(")" 0 1 (fontified t)) . -1844) (undo-tree-id34 . -1) 1845) nil (26103 51145 201718 259000) 0 nil])
([nil nil ((1843 . 1845)) nil (26103 51145 201715 835000) 0 nil])
([nil nil ((1844 . 1846)) nil (26103 51145 201715 234000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1844) (undo-tree-id31 . -1) (#("a" 0 1 (fontified t)) . -1845) (undo-tree-id32 . -1) 1846) nil (26103 51145 201714 151000) 0 nil])
([nil nil ((1844 . 1846)) nil (26103 51145 201710 234000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1845) (undo-tree-id30 . -1) 1846) nil (26103 51145 201708 501000) 0 nil])
([nil nil ((1845 . 1855)) nil (26103 51145 201699 434000) 0 nil])
([nil nil ((1855 . 1857)) nil (26103 51145 201698 893000) 0 nil])
([nil nil ((1856 . 1857)) nil (26103 51145 201697 781000) 0 nil])
([nil nil ((1860 . 1861)) nil (26103 51145 201694 555000) 0 nil])
([nil nil ((#("
		Lista<String> ordenada = ordenada.mergeSort(lista, (a,b) -> {a.compareTo(b)});
" 0 1 (fontified t) 1 3 (fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face fontified t) 8 9 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 9 10 (face font-lock-type-face fontified t) 10 11 (face font-lock-type-face fontified t) 11 12 (face font-lock-type-face fontified t) 12 13 (face font-lock-type-face fontified t) 13 14 (face font-lock-type-face fontified t) 14 15 (face font-lock-type-face fontified t) 15 16 (c-type c-decl-id-start category c->-as-paren-syntax fontified t) 16 17 (fontified t) 17 18 (face font-lock-variable-name-face fontified t) 18 19 (face font-lock-variable-name-face fontified t) 19 20 (face font-lock-variable-name-face fontified t) 20 21 (face font-lock-variable-name-face fontified t) 21 22 (face font-lock-variable-name-face fontified t) 22 23 (face font-lock-variable-name-face fontified t) 23 24 (face font-lock-variable-name-face fontified t) 24 25 (face font-lock-variable-name-face fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t)) . 1780) (undo-tree-id56 . -82) (undo-tree-id57 . -28) (t 26103 51145 207709 227000)) nil (26103 51198 433421 720000) 0 nil])
([nil nil ((1780 . 1783)) nil (26103 51198 433419 877000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1860 . 1861) (nil fontified nil 1789 . 1861) (nil fontified nil 1788 . 1789) (nil category c->-as-paren-syntax 1788 . 1789) (nil fontified nil 1787 . 1788) (nil category c-<-as-paren-syntax 1787 . 1788) (nil fontified nil 1782 . 1787) (1782 . 1861)) nil (26103 51198 433418 754000) 0 nil])
([nil nil ((1781 . 1783) (#("	" 0 1 (fontified t)) . 1781) (undo-tree-id55 . -1)) nil (26103 51198 433416 610000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1841) (undo-tree-id53 . -1) (#(" " 0 1 (fontified t)) . -1842) (undo-tree-id54 . -1) 1843) nil (26103 51198 433414 827000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1855) (undo-tree-id51 . -1) (#("
" 0 1 (fontified t)) . -1856) (undo-tree-id52 . -1) 1857) nil (26103 51198 433411 10000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -1797) (undo-tree-id50 . -1) 1798) nil (26103 51198 433406 842000) 0 nil])
([nil nil ((1797 . 1798)) nil (26103 51198 433395 832000) 0 nil])
([nil nil ((1789 . 1795) (t 26103 51198 440711 265000)) nil (26103 51240 462997 842000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t)) . -1824) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("e" 0 1 (fontified t)) . -1825) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("s" 0 1 (fontified t)) . -1826) (undo-tree-id63 . -1) (#("o" 0 1 (fontified t)) . -1827) (undo-tree-id64 . -1) (#("r" 0 1 (fontified t)) . -1828) (undo-tree-id65 . -1) (#("d" 0 1 (fontified t)) . -1829) (undo-tree-id66 . -1) (#("e" 0 1 (fontified t)) . -1830) (undo-tree-id67 . -1) (#("n" 0 1 (fontified t)) . -1831) (undo-tree-id68 . -1) (#("a" 0 1 (fontified t)) . -1832) (undo-tree-id69 . -1) (#("d" 0 1 (fontified t)) . -1833) (undo-tree-id70 . -1) (#("a" 0 1 (fontified t)) . -1834) (undo-tree-id71 . -1) 1835) nil (26103 51240 462993 283000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1814) (undo-tree-id72 . -1) (undo-tree-id73 . -1) 1815 (t 26103 51240 470456 385000)) nil (26103 51823 211418 947000) 0 nil])
([nil nil ((1814 . 1815)) nil (26105 49262 474723 944000) 0 nil])
([nil nil ((#("
		Lista<String> ord = lista.mergeSort(lista, (a,b) -> {a.compareTo(b)});	
" 0 1 (fontified t) 1 3 (fontified t) 3 8 (face font-lock-type-face fontified t) 8 9 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 9 15 (face font-lock-type-face fontified t) 15 16 (c-type c-decl-id-start category c->-as-paren-syntax fontified t) 16 17 (fontified t) 17 20 (face font-lock-variable-name-face fontified t) 20 75 (fontified t)) . 1780) (undo-tree-id21 . -75) (undo-tree-id22 . -75) (undo-tree-id23 . -75) (t 26103 51823 220662 804000)) nil (26105 49325 604314 681000) 0 nil] [nil nil ((#("		Lista<String> ord = lista.mergeSort(lista, (a,b) -> {a.compareTo(b)});	
" 0 2 (fontified t) 2 7 (face font-lock-type-face fontified t) 7 8 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 8 14 (face font-lock-type-face fontified t) 14 15 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 15 16 (fontified t) 16 19 (face font-lock-variable-name-face fontified t) 19 74 (fontified t)) . 1781) (undo-tree-id11 . -67) (undo-tree-id12 . -74) (undo-tree-id13 . -67) (undo-tree-id14 . -74) (undo-tree-id15 . -74) (undo-tree-id16 . -74) (undo-tree-id17 . -67) (undo-tree-id18 . -67) (t 26103 51823 220662 804000)) ((1781 . 1855)) (26105 49262 52005 657000) 0 nil])
([nil nil ((1781 . 1783) (#("		" 0 2 (fontified nil)) . 1781) (1780 . 1781)) nil (26105 49325 604311 736000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1780) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 1781) ((1780 . 1781)) (26105 49262 51436 124000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1993 . 1994) (nil fontified nil 1991 . 1994) (nil fontified nil 1990 . 1991) (nil fontified nil 1988 . 1990) (nil fontified nil 1987 . 1988) (nil fontified nil 1986 . 1987) (nil fontified nil 1981 . 1986) (nil fontified nil 1980 . 1981) (nil fontified nil 1978 . 1980) (nil fontified nil 1977 . 1978) (nil fontified nil 1976 . 1977) (nil fontified nil 1975 . 1976) (nil fontified nil 1974 . 1975) (nil fontified nil 1973 . 1974) (nil fontified nil 1972 . 1973) (nil fontified nil 1971 . 1972) (nil fontified nil 1970 . 1971) (nil fontified nil 1969 . 1970) (nil fontified nil 1968 . 1969) (nil fontified nil 1967 . 1968) (nil fontified nil 1966 . 1967) (nil fontified nil 1962 . 1966) (nil fontified nil 1960 . 1962) (nil fontified nil 1959 . 1960) (nil fontified nil 1958 . 1959) (nil fontified nil 1957 . 1958) (nil fontified nil 1956 . 1957) (nil fontified nil 1955 . 1956) (nil fontified nil 1954 . 1955) (nil fontified nil 1953 . 1954) (nil fontified nil 1952 . 1953) (nil fontified nil 1951 . 1952) (nil fontified nil 1950 . 1951) (nil fontified nil 1944 . 1950) (nil fontified nil 1943 . 1944) (nil fontified nil 1942 . 1943) (nil fontified nil 1941 . 1942) (nil fontified nil 1940 . 1941) (nil fontified nil 1939 . 1940) (nil fontified nil 1938 . 1939) (nil fontified nil 1937 . 1938) (nil fontified nil 1936 . 1937) (nil fontified nil 1935 . 1936) (nil fontified nil 1934 . 1935) (nil fontified nil 1933 . 1934) (nil fontified nil 1932 . 1933) (nil fontified nil 1931 . 1932) (nil fontified nil 1930 . 1931) (nil fontified nil 1929 . 1930) (nil fontified nil 1928 . 1929) (nil fontified nil 1927 . 1928) (nil fontified nil 1926 . 1927) (nil fontified nil 1925 . 1926) (nil fontified nil 1924 . 1925) (nil fontified nil 1923 . 1924) (nil fontified nil 1922 . 1923) (nil fontified nil 1921 . 1922) (nil fontified nil 1920 . 1921) (nil fontified nil 1919 . 1920) (nil fontified nil 1918 . 1919) (nil fontified nil 1917 . 1918) (nil fontified nil 1916 . 1917) (nil fontified nil 1914 . 1916) (nil fontified nil 1913 . 1914) (nil fontified nil 1912 . 1913) (nil fontified nil 1911 . 1912) (nil fontified nil 1910 . 1911) (nil fontified nil 1909 . 1910) (nil fontified nil 1908 . 1909) (nil fontified nil 1907 . 1908) (nil fontified nil 1906 . 1907) (nil fontified nil 1905 . 1906) (nil fontified nil 1904 . 1905) (nil fontified nil 1903 . 1904) (nil fontified nil 1902 . 1903) (nil fontified nil 1901 . 1902) (nil fontified nil 1900 . 1901) (nil fontified nil 1899 . 1900) (nil fontified nil 1898 . 1899) (nil fontified nil 1897 . 1898) (nil fontified nil 1896 . 1897) (nil fontified nil 1895 . 1896) (nil fontified nil 1894 . 1895) (nil fontified nil 1893 . 1894) (nil fontified nil 1892 . 1893) (nil fontified nil 1891 . 1892) (nil fontified nil 1890 . 1891) (nil fontified nil 1889 . 1890) (nil fontified nil 1888 . 1889) (nil fontified nil 1887 . 1888) (nil fontified nil 1886 . 1887) (nil fontified nil 1885 . 1886) (nil fontified nil 1884 . 1885) (nil fontified nil 1883 . 1884) (nil fontified nil 1882 . 1883) (nil fontified nil 1881 . 1882) (nil fontified nil 1880 . 1881) (nil fontified nil 1879 . 1880) (nil fontified nil 1878 . 1879) (nil fontified nil 1877 . 1878) (nil fontified nil 1875 . 1877) (nil fontified nil 1874 . 1875) (nil fontified nil 1873 . 1874) (nil fontified nil 1872 . 1873) (nil fontified nil 1871 . 1872) (nil fontified nil 1870 . 1871) (nil fontified nil 1869 . 1870) (nil fontified nil 1868 . 1869) (nil fontified nil 1867 . 1868) (nil fontified nil 1866 . 1867) (nil fontified nil 1865 . 1866) (nil fontified nil 1864 . 1865) (nil fontified nil 1863 . 1864) (nil fontified nil 1862 . 1863) (nil fontified nil 1861 . 1862) (nil fontified nil 1860 . 1861) (nil fontified nil 1859 . 1860) (nil fontified nil 1858 . 1859) (nil fontified nil 1857 . 1858) (nil fontified nil 1856 . 1857) (nil fontified nil 1855 . 1856) (nil fontified nil 1854 . 1855) (nil fontified nil 1853 . 1854) (nil fontified nil 1852 . 1853) (nil fontified nil 1851 . 1852) (nil fontified nil 1850 . 1851) (nil fontified nil 1849 . 1850) (nil fontified nil 1848 . 1849) (nil fontified nil 1847 . 1848) (nil fontified nil 1846 . 1847) (nil fontified nil 1845 . 1846) (nil fontified nil 1844 . 1845) (nil fontified nil 1843 . 1844) (nil fontified nil 1842 . 1843) (nil fontified nil 1841 . 1842) (nil fontified nil 1840 . 1841) (nil fontified nil 1838 . 1840) (nil fontified nil 1837 . 1838) (nil fontified nil 1801 . 1837) (nil fontified nil 1798 . 1801) (nil fontified nil 1797 . 1798) (nil fontified nil 1796 . 1797) (nil category c->-as-paren-syntax 1796 . 1797) (nil fontified nil 1790 . 1796) (nil fontified nil 1789 . 1790) (nil category c-<-as-paren-syntax 1789 . 1790) (nil fontified nil 1784 . 1789) (nil fontified nil 1783 . 1784) (1783 . 1994)) nil (26105 49325 604306 295000) 0 nil])
nil
([nil nil ((1781 . 1783) (#("			" 0 2 (fontified t) 2 3 (fontified t)) . 1781) (undo-tree-id19 . -2) (undo-tree-id20 . -2) 1788) nil (26105 49325 604287 277000) 0 nil])
([nil nil ((1837 . 1840) (#("		" 0 2 (fontified t)) . 1837) 1843) nil (26105 49325 604277 527000) 0 nil])
([nil nil ((1875 . 1878) (#("		" 0 2 (fontified t)) . 1875) 1889) nil (26105 49325 604276 666000) 0 nil])
([nil nil ((1915 . 1918) (#("		" 0 2 (fontified t)) . 1915) 1937) nil (26105 49325 604275 564000) 0 nil])
([nil nil ((1946 . 1953) (#("		    " 0 6 (fontified t)) . 1946) 1960) nil (26105 49325 604274 311000) 0 nil])
([nil nil ((1963 . 1966) (#("		" 0 2 (fontified t)) . 1963) 1980) nil (26105 49325 604272 317000) 0 nil])
([nil nil ((1985 . 1991) (#("	    " 0 5 (fontified t)) . 1985) 1994) nil (26105 49373 111400 998000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1822) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("a" 0 1 (fontified t)) . -1823) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("," 0 1 (fontified t)) . -1824) (undo-tree-id83 . -1) 1825 (t 26105 49374 293877 433000)) nil (26105 49503 950694 224000) 0 nil] [nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -1489) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -1490) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -1491) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -1492) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -1493) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("g" 0 1 (face font-lock-type-face fontified t)) . -1494) (undo-tree-id61 . -1) (undo-tree-id62 . -1) 1495 (t 26105 49325 618310 414000)) ((1489 . 1495)) (26105 49371 174998 231000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -1818) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("l" 0 1 (fontified t)) . -1819) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("i" 0 1 (fontified t)) . -1820) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("s" 0 1 (fontified t)) . -1821) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 1822) nil (26105 49503 950689 364000) 0 nil])
([nil nil ((1489 . 1490)) ((#("T" 0 1 (face font-lock-type-face fontified t)) . 1489) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (t 26105 49365 109494 68000)) (26105 49365 102545 289000) 0 nil])
([nil nil ((1818 . 1819)) nil (26105 49503 950680 153000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -1819) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 1820) nil (26105 49503 950677 6000) 0 nil])
([nil nil ((1992 . 1994) (t 26105 49503 957667 677000)) nil (26105 49580 538290 201000) 0 nil])
([nil nil ((1994 . 1999)) nil (26105 49580 538289 400000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -1994) (undo-tree-id259 . -1) (#("i" 0 1 (fontified t)) . -1995) (undo-tree-id260 . -1) (#("s" 0 1 (fontified t)) . -1996) (undo-tree-id261 . -1) (#("r" 0 1 (fontified t)) . -1997) (undo-tree-id262 . -1) (#("a" 0 1 (fontified t)) . -1998) (undo-tree-id263 . -1) 1999) nil (26105 49580 538287 937000) 0 nil])
([nil nil ((1994 . 2000)) nil (26105 49580 538283 209000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -1998) (undo-tree-id257 . -1) (#("o" 0 1 (fontified t)) . -1999) (undo-tree-id258 . -1) 2000) nil (26105 49580 538282 88000) 0 nil])
([nil nil ((1998 . 2001)) nil (26105 49580 538279 714000) 0 nil])
([nil nil ((2001 . 2006)) nil (26105 49580 538279 133000) 0 nil])
([nil nil ((2006 . 2008)) nil (26105 49580 538278 562000) 0 nil])
([nil nil ((2008 . 2009)) nil (26105 49580 538277 931000) 0 nil])
([nil nil ((1994 . 2001)) nil (26105 49580 538277 230000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -2000) (undo-tree-id255 . -1) (undo-tree-id256 . -1) 2001) nil (26105 49580 538276 78000) 0 nil])
([nil nil ((2000 . 2008)) nil (26105 49580 538273 323000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -1994) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("y" 0 1 (fontified t)) . -1995) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("s" 0 1 (fontified t)) . -1996) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#("t" 0 1 (fontified t)) . -1997) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("e" 0 1 (fontified t)) . -1998) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("m" 0 1 (fontified t)) . -1999) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("." 0 1 (fontified t)) . -2000) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#("o" 0 1 (fontified t)) . -2001) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#("u" 0 1 (fontified t)) . -2002) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (#("t" 0 1 (fontified t)) . -2003) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (#("." 0 1 (fontified t)) . -2004) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (#("p" 0 1 (fontified t)) . -2005) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (#("r" 0 1 (fontified t)) . -2006) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (#("o" 0 1 (fontified t)) . -2007) (undo-tree-id253 . -1) (undo-tree-id254 . -1) 2008) nil (26105 49580 538263 637000) 0 nil])
([nil nil ((1994 . 2012) (t 26105 49580 547202 386000)) nil (26105 49601 259484 303000) 0 nil])
([nil nil ((2012 . 2013)) nil (26105 49601 259482 580000) 0 nil])
([nil nil ((2027 . 2028)) nil (26105 49601 259478 584000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . 2028) (t 26105 49601 268915 336000)) nil (26105 49602 606703 93000) 0 nil])
([nil nil ((2028 . 2029) (t 26105 49602 615243 841000)) nil (26105 49613 552104 667000) 0 nil])
([nil nil ((#("String s = a.replaceAll(\"á\", \"a\");
			String sdos = a.replaceAll(\" \", \"\");
			if(a.length() > b.length())
			    return 1;
			else return -1;" 0 1 (face font-lock-type-face fontified nil) 1 2 (face font-lock-type-face fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face fontified nil) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified nil) 6 7 (fontified nil) 7 8 (face font-lock-variable-name-face fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil) 17 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil) 21 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil) 24 25 (face font-lock-string-face fontified nil) 25 26 (face font-lock-string-face fontified nil) 26 27 (face font-lock-string-face fontified nil) 27 28 (fontified nil) 28 29 (fontified nil) 29 30 (face font-lock-string-face fontified nil) 30 31 (face font-lock-string-face fontified nil) 31 32 (face font-lock-string-face fontified nil) 32 33 (fontified nil) 33 34 (fontified nil) 34 35 (fontified nil) 35 38 (fontified t) 38 39 (face font-lock-type-face fontified t) 39 40 (face font-lock-type-face fontified t) 40 41 (face font-lock-type-face fontified t) 41 42 (face font-lock-type-face fontified t) 42 43 (face font-lock-type-face fontified t) 43 44 (face font-lock-type-face c-type c-decl-id-start fontified t) 44 45 (fontified t) 45 46 (face font-lock-variable-name-face fontified t) 46 47 (face font-lock-variable-name-face fontified t) 47 48 (face font-lock-variable-name-face fontified t) 48 49 (face font-lock-variable-name-face fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (face font-lock-string-face fontified t) 66 67 (face font-lock-string-face fontified t) 67 68 (face font-lock-string-face fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (face font-lock-string-face fontified t) 71 72 (face font-lock-string-face fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 78 (fontified t) 78 79 (face font-lock-keyword-face fontified t) 79 80 (face font-lock-keyword-face fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t) 105 106 (fontified t) 106 113 (fontified t) 113 114 (face font-lock-keyword-face fontified t) 114 115 (face font-lock-keyword-face fontified t) 115 116 (face font-lock-keyword-face fontified t) 116 117 (face font-lock-keyword-face fontified t) 117 118 (face font-lock-keyword-face fontified t) 118 119 (face font-lock-keyword-face fontified t) 119 120 (fontified t) 120 121 (fontified t) 121 122 (fontified t) 122 123 (fontified t) 123 126 (fontified t) 126 130 (face font-lock-keyword-face fontified t) 130 131 (fontified t) 131 132 (face font-lock-keyword-face fontified t) 132 133 (face font-lock-keyword-face fontified t) 133 134 (face font-lock-keyword-face fontified t) 134 135 (face font-lock-keyword-face fontified t) 135 136 (face font-lock-keyword-face fontified t) 136 137 (face font-lock-keyword-face fontified t) 137 138 (fontified t) 138 139 (fontified t) 139 140 (fontified t) 140 141 (fontified t)) . 1840) (undo-tree-id268 . -141) (undo-tree-id269 . -99) (#("	" 0 1 (fontified nil)) . 1840) (undo-tree-id270 . -1) (1832 . 1840) 1833 (t 26105 49613 559110 277000)) nil (26105 50384 391312 201000) 0 nil])
([nil nil ((1840 . 1841)) nil (26105 50384 391309 206000) 0 nil])
([nil nil ((1841 . 1842)) nil (26105 50384 391308 645000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1841) (undo-tree-id267 . -1) 1842) nil (26105 50384 391307 934000) 0 nil])
([nil nil ((1841 . 1847)) nil (26105 50384 391306 191000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1845) (undo-tree-id265 . -1) (#("a" 0 1 (fontified t)) . -1846) (undo-tree-id266 . -1) 1847) nil (26105 50384 391305 209000) 0 nil])
([nil nil ((1845 . 1851)) nil (26105 50384 391302 634000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t)) . -1850) (undo-tree-id264 . -1) 1851) nil (26105 50384 391301 72000) 0 nil])
([nil nil ((1850 . 1851)) nil (26105 50384 391292 56000) 0 nil])
([nil nil ((1851 . 1853)) nil (26105 50384 391291 245000) 0 nil])
([nil nil ((1852 . 1853)) nil (26105 50384 391289 822000) 0 nil])
([nil nil ((1854 . 1855)) nil (26105 50384 391286 156000) 0 nil])
([nil nil ((1856 . 1859) (#("		" 0 2 (fontified t)) . -1856) (undo-tree-id290 . -2) (undo-tree-id291 . -2) 1858 (t 26105 50384 401183 283000)) nil (26105 50415 220397 89000) 0 nil])
([nil nil ((1859 . 1864)) nil (26105 50415 220394 975000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1862) (undo-tree-id288 . -1) (#("r" 0 1 (fontified t)) . -1863) (undo-tree-id289 . -1) 1864) nil (26105 50415 220394 72000) 0 nil])
([nil nil ((1862 . 1867)) nil (26105 50415 220392 98000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1866) (undo-tree-id287 . -1) 1867) nil (26105 50415 220391 366000) 0 nil])
([nil nil ((1866 . 1867)) nil (26105 50415 220390 93000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1859) (undo-tree-id279 . -1) (#("e" 0 1 (fontified t)) . -1860) (undo-tree-id280 . -1) (#("t" 0 1 (fontified t)) . -1861) (undo-tree-id281 . -1) (#("u" 0 1 (fontified t)) . -1862) (undo-tree-id282 . -1) (#("r" 0 1 (fontified t)) . -1863) (undo-tree-id283 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -1864) (undo-tree-id284 . -1) (#(" " 0 1 (fontified t)) . -1865) (undo-tree-id285 . -1) (#("=" 0 1 (fontified t)) . -1866) (undo-tree-id286 . -1) 1867) nil (26105 50415 220388 349000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1863) (undo-tree-id275 . -1) (#(" " 0 1 (fontified t)) . -1864) (undo-tree-id276 . -1) (#(" " 0 1 (fontified nil)) . -1865) (undo-tree-id277 . -1) (#("	" 0 1 (fontified nil)) . 1866) (undo-tree-id278 . -1) (1858 . 1866) 1859) nil (26105 50415 220381 504000) 0 nil])
([nil nil ((1840 . 1847)) nil (26105 50415 220933 104000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1865) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (#(" " 0 1 (fontified t)) . -1866) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (#(" " 0 1 (fontified t)) . -1867) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (#(" " 0 1 (fontified t)) . -1868) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (#(" " 0 1 (fontified t)) . -1869) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) 1870) nil (26105 50419 239693 519000) 0 nil] [nil nil ((#("b);
		     " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 6 (fontified t) 6 11 (fontified t)) . -1859) (undo-tree-id271 . -11) (undo-tree-id272 . -4) (undo-tree-id273 . -4) (undo-tree-id274 . -11) 1870) ((1859 . 1870)) (26105 50415 220371 841000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1864) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (#(" " 0 1 (fontified t)) . -1865) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (#(" " 0 1 (fontified t)) . -1866) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (#(" " 0 1 (fontified t)) . -1867) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (#(" " 0 1 (fontified t)) . -1868) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (#(" " 0 1 (fontified t)) . -1869) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (#(" " 0 1 (fontified t)) . -1870) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (#(" " 0 1 (fontified nil)) . -1871) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (#("	" 0 1 (fontified nil)) . 1872) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (1864 . 1872) 1865) nil (26105 50419 239674 506000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -1863) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (#(" " 0 1 (fontified t)) . -1864) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (#(" " 0 1 (fontified t)) . -1865) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (#(" " 0 1 (fontified t)) . -1866) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (#(" " 0 1 (fontified t)) . -1867) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (#(" " 0 1 (fontified t)) . -1868) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (#(" " 0 1 (fontified t)) . -1869) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (#(" " 0 1 (fontified nil)) . -1870) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (#("	" 0 1 (fontified nil)) . 1871) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (1863 . 1871) 1864) nil (26105 50419 239606 741000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1862) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) 1863) nil (26105 50419 239486 436000) 0 nil])
([nil nil ((1831 . 1834) (#("		        " 0 2 (fontified nil) 2 10 (fontified nil)) . 1830) (undo-tree-id641 . -10) (undo-tree-id642 . -10) (undo-tree-id643 . -10) (1840 . 1841) (t 26105 50419 248232 686000)) nil (26105 51216 686039 576000) 0 nil])
([nil nil ((1830 . 1833)) nil (26105 51216 686036 791000) 0 nil])
([nil nil ((1833 . 1836)) nil (26105 51216 686036 260000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1835) (undo-tree-id640 . -1) 1836) nil (26105 51216 686035 429000) 0 nil])
([nil nil ((1835 . 1855)) nil (26105 51216 686034 86000) 0 nil])
([nil nil ((1855 . 1856)) nil (26105 51216 686033 575000) 0 nil])
([nil nil ((1856 . 1858)) nil (26105 51216 686033 4000) 0 nil])
([nil nil ((1857 . 1859)) nil (26105 51216 686032 243000) 0 nil])
([nil nil ((#("replaceAll(\"\")" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (face font-lock-string-face fontified t) 12 13 (face font-lock-string-face fontified t) 13 14 (fontified t)) . 1846) (undo-tree-id639 . -14)) nil (26105 51216 686031 591000) 0 nil])
([nil nil ((1846 . 1848)) nil (26105 51216 686029 968000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -1846) (undo-tree-id637 . -1) (#("o" 0 1 (fontified t)) . -1847) (undo-tree-id638 . -1) 1848) nil (26105 51216 686029 27000) 0 nil])
([nil nil ((1846 . 1857)) nil (26105 51216 686026 903000) 0 nil])
([nil nil ((#("toLowerCase" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . -1846) (undo-tree-id636 . -11) 1857) nil (26105 51216 686025 941000) 0 nil])
([nil nil ((#("a." 0 1 (fontified t) 1 2 (fontified t)) . -1844) (undo-tree-id634 . -2) (undo-tree-id635 . -2) 1846) nil (26105 51216 686024 228000) 0 nil])
([nil nil ((1844 . 1847)) nil (26105 51216 686005 52000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t)) . -1845) (undo-tree-id632 . -1) (#("r" 0 1 (fontified t)) . -1846) (undo-tree-id633 . -1) 1847) nil (26105 51216 686004 240000) 0 nil])
([nil nil ((1845 . 1849)) nil (26105 51216 686002 277000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1848) (undo-tree-id631 . -1) 1849) nil (26105 51216 686001 475000) 0 nil])
([nil nil ((1848 . 1854)) nil (26105 51216 686000 293000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1850) (undo-tree-id627 . -1) (#("i" 0 1 (fontified t)) . -1851) (undo-tree-id628 . -1) (#("z" 0 1 (fontified t)) . -1852) (undo-tree-id629 . -1) (#("e" 0 1 (fontified t)) . -1853) (undo-tree-id630 . -1) 1854) nil (26105 51216 685998 610000) 0 nil])
([nil nil ((1850 . 1854)) nil (26105 51216 685995 264000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1849) (undo-tree-id622 . -1) (#("z" 0 1 (fontified t)) . -1850) (undo-tree-id623 . -1) (#("i" 0 1 (fontified t)) . -1851) (undo-tree-id624 . -1) (#("e" 0 1 (fontified t)) . -1852) (undo-tree-id625 . -1) (#("r" 0 1 (fontified t)) . -1853) (undo-tree-id626 . -1) 1854) nil (26105 51216 685994 61000) 0 nil])
([nil nil ((1849 . 1852)) nil (26105 51216 685989 753000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1851) (undo-tree-id621 . -1) 1852) nil (26105 51216 685988 641000) 0 nil])
([nil nil ((1851 . 1854)) nil (26105 51216 685987 259000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1853) (undo-tree-id620 . -1) 1854) nil (26105 51216 685986 387000) 0 nil])
([nil nil ((1853 . 1854)) nil (26105 51216 685984 704000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1853) (undo-tree-id619 . -1) 1854) nil (26105 51216 685983 682000) 0 nil])
([nil nil ((1853 . 1854)) nil (26105 51216 685981 358000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1852) (undo-tree-id617 . -1) (#("r" 0 1 (fontified t)) . -1853) (undo-tree-id618 . -1) 1854) nil (26105 51216 685979 94000) 0 nil])
([nil nil ((1852 . 1854)) nil (26105 51216 685969 285000) 0 nil])
([nil nil ((1854 . 1864)) nil (26105 51216 685968 654000) 0 nil])
([nil nil ((186 . 187)) nil (26105 51216 685967 402000) 0 nil])
([nil nil ((nil rear-nonsticky nil 213 . 214) (nil fontified nil 186 . 214) (186 . 214)) nil (26105 51216 685963 474000) 0 nil])
([nil nil ((1893 . 1895) (t 26105 51216 695220 239000)) nil (26105 52548 861879 730000) 0 nil])
([nil nil ((1894 . 1896)) nil (26105 52548 861878 929000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1894) (undo-tree-id668 . -1) (#("s" 0 1 (fontified t)) . -1895) (undo-tree-id669 . -1) 1896) nil (26105 52548 861878 167000) 0 nil])
([nil nil ((1894 . 1895)) nil (26105 52548 861876 304000) 0 nil])
([nil nil ((1895 . 1896)) nil (26105 52548 861875 783000) 0 nil])
([nil nil ((1896 . 1897)) nil (26105 52548 861875 302000) 0 nil])
([nil nil ((1897 . 1901)) nil (26105 52548 861874 811000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t)) . -1898) (undo-tree-id665 . -1) (#("r" 0 1 (fontified t)) . -1899) (undo-tree-id666 . -1) (#("t" 0 1 (fontified t)) . -1900) (undo-tree-id667 . -1) 1901) nil (26105 52548 861873 909000) 0 nil])
([nil nil ((#("String s = Normalizer.normalize(s, N)
			" 0 1 (face font-lock-type-face fontified nil) 1 2 (face font-lock-type-face fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face fontified nil) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified nil) 6 7 (fontified nil) 7 8 (face font-lock-variable-name-face fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil) 17 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil) 21 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil) 24 25 (fontified nil) 25 26 (fontified nil) 26 27 (fontified nil) 27 28 (fontified nil) 28 29 (fontified nil) 29 30 (fontified nil) 30 31 (fontified nil) 31 32 (fontified nil) 32 33 (fontified nil) 33 34 (fontified nil) 34 35 (fontified nil) 35 36 (fontified nil) 36 37 (fontified nil) 37 38 (fontified nil) 38 41 (fontified t)) . 1869) (undo-tree-id662 . -41) (undo-tree-id663 . -11) (#("	" 0 1 (fontified nil)) . 1869) (undo-tree-id664 . -1) (1861 . 1869) 1862) nil (26105 52548 861871 114000) 0 nil])
([nil nil ((1860 . 1863) (#("		        " 0 2 (fontified nil) 2 10 (fontified nil)) . 1859) (undo-tree-id659 . -10) (undo-tree-id660 . -10) (undo-tree-id661 . -10) (1869 . 1870)) nil (26105 52548 861868 489000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1921 . 1922) (nil fontified nil 1859 . 1922) (1859 . 1922)) nil (26105 52548 861866 105000) 0 nil])
([nil nil ((1859 . 1862)) nil (26105 52548 861865 303000) 0 nil])
([nil nil ((1862 . 1869)) nil (26105 52548 861864 762000) 0 nil])
([nil nil ((1932 . 1936)) nil (26105 52548 861864 231000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2008 . 2009) (nil fontified nil 1933 . 2009) (1933 . 2009)) nil (26105 52548 861863 560000) 0 nil])
([nil nil ((1933 . 1936)) nil (26105 52548 861862 809000) 0 nil])
([nil nil ((1936 . 1937)) nil (26105 52548 861862 207000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -1936) (undo-tree-id658 . -1) 1937) nil (26105 52548 861861 416000) 0 nil])
([nil nil ((1936 . 1937)) nil (26105 52548 861860 104000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1936) (undo-tree-id657 . -1) 1937) nil (26105 52548 861859 472000) 0 nil])
([nil nil ((1936 . 1941)) nil (26105 52548 861858 20000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1936) (undo-tree-id652 . -1) (#("T" 0 1 (fontified t)) . -1937) (undo-tree-id653 . -1) (#("R" 0 1 (fontified t)) . -1938) (undo-tree-id654 . -1) (#("I" 0 1 (fontified t)) . -1939) (undo-tree-id655 . -1) (#("N" 0 1 (fontified t)) . -1940) (undo-tree-id656 . -1) 1941) nil (26105 52548 861856 908000) 0 nil])
([nil nil ((1936 . 1943)) nil (26105 52591 727545 835000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1901) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (#("e" 0 1 (fontified t)) . -1902) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (#("x" 0 1 (fontified t)) . -1903) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (#("t" 0 1 (fontified t)) . -1904) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (#("o" 0 1 (fontified t)) . -1905) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (#("U" 0 1 (fontified t)) . -1906) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (#("n" 0 1 (fontified t)) . -1907) (undo-tree-id713 . -1) (#("o" 0 1 (fontified t)) . -1908) (undo-tree-id714 . -1) 1909) nil (26105 52629 421467 143000) 0 nil] [nil nil ((#("String textoUnoNFD = textoUno.replaceAll(\"[\\\\p{InCombiningDiacriticalMarks}]\", \"\");			
			" 0 1 (face font-lock-type-face fontified nil) 1 2 (face font-lock-type-face fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face fontified nil) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified nil) 6 7 (fontified nil) 7 18 (face font-lock-variable-name-face fontified nil) 18 20 (fontified nil) 20 41 (fontified nil) 41 77 (face font-lock-string-face fontified nil) 77 79 (fontified nil) 79 81 (face font-lock-string-face fontified nil) 81 82 (fontified nil) 82 83 (fontified nil rear-nonsticky t) 83 86 (fontified nil) 86 87 (fontified nil) 87 90 (fontified t)) . 1943) (undo-tree-id650 . -90) (#("	" 0 1 (fontified nil)) . 1943) (undo-tree-id651 . -1) (1935 . 1943) 1936) ((#("        " 0 8 (fontified nil)) . 1935) (undo-tree-id685 . -8) (1943 . 1944) (1943 . 2033)) (26105 52591 510444 446000) 0 nil])
([nil nil ((1901 . 1903)) nil (26105 52629 421439 913000) 0 nil])
([nil nil ((#("Normalizer.normalize(textoUno, Normalizer.Form.NFD);" 0 31 (fontified t) 31 41 (face font-lock-constant-face fontified t) 41 42 (fontified t) 42 46 (face font-lock-constant-face fontified t) 46 51 (fontified t) 51 52 (fontified t rear-nonsticky t)) . 1880) (undo-tree-id649 . -52)) ((1880 . 1932)) (26105 52591 236638 379000) 0 nil])
([nil nil ((1903 . 1907)) nil (26105 52629 421438 490000) 0 nil])
([nil nil ((1880 . 1884)) ((#("a.To" 0 1 (face font-lock-constant-face fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 1880) (undo-tree-id679 . -4) (undo-tree-id680 . -2) (undo-tree-id681 . -2) (undo-tree-id682 . -2) (undo-tree-id683 . -2) (undo-tree-id684 . -4)) (26105 52591 3138 516000) 0 nil])
([nil nil ((1907 . 1909)) nil (26105 52818 294748 975000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -1882) (undo-tree-id647 . -1) (#("o" 0 1 (fontified t)) . -1883) (undo-tree-id648 . -1) 1884) ((1882 . 1884)) (26105 52590 705137 96000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2033) (undo-tree-id726 . -1) 2034 (t 26105 52629 429475 602000)) nil (26105 52857 380692 648000) 0 nil] [nil nil ((#("String textoUno = Normalizer.normalize(a.trim(), Normalizer.Form.NFD);
			String textoUnoNFD = textoUno.replaceAll(\"[\\\\p{InCombiningDiacriticalMarks}]\", \"\");			
			" 0 1 (face font-lock-type-face fontified nil) 1 2 (face font-lock-type-face fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face fontified nil) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified nil) 6 7 (fontified nil) 7 15 (face font-lock-variable-name-face fontified nil) 15 17 (fontified nil) 17 18 (fontified nil) 18 39 (fontified nil) 39 40 (fontified nil) 40 41 (fontified nil) 41 42 (fontified nil) 42 43 (fontified nil) 43 44 (fontified nil) 44 45 (fontified nil) 45 46 (fontified nil) 46 47 (fontified nil) 47 48 (fontified nil) 48 49 (fontified nil) 49 59 (face font-lock-constant-face fontified nil) 59 60 (fontified nil) 60 64 (face font-lock-constant-face fontified nil) 64 69 (fontified nil) 69 70 (fontified nil rear-nonsticky t) 70 71 (fontified nil) 71 73 (fontified t) 73 74 (fontified t) 74 75 (face font-lock-type-face fontified t) 75 76 (face font-lock-type-face fontified t) 76 77 (face font-lock-type-face fontified t) 77 78 (face font-lock-type-face fontified t) 78 79 (face font-lock-type-face fontified t) 79 80 (face font-lock-type-face c-type c-decl-id-start fontified t) 80 81 (fontified t) 81 92 (face font-lock-variable-name-face fontified t) 92 94 (fontified t) 94 115 (fontified t) 115 151 (face font-lock-string-face fontified t) 151 153 (fontified t) 153 155 (face font-lock-string-face fontified t) 155 156 (fontified t) 156 157 (fontified t rear-nonsticky t) 157 160 (fontified t) 160 161 (fontified t) 161 164 (fontified t)) . 1869) (undo-tree-id715 . -164) (undo-tree-id716 . -71) (undo-tree-id717 . -73) (undo-tree-id718 . -70) (#("	" 0 1 (fontified nil)) . 1869) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (1861 . 1869) 1862 (t 26105 52629 429475 602000)) ((#("        " 0 8 (fontified nil)) . 1861) (1869 . 1870) (1869 . 2033)) (26105 52818 293068 622000) 0 nil])
([nil nil ((1882 . 1888)) ((#("toLoew" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 1882) (undo-tree-id675 . -6) (undo-tree-id676 . -4) (undo-tree-id677 . -4) (undo-tree-id678 . -6)) (26105 52590 463362 888000) 0 nil])
([nil nil ((2033 . 2041)) nil (26105 52857 380691 45000) 0 nil])
nil
([nil nil ((#("e" 0 1 (fontified t)) . -1886) (undo-tree-id645 . -1) (#("w" 0 1 (fontified t)) . -1887) (undo-tree-id646 . -1) 1888) ((1886 . 1888)) (26105 52590 201975 120000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -2040) (undo-tree-id725 . -1) 2041) nil (26105 52857 380690 363000) 0 nil])
([nil nil ((1886 . 1893)) ((#("werCase" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 1886) (undo-tree-id673 . -7) (undo-tree-id674 . -7)) (26105 52589 957290 581000) 0 nil])
([nil nil ((2040 . 2041)) nil (26105 52857 380689 1000) 0 nil])
([nil nil ((1893 . 1895)) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 1893) (undo-tree-id672 . -2)) (26105 52589 505079 894000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -2039) (undo-tree-id723 . -1) (#("O" 0 1 (fontified t)) . -2040) (undo-tree-id724 . -1) 2041) nil (26105 52857 380687 678000) 0 nil])
([nil nil ((1895 . 1896)) ((#(";" 0 1 (fontified t)) . 1895)) (26105 52589 245167 36000) 0 nil])
([nil nil ((2039 . 2043)) nil (26105 52857 380684 563000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1914) (undo-tree-id644 . -1) 1915) ((1914 . 1915)) (26105 52588 976879 460000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t)) . -2042) (undo-tree-id721 . -1) (undo-tree-id722 . -1) 2043) nil (26105 52857 380682 349000) 0 nil])
([nil nil ((1914 . 1921)) ((#("texoUno" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 1914) (undo-tree-id670 . -3) (undo-tree-id671 . -3)) (26105 52588 567012 257000) 0 nil])
([nil nil ((2042 . 2044)) nil (26105 52857 380670 186000) 0 nil])
([nil nil ((1917 . 1918) (t 26105 52548 867219 418000)) ((#("t" 0 1 (fontified t)) . 1917) (t 26105 52561 7084 906000)) (26105 52560 997141 588000) 0 nil])
([nil nil ((2023 . 2024) (t 26105 52857 391448 44000)) nil (26105 52953 80990 878000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 2186 . 2187) (nil fontified nil 2186 . 2187) (nil fontified nil 2183 . 2186) (nil fontified nil 2182 . 2183) (nil fontified nil 2181 . 2182) (nil fontified nil 2179 . 2181) (nil fontified nil 2177 . 2179) (nil fontified nil 2141 . 2177) (nil fontified nil 2120 . 2141) (nil fontified nil 2118 . 2120) (nil fontified nil 2107 . 2118) (nil fontified nil 2106 . 2107) (nil fontified nil 2105 . 2106) (nil fontified nil 2104 . 2105) (nil fontified nil 2103 . 2104) (nil fontified nil 2102 . 2103) (nil fontified nil 2101 . 2102) (nil fontified nil 2100 . 2101) (nil fontified nil 2099 . 2100) (nil fontified nil 2097 . 2099) (nil fontified nil 2096 . 2097) (nil fontified nil 2095 . 2096) (nil fontified nil 2090 . 2095) (nil fontified nil 2086 . 2090) (nil fontified nil 2085 . 2086) (nil fontified nil 2075 . 2085) (nil fontified nil 2074 . 2075) (nil fontified nil 2073 . 2074) (nil fontified nil 2072 . 2073) (nil fontified nil 2071 . 2072) (nil fontified nil 2070 . 2071) (nil fontified nil 2069 . 2070) (nil fontified nil 2068 . 2069) (nil fontified nil 2067 . 2068) (nil fontified nil 2066 . 2067) (nil fontified nil 2065 . 2066) (nil fontified nil 2044 . 2065) (nil fontified nil 2043 . 2044) (nil fontified nil 2041 . 2043) (nil fontified nil 2033 . 2041) (nil fontified nil 2032 . 2033) (nil fontified nil 2031 . 2032) (nil fontified nil 2030 . 2031) (nil fontified nil 2029 . 2030) (nil fontified nil 2028 . 2029) (nil fontified nil 2027 . 2028) (nil fontified nil 2026 . 2027) (nil fontified nil 2025 . 2026) (nil fontified nil 2023 . 2025) (2023 . 2187)) nil (26105 52953 80988 694000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2065) (undo-tree-id749 . -1) 2066) nil (26105 52953 80982 823000) 0 nil])
([nil nil ((2065 . 2066)) nil (26105 52953 80981 591000) 0 nil])
([nil nil ((#("U" 0 1 (face font-lock-variable-name-face fontified t)) . -2038) (undo-tree-id746 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -2039) (undo-tree-id747 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2040) (undo-tree-id748 . -1) 2041) nil (26105 52953 80980 449000) 0 nil])
([nil nil ((2038 . 2041)) nil (26105 52953 80977 964000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -2038) (undo-tree-id743 . -1) (#("O" 0 1 (face font-lock-variable-name-face fontified t)) . -2039) (undo-tree-id744 . -1) (#("S" 0 1 (face font-lock-variable-name-face fontified t)) . -2040) (undo-tree-id745 . -1) 2041) nil (26105 52953 80976 963000) 0 nil])
([nil nil ((2038 . 2041)) nil (26105 52953 80974 448000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -2113) (undo-tree-id741 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2114) (undo-tree-id742 . -1) 2115) nil (26105 52953 80973 737000) 0 nil])
([nil nil ((2113 . 2114)) nil (26105 52953 80971 613000) 0 nil])
([nil nil ((#("U" 0 1 (face font-lock-variable-name-face fontified t)) . -2112) (undo-tree-id739 . -1) (#("D" 0 1 (face font-lock-variable-name-face fontified t)) . -2113) (undo-tree-id740 . -1) 2114) nil (26105 52953 80970 871000) 0 nil])
([nil nil ((2112 . 2116)) nil (26105 52953 80967 876000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -2114) (undo-tree-id737 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -2115) (undo-tree-id738 . -1) 2116) nil (26105 52953 80967 94000) 0 nil])
([nil nil ((2114 . 2115)) nil (26105 52953 80965 311000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -2220) (undo-tree-id736 . -1) 2221) nil (26105 52953 80964 630000) 0 nil])
([nil nil ((2220 . 2223)) nil (26105 52953 80963 428000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2222) (undo-tree-id735 . -1) 2223) nil (26105 52953 80962 736000) 0 nil])
([nil nil ((2222 . 2225)) nil (26105 52953 80961 364000) 0 nil])
([nil nil ((2225 . 2227)) nil (26105 52953 80960 743000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -2225) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (#("S" 0 1 (fontified t)) . -2226) (undo-tree-id733 . -1) (undo-tree-id734 . -1) 2227) nil (26105 52953 80959 290000) 0 nil])
([nil nil ((2225 . 2230)) nil (26105 52953 80953 780000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t)) . -2229) (undo-tree-id727 . -1) (undo-tree-id728 . -1) 2230) nil (26105 52953 80951 666000) 0 nil])
([nil nil ((2229 . 2231)) nil (26105 52953 80938 962000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t)) . -2065) (undo-tree-id752 . -1) (undo-tree-id753 . -1) 2066 (t 26105 52953 89047 472000)) nil (26105 52967 550625 496000) 0 nil])
([nil nil ((2065 . 2066)) nil (26105 52967 550622 701000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t)) . -2065) (undo-tree-id750 . -1) (undo-tree-id751 . -1) 2066) nil (26105 52967 550620 647000) 0 nil])
([nil nil ((2065 . 2066)) nil (26105 52967 550608 804000) 0 nil])
([nil nil ((1859 . 1860) (t 26105 52967 559429 113000)) nil (26105 53113 97283 488000) 0 nil])
([nil nil ((1860 . 1861)) nil (26105 53113 97282 686000) 0 nil])
([nil nil ((2186 . 2187)) nil (26105 53113 97282 175000) 0 nil])
([nil nil ((2187 . 2188)) nil (26105 53113 97281 634000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2224) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (#("e" 0 1 (fontified t)) . -2225) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (#("x" 0 1 (fontified t)) . -2226) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (#("t" 0 1 (fontified t)) . -2227) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (#("o" 0 1 (fontified t)) . -2228) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (#("D" 0 1 (fontified t)) . -2229) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (#("o" 0 1 (fontified t)) . -2230) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (#("s" 0 1 (fontified t)) . -2231) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (#("N" 0 1 (fontified t)) . -2232) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (#("F" 0 1 (fontified t)) . -2233) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (#("D" 0 1 (fontified t)) . -2234) (undo-tree-id864 . -1) 2235) nil (26105 53113 97278 128000) 0 nil])
([nil nil ((2224 . 2225)) nil (26105 53113 97219 126000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -2206) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (#("U" 0 1 (fontified t)) . -2207) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (#("n" 0 1 (fontified t)) . -2208) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (#("o" 0 1 (fontified t)) . -2209) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (#("N" 0 1 (fontified t)) . -2210) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (#("F" 0 1 (fontified t)) . -2211) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (#("D" 0 1 (fontified t)) . -2212) (undo-tree-id798 . -1) (undo-tree-id799 . -1) 2213) nil (26105 53113 97216 691000) 0 nil])
([nil nil ((#("text" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -2202) (undo-tree-id756 . -4) (undo-tree-id757 . -4) (undo-tree-id758 . -4) (undo-tree-id759 . -4) (undo-tree-id760 . -4) (undo-tree-id761 . -4) (undo-tree-id762 . -4) (undo-tree-id763 . -4) (undo-tree-id764 . -4) 2206) nil (26105 53113 97196 52000) 0 nil])
([nil nil ((2202 . 2203)) nil (26105 53113 97187 596000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -2202) (undo-tree-id754 . -1) (undo-tree-id755 . -1) 2203) nil (26105 53113 97185 512000) 0 nil])
([nil nil ((2202 . 2203)) nil (26105 53113 97172 768000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t)) . -2214) (undo-tree-id865 . -1) (undo-tree-id866 . -1) 2215 (t 26105 53113 103211 759000)) nil (26105 53125 756064 738000) 0 nil])
([nil nil ((2214 . 2215)) nil (26105 53125 756051 103000) 0 nil])
([nil nil ((#("*" 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -1860) (undo-tree-id876 . -1) 1861 (t 26105 53125 760117 263000)) nil (26105 53169 749838 609000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1859) (undo-tree-id875 . -1) 1860) nil (26105 53169 749836 44000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -2184) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (#("/" 0 1 (fontified t)) . -2185) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) 2186) nil (26105 53169 749830 884000) 0 nil])
([nil nil ((1859 . 1860) (t 26105 53169 757516 122000)) nil (26105 53271 902112 868000) 0 nil])
([nil nil ((1860 . 1861)) nil (26105 53271 902112 87000) 0 nil])
([nil nil ((2215 . 2216)) nil (26105 53271 902111 596000) 0 nil])
([nil nil ((2216 . 2217)) nil (26105 53271 902111 45000) 0 nil])
([nil nil ((2217 . 2221)) nil (26105 53271 902110 514000) 0 nil])
([nil nil ((2221 . 2231)) nil (26105 53271 902109 903000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2228) (undo-tree-id878 . -1) (#("t" 0 1 (fontified t)) . -2229) (undo-tree-id879 . -1) (#("e" 0 1 (fontified t)) . -2230) (undo-tree-id880 . -1) 2231) nil (26105 53271 902108 730000) 0 nil])
([nil nil ((2228 . 2229)) nil (26105 53271 902105 444000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2228) (undo-tree-id877 . -1) 2229) nil (26105 53271 902103 551000) 0 nil])
([nil nil ((2228 . 2232)) nil (26105 53271 902095 405000) 0 nil])
([nil nil ((2232 . 2234)) nil (26105 53271 902093 993000) 0 nil])
([nil nil ((2233 . 2234)) nil (26105 53271 902090 376000) 0 nil])
([nil nil ((2235 . 2236) (t 26105 53271 912018 834000)) nil (26105 53281 271951 675000) 0 nil])
([nil nil ((2221 . 2228) (t 26105 53281 278759 196000)) nil (26105 53309 201856 467000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -2224) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (#("e" 0 1 (fontified t)) . -2225) (undo-tree-id883 . -1) (#("n" 0 1 (fontified t)) . -2226) (undo-tree-id884 . -1) (#(" " 0 1 (fontified t)) . -2227) (undo-tree-id885 . -1) 2228) nil (26105 53309 201853 692000) 0 nil])
([nil nil ((2224 . 2228)) nil (26105 53309 201839 726000) 0 nil])
([nil nil ((#("			return a.compareTo(b);
" 0 1 (c-is-sws t fontified t) 1 3 (c-is-sws t fontified t) 3 4 (face font-lock-keyword-face c-is-sws t fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (face font-lock-keyword-face fontified t) 6 7 (face font-lock-keyword-face fontified t) 7 8 (face font-lock-keyword-face fontified t) 8 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 11 (c-is-sws t fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 2218) (undo-tree-id896 . -26) (t 26105 53309 205615 86000)) nil (26105 53365 814606 669000) 0 nil])
([nil nil ((#("*" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -2215) (undo-tree-id894 . -1) (#("/" 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -2216) (undo-tree-id895 . -1) 2217) nil (26105 53365 814605 176000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1859) (undo-tree-id892 . -1) (#("*" 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . -1860) (undo-tree-id893 . -1) 1861) nil (26105 53365 814602 240000) 0 nil])
([nil nil ((1859 . 1860)) nil (26105 53365 815576 280000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -1859) (undo-tree-id897 . -1) (undo-tree-id898 . -1) 1860) nil (26105 53483 300076 620000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . -1858) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (#("=" 0 1 (fontified t)) . -1859) (undo-tree-id891 . -1) 1860) ((1858 . 1860)) (26105 53365 814595 357000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2198) (undo-tree-id917 . -1) 2199 (t 26105 53368 32539 964000)) nil (26105 53501 983973 525000) 0 nil] [nil nil ((nil rear-nonsticky nil 2370 . 2371) (nil fontified nil 2369 . 2371) (nil fontified nil 2368 . 2369) (nil fontified nil 2367 . 2368) (nil fontified nil 2366 . 2367) (nil fontified nil 2365 . 2366) (nil fontified nil 2364 . 2365) (nil fontified nil 2358 . 2364) (nil fontified nil 2357 . 2358) (nil fontified nil 2356 . 2357) (nil fontified nil 2355 . 2356) (nil fontified nil 2354 . 2355) (nil fontified nil 2353 . 2354) (nil fontified nil 2352 . 2353) (nil fontified nil 2351 . 2352) (nil fontified nil 2350 . 2351) (nil fontified nil 2349 . 2350) (nil fontified nil 2348 . 2349) (nil fontified nil 2347 . 2348) (nil fontified nil 2346 . 2347) (nil fontified nil 2345 . 2346) (nil fontified nil 2344 . 2345) (nil fontified nil 2343 . 2344) (nil fontified nil 2342 . 2343) (nil fontified nil 2341 . 2342) (nil fontified nil 2340 . 2341) (nil fontified nil 2339 . 2340) (nil fontified nil 2338 . 2339) (nil fontified nil 2337 . 2338) (nil fontified nil 2336 . 2337) (nil fontified nil 2335 . 2336) (nil fontified nil 2332 . 2335) (nil fontified nil 2331 . 2332) (nil fontified nil 2330 . 2331) (nil fontified nil 2329 . 2330) (nil fontified nil 2328 . 2329) (nil fontified nil 2327 . 2328) (nil fontified nil 2326 . 2327) (nil fontified nil 2325 . 2326) (nil fontified nil 2323 . 2325) (nil fontified nil 2321 . 2323) (nil fontified nil 2285 . 2321) (nil fontified nil 2264 . 2285) (nil fontified nil 2262 . 2264) (nil fontified nil 2259 . 2262) (nil fontified nil 2258 . 2259) (nil fontified nil 2257 . 2258) (nil fontified nil 2256 . 2257) (nil fontified nil 2251 . 2256) (nil fontified nil 2250 . 2251) (nil fontified nil 2249 . 2250) (nil fontified nil 2248 . 2249) (nil fontified nil 2247 . 2248) (nil fontified nil 2246 . 2247) (nil fontified nil 2245 . 2246) (nil fontified nil 2244 . 2245) (nil fontified nil 2243 . 2244) (nil fontified nil 2241 . 2243) (nil fontified nil 2240 . 2241) (nil fontified nil 2239 . 2240) (nil fontified nil 2234 . 2239) (nil fontified nil 2230 . 2234) (nil fontified nil 2229 . 2230) (nil fontified nil 2219 . 2229) (nil fontified nil 2218 . 2219) (nil fontified nil 2217 . 2218) (nil fontified nil 2216 . 2217) (nil fontified nil 2215 . 2216) (nil fontified nil 2214 . 2215) (nil fontified nil 2213 . 2214) (nil fontified nil 2212 . 2213) (nil fontified nil 2211 . 2212) (nil fontified nil 2210 . 2211) (nil fontified nil 2209 . 2210) (nil fontified nil 2188 . 2209) (nil fontified nil 2187 . 2188) (nil fontified nil 2185 . 2187) (nil fontified nil 2184 . 2185) (nil fontified nil 2183 . 2184) (nil fontified nil 2182 . 2183) (nil fontified nil 2177 . 2182) (nil fontified nil 2176 . 2177) (nil fontified nil 2175 . 2176) (nil fontified nil 2174 . 2175) (nil fontified nil 2173 . 2174) (nil fontified nil 2172 . 2173) (nil fontified nil 2171 . 2172) (nil fontified nil 2170 . 2171) (nil fontified nil 2169 . 2170) (nil fontified nil 2167 . 2169) (nil fontified nil 2166 . 2167) (nil fontified nil 2163 . 2166) (nil fontified nil 2162 . 2163) (nil fontified nil 2161 . 2162) (nil fontified nil 2159 . 2161) (nil fontified nil 2157 . 2159) (nil fontified nil 2121 . 2157) (nil fontified nil 2100 . 2121) (nil fontified nil 2098 . 2100) (nil fontified nil 2087 . 2098) (nil fontified nil 2086 . 2087) (nil fontified nil 2085 . 2086) (nil fontified nil 2084 . 2085) (nil fontified nil 2083 . 2084) (nil fontified nil 2082 . 2083) (nil fontified nil 2081 . 2082) (nil fontified nil 2080 . 2081) (nil fontified nil 2079 . 2080) (nil fontified nil 2077 . 2079) (nil fontified nil 2076 . 2077) (nil fontified nil 2075 . 2076) (nil fontified nil 2070 . 2075) (nil fontified nil 2066 . 2070) (nil fontified nil 2065 . 2066) (nil fontified nil 2055 . 2065) (nil fontified nil 2054 . 2055) (nil fontified nil 2053 . 2054) (nil fontified nil 2052 . 2053) (nil fontified nil 2051 . 2052) (nil fontified nil 2050 . 2051) (nil fontified nil 2049 . 2050) (nil fontified nil 2048 . 2049) (nil fontified nil 2047 . 2048) (nil fontified nil 2046 . 2047) (nil fontified nil 2045 . 2046) (nil fontified nil 2024 . 2045) (nil fontified nil 2023 . 2024) (nil fontified nil 2021 . 2023) (nil fontified nil 2013 . 2021) (nil fontified nil 2012 . 2013) (nil fontified nil 2011 . 2012) (nil fontified nil 2010 . 2011) (nil fontified nil 2009 . 2010) (nil fontified nil 2008 . 2009) (nil fontified nil 2007 . 2008) (nil fontified nil 2006 . 2007) (nil fontified nil 2005 . 2006) (nil fontified nil 2003 . 2005) (nil fontified nil 2002 . 2003) (nil fontified nil 2001 . 2002) (nil fontified nil 1992 . 2001) (nil fontified nil 1991 . 1992) (nil fontified nil 1981 . 1991) (nil fontified nil 1976 . 1981) (nil fontified nil 1973 . 1976) (nil fontified nil 1970 . 1973) (nil fontified nil 1969 . 1970) (nil fontified nil 1968 . 1969) (nil category c->-as-paren-syntax 1968 . 1969) (nil fontified nil 1962 . 1968) (nil fontified nil 1961 . 1962) (nil category c-<-as-paren-syntax 1961 . 1962) (nil fontified nil 1956 . 1961) (nil fontified nil 1954 . 1956) (1954 . 2371) (t 26105 53368 32539 964000)) ((#("		Lista<String> ord = lista.mergeSort((a,b) -> {
			String textoUno = Normalizer.normalize(a.trim(), Normalizer.Form.NFD);
			String textoUnoNFD = textoUno.replaceAll(\"[\\\\p{InCombiningDiacriticalMarks}]\", \"\");			
			String textoDos = Normalizer.normalize(b.trim(), Normalizer.Form.NFD);
			String textoDosNFD = textoUno.replaceAll(\"[\\\\p{InCombiningDiacriticalMarks}]\", \"\");			

			return a.compareTo(b);
		    });	
		" 0 2 (fontified nil) 2 7 (face font-lock-type-face fontified nil) 7 8 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 8 14 (face font-lock-type-face fontified nil) 14 15 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 15 16 (fontified nil) 16 19 (face font-lock-variable-name-face fontified nil) 19 22 (fontified nil) 22 27 (fontified nil) 27 37 (fontified nil) 37 38 (fontified nil) 38 47 (fontified nil) 47 48 (fontified nil) 48 49 (fontified nil) 49 51 (fontified nil) 51 52 (fontified nil) 52 53 (face font-lock-type-face fontified nil) 53 54 (face font-lock-type-face fontified nil) 54 55 (face font-lock-type-face fontified nil) 55 56 (face font-lock-type-face fontified nil) 56 57 (face font-lock-type-face fontified nil) 57 58 (face font-lock-type-face c-type c-decl-id-start fontified nil) 58 59 (fontified nil) 59 67 (face font-lock-variable-name-face fontified nil) 67 69 (fontified nil) 69 70 (fontified nil) 70 91 (fontified nil) 91 92 (fontified nil) 92 93 (fontified nil) 93 94 (fontified nil) 94 95 (fontified nil) 95 96 (fontified nil) 96 97 (fontified nil) 97 98 (fontified nil) 98 99 (fontified nil) 99 100 (fontified nil) 100 101 (fontified nil) 101 111 (face font-lock-constant-face fontified nil) 111 112 (fontified nil) 112 116 (face font-lock-constant-face fontified nil) 116 121 (fontified nil) 121 122 (fontified nil rear-nonsticky t) 122 123 (fontified nil) 123 125 (fontified nil) 125 126 (fontified nil) 126 127 (face font-lock-type-face fontified nil) 127 128 (face font-lock-type-face fontified nil) 128 129 (face font-lock-type-face fontified nil) 129 130 (face font-lock-type-face fontified nil) 130 131 (face font-lock-type-face fontified nil) 131 132 (face font-lock-type-face c-type c-decl-id-start fontified nil) 132 133 (fontified nil) 133 144 (face font-lock-variable-name-face fontified nil) 144 146 (fontified nil) 146 167 (fontified nil) 167 203 (face font-lock-string-face fontified nil) 203 205 (fontified nil) 205 207 (face font-lock-string-face fontified nil) 207 208 (fontified nil) 208 209 (fontified nil rear-nonsticky t) 209 212 (fontified nil) 212 213 (fontified nil) 213 215 (fontified nil) 215 216 (fontified nil) 216 217 (face font-lock-type-face fontified nil) 217 218 (face font-lock-type-face fontified nil) 218 219 (face font-lock-type-face fontified nil) 219 220 (face font-lock-type-face fontified nil) 220 221 (face font-lock-type-face fontified nil) 221 222 (face font-lock-type-face c-type c-decl-id-start fontified nil) 222 223 (fontified nil) 223 228 (face font-lock-variable-name-face fontified nil) 228 229 (face font-lock-variable-name-face fontified nil) 229 230 (face font-lock-variable-name-face fontified nil) 230 231 (face font-lock-variable-name-face fontified nil) 231 233 (fontified nil) 233 234 (fontified nil) 234 255 (fontified nil) 255 256 (fontified nil) 256 257 (fontified nil) 257 258 (fontified nil) 258 259 (fontified nil) 259 260 (fontified nil) 260 261 (fontified nil) 261 262 (fontified nil) 262 263 (fontified nil) 263 264 (fontified nil) 264 265 (fontified nil) 265 275 (face font-lock-constant-face fontified nil) 275 276 (fontified nil) 276 280 (face font-lock-constant-face fontified nil) 280 285 (fontified nil) 285 286 (fontified nil rear-nonsticky t) 286 287 (fontified nil) 287 289 (fontified nil) 289 290 (fontified nil) 290 291 (face font-lock-type-face fontified nil) 291 292 (face font-lock-type-face fontified nil) 292 293 (face font-lock-type-face fontified nil) 293 294 (face font-lock-type-face fontified nil) 294 295 (face font-lock-type-face fontified nil) 295 296 (face font-lock-type-face c-type c-decl-id-start fontified nil) 296 297 (fontified nil) 297 302 (face font-lock-variable-name-face fontified nil) 302 303 (face font-lock-variable-name-face fontified nil) 303 304 (face font-lock-variable-name-face fontified nil) 304 305 (face font-lock-variable-name-face fontified nil) 305 308 (face font-lock-variable-name-face fontified nil) 308 310 (fontified nil) 310 331 (fontified nil) 331 367 (face font-lock-string-face fontified nil) 367 369 (fontified nil) 369 371 (face font-lock-string-face fontified nil) 371 372 (fontified nil) 372 373 (fontified nil rear-nonsticky t) 373 374 (fontified nil) 374 375 (fontified nil) 375 376 (fontified nil) 376 377 (fontified nil rear-nonsticky t) 377 378 (fontified nil) 378 381 (fontified nil) 381 382 (face font-lock-keyword-face fontified nil) 382 383 (face font-lock-keyword-face fontified nil) 383 384 (face font-lock-keyword-face fontified nil) 384 385 (face font-lock-keyword-face fontified nil) 385 386 (face font-lock-keyword-face fontified nil) 386 387 (face font-lock-keyword-face fontified nil) 387 388 (fontified nil) 388 389 (fontified nil) 389 390 (fontified nil) 390 391 (fontified nil) 391 392 (fontified nil) 392 393 (fontified nil) 393 394 (fontified nil) 394 395 (fontified nil) 395 396 (fontified nil) 396 397 (fontified nil) 397 398 (fontified nil) 398 399 (fontified nil) 399 400 (fontified nil) 400 401 (fontified nil) 401 402 (fontified nil) 402 403 (fontified nil) 403 404 (fontified nil) 404 410 (fontified nil) 410 411 (fontified nil) 411 412 (fontified nil) 412 413 (fontified nil) 413 414 (fontified nil) 414 415 (fontified nil) 415 416 (fontified nil) 416 417 (rear-nonsticky nil fontified nil)) . 1954) (undo-tree-id899 . -417) (undo-tree-id900 . -415) (nil rear-nonsticky t 2370 . 2371)) (26105 53483 298756 968000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 2208 . 2209) (nil fontified nil 2198 . 2209) (2198 . 2209)) nil (26105 53501 983970 770000) 0 nil])
nil
([nil nil ((#("b" 0 1 (fontified t)) . -2220) (undo-tree-id915 . -1) (undo-tree-id916 . -1) 2221) nil (26105 53501 983969 738000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2230 . 2231) (nil fontified nil 2220 . 2231) (2220 . 2231)) nil (26105 53501 983967 624000) 0 nil])
([nil nil ((#("U" 0 1 (fontified t)) . -2225) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (#("n" 0 1 (fontified t)) . -2226) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (#("o" 0 1 (fontified t)) . -2227) (undo-tree-id913 . -1) (undo-tree-id914 . -1) 2228) nil (26105 53501 983965 830000) 0 nil])
([nil nil ((2225 . 2228)) nil (26105 53501 983959 68000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2226) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (#("s" 0 1 (fontified t)) . -2227) (undo-tree-id904 . -1) (undo-tree-id905 . -1) 2228) nil (26105 53501 983956 653000) 0 nil])
([nil nil ((2226 . 2228)) nil (26105 53501 983941 354000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1809) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (t 26105 53501 992511 113000)) nil (26106 26391 983222 502000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1901) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (#("t" 0 1 (fontified t)) . -1902) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (#("r" 0 1 (fontified t)) . -1903) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (#("i" 0 1 (fontified t)) . -1904) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (#("m" 0 1 (fontified t)) . -1905) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (#("(" 0 1 (fontified t)) . -1906) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (#(")" 0 1 (fontified t)) . -1907) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) 1908) nil (26106 26391 983217 654000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2058) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (#("t" 0 1 (fontified t)) . -2059) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (#("r" 0 1 (fontified t)) . -2060) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (#("i" 0 1 (fontified t)) . -2061) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (#("m" 0 1 (fontified t)) . -2062) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (#("(" 0 1 (fontified t)) . -2063) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (#(")" 0 1 (fontified t)) . -2064) (undo-tree-id969 . -1) (undo-tree-id970 . -1) 2065) nil (26106 26391 983190 945000) 0 nil])
([nil nil ((2014 . 2016) (t 26106 26391 992279 992000)) nil (26106 26612 172971 428000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2014) (undo-tree-id1069 . -1) (#("r" 0 1 (fontified t)) . -2015) (undo-tree-id1070 . -1) 2016) nil (26106 26612 172970 576000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2013) (undo-tree-id1060 . -1) (#(" " 0 1 (fontified t)) . -2014) (undo-tree-id1061 . -1) (#(" " 0 1 (fontified t)) . -2015) (undo-tree-id1062 . -1) (#(" " 0 1 (fontified t)) . -2016) (undo-tree-id1063 . -1) (#(" " 0 1 (fontified t)) . -2017) (undo-tree-id1064 . -1) (#(" " 0 1 (fontified t)) . -2018) (undo-tree-id1065 . -1) (#(" " 0 1 (fontified t)) . -2019) (undo-tree-id1066 . -1) (#(" " 0 1 (fontified nil)) . -2020) (undo-tree-id1067 . -1) (#("	" 0 1 (fontified nil)) . 2021) (undo-tree-id1068 . -1) (2013 . 2021) 2014) nil (26106 26612 172967 921000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2012) (undo-tree-id1051 . -1) (#(" " 0 1 (fontified t)) . -2013) (undo-tree-id1052 . -1) (#(" " 0 1 (fontified t)) . -2014) (undo-tree-id1053 . -1) (#(" " 0 1 (fontified t)) . -2015) (undo-tree-id1054 . -1) (#(" " 0 1 (fontified t)) . -2016) (undo-tree-id1055 . -1) (#(" " 0 1 (fontified t)) . -2017) (undo-tree-id1056 . -1) (#(" " 0 1 (fontified t)) . -2018) (undo-tree-id1057 . -1) (#(" " 0 1 (fontified nil)) . -2019) (undo-tree-id1058 . -1) (#("	" 0 1 (fontified nil)) . 2020) (undo-tree-id1059 . -1) (2012 . 2020) 2013) nil (26106 26612 172960 638000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2013) (undo-tree-id1047 . -1) (#(" " 0 1 (fontified t)) . -2014) (undo-tree-id1048 . -1) (#(" " 0 1 (fontified nil)) . -2015) (undo-tree-id1049 . -1) (#("	" 0 1 (fontified nil)) . 2016) (undo-tree-id1050 . -1) (2011 . 2016) 2012) nil (26106 26612 172953 845000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2011) (undo-tree-id1045 . -1) (#(" " 0 1 (fontified t)) . -2012) (undo-tree-id1046 . -1) 2013) nil (26106 26612 172950 189000) 0 nil])
([nil nil ((2011 . 2015)) nil (26106 26630 907844 685000) 0 nil])
([nil nil ((2218 . 2226) (t 26106 26632 149348 135000)) nil (26106 26657 766074 719000) 0 nil] [nil nil ((#("t" 0 1 (fontified t)) . -2184) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (#("e" 0 1 (fontified t)) . -2185) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (#("x" 0 1 (fontified t)) . -2186) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (#("t" 0 1 (fontified t)) . -2187) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (#("o" 0 1 (fontified t)) . -2188) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (#("U" 0 1 (fontified t)) . -2189) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (#("n" 0 1 (fontified t)) . -2190) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (#("o" 0 1 (fontified t)) . -2191) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (#("N" 0 1 (fontified t)) . -2192) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (#("F" 0 1 (fontified t)) . -2193) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (#("D" 0 1 (fontified t rear-nonsticky t)) . -2194) (undo-tree-id1044 . -1) 2195) ((2184 . 2195)) (26106 26630 477637 838000) 0 nil])
([nil nil ((2226 . 2228)) nil (26106 26657 766070 441000) 0 nil])
([nil nil ((2184 . 2185)) ((#("a" 0 1 (fontified t)) . 2184)) (26106 26629 797293 876000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2218) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (#("r" 0 1 (fontified t)) . -2219) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (#("e" 0 1 (fontified t)) . -2220) (undo-tree-id1081 . -1) (#("v" 0 1 (fontified t)) . -2221) (undo-tree-id1082 . -1) (#("e" 0 1 (fontified t)) . -2222) (undo-tree-id1083 . -1) (#("r" 0 1 (fontified t)) . -2223) (undo-tree-id1084 . -1) (#("s" 0 1 (fontified t)) . -2224) (undo-tree-id1085 . -1) (#("a" 0 1 (fontified t)) . -2225) (undo-tree-id1086 . -1) (#("(" 0 1 (fontified t)) . -2226) (undo-tree-id1087 . -1) (#(")" 0 1 (fontified t)) . -2227) (undo-tree-id1088 . -1) 2228 (t 26106 26657 775516 262000)) nil (26106 26688 249341 50000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2196) (undo-tree-id1013 . -1) (#("e" 0 1 (fontified t)) . -2197) (undo-tree-id1014 . -1) (#("x" 0 1 (fontified t)) . -2198) (undo-tree-id1015 . -1) (#("t" 0 1 (fontified t)) . -2199) (undo-tree-id1016 . -1) (#("o" 0 1 (fontified t)) . -2200) (undo-tree-id1017 . -1) (#("D" 0 1 (fontified t)) . -2201) (undo-tree-id1018 . -1) (#("o" 0 1 (fontified t)) . -2202) (undo-tree-id1019 . -1) (#("s" 0 1 (fontified t)) . -2203) (undo-tree-id1020 . -1) (#("N" 0 1 (fontified t)) . -2204) (undo-tree-id1021 . -1) (#("F" 0 1 (fontified t)) . -2205) (undo-tree-id1022 . -1) (#("D" 0 1 (fontified t rear-nonsticky t)) . -2206) (undo-tree-id1023 . -1) 2207) ((2196 . 2207)) (26106 26629 301683 725000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2290 . 2291) (nil fontified nil 2173 . 2291) (2173 . 2291) (t 26106 26688 258123 648000)) nil (26106 26855 754611 497000) 0 nil])
([nil nil ((2196 . 2197)) ((#("b" 0 1 (fontified t)) . 2196) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (t 26106 26612 183018 563000)) (26106 26612 172907 521000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2198) (undo-tree-id1185 . -1) 2199) nil (26106 26855 754610 485000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -2265) (undo-tree-id1184 . -1) 2266) nil (26106 26855 754609 173000) 0 nil])
([nil nil ((#("
			String textoUnoNFD = textoUno.replaceAll(\"[\\\\p{InCombiningDiacriticalMarks}]\", \"\");
			" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face fontified t) 8 9 (face font-lock-type-face fontified t) 9 10 (face font-lock-type-face c-type c-decl-id-start fontified t) 10 11 (fontified t) 11 22 (face font-lock-variable-name-face fontified t) 22 24 (fontified t) 24 45 (fontified t) 45 81 (face font-lock-string-face fontified t) 81 83 (fontified t) 83 85 (face font-lock-string-face fontified t) 85 86 (fontified t) 86 87 (fontified t rear-nonsticky t) 87 91 (fontified t)) . 1924) (undo-tree-id1180 . -91) (undo-tree-id1181 . -11) (undo-tree-id1182 . -22) (undo-tree-id1183 . -22)) nil (26106 26855 754607 891000) 0 nil])
([nil nil ((1923 . 1934)) nil (26106 26855 754605 366000) 0 nil])
([nil nil ((#("Normalizer.normalize(str,Normalizer.Form.NFD).replaceAll(\"\\p{InCombiningDiacriticalMarks}+\",\"\").replaceAll(\" \", \"+\")
" 0 25 (fontified t) 25 35 (face font-lock-constant-face fontified t) 35 36 (fontified t) 36 40 (face font-lock-constant-face fontified t) 40 57 (fontified t) 57 91 (face font-lock-string-face fontified t) 91 92 (fontified t) 92 94 (face font-lock-string-face fontified t) 94 107 (fontified t) 107 110 (face font-lock-string-face fontified t) 110 112 (fontified t) 112 115 (face font-lock-string-face fontified t) 115 116 (fontified t rear-nonsticky t) 116 117 (fontified t)) . -2093) (undo-tree-id1176 . -117) (undo-tree-id1177 . -116) (undo-tree-id1178 . -117) (undo-tree-id1179 . -116) 2210) nil (26106 26855 754604 604000) 0 nil])
([nil nil ((2093 . 2094)) nil (26106 26855 754601 789000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1923) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (#("r" 0 1 (fontified t)) . -1924) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (#("e" 0 1 (fontified t)) . -1925) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (#("p" 0 1 (fontified t)) . -1926) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (#("l" 0 1 (fontified t)) . -1927) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (#("a" 0 1 (fontified t)) . -1928) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (#("c" 0 1 (fontified t)) . -1929) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (#("e" 0 1 (fontified t)) . -1930) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (#("A" 0 1 (fontified t)) . -1931) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (#("l" 0 1 (fontified t)) . -1932) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (#("l" 0 1 (fontified t)) . -1933) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (#(";" 0 1 (fontified t rear-nonsticky t)) . -1934) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) 1935) nil (26106 26855 754598 413000) 0 nil])
([nil nil ((nil fontified nil 1993 . 1994) (nil fontified nil 1990 . 1993) (nil fontified nil 1988 . 1990) (nil fontified nil 1985 . 1988) (nil fontified nil 1972 . 1985) (nil fontified nil 1970 . 1972) (nil fontified nil 1969 . 1970) (nil fontified nil 1935 . 1969) (nil fontified nil 1923 . 1935) (1923 . 1994)) nil (26106 26855 754556 53000) 0 nil])
([nil nil ((1994 . 1995)) nil (26106 26855 754554 510000) 0 nil])
([nil nil ((#(".replaceAll(\" \", \"+\");" 0 12 (fontified t) 12 15 (face font-lock-string-face fontified t) 15 17 (fontified t) 17 20 (face font-lock-string-face fontified t) 20 21 (fontified t rear-nonsticky t) 21 22 (fontified t)) . 1973) (undo-tree-id1115 . -22)) nil (26106 26855 754553 939000) 0 nil])
([nil nil ((1973 . 1974)) nil (26106 26855 754552 857000) 0 nil])
([nil nil ((#("
			String textoDosNFD = textoUno.replaceAll(\"[\\\\p{InCombiningDiacriticalMarks}]\", \"\");			
" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face fontified t) 8 9 (face font-lock-type-face fontified t) 9 10 (face font-lock-type-face c-type c-decl-id-start fontified t) 10 11 (fontified t) 11 16 (face font-lock-variable-name-face fontified t) 16 17 (face font-lock-variable-name-face fontified t) 17 18 (face font-lock-variable-name-face fontified t) 18 19 (face font-lock-variable-name-face fontified t) 19 22 (face font-lock-variable-name-face fontified t) 22 24 (fontified t) 24 45 (fontified t) 45 81 (face font-lock-string-face fontified t) 81 83 (fontified t) 83 85 (face font-lock-string-face fontified t) 85 86 (fontified t) 86 87 (fontified t rear-nonsticky t) 87 88 (fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t rear-nonsticky t)) . 2041) (undo-tree-id1109 . -91) (undo-tree-id1110 . -91) (undo-tree-id1111 . -91) (undo-tree-id1112 . -91) (undo-tree-id1113 . -91) (undo-tree-id1114 . -91)) nil (26106 26855 754551 965000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t rear-nonsticky t)) . -2040) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) 2041) nil (26106 26855 754547 417000) 0 nil])
([nil nil ((2040 . 2041)) nil (26106 26855 754540 764000) 0 nil])
([nil nil ((2041 . 2051)) nil (26106 26855 754540 273000) 0 nil])
([nil nil ((2051 . 2053)) nil (26106 26855 754539 752000) 0 nil])
([nil nil ((2052 . 2054)) nil (26106 26855 754539 251000) 0 nil])
([nil nil ((2053 . 2055)) nil (26106 26855 754538 720000) 0 nil])
([nil nil ((2055 . 2057)) nil (26106 26855 754538 189000) 0 nil])
([nil nil ((2056 . 2059)) nil (26106 26855 754537 658000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-string-face fontified t)) . -2058) (undo-tree-id1100 . -1) 2059) nil (26106 26855 754536 997000) 0 nil])
([nil nil ((2058 . 2065)) nil (26106 26855 754535 584000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face fontified t)) . -2063) (undo-tree-id1098 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -2064) (undo-tree-id1099 . -1) 2065) nil (26106 26855 754534 823000) 0 nil])
([nil nil ((2063 . 2068)) nil (26106 26855 754532 709000) 0 nil])
([nil nil ((#("F" 0 1 (face font-lock-string-face fontified t)) . -2067) (undo-tree-id1097 . -1) 2068) nil (26106 26855 754531 978000) 0 nil])
([nil nil ((2067 . 2072)) nil (26106 26855 754530 735000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . -2071) (undo-tree-id1096 . -1) 2072) nil (26106 26855 754530 34000) 0 nil])
([nil nil ((2071 . 2075)) nil (26106 26855 754528 241000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-string-face fontified t)) . -2074) (undo-tree-id1095 . -1) 2075) nil (26106 26855 754527 279000) 0 nil])
([nil nil ((2074 . 2083)) nil (26106 26855 754525 636000) 0 nil])
([nil nil ((2084 . 2085)) nil (26106 26855 754525 145000) 0 nil])
([nil nil ((2087 . 2088)) nil (26106 26855 754524 494000) 0 nil])
([nil nil ((2088 . 2092)) nil (26106 26855 754523 612000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -2133) (undo-tree-id1092 . -1) (#("F" 0 1 (fontified t)) . -2134) (undo-tree-id1093 . -1) (#("D" 0 1 (fontified t rear-nonsticky t)) . -2135) (undo-tree-id1094 . -1) 2136) nil (26106 26855 754521 558000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -2111) (undo-tree-id1089 . -1) (#("F" 0 1 (fontified t)) . -2112) (undo-tree-id1090 . -1) (#("D" 0 1 (fontified t rear-nonsticky t)) . -2113) (undo-tree-id1091 . -1) 2114) nil (26106 26855 754515 366000) 0 nil])
([nil nil ((1937 . 1938) (t 26106 26855 763759 213000)) nil (26106 26931 385793 599000) 0 nil])
([nil nil ((2055 . 2056)) nil (26106 26931 385792 567000) 0 nil])
([nil nil ((2088 . 2089)) nil (26106 26931 385791 65000) 0 nil])
([nil nil ((2089 . 2091)) nil (26106 26931 385787 548000) 0 nil])
([nil nil ((#("InCombiningDiacriticalMarks" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t) 6 7 (face font-lock-string-face fontified t) 7 8 (face font-lock-string-face fontified t) 8 9 (face font-lock-string-face fontified t) 9 10 (face font-lock-string-face fontified t) 10 11 (face font-lock-string-face fontified t) 11 12 (face font-lock-string-face fontified t) 12 13 (face font-lock-string-face fontified t) 13 14 (face font-lock-string-face fontified t) 14 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 17 (face font-lock-string-face fontified t) 17 18 (face font-lock-string-face fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face font-lock-string-face fontified t) 20 21 (face font-lock-string-face fontified t) 21 22 (face font-lock-string-face fontified t) 22 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t) 24 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t) 26 27 (face font-lock-string-face fontified t)) . 2058) (undo-tree-id1191 . -27) (undo-tree-id1192 . -27) (t 26106 26931 393880 631000)) nil (26106 27068 372209 151000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2062 . 2063) (nil fontified nil 2058 . 2063) (2058 . 2063)) nil (26106 27068 372206 146000) 0 nil])
([nil nil ((#("InCombiningDiacriticalMarks" 0 27 (face font-lock-string-face fontified t)) . -1940) (undo-tree-id1186 . -27) (undo-tree-id1187 . -4) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -27) 1967) nil (26106 27068 372203 601000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1944 . 1945) (nil fontified nil 1940 . 1945) (1940 . 1945)) nil (26106 27068 372188 313000) 0 nil])
([nil nil ((1921 . 1922) (t 26106 27068 382714 582000)) nil (26106 27224 575887 204000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -1921) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) 1922) nil (26106 27237 488737 586000) 0 nil])
([nil nil ((2037 . 2038) (t 26106 27238 736658 288000)) nil (26107 48523 538604 798000) 0 nil] [nil nil ((1921 . 1922)) ((#("K" 0 1 (fontified t)) . 1921)) (26106 27237 24499 55000) 0 nil])
([nil nil ((#("\\\\p{ASCII}+" 0 11 (face font-lock-string-face fontified t)) . 1936) (undo-tree-id16 . -11) (undo-tree-id17 . -9) (undo-tree-id18 . -9) (undo-tree-id19 . -9) (undo-tree-id20 . -9) (undo-tree-id21 . -9) (undo-tree-id22 . -10) (undo-tree-id23 . -11) (undo-tree-id24 . -10) (undo-tree-id25 . -10) (undo-tree-id26 . -9) (undo-tree-id27 . -8) (undo-tree-id28 . -7) (undo-tree-id29 . -6) (undo-tree-id30 . -5) (undo-tree-id31 . -4) (undo-tree-id32 . -3) (undo-tree-id33 . -2) (undo-tree-id34 . -1)) nil (26107 48523 538603 65000) 0 nil])
([nil nil ((2018 . 2019)) ((#("K" 0 1 (fontified t)) . 2018) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (t 26106 27224 583994 578000)) (26106 27224 575870 744000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1948 . 1949) (nil fontified nil 1936 . 1949) (1936 . 1949)) nil (26107 48523 538571 53000) 0 nil])
nil
([nil nil ((#("\\\\p{A1SCII}+" 0 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t) 6 12 (face font-lock-string-face fontified t)) . 2034) (undo-tree-id0 . -12) (undo-tree-id1 . -5) (undo-tree-id2 . -5) (undo-tree-id3 . -12) (undo-tree-id4 . -11) (undo-tree-id5 . -11) (undo-tree-id6 . -10) (undo-tree-id7 . -9) (undo-tree-id8 . -8) (undo-tree-id9 . -7) (undo-tree-id10 . -6) (undo-tree-id11 . -5) (undo-tree-id12 . -4) (undo-tree-id13 . -3) (undo-tree-id14 . -2) (undo-tree-id15 . -1)) nil (26107 48523 538567 957000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2046 . 2047) (nil fontified nil 2034 . 2047) (2034 . 2047)) nil (26107 48585 506484 291000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2136) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("t" 0 1 (fontified t)) . -2137) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("o" 0 1 (fontified t)) . -2138) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("S" 0 1 (fontified t)) . -2139) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("t" 0 1 (fontified t)) . -2140) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("r" 0 1 (fontified t)) . -2141) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("i" 0 1 (fontified t)) . -2142) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("n" 0 1 (fontified t)) . -2143) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#("g" 0 1 (fontified t)) . -2144) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (#("(" 0 1 (fontified t)) . -2145) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#(")" 0 1 (fontified t)) . -2146) (undo-tree-id127 . -1) (undo-tree-id128 . -1) 2147) nil (26107 48625 693820 456000) 0 nil] [nil nil ((#("o" 0 1 (fontified t)) . -2138) (undo-tree-id41 . -1) (#("S" 0 1 (fontified t)) . -2139) (undo-tree-id42 . -1) (#("t" 0 1 (fontified t)) . -2140) (undo-tree-id43 . -1) (#("r" 0 1 (fontified t)) . -2141) (undo-tree-id44 . -1) (#("i" 0 1 (fontified t)) . -2142) (undo-tree-id45 . -1) (#("n" 0 1 (fontified t)) . -2143) (undo-tree-id46 . -1) (#("g" 0 1 (fontified t)) . -2144) (undo-tree-id47 . -1) (#("(" 0 1 (fontified t)) . -2145) (undo-tree-id48 . -1) (#(")" 0 1 (fontified t)) . -2146) (undo-tree-id49 . -1) 2147 (t 26107 48523 547772 829000)) ((2138 . 2147)) (26107 48583 127181 157000) 0 nil])
([nil nil ((2136 . 2138)) nil (26107 48637 600456 219000) 0 nil] [nil nil ((#("
		System.out.println(ord);" 0 1 (fontified nil) 1 25 (fontified t) 25 27 (fontified t)) . 2118) (undo-tree-id132 . -27) (undo-tree-id133 . -27) (#("	" 0 1 (fontified nil)) . 2118) (undo-tree-id134 . -1) (2110 . 2118) 2111 (t 26107 48589 708709 722000)) ((#("        " 0 8 (fontified nil)) . 2110) (undo-tree-id162 . -8) (undo-tree-id163 . -8) (undo-tree-id164 . -8) (undo-tree-id165 . -8) (undo-tree-id166 . -8) (undo-tree-id167 . -8) (undo-tree-id168 . -8) (2118 . 2119) (2118 . 2145)) (26107 48625 269629 218000) 0 nil])
([nil nil ((#("
		System.out.println(ord.t);" 0 1 (fontified nil) 1 27 (fontified t) 27 29 (fontified t)) . 2118) (undo-tree-id35 . -29) (undo-tree-id36 . -29) (#("	" 0 1 (fontified nil)) . 2118) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (2110 . 2118) 2111) ((#("        " 0 8 (fontified nil)) . 2110) (undo-tree-id50 . -8) (undo-tree-id51 . -8) (2118 . 2119) (2118 . 2147) (t 26107 48572 137651 244000)) (26107 48572 129683 419000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -2137) (undo-tree-id171 . -1) 2138) nil (26107 48637 600455 638000) 0 nil])
([nil nil ((2110 . 2112) (#("	        " 0 1 (fontified nil) 1 9 (fontified nil)) . 2109) (undo-tree-id129 . -9) (undo-tree-id130 . -9) (undo-tree-id131 . -9) (2118 . 2119)) ((#("
" 0 1 (fontified nil)) . 2118) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (2109 . 2118) (#("		" 0 2 (fontified t)) . 2110) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2)) (26107 48624 909153 319000) 0 nil])
nil
([nil nil ((2137 . 2138)) nil (26107 48637 600452 782000) 0 nil])
([nil nil ((2112 . 2124)) ((#("ord.toString" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t)) . 2112) (undo-tree-id142 . -12) (undo-tree-id143 . -12) (undo-tree-id144 . -12) (undo-tree-id145 . -12) (undo-tree-id146 . -12)) (26107 48624 555218 873000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2137) (undo-tree-id170 . -1) 2138) nil (26107 48637 600451 951000) 0 nil])
([nil nil ((2124 . 2126)) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 2124) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2)) (26107 48622 149087 847000) 0 nil])
([nil nil ((2137 . 2138)) nil (26107 48637 600450 247000) 0 nil])
([nil nil ((2126 . 2127)) ((#(";" 0 1 (fontified t)) . 2126) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (t 26107 48611 756635 703000)) (26107 48611 747089 601000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -2137) (undo-tree-id169 . -1) 2138) nil (26107 48637 600448 474000) 0 nil])
nil
([nil nil ((2137 . 2145)) nil (26107 48637 600438 104000) 0 nil])
([nil nil ((2145 . 2147)) nil (26107 49095 588387 395000) 0 nil])
([nil nil ((#("[^\\\\p{ASCII}]" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t) 6 7 (face font-lock-string-face fontified t) 7 8 (face font-lock-string-face fontified t) 8 9 (face font-lock-string-face fontified t) 9 10 (face font-lock-string-face fontified t) 10 11 (face font-lock-string-face fontified t) 11 12 (face font-lock-string-face fontified t) 12 13 (face font-lock-string-face rear-nonsticky t fontified t)) . 1936) (undo-tree-id437 . -13)) nil (26107 49136 827294 25000) 0 nil] [nil nil ((1957 . 1960) (#("			" 0 3 (fontified nil)) . 1956) (undo-tree-id183 . -3) (1959 . 1960) (t 26107 48637 611356 48000)) ((#("
" 0 1 (fontified nil)) . 1959) (1956 . 1959) (#("			" 0 3 (fontified t)) . 1957)) (26107 49095 73852 686000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1968 . 1969) (nil fontified nil 1936 . 1969) (1936 . 1969)) nil (26107 49136 827292 493000) 0 nil])
([nil nil ((1956 . 1959)) ((#("			" 0 3 (fontified t)) . 1956) (undo-tree-id427 . -3) (undo-tree-id428 . -3) (undo-tree-id429 . -3) (undo-tree-id430 . -3) (undo-tree-id431 . -3) (undo-tree-id432 . -3) (undo-tree-id433 . -3) (undo-tree-id434 . -3)) (26107 49094 753539 51000) 0 nil])
([nil nil ((#("[^\\\\p{ASCII}]" 0 12 (face font-lock-string-face fontified t) 12 13 (face font-lock-string-face fontified t rear-nonsticky t)) . 2054) (undo-tree-id436 . -13)) nil (26107 49136 827291 431000) 0 nil])
([nil nil ((1959 . 1961)) ((#("a." 0 1 (fontified t) 1 2 (fontified t)) . 1959) (undo-tree-id421 . -2) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -2)) (26107 49094 385268 688000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2086 . 2087) (nil fontified nil 2054 . 2087) (2054 . 2087)) nil (26107 49136 827289 698000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1960) (undo-tree-id182 . -1) 1961) ((1960 . 1961)) (26107 49094 9639 653000) 0 nil])
([nil nil ((1974 . 1985)) nil (26107 49136 827288 756000) 0 nil])
([nil nil ((1960 . 1974)) ((#("Normalizada = " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t)) . 1960) (undo-tree-id418 . -9) (undo-tree-id419 . -13) (undo-tree-id420 . -14)) (26107 49093 815689 652000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1984) (undo-tree-id435 . -1) 1985) nil (26107 49136 827287 334000) 0 nil])
([nil nil ((1959 . 1966)) ((#("String " 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t) 6 7 (fontified t)) . 1959)) (26107 49093 692285 456000) 0 nil])
([nil nil ((1984 . 1986)) nil (26107 49136 827278 548000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1933) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (#("(" 0 1 (fontified t)) . -1934) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (#("\"" 0 1 (face font-lock-warning-face fontified t)) . -1935) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (#("[" 0 1 (face font-lock-string-face fontified t)) . -1936) (undo-tree-id283 . -1) (#("^" 0 1 (face font-lock-string-face fontified t)) . -1937) (undo-tree-id284 . -1) (#("\\" 0 1 (face font-lock-string-face fontified t)) . -1938) (undo-tree-id285 . -1) (#("\\" 0 1 (face font-lock-string-face fontified t)) . -1939) (undo-tree-id286 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -1940) (undo-tree-id287 . -1) (#("{" 0 1 (face font-lock-string-face fontified t)) . -1941) (undo-tree-id288 . -1) (#("A" 0 1 (face font-lock-string-face fontified t)) . -1942) (undo-tree-id289 . -1) (#("S" 0 1 (face font-lock-string-face fontified t)) . -1943) (undo-tree-id290 . -1) (#("C" 0 1 (face font-lock-string-face fontified t)) . -1944) (undo-tree-id291 . -1) (#("I" 0 1 (face font-lock-string-face fontified t)) . -1945) (undo-tree-id292 . -1) (#("I" 0 1 (face font-lock-string-face fontified t)) . -1946) (undo-tree-id293 . -1) (#("}" 0 1 (face font-lock-string-face fontified t)) . -1947) (undo-tree-id294 . -1) (#("]" 0 1 (face font-lock-string-face rear-nonsticky t fontified t)) . -1948) (undo-tree-id295 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -1949) (undo-tree-id296 . -1) (#("," 0 1 (fontified t)) . -1950) (undo-tree-id297 . -1) (#("\"" 0 1 (face font-lock-warning-face fontified t)) . -1951) (undo-tree-id298 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -1952) (undo-tree-id299 . -1) (#(")" 0 1 (fontified t)) . -1953) (undo-tree-id300 . -1) 1954) ((1933 . 1954)) (26107 49093 307927 822000) 0 nil] [nil nil ((#(".replaceAll(\"[^\\\\p{ASCII" 0 12 (fontified t) 12 13 (face font-lock-string-face fontified t) 13 24 (face font-lock-string-face fontified t)) . -1923) (undo-tree-id172 . -24) (undo-tree-id173 . -13) (undo-tree-id174 . -13) (undo-tree-id175 . -13) (undo-tree-id176 . -19) (undo-tree-id177 . -24) (undo-tree-id178 . -19) (undo-tree-id179 . -24) (undo-tree-id180 . -19) (undo-tree-id181 . -24) 1947) ((1923 . 1947)) (26107 48732 651068 204000) 0 nil])
([nil nil ((1986 . 1988)) nil (26107 49136 827277 967000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1923) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (#("r" 0 1 (fontified t)) . -1924) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (#("e" 0 1 (fontified t)) . -1925) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (#("p" 0 1 (fontified t)) . -1926) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (#("l" 0 1 (fontified t)) . -1927) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (#("a" 0 1 (fontified t)) . -1928) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (#("c" 0 1 (fontified t)) . -1929) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (#("e" 0 1 (fontified t)) . -1930) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (#("A" 0 1 (fontified t)) . -1931) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#("l" 0 1 (fontified t)) . -1932) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) 1933) ((1923 . 1933)) (26107 49092 931448 383000) 0 nil])
nil
([nil nil ((2106 . 2108)) nil (26107 49136 827277 356000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1981 . 1982) (nil fontified nil 1980 . 1982) (nil fontified nil 1978 . 1980) (nil fontified nil 1977 . 1978) (nil fontified nil 1976 . 1977) (nil fontified nil 1975 . 1976) (nil fontified nil 1963 . 1975) (nil fontified nil 1962 . 1963) (nil fontified nil 1950 . 1962) (1950 . 1982)) ((#(".replaceAll(\"[^\\\\p{ASCII}]\",\"\");" 0 12 (fontified nil) 12 13 (face font-lock-string-face fontified nil) 13 25 (face font-lock-string-face fontified nil) 25 26 (face font-lock-string-face fontified nil rear-nonsticky t) 26 27 (face font-lock-string-face fontified nil) 27 28 (fontified nil) 28 30 (face font-lock-string-face fontified nil) 30 31 (fontified nil) 31 32 (rear-nonsticky nil fontified nil)) . 1950) (nil rear-nonsticky t 1981 . 1982)) (26107 49092 891784 662000) 0 nil])
([nil nil ((2108 . 2118)) nil (26107 49136 827275 783000) 0 nil])
([nil nil ((1950 . 1958)) ((#("textoUNp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 1950) (undo-tree-id415 . -8) (undo-tree-id416 . -6) (undo-tree-id417 . -8)) (26107 49092 851736 131000) 0 nil])
([nil nil ((2118 . 2120)) nil (26107 49173 328769 763000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -1956) (undo-tree-id229 . -1) (#("p" 0 1 (fontified t)) . -1957) (undo-tree-id230 . -1) 1958) ((1956 . 1958)) (26107 49092 811845 61000) 0 nil])
([nil nil ((2165 . 2169) (t 26107 49136 835978 182000)) nil (26107 49194 334895 820000) 0 nil] [nil nil ((nil rear-nonsticky nil 2212 . 2213) (nil fontified nil 2180 . 2213) (2180 . 2213) (t 26107 49136 835978 182000)) ((#("\\\\p{InCombiningDiacriticalMarks}+" 0 32 (fontified nil) 32 33 (rear-nonsticky nil fontified nil)) . 2180) (undo-tree-id438 . -33) (nil rear-nonsticky t 2212 . 2213)) (26107 49173 327775 767000) 0 nil])
([nil nil ((1956 . 1958)) ((#("no" 0 1 (fontified t) 1 2 (fontified t)) . 1956)) (26107 49092 770900 506000) 0 nil])
([nil nil ((#("(\"\\\\p{InCombiningDiacriticalMarks}+\",\"\"" 0 1 (fontified t) 1 36 (face font-lock-string-face fontified t) 36 37 (fontified t) 37 39 (face font-lock-string-face fontified t)) . 2066) (undo-tree-id10 . -39) (undo-tree-id11 . -37) (undo-tree-id12 . -37) (t 26107 49196 838291 62000)) nil (26107 50671 100409 31000) 0 nil] [nil nil ((nil rear-nonsticky nil 2206 . 2207) (nil fontified nil 2206 . 2207) (nil fontified nil 2204 . 2206) (nil fontified nil 2203 . 2204) (nil fontified nil 2202 . 2203) (nil fontified nil 2201 . 2202) (nil fontified nil 2200 . 2201) (nil fontified nil 2199 . 2200) (nil fontified nil 2198 . 2199) (nil fontified nil 2197 . 2198) (nil fontified nil 2196 . 2197) (nil fontified nil 2195 . 2196) (nil fontified nil 2194 . 2195) (nil fontified nil 2193 . 2194) (nil fontified nil 2190 . 2193) (nil fontified nil 2169 . 2190) (2169 . 2207)) ((#("		System.out.println(ord.toString());
" 0 21 (fontified nil) 21 24 (fontified nil) 24 25 (fontified nil) 25 26 (fontified nil) 26 27 (fontified nil) 27 28 (fontified nil) 28 29 (fontified nil) 29 30 (fontified nil) 30 31 (fontified nil) 31 32 (fontified nil) 32 33 (fontified nil) 33 34 (fontified nil) 34 35 (fontified nil) 35 37 (fontified nil) 37 38 (rear-nonsticky nil fontified nil)) . 2169) (nil fontified t 2169 . 2190) (nil fontified t 2190 . 2193) (nil fontified t 2193 . 2194) (nil fontified t 2194 . 2195) (nil fontified t 2195 . 2196) (nil fontified t 2196 . 2197) (nil fontified t 2197 . 2198) (nil fontified t 2198 . 2199) (nil fontified t 2199 . 2200) (nil fontified t 2200 . 2201) (nil fontified t 2201 . 2202) (nil fontified t 2202 . 2203) (nil fontified t 2203 . 2204) (nil fontified t 2204 . 2206) (nil rear-nonsticky t 2206 . 2207)) (26107 49193 947359 94000) 0 nil])
nil
([nil nil ((#(".replaceAll(\"[^\\\\p{ASCII}]\",\"\")" 0 12 (fontified t) 12 13 (face font-lock-string-face fontified t) 13 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t rear-nonsticky t) 26 27 (face font-lock-string-face fontified t) 27 28 (fontified t) 28 30 (face font-lock-string-face fontified t) 30 31 (fontified t)) . 2056) (undo-tree-id224 . -31) (undo-tree-id225 . -13) (undo-tree-id226 . -13) (undo-tree-id227 . -13) (undo-tree-id228 . -13)) ((2056 . 2087)) (26107 49092 731066 373000) 0 nil])
([nil nil ((2066 . 2067)) nil (26107 50671 100406 256000) 0 nil])
([nil nil ((2224 . 2226)) ((#("//" 0 1 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . 2224) (undo-tree-id439 . -2) (undo-tree-id440 . -2) (undo-tree-id441 . -2) (t 26107 49183 479860 159000)) (26107 49183 472536 783000) 0 nil])
([nil nil ((2057 . 2061)) ((#("
			" 0 1 (fontified t) 1 4 (fontified t)) . 2057) (undo-tree-id398 . -4) (undo-tree-id399 . -4) (undo-tree-id400 . -4) (undo-tree-id401 . -4) (undo-tree-id402 . -4) (undo-tree-id403 . -4) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -4) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) (undo-tree-id412 . -4) (undo-tree-id413 . -1) (undo-tree-id414 . -4)) (26107 49092 690107 534000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2085 . 2086) (nil fontified nil 2067 . 2086) (2067 . 2086)) nil (26107 50671 100405 164000) 0 nil])
nil
([nil nil ((2061 . 2072)) ((#("String bNOr" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . 2061) (undo-tree-id384 . -11) (undo-tree-id385 . -9) (undo-tree-id386 . -9) (undo-tree-id387 . -9) (undo-tree-id388 . -9) (undo-tree-id389 . -9) (undo-tree-id390 . -9) (undo-tree-id391 . -9) (undo-tree-id392 . -9) (undo-tree-id393 . -9) (undo-tree-id394 . -9) (undo-tree-id395 . -9) (undo-tree-id396 . -9) (undo-tree-id397 . -11)) (26107 49092 649771 822000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-string-face fontified t)) . -2070) (undo-tree-id0 . -1) (#("\\" 0 1 (face font-lock-string-face fontified t)) . -2071) (undo-tree-id1 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -2072) (undo-tree-id2 . -1) (#("{" 0 1 (face font-lock-string-face fontified t)) . -2073) (undo-tree-id3 . -1) (#("A" 0 1 (face font-lock-string-face fontified t)) . -2074) (undo-tree-id4 . -1) (#("S" 0 1 (face font-lock-string-face fontified t)) . -2075) (undo-tree-id5 . -1) (#("C" 0 1 (face font-lock-string-face fontified t)) . -2076) (undo-tree-id6 . -1) (#("I" 0 1 (face font-lock-string-face fontified t)) . -2077) (undo-tree-id7 . -1) (#("I" 0 1 (face font-lock-string-face fontified t)) . -2078) (undo-tree-id8 . -1) (#("}" 0 1 (face font-lock-string-face fontified t)) . -2079) (undo-tree-id9 . -1) 2080) nil (26107 50671 100402 128000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t)) . -2070) (undo-tree-id222 . -1) (#("r" 0 1 (fontified t)) . -2071) (undo-tree-id223 . -1) 2072) ((2070 . 2072)) (26107 49092 609002 788000) 0 nil])
([nil nil ((2070 . 2073)) nil (26107 50671 101282 714000) 0 nil])
([nil nil ((2070 . 2082)) ((#("ormalizada  " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t)) . 2070) (undo-tree-id372 . -12) (undo-tree-id373 . -11) (undo-tree-id374 . -11) (undo-tree-id375 . -11) (undo-tree-id376 . -11) (undo-tree-id377 . -11) (undo-tree-id378 . -11) (undo-tree-id379 . -11) (undo-tree-id380 . -11) (undo-tree-id381 . -11) (undo-tree-id382 . -11) (undo-tree-id383 . -12)) (26107 49092 568472 111000) 0 nil])
([nil nil ((#("\\\\p{InCombiningDiacriticalMarks}+" 0 33 (face font-lock-string-face fontified t)) . -1936) (undo-tree-id14 . -33) (undo-tree-id15 . -25) (undo-tree-id16 . -26) (undo-tree-id17 . -27) (undo-tree-id18 . -28) (undo-tree-id19 . -29) (undo-tree-id20 . -30) (undo-tree-id21 . -31) (undo-tree-id22 . -32) (undo-tree-id23 . -33) 1969) nil (26107 50683 548450 460000) 0 nil] [nil nil ((nil rear-nonsticky nil 2070 . 2071) (nil fontified nil 2067 . 2071) (2067 . 2071)) ((#("^a-z" 0 3 (fontified nil) 3 4 (rear-nonsticky nil fontified nil)) . 2067) (undo-tree-id13 . -4) (nil rear-nonsticky t 2070 . 2071)) (26107 50671 100375 358000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2081) (undo-tree-id221 . -1) 2082) ((2081 . 2082)) (26107 49092 528283 91000) 0 nil])
([nil nil ((1936 . 1938)) nil (26107 50683 548435 933000) 0 nil])
nil
([nil nil ((2081 . 2083)) ((#("- " 0 1 (fontified t) 1 2 (fontified t)) . 2081) (undo-tree-id370 . -2) (undo-tree-id371 . -2)) (26107 49092 487700 636000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1940 . 1941) (nil fontified nil 1937 . 1941) (1937 . 1941)) nil (26107 50683 548432 116000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -2081) (undo-tree-id219 . -1) (#(" " 0 1 (fontified t)) . -2082) (undo-tree-id220 . -1) 2083) ((2081 . 2083)) (26107 49092 446681 965000) 0 nil])
([nil nil ((1961 . 1967) (t 26107 50683 560943 207000)) nil (26107 50811 251942 188000) 0 nil])
([nil nil ((2081 . 2083)) ((#("= " 0 1 (fontified t) 1 2 (fontified t)) . 2081) (undo-tree-id362 . -2) (undo-tree-id363 . -2) (undo-tree-id364 . -2) (undo-tree-id365 . -2) (undo-tree-id366 . -2) (undo-tree-id367 . -2) (undo-tree-id368 . -2) (undo-tree-id369 . -2)) (26107 49092 406284 157000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t)) . -1962) (undo-tree-id69 . -1) (#("E" 0 1 (fontified t)) . -1963) (undo-tree-id70 . -1) (#("P" 0 1 (fontified t)) . -1964) (undo-tree-id71 . -1) (#("L" 0 1 (fontified t)) . -1965) (undo-tree-id72 . -1) (#("A" 0 1 (fontified t)) . -1966) (undo-tree-id73 . -1) 1967) nil (26107 50811 251940 415000) 0 nil])
([nil nil ((2083 . 2100)) ((#("textoDos.replace " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t)) . 2083) (undo-tree-id355 . -17) (undo-tree-id356 . -16) (undo-tree-id357 . -16) (undo-tree-id358 . -16) (undo-tree-id359 . -16) (undo-tree-id360 . -16) (undo-tree-id361 . -17)) (26107 49092 366144 450000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1984 . 1985) (nil fontified nil 1984 . 1985) (nil fontified nil 1982 . 1984) (nil fontified nil 1981 . 1982) (nil fontified nil 1980 . 1981) (nil fontified nil 1979 . 1980) (nil fontified nil 1978 . 1979) (nil fontified nil 1975 . 1978) (nil fontified nil 1974 . 1975) (nil fontified nil 1973 . 1974) (nil fontified nil 1962 . 1973) (1962 . 1985)) nil (26107 50811 251936 67000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2099) (undo-tree-id218 . -1) 2100) ((2099 . 2100)) (26107 49092 325557 758000) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-string-face fontified t)) . -1974) (undo-tree-id63 . -1) (#("^" 0 1 (face font-lock-string-face fontified t)) . -1975) (undo-tree-id64 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -1976) (undo-tree-id65 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -1977) (undo-tree-id66 . -1) (#("z" 0 1 (face font-lock-string-face fontified t rear-nonsticky t)) . -1978) (undo-tree-id67 . -1) (#("]" 0 1 (face font-lock-string-face fontified t)) . -1979) (undo-tree-id68 . -1) 1980) nil (26107 50811 251933 452000) 0 nil])
([nil nil ((2099 . 2100)) ((#("a" 0 1 (fontified t)) . 2099) (undo-tree-id353 . -1) (undo-tree-id354 . -1)) (26107 49092 285747 326000) 0 nil])
([nil nil ((1974 . 1975)) nil (26107 50811 251928 863000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2099) (undo-tree-id217 . -1) 2100) ((2099 . 2100)) (26107 49092 245224 303000) 0 nil])
([nil nil ((1944 . 1945)) nil (26107 50811 251928 403000) 0 nil])
([nil nil ((2099 . 2102)) ((#("All" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 2099) (undo-tree-id350 . -3) (undo-tree-id351 . -3) (undo-tree-id352 . -3)) (26107 49092 204398 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2109 . 2110) (nil fontified nil 2109 . 2110) (nil fontified nil 2107 . 2109) (nil fontified nil 2106 . 2107) (nil fontified nil 2105 . 2106) (nil fontified nil 2104 . 2105) (nil fontified nil 2103 . 2104) (nil fontified nil 2100 . 2103) (nil fontified nil 2099 . 2100) (nil fontified nil 2098 . 2099) (nil fontified nil 2087 . 2098) (2087 . 2110)) nil (26107 50811 251927 481000) 0 nil])
([nil nil ((2102 . 2104)) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 2102) (undo-tree-id348 . -1) (undo-tree-id349 . -1)) (26107 49092 164867 758000) 0 nil])
([nil nil ((#("[" 0 1 (face font-lock-string-face fontified t)) . -2099) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("^" 0 1 (face font-lock-string-face fontified t)) . -2100) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -2101) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -2102) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("z" 0 1 (face font-lock-string-face fontified t rear-nonsticky t)) . -2103) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("]" 0 1 (face font-lock-string-face fontified t)) . -2104) (undo-tree-id61 . -1) (undo-tree-id62 . -1) 2105) nil (26107 50811 251923 423000) 0 nil])
([nil nil ((2103 . 2105)) ((#("{{" 0 1 (fontified t) 1 2 (fontified t)) . 2103) (undo-tree-id345 . -2) (undo-tree-id346 . -2) (undo-tree-id347 . -2)) (26107 49092 124271 530000) 0 nil])
([nil nil ((2099 . 2100)) nil (26107 50811 251903 336000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 2105)) ((2105 . 2106)) (26107 49092 83729 644000) 0 nil])
([nil nil ((2087 . 2088)) nil (26107 50811 251902 755000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -2103) (undo-tree-id215 . -1) (#("{" 0 1 (fontified t)) . -2104) (undo-tree-id216 . -1) 2105) ((2103 . 2105)) (26107 49092 43834 267000) 0 nil])
([nil nil ((#("," 0 1 (c-type c-decl-id-start fontified t)) . -2087) (undo-tree-id26 . -1) 2088) nil (26107 50811 251901 523000) 0 nil])
([nil nil ((2103 . 2104)) ((#(")" 0 1 (fontified t)) . 2103)) (26107 49092 4108 539000) 0 nil])
([nil nil ((2087 . 2088)) nil (26107 50811 251899 168000) 0 nil])
([nil nil ((2103 . 2105)) ((#("\"\"" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t)) . 2103) (undo-tree-id336 . -1) (undo-tree-id337 . -2) (undo-tree-id338 . -2) (undo-tree-id339 . -2) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1)) (26107 49091 963341 985000) 0 nil])
([nil nil ((#("," 0 1 (c-type c-decl-id-start fontified t)) . -2087) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 2088) nil (26107 50811 251896 974000) 0 nil])
([nil nil ((2104 . 2106)) ((#("[]" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t)) . 2104) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1)) (26107 49091 921693 771000) 0 nil])
([nil nil ((2087 . 2088)) nil (26107 50861 893198 827000) 0 nil])
([nil nil ((2105 . 2106)) ((#("^" 0 1 (face font-lock-string-face fontified t)) . 2105) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1)) (26107 49091 881543 532000) 0 nil])
([nil nil ((1879 . 1884) (t 26107 50863 360517 683000)) nil (26108 24782 917481 311000) 0 nil] [nil nil ((#("		Lista<String> ord = lista.mergeSort((a,b) -> {
			String textoUno = Normalizer.normalize(a, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\").toLowerCase().replaceAll(\" \",\"\");
			String textoDos = Normalizer.normalize(b, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\").toLowerCase().replaceAll(\" \",\"\");
			
			return textoUno.compareTo(textoDos);
			
		    });	" 0 2 (fontified t) 2 7 (face font-lock-type-face fontified t) 7 8 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 8 14 (face font-lock-type-face fontified t) 14 15 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 15 16 (fontified t) 16 19 (face font-lock-variable-name-face fontified t) 19 49 (fontified t) 49 52 (fontified t) 52 57 (face font-lock-type-face fontified t) 57 58 (face font-lock-type-face c-type c-decl-id-start fontified t) 58 59 (fontified t) 59 67 (face font-lock-variable-name-face fontified t) 67 94 (fontified t) 94 104 (face font-lock-constant-face fontified t) 104 105 (fontified t) 105 109 (face font-lock-constant-face fontified t) 109 126 (fontified t) 126 127 (face font-lock-string-face fontified t) 127 128 (face font-lock-string-face fontified t) 128 131 (face font-lock-string-face fontified t) 131 132 (face font-lock-string-face rear-nonsticky t fontified t) 132 133 (face font-lock-string-face fontified t) 133 134 (face font-lock-string-face fontified t) 134 135 (fontified t) 135 136 (fontified t) 136 138 (face font-lock-string-face fontified t) 138 153 (fontified t) 153 154 (fontified t) 154 165 (fontified t) 165 166 (face font-lock-string-face fontified t) 166 167 (face font-lock-string-face fontified t) 167 168 (face font-lock-string-face fontified t) 168 169 (fontified t) 169 171 (face font-lock-string-face fontified t) 171 172 (rear-nonsticky t fontified t) 172 173 (fontified t) 173 174 (fontified t) 174 177 (fontified t) 177 182 (face font-lock-type-face fontified t) 182 183 (face font-lock-type-face c-type c-decl-id-start fontified t) 183 184 (fontified t) 184 192 (face font-lock-variable-name-face fontified t) 192 219 (fontified t) 219 229 (face font-lock-constant-face fontified t) 229 230 (fontified t) 230 234 (face font-lock-constant-face fontified t) 234 250 (fontified t) 250 251 (fontified t) 251 254 (face font-lock-string-face fontified t) 254 255 (face font-lock-string-face fontified t) 255 256 (face font-lock-string-face fontified t) 256 257 (face font-lock-string-face fontified t) 257 259 (face font-lock-string-face fontified t) 259 260 (fontified t) 260 261 (fontified t) 261 262 (face font-lock-string-face fontified t) 262 263 (face font-lock-string-face fontified t rear-nonsticky t) 263 277 (fontified t) 277 278 (fontified t) 278 279 (fontified t) 279 289 (fontified t) 289 290 (fontified t) 290 291 (face font-lock-string-face fontified t) 291 292 (face font-lock-string-face fontified t) 292 293 (face font-lock-string-face fontified t) 293 294 (fontified t) 294 296 (face font-lock-string-face fontified t) 296 297 (rear-nonsticky t fontified t) 297 298 (fontified t) 298 299 (fontified t) 299 306 (fontified t) 306 312 (face font-lock-keyword-face fontified t) 312 357 (fontified t)) . 1809) (undo-tree-id74 . -357) (undo-tree-id75 . -250) (undo-tree-id76 . -250) (undo-tree-id77 . -250) (undo-tree-id78 . -251) (undo-tree-id79 . -299) (undo-tree-id80 . -259) (undo-tree-id81 . -251) (undo-tree-id82 . -127) (undo-tree-id83 . -128) (undo-tree-id84 . -357) (undo-tree-id85 . -139) (undo-tree-id86 . -154) (undo-tree-id87 . -172) (undo-tree-id89 . -357) (undo-tree-id90 . -357) (undo-tree-id92 . -357) (undo-tree-id93 . -278) (undo-tree-id95 . -346) (t 26107 50811 261556 214000)) ((1809 . 2166)) (26107 50861 347368 860000) 0 nil])
([nil nil ((2106 . 2109)) ((#("\\\\p" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t)) . 2106) (undo-tree-id324 . -3) (undo-tree-id325 . -3) (undo-tree-id326 . -3)) (26107 49091 840111 308000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t)) . -1883) (undo-tree-id136 . -1) 1884) nil (26108 24782 917480 500000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2399 . 2400) (nil fontified nil 1822 . 2400) (nil fontified nil 1821 . 1822) (nil category c->-as-paren-syntax 1821 . 1822) (nil fontified nil 1815 . 1821) (nil fontified nil 1814 . 1815) (nil category c-<-as-paren-syntax 1814 . 1815) (nil fontified nil 1809 . 1814) (1809 . 2400)) ((#("Lista<String> ord = lista.mergeSort((a, b) -> {
    String textoUno = Normalizer.normalize(a, Normalizer.Form.NFD)
                            .replaceAll(\"[^a-z]\", \"\")
                            .toLowerCase()
                            .replaceAll(\"\\\\s\", \"\"); // Eliminar espacios en blanco
    String textoDos = Normalizer.normalize(b, Normalizer.Form.NFD)
                            .replaceAll(\"[^a-z]\", \"\")
                            .toLowerCase()
                            .replaceAll(\"\\\\s\", \"\"); // Eliminar espacios en blanco
    
    return textoUno.compareTo(textoDos);
});" 0 5 (face font-lock-type-face fontified nil) 5 6 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 6 12 (face font-lock-type-face fontified nil) 12 13 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 13 14 (fontified nil) 14 17 (face font-lock-variable-name-face fontified nil) 17 52 (fontified nil) 52 57 (face font-lock-type-face fontified nil) 57 58 (face font-lock-type-face c-type c-decl-id-start fontified nil) 58 59 (fontified nil) 59 67 (face font-lock-variable-name-face fontified nil) 67 94 (fontified nil) 94 104 (face font-lock-constant-face fontified nil) 104 105 (fontified nil) 105 109 (face font-lock-constant-face fontified nil) 109 155 (fontified nil) 155 163 (face font-lock-string-face fontified nil) 163 165 (fontified nil) 165 167 (face font-lock-string-face fontified nil) 167 252 (fontified nil) 252 257 (face font-lock-string-face fontified nil) 257 259 (fontified nil) 259 261 (face font-lock-string-face fontified nil) 261 263 (fontified nil) 263 264 (c-is-sws t c-in-sws t fontified nil) 264 265 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified nil) 265 267 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 267 295 (c-in-sws t face font-lock-comment-face fontified nil) 295 299 (c-in-sws t c-is-sws t fontified nil) 299 300 (face font-lock-type-face c-is-sws t fontified nil) 300 304 (face font-lock-type-face fontified nil) 304 305 (face font-lock-type-face c-type c-decl-id-start fontified nil) 305 306 (fontified nil) 306 314 (face font-lock-variable-name-face fontified nil) 314 341 (fontified nil) 341 351 (face font-lock-constant-face fontified nil) 351 352 (fontified nil) 352 356 (face font-lock-constant-face fontified nil) 356 402 (fontified nil) 402 410 (face font-lock-string-face fontified nil) 410 412 (fontified nil) 412 414 (face font-lock-string-face fontified nil) 414 499 (fontified nil) 499 504 (face font-lock-string-face fontified nil) 504 506 (fontified nil) 506 508 (face font-lock-string-face fontified nil) 508 511 (fontified nil) 511 514 (face font-lock-comment-delimiter-face fontified nil) 514 542 (face font-lock-comment-face fontified nil) 542 551 (fontified nil) 551 557 (face font-lock-keyword-face fontified nil) 557 590 (fontified nil) 590 591 (rear-nonsticky nil fontified nil)) . 1809) (undo-tree-id96 . -591) (undo-tree-id97 . -588) (undo-tree-id98 . -591) (undo-tree-id99 . -591) (undo-tree-id100 . -591) (undo-tree-id101 . -591) (nil rear-nonsticky t 2399 . 2400) (t 26107 50848 560808 934000)) (26107 50848 549756 949000) 0 nil])
([nil nil ((2109 . 2111)) ((#("{}" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t)) . 2109) (undo-tree-id322 . -1) (undo-tree-id323 . -1)) (26107 49091 240084 703000) 0 nil])
([nil nil ((1883 . 1886)) nil (26108 24782 917479 338000) 0 nil])
nil
([nil nil ((2110 . 2115)) ((#("ASCII" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 5 (face font-lock-string-face fontified t)) . 2110)) (26107 49091 72099 215000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1884) (undo-tree-id134 . -1) (#("r" 0 1 (fontified t)) . -1885) (undo-tree-id135 . -1) 1886) nil (26108 24782 917478 46000) 0 nil])
([nil nil ((2118 . 2119)) ((#("," 0 1 (fontified t)) . 2118) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1)) (26107 49090 905989 241000) 0 nil])
([nil nil ((1884 . 1889)) nil (26108 24782 917476 173000) 0 nil])
([nil nil ((2119 . 2121)) ((#(" \"" 0 1 (fontified t) 1 2 (face font-lock-warning-face fontified t)) . 2119) (undo-tree-id317 . -2) (undo-tree-id318 . -2)) (26107 49090 737939 167000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1887) (undo-tree-id132 . -1) (#("c" 0 1 (fontified t)) . -1888) (undo-tree-id133 . -1) 1889) nil (26108 24782 917475 442000) 0 nil])
([nil nil ((2121 . 2122)) ((#("\"" 0 1 (face font-lock-string-face fontified t)) . 2121)) (26107 49090 568018 252000) 0 nil])
([nil nil ((1887 . 1890)) nil (26108 24782 917473 589000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2119) (undo-tree-id214 . -1) 2120) ((2119 . 2120)) (26107 49090 396113 483000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1889) (undo-tree-id131 . -1) 1890) nil (26108 24782 917472 878000) 0 nil])
([nil nil ((2122 . 2123)) ((#(";" 0 1 (fontified t)) . 2122)) (26107 49090 234952 697000) 0 nil])
([nil nil ((1889 . 1891)) nil (26108 24782 917471 626000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2139) (undo-tree-id207 . -1) (#("x" 0 1 (fontified t)) . -2140) (undo-tree-id208 . -1) (#("t" 0 1 (fontified t)) . -2141) (undo-tree-id209 . -1) (#("o" 0 1 (fontified t)) . -2142) (undo-tree-id210 . -1) (#("U" 0 1 (fontified t)) . -2143) (undo-tree-id211 . -1) (#("n" 0 1 (fontified t)) . -2144) (undo-tree-id212 . -1) (#("o" 0 1 (fontified t)) . -2145) (undo-tree-id213 . -1) 2146) ((2139 . 2146)) (26107 49090 69005 381000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1879) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("t" 0 1 (fontified t)) . -1880) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("o" 0 1 (fontified t)) . -1881) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (#("L" 0 1 (fontified t)) . -1882) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (#("o" 0 1 (fontified t)) . -1883) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#("w" 0 1 (fontified t)) . -1884) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#("e" 0 1 (fontified t)) . -1885) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("r" 0 1 (fontified t)) . -1886) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("C" 0 1 (fontified t)) . -1887) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("a" 0 1 (fontified t)) . -1888) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("s" 0 1 (fontified t)) . -1889) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (#("e" 0 1 (fontified t)) . -1890) (undo-tree-id129 . -1) (undo-tree-id130 . -1) 1891) nil (26108 24782 917469 353000) 0 nil])
([nil nil ((2139 . 2140)) ((#("a" 0 1 (fontified t)) . 2139) (undo-tree-id315 . -1) (undo-tree-id316 . -1)) (26107 49089 894596 819000) 0 nil])
([nil nil ((1879 . 1883)) nil (26108 24782 917453 790000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2138) (undo-tree-id205 . -1) (#("a" 0 1 (fontified t)) . -2139) (undo-tree-id206 . -1) 2140) ((2138 . 2140)) (26107 49089 728352 980000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t)) . -1882) (undo-tree-id106 . -1) 1883) nil (26108 24782 917453 99000) 0 nil])
([nil nil ((2138 . 2141)) ((#("aBo" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 2138) (undo-tree-id311 . -3) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -3)) (26107 49089 556401 469000) 0 nil])
([nil nil ((1882 . 1892)) nil (26108 24782 917451 837000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t)) . -2139) (undo-tree-id203 . -1) (#("o" 0 1 (fontified t)) . -2140) (undo-tree-id204 . -1) 2141) ((2139 . 2141)) (26107 49089 386601 426000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1890) (undo-tree-id104 . -1) (#("s" 0 1 (fontified t)) . -1891) (undo-tree-id105 . -1) 1892) nil (26108 24782 917451 106000) 0 nil])
([nil nil ((2139 . 2148)) ((#("Normaliza" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 2139) (undo-tree-id309 . -9) (undo-tree-id310 . -9)) (26107 49089 218195 450000) 0 nil])
([nil nil ((1890 . 1892)) nil (26108 24782 917449 213000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2147) (undo-tree-id202 . -1) 2148) ((2147 . 2148)) (26107 49089 52672 915000) 0 nil])
([nil nil ((1892 . 1893)) nil (26108 24782 917448 702000) 0 nil])
([nil nil ((2147 . 2150)) ((#("ada" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 2147)) (26107 49088 872591 157000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1892) (undo-tree-id103 . -1) 1893) nil (26108 24782 917447 951000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2161) (undo-tree-id184 . -1) (undo-tree-id186 . -1) (undo-tree-id188 . -1) (#("e" 0 1 (fontified t)) . -2162) (undo-tree-id189 . -1) (undo-tree-id191 . -1) (#("x" 0 1 (fontified t)) . -2163) (undo-tree-id193 . -1) (undo-tree-id195 . -1) (#("t" 0 1 (fontified t)) . -2164) (undo-tree-id196 . -1) (#("o" 0 1 (fontified t)) . -2165) (undo-tree-id198 . -1) (#("D" 0 1 (fontified t)) . -2166) (undo-tree-id199 . -1) (#("o" 0 1 (fontified t)) . -2167) (undo-tree-id200 . -1) (#("s" 0 1 (fontified t)) . -2168) (undo-tree-id201 . -1) 2169) ((2161 . 2169)) (26107 49088 700984 453000) 0 nil])
([nil nil ((1892 . 1894)) nil (26108 24782 917446 839000) 0 nil])
([nil nil ((2161 . 2165)) ((#("b.no" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 2161) (undo-tree-id304 . -4) (undo-tree-id305 . -1) (undo-tree-id306 . -3) (undo-tree-id307 . -2) (undo-tree-id308 . -4)) (26107 49088 514861 869000) 0 nil])
([nil nil ((1894 . 1902)) nil (26108 24782 917446 228000) 0 nil])
([nil nil ((2165 . 2174)) ((#("rmalizada" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 2165)) (26107 49088 340608 731000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1913 . 1914) (nil fontified nil 1912 . 1914) (nil fontified nil 1910 . 1912) (nil fontified nil 1909 . 1910) (nil fontified nil 1906 . 1909) (nil fontified nil 1894 . 1906) (1894 . 1914)) nil (26108 24782 917445 467000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2162) (undo-tree-id303 . -1) 2163 (t 26107 48833 146191 43000)) ((2162 . 2163)) (26107 49088 136630 4000) 0 nil])
([nil nil ((1919 . 1921)) nil (26108 24782 917444 215000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -2162) (undo-tree-id301 . -1) 2163) ((2162 . 2163)) (26107 49087 910938 848000) 0 nil])
([nil nil ((#("y" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1920) (undo-tree-id102 . -1) 1921) nil (26108 24782 917443 664000) 0 nil])
([nil nil ((2162 . 2163)) ((#("N" 0 1 (fontified t)) . 2162) (t 26107 48858 410362 661000)) (26107 48858 398723 894000) 0 nil])
([nil nil ((1920 . 1926)) nil (26108 24782 917442 523000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -1925) (undo-tree-id101 . -1) 1926) nil (26108 24782 917441 822000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1918) (undo-tree-id100 . -1) 1919) nil (26108 24782 917440 289000) 0 nil])
([nil nil ((1926 . 1931)) nil (26108 24782 917438 967000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1929) (undo-tree-id98 . -1) (#("m" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1930) (undo-tree-id99 . -1) 1931) nil (26108 24782 917438 226000) 0 nil])
([nil nil ((1929 . 1932)) nil (26108 24782 917436 323000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1930) (undo-tree-id96 . -1) (#("a" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1931) (undo-tree-id97 . -1) 1932) nil (26108 24782 917435 582000) 0 nil])
([nil nil ((1930 . 1932)) nil (26108 24782 917409 894000) 0 nil])
([nil nil ((1932 . 1938)) nil (26108 24782 917408 972000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1925) (undo-tree-id95 . -1) 1926) nil (26108 24782 917408 291000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1959) (undo-tree-id94 . -1) 1960) nil (26108 24782 917406 979000) 0 nil])
([nil nil ((1959 . 1967)) nil (26108 24782 917405 747000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -1965) (undo-tree-id92 . -1) (#("o" 0 1 (fontified t)) . -1966) (undo-tree-id93 . -1) 1967) nil (26108 24782 917404 956000) 0 nil])
([nil nil ((1965 . 1967)) nil (26108 24782 917402 963000) 0 nil])
([nil nil ((#("toLowerCase().replaceAll(\" \",\"\");" 0 25 (fontified t) 25 28 (face font-lock-string-face fontified t) 28 29 (fontified t) 29 31 (face font-lock-string-face fontified t) 31 33 (fontified t)) . 2015) (undo-tree-id85 . -33) (undo-tree-id86 . -14) (undo-tree-id87 . -14) (undo-tree-id88 . -30) (undo-tree-id89 . -33) (undo-tree-id90 . -14) (undo-tree-id91 . -33)) nil (26108 24782 917402 72000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2014) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) 2015) nil (26108 24782 917396 804000) 0 nil])
([nil nil ((1808 . 1811)) nil (26108 24782 917391 636000) 0 nil])
([nil nil ((2040 . 2047) (#("			    " 0 7 (fontified nil)) . 2039) (undo-tree-id75 . -7) (2039 . 2047) (#(" " 0 1 (fontified nil)) . 2038) (undo-tree-id76 . -1) (2039 . 2040)) nil (26108 24782 917390 665000) 0 nil])
([nil nil ((2039 . 2046)) nil (26108 24782 917388 622000) 0 nil])
([nil nil ((2038 . 2041)) nil (26108 24782 917388 31000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2039) (undo-tree-id73 . -1) (#("." 0 1 (fontified t)) . -2040) (undo-tree-id74 . -1) 2041) nil (26108 24782 917387 200000) 0 nil])
([nil nil ((nil fontified nil 2074 . 2075) (nil fontified nil 2073 . 2074) (nil fontified nil 2071 . 2073) (nil fontified nil 2070 . 2071) (nil fontified nil 2067 . 2070) (nil fontified nil 2055 . 2067) (nil fontified nil 2054 . 2055) (nil fontified nil 2053 . 2054) (nil fontified nil 2052 . 2053) (nil fontified nil 2051 . 2052) (nil fontified nil 2050 . 2051) (nil fontified nil 2049 . 2050) (nil fontified nil 2048 . 2049) (nil fontified nil 2047 . 2048) (nil fontified nil 2046 . 2047) (nil fontified nil 2045 . 2046) (nil fontified nil 2044 . 2045) (nil fontified nil 2043 . 2044) (nil fontified nil 2042 . 2043) (nil fontified nil 2041 . 2042) (nil fontified nil 2040 . 2041) (nil fontified nil 2039 . 2040) (2039 . 2075)) nil (26108 24782 917384 506000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2039) (undo-tree-id72 . -1) 2040) nil (26108 24782 917380 720000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2039) (undo-tree-id71 . -1) 2040) nil (26108 24782 917379 268000) 0 nil])
([nil nil ((2039 . 2040)) nil (26108 24782 917378 66000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2086) (undo-tree-id68 . -1) (#(" " 0 1 (fontified t)) . -2087) (undo-tree-id69 . -1) (#(" " 0 1 (fontified t)) . -2088) (undo-tree-id70 . -1) 2089) nil (26108 24782 917377 44000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2085) (undo-tree-id59 . -1) (#(" " 0 1 (fontified t)) . -2086) (undo-tree-id60 . -1) (#(" " 0 1 (fontified t)) . -2087) (undo-tree-id61 . -1) (#(" " 0 1 (fontified t)) . -2088) (undo-tree-id62 . -1) (#(" " 0 1 (fontified t)) . -2089) (undo-tree-id63 . -1) (#(" " 0 1 (fontified t)) . -2090) (undo-tree-id64 . -1) (#(" " 0 1 (fontified t)) . -2091) (undo-tree-id65 . -1) (#(" " 0 1 (fontified nil)) . -2092) (undo-tree-id66 . -1) (#("	" 0 1 (fontified nil)) . 2093) (undo-tree-id67 . -1) (2085 . 2093) 2086) nil (26108 24782 917372 918000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2084) (undo-tree-id50 . -1) (#(" " 0 1 (fontified t)) . -2085) (undo-tree-id51 . -1) (#(" " 0 1 (fontified t)) . -2086) (undo-tree-id52 . -1) (#(" " 0 1 (fontified t)) . -2087) (undo-tree-id53 . -1) (#(" " 0 1 (fontified t)) . -2088) (undo-tree-id54 . -1) (#(" " 0 1 (fontified t)) . -2089) (undo-tree-id55 . -1) (#(" " 0 1 (fontified t)) . -2090) (undo-tree-id56 . -1) (#(" " 0 1 (fontified nil)) . -2091) (undo-tree-id57 . -1) (#("	" 0 1 (fontified nil)) . 2092) (undo-tree-id58 . -1) (2084 . 2092) 2085) nil (26108 24782 917363 224000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2089) (undo-tree-id47 . -1) (#(" " 0 1 (fontified nil)) . -2090) (undo-tree-id48 . -1) (#("	" 0 1 (fontified nil)) . 2091) (undo-tree-id49 . -1) (2083 . 2091) 2084) nil (26108 24782 917356 814000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2078) (undo-tree-id36 . -1) (#(" " 0 1 (fontified t)) . -2079) (undo-tree-id37 . -1) (#(" " 0 1 (fontified t)) . -2080) (undo-tree-id38 . -1) (#(" " 0 1 (fontified t)) . -2081) (undo-tree-id39 . -1) (#("
" 0 1 (fontified t)) . -2082) (undo-tree-id40 . -1) (#(" " 0 1 (fontified t)) . -2083) (undo-tree-id41 . -1) (#(" " 0 1 (fontified t)) . -2084) (undo-tree-id42 . -1) (#(" " 0 1 (fontified t)) . -2085) (undo-tree-id43 . -1) (#(" " 0 1 (fontified t)) . -2086) (undo-tree-id44 . -1) (#(" " 0 1 (fontified t)) . -2087) (undo-tree-id45 . -1) (#(" " 0 1 (fontified t)) . -2088) (undo-tree-id46 . -1) 2089) nil (26108 24782 917352 237000) 0 nil])
([nil nil ((2075 . 2078) (#("			 " 0 3 (fontified t) 3 4 (fontified t)) . 2075) (undo-tree-id35 . -3) 2078) nil (26108 24782 917343 384000) 0 nil])
([nil nil ((2078 . 2085)) nil (26108 24782 917342 122000) 0 nil])
([nil nil ((2085 . 2094)) nil (26108 24782 917341 561000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -2115) (undo-tree-id34 . -1) 2116) nil (26108 24782 917340 710000) 0 nil])
([nil nil ((2115 . 2123)) nil (26108 24782 917339 157000) 0 nil])
([nil nil ((#("().replaceAll(\" \",\"\")" 0 14 (fontified t) 14 17 (face font-lock-string-face fontified t) 17 18 (fontified t) 18 20 (face font-lock-string-face fontified t) 20 21 (fontified t)) . 2182) (undo-tree-id33 . -21)) nil (26108 24782 917337 946000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2170) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("t" 0 1 (fontified t)) . -2171) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("o" 0 1 (fontified t)) . -2172) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("L" 0 1 (fontified t)) . -2173) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("o" 0 1 (fontified t)) . -2174) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("w" 0 1 (fontified t)) . -2175) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("e" 0 1 (fontified t)) . -2176) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("r" 0 1 (fontified t)) . -2177) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("C" 0 1 (fontified t)) . -2178) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("a" 0 1 (fontified t)) . -2179) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("s" 0 1 (fontified t)) . -2180) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("e" 0 1 (fontified t)) . -2181) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 2182) nil (26108 24782 917334 651000) 0 nil])
([nil nil ((2173 . 2176) (#("			" 0 3 (fontified nil)) . 2172) (undo-tree-id8 . -3) (2175 . 2176)) nil (26108 24782 917318 416000) 0 nil])
([nil nil ((2172 . 2175)) nil (26108 24782 917316 824000) 0 nil])
([nil nil ((2173 . 2176) (#("			" 0 3 (fontified nil)) . 2172) (undo-tree-id7 . -3) (2175 . 2176)) nil (26108 24782 917315 872000) 0 nil])
([nil nil ((2176 . 2177)) nil (26108 24782 917314 440000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2176) (undo-tree-id6 . -1) 2177) nil (26108 24782 917313 889000) 0 nil])
([nil nil ((2176 . 2189)) nil (26108 24782 917312 698000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2188) (undo-tree-id5 . -1) 2189) nil (26108 24782 917311 987000) 0 nil])
([nil nil ((2188 . 2194)) nil (26108 24782 917310 735000) 0 nil])
([nil nil ((2194 . 2196)) nil (26108 24782 917310 234000) 0 nil])
([nil nil ((2195 . 2196)) nil (26108 24782 917309 663000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -2195) (undo-tree-id4 . -1) 2196) nil (26108 24782 917308 842000) 0 nil])
([nil nil ((2195 . 2196)) nil (26108 24782 917306 829000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face fontified t)) . -2195) (undo-tree-id3 . -1) 2196) nil (26108 24782 917305 547000) 0 nil])
([nil nil ((2195 . 2197)) nil (26108 24782 917303 934000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2196) (undo-tree-id2 . -1) 2197) nil (26108 24782 917302 683000) 0 nil])
([nil nil ((2196 . 2205)) nil (26108 24782 917300 579000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2204) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 2205) nil (26108 24782 917299 87000) 0 nil])
([nil nil ((2205 . 2206)) nil (26108 24782 917279 798000) 0 nil])
([nil nil (2173) nil (26108 24782 918349 105000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2239 . 2240) (nil fontified nil 2239 . 2240) (nil fontified nil 2238 . 2239) (nil fontified nil 2237 . 2238) (nil fontified nil 2236 . 2237) (nil fontified nil 2235 . 2236) (nil fontified nil 2234 . 2235) (nil fontified nil 2233 . 2234) (nil fontified nil 2232 . 2233) (nil fontified nil 2231 . 2232) (nil fontified nil 2230 . 2231) (nil fontified nil 2229 . 2230) (nil fontified nil 2228 . 2229) (nil fontified nil 2227 . 2228) (nil fontified nil 2226 . 2227) (nil fontified nil 2225 . 2226) (nil fontified nil 2224 . 2225) (nil fontified nil 2223 . 2224) (nil fontified nil 2222 . 2223) (nil fontified nil 2221 . 2222) (nil fontified nil 2220 . 2221) (nil fontified nil 2219 . 2220) (nil fontified nil 2218 . 2219) (nil fontified nil 2217 . 2218) (nil fontified nil 2216 . 2217) (nil fontified nil 2215 . 2216) (nil fontified nil 2214 . 2215) (nil fontified nil 2213 . 2214) (nil fontified nil 2212 . 2213) (nil fontified nil 2211 . 2212) (nil fontified nil 2210 . 2211) (nil fontified nil 2207 . 2210) (2207 . 2240)) nil (26108 24848 611711 603000) 0 nil] [nil nil ((nil fontified nil 2242 . 2243) (nil fontified nil 2241 . 2242) (nil fontified nil 2239 . 2241) (nil fontified nil 2238 . 2239) (nil fontified nil 2235 . 2238) (nil fontified nil 2223 . 2235) (nil fontified nil 2222 . 2223) (nil fontified nil 2221 . 2222) (nil fontified nil 2220 . 2221) (nil fontified nil 2219 . 2220) (nil fontified nil 2218 . 2219) (nil fontified nil 2217 . 2218) (nil fontified nil 2216 . 2217) (nil fontified nil 2215 . 2216) (nil fontified nil 2214 . 2215) (nil fontified nil 2213 . 2214) (nil fontified nil 2212 . 2213) (nil fontified nil 2211 . 2212) (nil fontified nil 2210 . 2211) (nil fontified nil 2209 . 2210) (nil fontified nil 2208 . 2209) (nil fontified nil 2207 . 2208) (2207 . 2243)) ((#(" a.toLowerCase().replaceAll(\" \",\"\");" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 28 (fontified nil) 28 31 (face font-lock-string-face fontified nil) 31 32 (fontified nil) 32 34 (face font-lock-string-face fontified nil) 34 35 (fontified nil) 35 36 (fontified nil rear-nonsticky t)) . 2207) (undo-tree-id137 . -17) (nil fontified t 2242 . 2243)) (26108 24782 917273 248000) 0 nil])
([nil nil ((2241 . 2244) (#("			" 0 3 (fontified nil)) . 2241) (2240 . 2241)) nil (26108 24848 611706 474000) 0 nil])
nil
([nil nil ((#("p" 0 1 (fontified t)) . -2229) (undo-tree-id160 . -1) (#("r" 0 1 (fontified t)) . -2230) (undo-tree-id161 . -1) (#("i" 0 1 (fontified t)) . -2231) (undo-tree-id162 . -1) (#("m" 0 1 (fontified t)) . -2232) (undo-tree-id163 . -1) (#("a" 0 1 (fontified t)) . -2233) (undo-tree-id164 . -1) (#("v" 0 1 (fontified t)) . -2234) (undo-tree-id165 . -1) (#("e" 0 1 (fontified t)) . -2235) (undo-tree-id166 . -1) (#("r" 0 1 (fontified t)) . -2236) (undo-tree-id167 . -1) (#("a" 0 1 (fontified t)) . -2237) (undo-tree-id168 . -1) 2238) nil (26108 24848 611704 381000) 0 nil])
([nil nil ((2229 . 2233)) nil (26108 24848 611698 170000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -2229) (undo-tree-id156 . -1) (#("r" 0 1 (fontified t)) . -2230) (undo-tree-id157 . -1) (#("e" 0 1 (fontified t)) . -2231) (undo-tree-id158 . -1) (#("r" 0 1 (fontified t)) . -2232) (undo-tree-id159 . -1) 2233) nil (26108 24848 611696 998000) 0 nil])
([nil nil ((2229 . 2235)) nil (26108 24848 611674 59000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2252) (undo-tree-id148 . -1) (#("e" 0 1 (fontified t)) . -2253) (undo-tree-id149 . -1) (#("x" 0 1 (fontified t)) . -2254) (undo-tree-id150 . -1) (#("t" 0 1 (fontified t)) . -2255) (undo-tree-id151 . -1) (#("o" 0 1 (fontified t)) . -2256) (undo-tree-id152 . -1) (#("U" 0 1 (fontified t)) . -2257) (undo-tree-id153 . -1) (#("n" 0 1 (fontified t)) . -2258) (undo-tree-id154 . -1) (#("o" 0 1 (fontified t)) . -2259) (undo-tree-id155 . -1) 2260) nil (26108 24848 611672 286000) 0 nil])
([nil nil ((2252 . 2259)) nil (26108 24848 611664 783000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2257) (undo-tree-id146 . -1) (#("r" 0 1 (fontified t)) . -2258) (undo-tree-id147 . -1) 2259) nil (26108 24848 611663 962000) 0 nil])
([nil nil ((2257 . 2261)) nil (26108 24848 611661 828000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -2274) (undo-tree-id140 . -1) (#("t" 0 1 (fontified t)) . -2275) (undo-tree-id141 . -1) (#("o" 0 1 (fontified t)) . -2276) (undo-tree-id142 . -1) (#("D" 0 1 (fontified t)) . -2277) (undo-tree-id143 . -1) (#("o" 0 1 (fontified t)) . -2278) (undo-tree-id144 . -1) (#("s" 0 1 (fontified t)) . -2279) (undo-tree-id145 . -1) 2280) nil (26108 24848 611659 804000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2272) (undo-tree-id138 . -1) (#("e" 0 1 (fontified t)) . -2273) (undo-tree-id139 . -1) 2274) nil (26108 24848 611653 183000) 0 nil])
([nil nil ((2272 . 2278)) nil (26108 24848 611641 694000) 0 nil])
([nil nil ((2017 . 2018)) nil (26108 24848 611638 87000) 0 nil])
([nil nil ((2174 . 2177) (#("		" 0 2 (fontified nil)) . 2174) (undo-tree-id169 . -2) (2176 . 2178) (t 26108 24848 626664 290000)) nil (26108 24950 214092 365000) 0 nil])
([nil nil ((2214 . 2216)) nil (26108 24950 214081 977000) 0 nil])
([nil nil ((2216 . 2217)) nil (26108 24950 214078 130000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -1871) (undo-tree-id247 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1872) (undo-tree-id248 . -1) (#("x" 0 1 (face font-lock-variable-name-face fontified t)) . -1873) (undo-tree-id249 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -1874) (undo-tree-id250 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -1875) (undo-tree-id251 . -1) (#("U" 0 1 (face font-lock-variable-name-face fontified t)) . -1876) (undo-tree-id252 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -1877) (undo-tree-id253 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -1878) (undo-tree-id254 . -1) 1879 (t 26108 24950 225476 103000)) nil (26108 25262 780529 565000) 0 nil])
([nil nil ((1871 . 1872)) nil (26108 25262 780522 873000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-variable-name-face fontified t)) . -1871) (undo-tree-id246 . -1) 1872) nil (26108 25262 780522 252000) 0 nil])
([nil nil ((1871 . 1873)) nil (26108 25262 780521 160000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -1871) (undo-tree-id244 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -1872) (undo-tree-id245 . -1) 1873) nil (26108 25262 780520 408000) 0 nil])
([nil nil ((1871 . 1880)) nil (26108 25262 780518 625000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-variable-name-face fontified t)) . -1934) (undo-tree-id240 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1935) (undo-tree-id241 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -1936) (undo-tree-id242 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -1937) (undo-tree-id243 . -1) 1938) nil (26108 25262 780517 733000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -1929) (undo-tree-id235 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -1930) (undo-tree-id236 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -1931) (undo-tree-id237 . -1) (#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -1932) (undo-tree-id238 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -1933) (undo-tree-id239 . -1) 1934) nil (26108 25262 780514 237000) 0 nil])
([nil nil ((1929 . 1931)) nil (26108 25262 780510 340000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -1930) (undo-tree-id234 . -1) 1931) nil (26108 25262 780509 618000) 0 nil])
([nil nil ((1930 . 1936)) nil (26108 25262 780508 25000) 0 nil])
([nil nil ((#("C" 0 1 (face font-lock-variable-name-face fontified t)) . -1934) (undo-tree-id232 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1935) (undo-tree-id233 . -1) 1936) nil (26108 25262 780507 94000) 0 nil])
([nil nil ((1934 . 1940)) nil (26108 25262 780488 880000) 0 nil])
([nil nil ((2032 . 2034)) nil (26108 25262 780488 409000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -2033) (undo-tree-id231 . -1) 2034) nil (26108 25262 780487 768000) 0 nil])
([nil nil ((2033 . 2041)) nil (26108 25262 780486 536000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -2041) (undo-tree-id223 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -2042) (undo-tree-id224 . -1) (#("x" 0 1 (face font-lock-variable-name-face fontified t)) . -2043) (undo-tree-id225 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -2044) (undo-tree-id226 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2045) (undo-tree-id227 . -1) (#("D" 0 1 (face font-lock-variable-name-face fontified t)) . -2046) (undo-tree-id228 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2047) (undo-tree-id229 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -2048) (undo-tree-id230 . -1) 2049) nil (26108 25262 780485 323000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-variable-name-face fontified t)) . -2090) (undo-tree-id217 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -2091) (undo-tree-id218 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -2092) (undo-tree-id219 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -2093) (undo-tree-id220 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -2094) (undo-tree-id221 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2095) (undo-tree-id222 . -1) 2096) nil (26108 25262 780479 433000) 0 nil])
([nil nil ((2090 . 2094)) nil (26108 25262 780474 904000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -2092) (undo-tree-id215 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2093) (undo-tree-id216 . -1) 2094) nil (26108 25262 780473 912000) 0 nil])
([nil nil ((2092 . 2101)) nil (26108 25262 780471 748000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1943) (undo-tree-id214 . -1) 1944) nil (26108 25262 780470 766000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1971) (undo-tree-id213 . -1) 1972) nil (26108 25262 780468 643000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1964) (undo-tree-id206 . -1) (#("e" 0 1 (fontified t)) . -1965) (undo-tree-id207 . -1) (#("x" 0 1 (fontified t)) . -1966) (undo-tree-id208 . -1) (#("t" 0 1 (fontified t)) . -1967) (undo-tree-id209 . -1) (#("o" 0 1 (fontified t)) . -1968) (undo-tree-id210 . -1) (#("U" 0 1 (fontified t)) . -1969) (undo-tree-id211 . -1) (#("n" 0 1 (fontified t)) . -1970) (undo-tree-id212 . -1) 1971) nil (26108 25262 780465 577000) 0 nil])
([nil nil ((1964 . 1973)) nil (26108 25262 780459 736000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -2125) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#("e" 0 1 (fontified t)) . -2126) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (#("x" 0 1 (fontified t)) . -2127) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (#("t" 0 1 (fontified t)) . -2128) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (#("o" 0 1 (fontified t)) . -2129) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#("D" 0 1 (fontified t)) . -2130) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (#("o" 0 1 (fontified t)) . -2131) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (#("s" 0 1 (fontified t)) . -2132) (undo-tree-id205 . -1) 2133) nil (26108 25262 780455 659000) 0 nil])
([nil nil ((2125 . 2134)) nil (26108 25262 780423 108000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-variable-name-face fontified t)) . -1930) (undo-tree-id315 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -1931) (undo-tree-id316 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -1932) (undo-tree-id317 . -1) (#("A" 0 1 (face font-lock-variable-name-face fontified t)) . -1933) (undo-tree-id318 . -1) (#("c" 0 1 (face font-lock-variable-name-face fontified t)) . -1934) (undo-tree-id319 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1935) (undo-tree-id320 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -1936) (undo-tree-id321 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -1937) (undo-tree-id322 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -1938) (undo-tree-id323 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -1939) (undo-tree-id324 . -1) 1940 (t 26108 25262 789100 884000)) nil (26108 25375 646184 952000) 0 nil])
([nil nil ((1930 . 1936)) nil (26108 25375 646176 417000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-variable-name-face fontified t)) . -2087) (undo-tree-id305 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -2088) (undo-tree-id306 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -2089) (undo-tree-id307 . -1) (#("A" 0 1 (face font-lock-variable-name-face fontified t)) . -2090) (undo-tree-id308 . -1) (#("c" 0 1 (face font-lock-variable-name-face fontified t)) . -2091) (undo-tree-id309 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -2092) (undo-tree-id310 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -2093) (undo-tree-id311 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -2094) (undo-tree-id312 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -2095) (undo-tree-id313 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -2096) (undo-tree-id314 . -1) 2097) nil (26108 25375 646174 473000) 0 nil])
([nil nil ((2087 . 2093)) nil (26108 25375 646167 400000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -2261) (undo-tree-id296 . -1) (#("r" 0 1 (fontified t)) . -2262) (undo-tree-id297 . -1) (#("i" 0 1 (fontified t)) . -2263) (undo-tree-id298 . -1) (#("m" 0 1 (fontified t)) . -2264) (undo-tree-id299 . -1) (#("a" 0 1 (fontified t)) . -2265) (undo-tree-id300 . -1) (#("v" 0 1 (fontified t)) . -2266) (undo-tree-id301 . -1) (#("e" 0 1 (fontified t)) . -2267) (undo-tree-id302 . -1) (#("r" 0 1 (fontified t)) . -2268) (undo-tree-id303 . -1) (#("a" 0 1 (fontified t)) . -2269) (undo-tree-id304 . -1) 2270) nil (26108 25375 646165 657000) 0 nil])
([nil nil ((2261 . 2268)) nil (26108 25375 646158 363000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -2279) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (#("e" 0 1 (fontified t)) . -2280) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#("r" 0 1 (fontified t)) . -2281) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#("a" 0 1 (fontified t)) . -2282) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (#("n" 0 1 (fontified t)) . -2283) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (#("o" 0 1 (fontified t)) . -2284) (undo-tree-id294 . -1) (undo-tree-id295 . -1) 2285) nil (26108 25375 646154 416000) 0 nil])
([nil nil ((2279 . 2286)) nil (26108 25375 646118 560000) 0 nil])
([nil nil ((2288 . 2289) (t 26108 25375 655807 209000)) nil (26108 27860 44739 784000) 0 nil])
([nil nil ((2289 . 2293)) nil (26108 27860 44739 23000) 0 nil])
([nil nil ((2293 . 2299)) nil (26108 27860 44738 512000) 0 nil])
([nil nil ((2299 . 2300)) nil (26108 27860 44737 861000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2299) (undo-tree-id373 . -1) 2300) nil (26108 27860 44737 160000) 0 nil])
([nil nil ((2299 . 2303)) nil (26108 27860 44735 607000) 0 nil])
([nil nil ((#("S" 0 1 (c-is-sws t fontified t)) . -2293) (undo-tree-id363 . -1) (#("y" 0 1 (fontified t)) . -2294) (undo-tree-id364 . -1) (#("s" 0 1 (fontified t)) . -2295) (undo-tree-id365 . -1) (#("t" 0 1 (fontified t)) . -2296) (undo-tree-id366 . -1) (#("e" 0 1 (fontified t)) . -2297) (undo-tree-id367 . -1) (#("m" 0 1 (fontified t)) . -2298) (undo-tree-id368 . -1) (#("." 0 1 (fontified t)) . -2299) (undo-tree-id369 . -1) (#("o" 0 1 (fontified t)) . -2300) (undo-tree-id370 . -1) (#("u" 0 1 (fontified t)) . -2301) (undo-tree-id371 . -1) (#("t" 0 1 (fontified t)) . -2302) (undo-tree-id372 . -1) 2303) nil (26108 27860 44733 503000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t c-is-sws t)) . -2292) (undo-tree-id354 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -2293) (undo-tree-id355 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -2294) (undo-tree-id356 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -2295) (undo-tree-id357 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -2296) (undo-tree-id358 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -2297) (undo-tree-id359 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -2298) (undo-tree-id360 . -1) (#(" " 0 1 (fontified nil c-is-sws t)) . -2299) (undo-tree-id361 . -1) (#("	" 0 1 (c-is-sws t fontified nil)) . 2300) (undo-tree-id362 . -1) (2292 . 2300) 2293) nil (26108 27860 44725 107000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t c-is-sws t)) . -2296) (undo-tree-id350 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -2297) (undo-tree-id351 . -1) (#(" " 0 1 (fontified nil c-is-sws t)) . -2298) (undo-tree-id352 . -1) (#("	" 0 1 (c-is-sws t fontified nil)) . 2299) (undo-tree-id353 . -1) (2291 . 2299) 2292) nil (26108 27860 44716 822000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t c-is-sws t)) . -2291) (undo-tree-id345 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -2292) (undo-tree-id346 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -2293) (undo-tree-id347 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -2294) (undo-tree-id348 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -2295) (undo-tree-id349 . -1) 2296) nil (26108 27860 44712 995000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t c-is-sws t)) . -2293) (undo-tree-id339 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -2294) (undo-tree-id340 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -2295) (undo-tree-id341 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -2296) (undo-tree-id342 . -1) (#(" " 0 1 (fontified nil c-is-sws t)) . -2297) (undo-tree-id343 . -1) (#("	" 0 1 (c-is-sws t fontified nil)) . 2298) (undo-tree-id344 . -1) (2290 . 2298) 2291) nil (26108 27860 44708 276000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t fontified t)) . -2289) (undo-tree-id335 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -2290) (undo-tree-id336 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -2291) (undo-tree-id337 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -2292) (undo-tree-id338 . -1) 2293) nil (26108 27860 44702 355000) 0 nil])
([nil nil ((#("\\" 0 1 (c-is-sws t c-in-sws t fontified t)) . -2288) (undo-tree-id334 . -1) 2289) nil (26108 27860 44698 177000) 0 nil])
([nil nil ((#("/*	Lista<String> lista = new Lista<>();
		int longitd = lista.getLongitud();

		FileReader lectorArchivo = new FileReader(nombreArchivo);
		BufferedReader lector = new BufferedReader(lectorArchivo);

		String renglon;

		while((renglon = lector.readLine()) != null){
		    lista.agrega(renglon);
		}

		System.out.println(lista.reversa().toString());*/
		" 0 1 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified nil) 1 3 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 3 40 (c-in-sws t face font-lock-comment-face fontified nil) 40 350 (c-in-sws t face font-lock-comment-face fontified t) 350 352 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 352 353 (c-in-sws t fontified t) 353 355 (c-in-sws t c-is-sws t fontified t)) . 1003) (undo-tree-id332 . -355) (#("	" 0 1 (c-is-sws t c-in-sws t fontified nil)) . 1003) (undo-tree-id333 . -1) (995 . 1003) 996) nil (26108 27860 44694 630000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -992) (undo-tree-id331 . -1) 993) nil (26108 29188 493989 677000) 0 nil])
([nil nil ((#("
			//	System.out.println(primavera);
			// System.out.println(verano);
" 0 1 (fontified t) 1 4 (c-is-sws t c-in-sws t fontified t) 4 5 (face font-lock-comment-delimiter-face c-in-sws t c-is-sws t fontified t) 5 6 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 6 7 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 7 8 (face font-lock-comment-face c-in-sws t fontified t) 8 9 (face font-lock-comment-face c-in-sws t fontified t) 9 10 (face font-lock-comment-face c-in-sws t fontified t) 10 11 (face font-lock-comment-face c-in-sws t fontified t) 11 12 (face font-lock-comment-face c-in-sws t fontified t) 12 13 (face font-lock-comment-face c-in-sws t fontified t) 13 14 (face font-lock-comment-face c-in-sws t fontified t) 14 15 (face font-lock-comment-face c-in-sws t fontified t) 15 16 (face font-lock-comment-face c-in-sws t fontified t) 16 17 (face font-lock-comment-face c-in-sws t fontified t) 17 18 (face font-lock-comment-face c-in-sws t fontified t) 18 19 (face font-lock-comment-face c-in-sws t fontified t) 19 20 (face font-lock-comment-face c-in-sws t fontified t) 20 21 (face font-lock-comment-face c-in-sws t fontified t) 21 22 (face font-lock-comment-face c-in-sws t fontified t) 22 23 (face font-lock-comment-face c-in-sws t fontified t) 23 24 (face font-lock-comment-face c-in-sws t fontified t) 24 25 (face font-lock-comment-face c-in-sws t fontified t) 25 26 (face font-lock-comment-face c-in-sws t fontified t) 26 27 (face font-lock-comment-face c-in-sws t fontified t) 27 28 (face font-lock-comment-face c-in-sws t fontified t) 28 29 (face font-lock-comment-face c-in-sws t fontified t) 29 30 (face font-lock-comment-face c-in-sws t fontified t) 30 31 (face font-lock-comment-face c-in-sws t fontified t) 31 32 (face font-lock-comment-face c-in-sws t fontified t) 32 33 (face font-lock-comment-face c-in-sws t fontified t) 33 34 (face font-lock-comment-face c-in-sws t fontified t) 34 35 (face font-lock-comment-face c-in-sws t fontified t) 35 36 (face font-lock-comment-face c-in-sws t fontified t) 36 37 (face font-lock-comment-face c-in-sws t fontified t) 37 38 (face font-lock-comment-face c-in-sws t fontified t) 38 39 (c-in-sws t fontified t) 39 41 (c-in-sws t fontified t) 41 42 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 42 43 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 43 44 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 44 45 (face font-lock-comment-face c-in-sws t fontified t) 45 46 (face font-lock-comment-face c-in-sws t fontified t) 46 47 (face font-lock-comment-face c-in-sws t fontified t) 47 48 (face font-lock-comment-face c-in-sws t fontified t) 48 49 (face font-lock-comment-face c-in-sws t fontified t) 49 50 (face font-lock-comment-face c-in-sws t fontified t) 50 51 (face font-lock-comment-face c-in-sws t fontified t) 51 52 (face font-lock-comment-face c-in-sws t fontified t) 52 53 (face font-lock-comment-face c-in-sws t fontified t) 53 54 (face font-lock-comment-face c-in-sws t fontified t) 54 55 (face font-lock-comment-face c-in-sws t fontified t) 55 56 (face font-lock-comment-face c-in-sws t fontified t) 56 57 (face font-lock-comment-face c-in-sws t fontified t) 57 58 (face font-lock-comment-face c-in-sws t fontified t) 58 59 (face font-lock-comment-face c-in-sws t fontified t) 59 60 (face font-lock-comment-face c-in-sws t fontified t) 60 61 (face font-lock-comment-face c-in-sws t fontified t) 61 62 (face font-lock-comment-face c-in-sws t fontified t) 62 63 (face font-lock-comment-face c-in-sws t fontified t) 63 64 (face font-lock-comment-face c-in-sws t fontified t) 64 65 (face font-lock-comment-face c-in-sws t fontified t) 65 66 (face font-lock-comment-face c-in-sws t fontified t) 66 67 (face font-lock-comment-face c-in-sws t fontified t) 67 68 (face font-lock-comment-face c-in-sws t fontified t) 68 69 (face font-lock-comment-face c-in-sws t fontified t) 69 70 (face font-lock-comment-face c-in-sws t fontified t) 70 71 (face font-lock-comment-face c-in-sws t fontified t rear-nonsticky t) 71 72 (face font-lock-comment-face c-in-sws t fontified t)) . -1826) (undo-tree-id730 . -72) (undo-tree-id731 . -72) 1898 (t 26108 29191 20712 167000)) nil (26108 29251 577710 764000) 0 nil] [nil nil ((#("
			//	System.out.println(primavera);
			// System.out.println(verano);
			" 0 1 (fontified t) 1 4 (fontified t c-is-sws t c-in-sws t) 4 5 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 5 6 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 6 7 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 7 8 (face font-lock-comment-face fontified t c-in-sws t) 8 9 (face font-lock-comment-face fontified t c-in-sws t) 9 10 (face font-lock-comment-face fontified t c-in-sws t) 10 11 (face font-lock-comment-face fontified t c-in-sws t) 11 12 (face font-lock-comment-face fontified t c-in-sws t) 12 13 (face font-lock-comment-face fontified t c-in-sws t) 13 14 (face font-lock-comment-face fontified t c-in-sws t) 14 15 (face font-lock-comment-face fontified t c-in-sws t) 15 16 (face font-lock-comment-face fontified t c-in-sws t) 16 17 (face font-lock-comment-face fontified t c-in-sws t) 17 18 (face font-lock-comment-face fontified t c-in-sws t) 18 19 (face font-lock-comment-face fontified t c-in-sws t) 19 20 (face font-lock-comment-face fontified t c-in-sws t) 20 21 (face font-lock-comment-face fontified t c-in-sws t) 21 22 (face font-lock-comment-face fontified t c-in-sws t) 22 23 (face font-lock-comment-face fontified t c-in-sws t) 23 24 (face font-lock-comment-face fontified t c-in-sws t) 24 25 (face font-lock-comment-face fontified t c-in-sws t) 25 26 (face font-lock-comment-face fontified t c-in-sws t) 26 27 (face font-lock-comment-face fontified t c-in-sws t) 27 28 (face font-lock-comment-face fontified t c-in-sws t) 28 29 (face font-lock-comment-face fontified t c-in-sws t) 29 30 (face font-lock-comment-face fontified t c-in-sws t) 30 31 (face font-lock-comment-face fontified t c-in-sws t) 31 32 (face font-lock-comment-face fontified t c-in-sws t) 32 33 (face font-lock-comment-face fontified t c-in-sws t) 33 34 (face font-lock-comment-face fontified t c-in-sws t) 34 35 (face font-lock-comment-face fontified t c-in-sws t) 35 36 (face font-lock-comment-face fontified t c-in-sws t) 36 37 (face font-lock-comment-face fontified t c-in-sws t) 37 38 (face font-lock-comment-face fontified t c-in-sws t) 38 39 (fontified t c-in-sws t) 39 41 (fontified t c-in-sws t) 41 42 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 42 43 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 43 44 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 44 45 (face font-lock-comment-face fontified t c-in-sws t) 45 46 (face font-lock-comment-face fontified t c-in-sws t) 46 47 (face font-lock-comment-face fontified t c-in-sws t) 47 48 (face font-lock-comment-face fontified t c-in-sws t) 48 49 (face font-lock-comment-face fontified t c-in-sws t) 49 50 (face font-lock-comment-face fontified t c-in-sws t) 50 51 (face font-lock-comment-face fontified t c-in-sws t) 51 52 (face font-lock-comment-face fontified t c-in-sws t) 52 53 (face font-lock-comment-face fontified t c-in-sws t) 53 54 (face font-lock-comment-face fontified t c-in-sws t) 54 55 (face font-lock-comment-face fontified t c-in-sws t) 55 56 (face font-lock-comment-face fontified t c-in-sws t) 56 57 (face font-lock-comment-face fontified t c-in-sws t) 57 58 (face font-lock-comment-face fontified t c-in-sws t) 58 59 (face font-lock-comment-face fontified t c-in-sws t) 59 60 (face font-lock-comment-face fontified t c-in-sws t) 60 61 (face font-lock-comment-face fontified t c-in-sws t) 61 62 (face font-lock-comment-face fontified t c-in-sws t) 62 63 (face font-lock-comment-face fontified t c-in-sws t) 63 64 (face font-lock-comment-face fontified t c-in-sws t) 64 65 (face font-lock-comment-face fontified t c-in-sws t) 65 66 (face font-lock-comment-face fontified t c-in-sws t) 66 67 (face font-lock-comment-face fontified t c-in-sws t) 67 68 (face font-lock-comment-face fontified t c-in-sws t) 68 69 (face font-lock-comment-face fontified t c-in-sws t) 69 70 (face font-lock-comment-face fontified t c-in-sws t) 70 71 (face font-lock-comment-face fontified t c-in-sws t rear-nonsticky t) 71 72 (face font-lock-comment-face fontified t c-in-sws t) 72 73 (fontified t c-in-sws t) 73 75 (fontified t c-in-sws t)) . 1826) (undo-tree-id325 . -75) (undo-tree-id327 . -38) (undo-tree-id329 . -38)) ((1826 . 1901)) (26108 29187 495736 773000) 0 nil])
([nil nil ((1463 . 1464) (t 26108 29251 593643 367000)) nil (26108 29456 30178 956000) 0 nil])
([nil nil ((629 . 630) (#("	" 0 1 (fontified nil)) . 628) (undo-tree-id397 . -1) (628 . 630) (#("	" 0 1 (fontified nil)) . 627) (undo-tree-id398 . -1) (627 . 629) (#("	" 0 1 (fontified nil)) . 626) (undo-tree-id399 . -1) (625 . 628) (t 26108 27860 60937 358000)) ((#("
	
" 0 1 (fontified t) 1 2 (fontified nil) 2 3 (fontified nil)) . 625) (undo-tree-id709 . -3) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -3) (undo-tree-id718 . -1) (undo-tree-id719 . -3) (undo-tree-id720 . -3) (undo-tree-id721 . -3) (undo-tree-id722 . -3) (undo-tree-id723 . -3) (undo-tree-id724 . -3) (undo-tree-id725 . -3) (626 . 627) (#("	
" 0 1 (fontified nil) 1 2 (fontified nil)) . 627) (undo-tree-id726 . -1) (undo-tree-id727 . -2) (627 . 628) (#("	
" 0 1 (fontified nil) 1 2 (fontified nil)) . 628) (undo-tree-id728 . -2) (628 . 629) (#("	" 0 1 (fontified t)) . 629) (undo-tree-id729 . -1)) (26108 29186 889786 629000) 0 nil])
([nil nil ((1463 . 1464) (#("å" 0 1 (fontified t)) . -1463) (undo-tree-id840 . -1) 1464) nil (26108 29456 30178 105000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1043 . 1044) (nil fontified nil 1041 . 1044) (nil fontified nil 1040 . 1041) (nil fontified nil 1029 . 1040) (nil fontified nil 1028 . 1029) (nil fontified nil 1026 . 1028) (nil fontified nil 1025 . 1026) (nil fontified nil 1024 . 1025) (nil fontified nil 1023 . 1024) (nil fontified nil 1022 . 1023) (nil fontified nil 1021 . 1022) (nil fontified nil 1020 . 1021) (nil fontified nil 1019 . 1020) (nil fontified nil 1008 . 1019) (nil fontified nil 1007 . 1008) (nil fontified nil 1006 . 1007) (nil fontified nil 1005 . 1006) (nil fontified nil 1004 . 1005) (nil fontified nil 1003 . 1004) (nil fontified nil 1002 . 1003) (nil fontified nil 1001 . 1002) (nil fontified nil 1000 . 1001) (nil fontified nil 995 . 1000) (nil fontified nil 994 . 995) (nil fontified nil 992 . 994) (nil fontified nil 991 . 992) (nil fontified nil 990 . 991) (nil fontified nil 989 . 990) (nil fontified nil 988 . 989) (nil fontified nil 987 . 988) (nil fontified nil 985 . 987) (nil fontified nil 983 . 985) (nil fontified nil 975 . 983) (nil fontified nil 964 . 975) (nil fontified nil 962 . 964) (nil fontified nil 959 . 962) (nil fontified nil 958 . 959) (nil fontified nil 954 . 958) (nil fontified nil 953 . 954) (nil fontified nil 943 . 953) (nil fontified nil 942 . 943) (nil fontified nil 941 . 942) (nil fontified nil 940 . 941) (nil fontified nil 939 . 940) (nil fontified nil 938 . 939) (nil fontified nil 937 . 938) (nil fontified nil 936 . 937) (nil fontified nil 935 . 936) (nil fontified nil 934 . 935) (nil fontified nil 933 . 934) (nil fontified nil 932 . 933) (nil fontified nil 931 . 932) (nil fontified nil 911 . 931) (nil fontified nil 910 . 911) (nil fontified nil 909 . 910) (nil fontified nil 908 . 909) (nil fontified nil 907 . 908) (nil fontified nil 906 . 907) (nil fontified nil 905 . 906) (nil fontified nil 904 . 905) (nil fontified nil 903 . 904) (nil fontified nil 902 . 903) (nil fontified nil 901 . 902) (nil fontified nil 900 . 901) (nil fontified nil 899 . 900) (nil fontified nil 898 . 899) (nil fontified nil 897 . 898) (nil fontified nil 896 . 897) (nil fontified nil 895 . 896) (nil fontified nil 894 . 895) (nil fontified nil 891 . 894) (nil fontified nil 890 . 891) (nil fontified nil 889 . 890) (nil fontified nil 888 . 889) (nil fontified nil 886 . 888) (nil fontified nil 885 . 886) (nil fontified nil 882 . 885) (nil fontified nil 870 . 882) (nil fontified nil 869 . 870) (nil fontified nil 868 . 869) (nil fontified nil 867 . 868) (nil fontified nil 866 . 867) (nil fontified nil 865 . 866) (nil fontified nil 864 . 865) (nil fontified nil 863 . 864) (nil fontified nil 862 . 863) (nil fontified nil 861 . 862) (nil fontified nil 860 . 861) (nil fontified nil 859 . 860) (nil fontified nil 858 . 859) (nil fontified nil 857 . 858) (nil fontified nil 856 . 857) (nil fontified nil 855 . 856) (nil fontified nil 854 . 855) (nil fontified nil 852 . 854) (nil fontified nil 851 . 852) (nil fontified nil 850 . 851) (nil fontified nil 849 . 850) (nil fontified nil 848 . 849) (nil fontified nil 847 . 848) (nil fontified nil 846 . 847) (nil fontified nil 845 . 846) (nil fontified nil 844 . 845) (nil fontified nil 843 . 844) (nil fontified nil 842 . 843) (nil fontified nil 841 . 842) (nil fontified nil 836 . 841) (nil fontified nil 833 . 836) (nil fontified nil 832 . 833) (nil fontified nil 831 . 832) (nil fontified nil 830 . 831) (nil fontified nil 828 . 830) (nil fontified nil 826 . 828) (nil fontified nil 818 . 826) (nil fontified nil 807 . 818) (nil fontified nil 805 . 807) (nil fontified nil 802 . 805) (nil fontified nil 801 . 802) (nil fontified nil 797 . 801) (nil fontified nil 796 . 797) (nil fontified nil 786 . 796) (nil fontified nil 785 . 786) (nil fontified nil 784 . 785) (nil fontified nil 783 . 784) (nil fontified nil 782 . 783) (nil fontified nil 781 . 782) (nil fontified nil 780 . 781) (nil fontified nil 779 . 780) (nil fontified nil 778 . 779) (nil fontified nil 777 . 778) (nil fontified nil 776 . 777) (nil fontified nil 775 . 776) (nil fontified nil 774 . 775) (nil fontified nil 754 . 774) (nil fontified nil 753 . 754) (nil fontified nil 752 . 753) (nil fontified nil 751 . 752) (nil fontified nil 750 . 751) (nil fontified nil 749 . 750) (nil fontified nil 748 . 749) (nil fontified nil 747 . 748) (nil fontified nil 746 . 747) (nil fontified nil 745 . 746) (nil fontified nil 744 . 745) (nil fontified nil 743 . 744) (nil fontified nil 742 . 743) (nil fontified nil 741 . 742) (nil fontified nil 740 . 741) (nil fontified nil 739 . 740) (nil fontified nil 738 . 739) (nil fontified nil 737 . 738) (nil fontified nil 734 . 737) (nil fontified nil 733 . 734) (nil fontified nil 732 . 733) (nil fontified nil 731 . 732) (nil fontified nil 729 . 731) (nil fontified nil 728 . 729) (nil fontified nil 725 . 728) (nil fontified nil 713 . 725) (nil fontified nil 712 . 713) (nil fontified nil 711 . 712) (nil fontified nil 710 . 711) (nil fontified nil 709 . 710) (nil fontified nil 708 . 709) (nil fontified nil 707 . 708) (nil fontified nil 706 . 707) (nil fontified nil 705 . 706) (nil fontified nil 704 . 705) (nil fontified nil 703 . 704) (nil fontified nil 702 . 703) (nil fontified nil 701 . 702) (nil fontified nil 700 . 701) (nil fontified nil 699 . 700) (nil fontified nil 698 . 699) (nil fontified nil 697 . 698) (nil fontified nil 695 . 697) (nil fontified nil 694 . 695) (nil fontified nil 693 . 694) (nil fontified nil 692 . 693) (nil fontified nil 691 . 692) (nil fontified nil 690 . 691) (nil fontified nil 689 . 690) (nil fontified nil 688 . 689) (nil fontified nil 687 . 688) (nil fontified nil 686 . 687) (nil fontified nil 685 . 686) (nil fontified nil 684 . 685) (nil fontified nil 679 . 684) (nil fontified nil 676 . 679) (nil fontified nil 646 . 676) (nil fontified nil 643 . 646) (nil fontified nil 642 . 643) (nil fontified nil 641 . 642) (nil category c->-as-paren-syntax 641 . 642) (nil fontified nil 635 . 641) (nil fontified nil 634 . 635) (nil category c-<-as-paren-syntax 634 . 635) (nil fontified nil 629 . 634) (nil fontified nil 627 . 629) (627 . 1044)) ((#("		Lista<String> ord = lista.mergeSort((a,b) -> {
			String aSinMayus = a.toLowerCase().replaceAll(\" \",\"\");
			String aLimpio = Normalizer.normalize(aSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
			String bSinMayus = b.toLowerCase().replaceAll(\" \",\"\");
			String bLimpio = Normalizer.normalize(bSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");

			return aLimpio.compareTo(bLimpio);
			
		    });	
" 0 2 (fontified nil) 2 7 (face font-lock-type-face fontified nil) 7 8 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 8 14 (face font-lock-type-face fontified nil) 14 15 (c-type c-decl-id-start fontified nil category c->-as-paren-syntax) 15 16 (fontified nil) 16 19 (face font-lock-variable-name-face fontified nil) 19 22 (fontified nil) 22 27 (fontified nil) 27 49 (fontified nil) 49 52 (fontified nil) 52 57 (face font-lock-type-face fontified nil) 57 58 (face font-lock-type-face c-type c-decl-id-start fontified nil) 58 59 (fontified nil) 59 60 (face font-lock-variable-name-face fontified nil) 60 61 (face font-lock-variable-name-face fontified nil) 61 62 (face font-lock-variable-name-face fontified nil) 62 63 (face font-lock-variable-name-face fontified nil) 63 64 (face font-lock-variable-name-face fontified nil) 64 65 (face font-lock-variable-name-face fontified nil) 65 66 (face font-lock-variable-name-face fontified nil) 66 67 (face font-lock-variable-name-face fontified nil) 67 68 (face font-lock-variable-name-face fontified nil) 68 70 (fontified nil) 70 71 (fontified nil) 71 72 (fontified nil) 72 73 (fontified nil) 73 74 (fontified nil) 74 75 (fontified nil) 75 76 (fontified nil) 76 77 (fontified nil) 77 78 (fontified nil) 78 79 (fontified nil) 79 80 (fontified nil) 80 81 (fontified nil) 81 82 (fontified nil) 82 83 (fontified nil) 83 84 (fontified nil) 84 85 (fontified nil) 85 86 (fontified nil) 86 98 (fontified nil) 98 101 (face font-lock-string-face fontified nil) 101 102 (fontified nil) 102 104 (face font-lock-string-face fontified nil) 104 105 (fontified nil) 105 106 (fontified nil rear-nonsticky t) 106 107 (fontified nil) 107 110 (fontified nil) 110 111 (face font-lock-type-face fontified nil) 111 112 (face font-lock-type-face fontified nil) 112 113 (face font-lock-type-face fontified nil) 113 114 (face font-lock-type-face fontified nil) 114 115 (face font-lock-type-face fontified nil) 115 116 (face font-lock-type-face c-type c-decl-id-start fontified nil) 116 117 (fontified nil) 117 118 (face font-lock-variable-name-face fontified nil) 118 119 (face font-lock-variable-name-face fontified nil) 119 120 (face font-lock-variable-name-face fontified nil) 120 121 (face font-lock-variable-name-face fontified nil) 121 122 (face font-lock-variable-name-face fontified nil) 122 123 (face font-lock-variable-name-face fontified nil) 123 124 (face font-lock-variable-name-face fontified nil) 124 125 (fontified nil) 125 126 (fontified nil) 126 127 (fontified nil) 127 147 (fontified nil) 147 148 (fontified nil) 148 149 (fontified nil) 149 150 (fontified nil) 150 151 (fontified nil) 151 152 (fontified nil) 152 153 (fontified nil) 153 154 (fontified nil) 154 155 (fontified nil) 155 156 (fontified nil) 156 157 (fontified nil) 157 158 (fontified nil) 158 159 (fontified nil) 159 169 (face font-lock-constant-face fontified nil) 169 170 (fontified nil) 170 174 (face font-lock-constant-face fontified nil) 174 175 (fontified nil) 175 178 (fontified nil) 178 180 (fontified nil) 180 191 (fontified nil) 191 199 (face font-lock-string-face fontified nil) 199 201 (fontified nil) 201 203 (face font-lock-string-face fontified nil) 203 204 (fontified nil) 204 205 (fontified nil) 205 206 (fontified nil) 206 209 (fontified nil) 209 214 (face font-lock-type-face fontified nil) 214 215 (face font-lock-type-face c-type c-decl-id-start fontified nil) 215 216 (fontified nil) 216 217 (face font-lock-variable-name-face fontified nil) 217 218 (face font-lock-variable-name-face fontified nil) 218 219 (face font-lock-variable-name-face fontified nil) 219 220 (face font-lock-variable-name-face fontified nil) 220 221 (face font-lock-variable-name-face fontified nil) 221 222 (face font-lock-variable-name-face fontified nil) 222 223 (face font-lock-variable-name-face fontified nil) 223 224 (face font-lock-variable-name-face fontified nil) 224 225 (face font-lock-variable-name-face fontified nil) 225 227 (fontified nil) 227 228 (fontified nil) 228 229 (fontified nil) 229 230 (fontified nil) 230 231 (fontified nil) 231 232 (fontified nil) 232 233 (fontified nil) 233 234 (fontified nil) 234 235 (fontified nil) 235 236 (fontified nil) 236 237 (fontified nil) 237 238 (fontified nil) 238 239 (fontified nil) 239 240 (fontified nil) 240 241 (fontified nil) 241 242 (fontified nil) 242 243 (fontified nil) 243 255 (fontified nil) 255 258 (face font-lock-string-face fontified nil) 258 259 (fontified nil) 259 261 (face font-lock-string-face fontified nil) 261 262 (fontified nil) 262 263 (fontified nil rear-nonsticky t) 263 264 (fontified nil) 264 267 (fontified nil) 267 268 (face font-lock-type-face fontified nil) 268 269 (face font-lock-type-face fontified nil) 269 270 (face font-lock-type-face fontified nil) 270 271 (face font-lock-type-face fontified nil) 271 272 (face font-lock-type-face fontified nil) 272 273 (face font-lock-type-face c-type c-decl-id-start fontified nil) 273 274 (fontified nil) 274 275 (face font-lock-variable-name-face fontified nil) 275 276 (face font-lock-variable-name-face fontified nil) 276 277 (face font-lock-variable-name-face fontified nil) 277 278 (face font-lock-variable-name-face fontified nil) 278 279 (face font-lock-variable-name-face fontified nil) 279 280 (face font-lock-variable-name-face fontified nil) 280 281 (face font-lock-variable-name-face fontified nil) 281 282 (fontified nil) 282 283 (fontified nil) 283 284 (fontified nil) 284 304 (fontified nil) 304 305 (fontified nil) 305 306 (fontified nil) 306 307 (fontified nil) 307 308 (fontified nil) 308 309 (fontified nil) 309 310 (fontified nil) 310 311 (fontified nil) 311 312 (fontified nil) 312 313 (fontified nil) 313 314 (fontified nil) 314 315 (fontified nil) 315 316 (fontified nil) 316 326 (face font-lock-constant-face fontified nil) 326 327 (fontified nil) 327 331 (face font-lock-constant-face fontified nil) 331 332 (fontified nil) 332 335 (fontified nil) 335 337 (fontified nil) 337 348 (fontified nil) 348 356 (face font-lock-string-face fontified nil) 356 358 (fontified nil) 358 360 (face font-lock-string-face fontified nil) 360 361 (fontified nil) 361 362 (fontified nil) 362 363 (fontified nil) 363 364 (fontified nil) 364 365 (fontified nil) 365 367 (fontified nil) 367 368 (face font-lock-keyword-face fontified nil) 368 373 (face font-lock-keyword-face fontified nil) 373 374 (fontified nil) 374 375 (fontified nil) 375 376 (fontified nil) 376 377 (fontified nil) 377 378 (fontified nil) 378 379 (fontified nil) 379 380 (fontified nil) 380 381 (fontified nil) 381 392 (fontified nil) 392 393 (fontified nil) 393 394 (fontified nil) 394 395 (fontified nil) 395 396 (fontified nil) 396 397 (fontified nil) 397 398 (fontified nil) 398 399 (fontified nil) 399 401 (fontified nil) 401 402 (fontified nil) 402 404 (fontified nil) 404 405 (fontified nil) 405 406 (fontified nil) 406 412 (fontified nil) 412 413 (fontified nil) 413 414 (fontified nil) 414 415 (fontified nil) 415 416 (fontified nil) 416 417 (fontified nil rear-nonsticky nil)) . 627) (undo-tree-id705 . -266) (undo-tree-id706 . -208) (undo-tree-id707 . -109) (undo-tree-id708 . -50) (nil rear-nonsticky t 1043 . 1044)) (26108 29186 701703 518000) 0 nil])
([nil nil ((961 . 967)) nil (26108 29456 30176 842000) 0 nil])
([nil nil ((627 . 628) (#("		" 0 2 (fontified t)) . 627)) ((627 . 629) (#("	" 0 1 (fontified t)) . 627)) (26108 29186 521682 35000) 0 nil])
([nil nil ((963 . 968) (#("	    " 0 5 (fontified nil)) . 962) (undo-tree-id839 . -5) (967 . 968)) nil (26108 29456 30176 41000) 0 nil])
([nil nil ((675 . 677) (#("			" 0 3 (fontified t)) . 675) (undo-tree-id396 . -1) 676) ((675 . 678) (#("		" 0 2 (fontified t)) . 675)) (26108 29186 337138 96000) 0 nil])
([nil nil ((962 . 968)) nil (26108 29456 30174 749000) 0 nil])
([nil nil ((732 . 734) (#("			" 0 3 (fontified t)) . 732) (undo-tree-id395 . -2) 734) ((732 . 735) (#("		" 0 2 (fontified t)) . 732)) (26108 29186 176092 978000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1388 . 1389) (nil fontified nil 1386 . 1389) (nil fontified nil 1385 . 1386) (nil fontified nil 1374 . 1385) (nil fontified nil 1373 . 1374) (nil fontified nil 1371 . 1373) (nil fontified nil 1370 . 1371) (nil fontified nil 1369 . 1370) (nil fontified nil 1368 . 1369) (nil fontified nil 1367 . 1368) (nil fontified nil 1366 . 1367) (nil fontified nil 1365 . 1366) (nil fontified nil 1364 . 1365) (nil fontified nil 1353 . 1364) (nil fontified nil 1352 . 1353) (nil fontified nil 1351 . 1352) (nil fontified nil 1350 . 1351) (nil fontified nil 1349 . 1350) (nil fontified nil 1348 . 1349) (nil fontified nil 1347 . 1348) (nil fontified nil 1346 . 1347) (nil fontified nil 1345 . 1346) (nil fontified nil 1340 . 1345) (nil fontified nil 1339 . 1340) (nil fontified nil 1337 . 1339) (nil fontified nil 1336 . 1337) (nil fontified nil 1335 . 1336) (nil fontified nil 1333 . 1335) (nil fontified nil 1332 . 1333) (nil fontified nil 1331 . 1332) (nil fontified nil 1330 . 1331) (nil fontified nil 1329 . 1330) (nil fontified nil 1327 . 1329) (nil fontified nil 1325 . 1327) (nil fontified nil 1317 . 1325) (nil fontified nil 1306 . 1317) (nil fontified nil 1304 . 1306) (nil fontified nil 1301 . 1304) (nil fontified nil 1300 . 1301) (nil fontified nil 1296 . 1300) (nil fontified nil 1295 . 1296) (nil fontified nil 1285 . 1295) (nil fontified nil 1284 . 1285) (nil fontified nil 1283 . 1284) (nil fontified nil 1282 . 1283) (nil fontified nil 1281 . 1282) (nil fontified nil 1280 . 1281) (nil fontified nil 1279 . 1280) (nil fontified nil 1278 . 1279) (nil fontified nil 1277 . 1278) (nil fontified nil 1276 . 1277) (nil fontified nil 1275 . 1276) (nil fontified nil 1274 . 1275) (nil fontified nil 1273 . 1274) (nil fontified nil 1253 . 1273) (nil fontified nil 1252 . 1253) (nil fontified nil 1251 . 1252) (nil fontified nil 1250 . 1251) (nil fontified nil 1249 . 1250) (nil fontified nil 1248 . 1249) (nil fontified nil 1247 . 1248) (nil fontified nil 1246 . 1247) (nil fontified nil 1245 . 1246) (nil fontified nil 1244 . 1245) (nil fontified nil 1243 . 1244) (nil fontified nil 1242 . 1243) (nil fontified nil 1241 . 1242) (nil fontified nil 1240 . 1241) (nil fontified nil 1239 . 1240) (nil fontified nil 1238 . 1239) (nil fontified nil 1237 . 1238) (nil fontified nil 1236 . 1237) (nil fontified nil 1233 . 1236) (nil fontified nil 1232 . 1233) (nil fontified nil 1231 . 1232) (nil fontified nil 1230 . 1231) (nil fontified nil 1228 . 1230) (nil fontified nil 1227 . 1228) (nil fontified nil 1224 . 1227) (nil fontified nil 1212 . 1224) (nil fontified nil 1211 . 1212) (nil fontified nil 1210 . 1211) (nil fontified nil 1209 . 1210) (nil fontified nil 1208 . 1209) (nil fontified nil 1207 . 1208) (nil fontified nil 1206 . 1207) (nil fontified nil 1205 . 1206) (nil fontified nil 1204 . 1205) (nil fontified nil 1203 . 1204) (nil fontified nil 1202 . 1203) (nil fontified nil 1201 . 1202) (nil fontified nil 1200 . 1201) (nil fontified nil 1199 . 1200) (nil fontified nil 1198 . 1199) (nil fontified nil 1197 . 1198) (nil fontified nil 1196 . 1197) (nil fontified nil 1194 . 1196) (nil fontified nil 1193 . 1194) (nil fontified nil 1192 . 1193) (nil fontified nil 1191 . 1192) (nil fontified nil 1190 . 1191) (nil fontified nil 1189 . 1190) (nil fontified nil 1188 . 1189) (nil fontified nil 1187 . 1188) (nil fontified nil 1186 . 1187) (nil fontified nil 1185 . 1186) (nil fontified nil 1184 . 1185) (nil fontified nil 1183 . 1184) (nil fontified nil 1178 . 1183) (nil fontified nil 1175 . 1178) (nil fontified nil 1174 . 1175) (nil fontified nil 1173 . 1174) (nil fontified nil 1172 . 1173) (nil fontified nil 1170 . 1172) (nil fontified nil 1168 . 1170) (nil fontified nil 1160 . 1168) (nil fontified nil 1149 . 1160) (nil fontified nil 1147 . 1149) (nil fontified nil 1144 . 1147) (nil fontified nil 1143 . 1144) (nil fontified nil 1139 . 1143) (nil fontified nil 1138 . 1139) (nil fontified nil 1128 . 1138) (nil fontified nil 1127 . 1128) (nil fontified nil 1126 . 1127) (nil fontified nil 1125 . 1126) (nil fontified nil 1124 . 1125) (nil fontified nil 1123 . 1124) (nil fontified nil 1122 . 1123) (nil fontified nil 1121 . 1122) (nil fontified nil 1120 . 1121) (nil fontified nil 1119 . 1120) (nil fontified nil 1118 . 1119) (nil fontified nil 1117 . 1118) (nil fontified nil 1116 . 1117) (nil fontified nil 1096 . 1116) (nil fontified nil 1095 . 1096) (nil fontified nil 1094 . 1095) (nil fontified nil 1093 . 1094) (nil fontified nil 1092 . 1093) (nil fontified nil 1091 . 1092) (nil fontified nil 1090 . 1091) (nil fontified nil 1089 . 1090) (nil fontified nil 1088 . 1089) (nil fontified nil 1087 . 1088) (nil fontified nil 1086 . 1087) (nil fontified nil 1085 . 1086) (nil fontified nil 1084 . 1085) (nil fontified nil 1083 . 1084) (nil fontified nil 1082 . 1083) (nil fontified nil 1081 . 1082) (nil fontified nil 1080 . 1081) (nil fontified nil 1079 . 1080) (nil fontified nil 1076 . 1079) (nil fontified nil 1075 . 1076) (nil fontified nil 1074 . 1075) (nil fontified nil 1073 . 1074) (nil fontified nil 1071 . 1073) (nil fontified nil 1070 . 1071) (nil fontified nil 1067 . 1070) (nil fontified nil 1055 . 1067) (nil fontified nil 1054 . 1055) (nil fontified nil 1053 . 1054) (nil fontified nil 1052 . 1053) (nil fontified nil 1051 . 1052) (nil fontified nil 1050 . 1051) (nil fontified nil 1049 . 1050) (nil fontified nil 1048 . 1049) (nil fontified nil 1047 . 1048) (nil fontified nil 1046 . 1047) (nil fontified nil 1045 . 1046) (nil fontified nil 1044 . 1045) (nil fontified nil 1043 . 1044) (nil fontified nil 1042 . 1043) (nil fontified nil 1041 . 1042) (nil fontified nil 1040 . 1041) (nil fontified nil 1039 . 1040) (nil fontified nil 1037 . 1039) (nil fontified nil 1036 . 1037) (nil fontified nil 1035 . 1036) (nil fontified nil 1034 . 1035) (nil fontified nil 1033 . 1034) (nil fontified nil 1032 . 1033) (nil fontified nil 1031 . 1032) (nil fontified nil 1030 . 1031) (nil fontified nil 1029 . 1030) (nil fontified nil 1028 . 1029) (nil fontified nil 1027 . 1028) (nil fontified nil 1026 . 1027) (nil fontified nil 1021 . 1026) (nil fontified nil 1018 . 1021) (nil fontified nil 996 . 1018) (nil fontified nil 991 . 996) (nil fontified nil 988 . 991) (nil fontified nil 985 . 988) (nil fontified nil 984 . 985) (nil fontified nil 983 . 984) (nil category c->-as-paren-syntax 983 . 984) (nil fontified nil 977 . 983) (nil fontified nil 976 . 977) (nil category c-<-as-paren-syntax 976 . 977) (nil fontified nil 971 . 976) (nil fontified nil 969 . 971) (nil fontified nil 968 . 969) (968 . 1389)) nil (26108 29456 30167 515000) 0 nil])
([nil nil ((830 . 832) (#("			" 0 3 (fontified t)) . 830) (undo-tree-id394 . -2) 832) ((830 . 833) (#("		" 0 2 (fontified t)) . 830)) (26108 29186 22084 329000) 0 nil])
([nil nil ((963 . 968) (#("	     		" 0 5 (fontified t) 5 6 (fontified t) 6 8 (fontified t)) . 963) (undo-tree-id838 . -5)) nil (26108 29456 30143 691000) 0 nil])
([nil nil ((887 . 889) (#("			" 0 3 (fontified t)) . 887) (undo-tree-id393 . -2) 889) ((887 . 890) (#("		" 0 2 (fontified t)) . 887)) (26108 29185 857683 631000) 0 nil])
([nil nil ((1015 . 1021) (#("			" 0 3 (fontified t)) . 1015) (undo-tree-id837 . -1) 1016) nil (26108 29456 30142 358000) 0 nil])
([nil nil ((985 . 987)) ((#("		" 0 2 (fontified t)) . 985)) (26108 29185 689921 138000) 0 nil])
([nil nil ((1076 . 1082) (#("			" 0 3 (fontified t)) . 1076) (undo-tree-id836 . -2) 1078) nil (26108 29456 30141 16000) 0 nil])
([nil nil ((988 . 990) (#("			" 0 1 (fontified t) 1 3 (fontified t)) . 988) (undo-tree-id392 . -2) 990) ((988 . 991) (#("		" 0 2 (fontified t)) . 988)) (26108 29185 495702 687000) 0 nil])
([nil nil ((1178 . 1184) (#("			" 0 3 (fontified t)) . 1178) (undo-tree-id835 . -2) 1180) nil (26108 29456 30139 663000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . 1027)) ((1027 . 1028)) (26108 29185 220454 143000) 0 nil])
([nil nil ((1239 . 1245) (#("			" 0 3 (fontified t)) . 1239) (undo-tree-id834 . -2) 1241) nil (26108 29456 30138 271000) 0 nil])
([nil nil ((1028 . 1033) (#("		    " 0 6 (fontified t)) . 1028) (undo-tree-id391 . -2) 1030) ((1028 . 1034) (#("	    " 0 5 (fontified t)) . 1028)) (26108 29184 549689 130000) 0 nil])
([nil nil ((1341 . 1347) (#("		" 0 1 (fontified nil) 1 2 (fontified nil)) . -1341) (undo-tree-id833 . -2) (#("	" 0 1 (fontified t)) . 1343)) nil (26108 29456 30136 848000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1038) (undo-tree-id390 . -1) 1039) ((1038 . 1039) (t 26108 29174 684145 765000)) (26108 29172 286312 910000) 0 nil])
([nil nil ((1348 . 1354) (#("			" 0 1 (fontified t) 1 3 (fontified t)) . 1348) (undo-tree-id832 . -2) 1350) nil (26108 29456 30135 405000) 0 nil])
([nil nil ((#("		
		Lista<String> ord = lista.mergeSort((a,b) -> {
			String aSinMayus = a.toLowerCase().replaceAll(\" \",\"\");
			String aLimpio = Normalizer.normalize(aSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
			String bSinMayus = b.toLowerCase().replaceAll(\" \",\"\");
			String bLimpio = Normalizer.normalize(bSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");

			return aLimpio.compareTo(bLimpio);
			
		    });	
		
" 0 2 (fontified t) 2 3 (fontified t) 3 5 (fontified t) 5 10 (face font-lock-type-face fontified t) 10 11 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 11 17 (face font-lock-type-face fontified t) 17 18 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 18 19 (fontified t) 19 22 (face font-lock-variable-name-face fontified t) 22 25 (fontified t) 25 30 (fontified t) 30 52 (fontified t) 52 55 (fontified t) 55 60 (face font-lock-type-face fontified t) 60 61 (face font-lock-type-face c-type c-decl-id-start fontified t) 61 62 (fontified t) 62 63 (face font-lock-variable-name-face fontified t) 63 64 (face font-lock-variable-name-face fontified t) 64 65 (face font-lock-variable-name-face fontified t) 65 66 (face font-lock-variable-name-face fontified t) 66 67 (face font-lock-variable-name-face fontified t) 67 68 (face font-lock-variable-name-face fontified t) 68 69 (face font-lock-variable-name-face fontified t) 69 70 (face font-lock-variable-name-face fontified t) 70 71 (face font-lock-variable-name-face fontified t) 71 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 101 (fontified t) 101 104 (face font-lock-string-face fontified t) 104 105 (fontified t) 105 107 (face font-lock-string-face fontified t) 107 108 (fontified t) 108 109 (fontified t rear-nonsticky t) 109 110 (fontified t) 110 113 (fontified t) 113 114 (face font-lock-type-face fontified t) 114 115 (face font-lock-type-face fontified t) 115 116 (face font-lock-type-face fontified t) 116 117 (face font-lock-type-face fontified t) 117 118 (face font-lock-type-face fontified t) 118 119 (face font-lock-type-face c-type c-decl-id-start fontified t) 119 120 (fontified t) 120 121 (face font-lock-variable-name-face fontified t) 121 122 (face font-lock-variable-name-face fontified t) 122 123 (face font-lock-variable-name-face fontified t) 123 124 (face font-lock-variable-name-face fontified t) 124 125 (face font-lock-variable-name-face fontified t) 125 126 (face font-lock-variable-name-face fontified t) 126 127 (face font-lock-variable-name-face fontified t) 127 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 150 (fontified t) 150 151 (fontified t) 151 152 (fontified t) 152 153 (fontified t) 153 154 (fontified t) 154 155 (fontified t) 155 156 (fontified t) 156 157 (fontified t) 157 158 (fontified t) 158 159 (fontified t) 159 160 (fontified t) 160 161 (fontified t) 161 162 (fontified t) 162 172 (face font-lock-constant-face fontified t) 172 173 (fontified t) 173 177 (face font-lock-constant-face fontified t) 177 178 (fontified t) 178 181 (fontified t) 181 183 (fontified t) 183 194 (fontified t) 194 202 (face font-lock-string-face fontified t) 202 204 (fontified t) 204 206 (face font-lock-string-face fontified t) 206 207 (fontified t) 207 208 (fontified t) 208 209 (fontified t) 209 212 (fontified t) 212 217 (face font-lock-type-face fontified t) 217 218 (face font-lock-type-face c-type c-decl-id-start fontified t) 218 219 (fontified t) 219 220 (face font-lock-variable-name-face fontified t) 220 221 (face font-lock-variable-name-face fontified t) 221 222 (face font-lock-variable-name-face fontified t) 222 223 (face font-lock-variable-name-face fontified t) 223 224 (face font-lock-variable-name-face fontified t) 224 225 (face font-lock-variable-name-face fontified t) 225 226 (face font-lock-variable-name-face fontified t) 226 227 (face font-lock-variable-name-face fontified t) 227 228 (face font-lock-variable-name-face fontified t) 228 230 (fontified t) 230 231 (fontified t) 231 232 (fontified t) 232 233 (fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 236 (fontified t) 236 237 (fontified t) 237 238 (fontified t) 238 239 (fontified t) 239 240 (fontified t) 240 241 (fontified t) 241 242 (fontified t) 242 243 (fontified t) 243 244 (fontified t) 244 245 (fontified t) 245 246 (fontified t) 246 258 (fontified t) 258 261 (face font-lock-string-face fontified t) 261 262 (fontified t) 262 264 (face font-lock-string-face fontified t) 264 265 (fontified t) 265 266 (fontified t rear-nonsticky t) 266 267 (fontified t) 267 270 (fontified t) 270 271 (face font-lock-type-face fontified t) 271 272 (face font-lock-type-face fontified t) 272 273 (face font-lock-type-face fontified t) 273 274 (face font-lock-type-face fontified t) 274 275 (face font-lock-type-face fontified t) 275 276 (face font-lock-type-face c-type c-decl-id-start fontified t) 276 277 (fontified t) 277 278 (face font-lock-variable-name-face fontified t) 278 279 (face font-lock-variable-name-face fontified t) 279 280 (face font-lock-variable-name-face fontified t) 280 281 (face font-lock-variable-name-face fontified t) 281 282 (face font-lock-variable-name-face fontified t) 282 283 (face font-lock-variable-name-face fontified t) 283 284 (face font-lock-variable-name-face fontified t) 284 285 (fontified t) 285 286 (fontified t) 286 287 (fontified t) 287 307 (fontified t) 307 308 (fontified t) 308 309 (fontified t) 309 310 (fontified t) 310 311 (fontified t) 311 312 (fontified t) 312 313 (fontified t) 313 314 (fontified t) 314 315 (fontified t) 315 316 (fontified t) 316 317 (fontified t) 317 318 (fontified t) 318 319 (fontified t) 319 329 (face font-lock-constant-face fontified t) 329 330 (fontified t) 330 334 (face font-lock-constant-face fontified t) 334 335 (fontified t) 335 338 (fontified t) 338 340 (fontified t) 340 351 (fontified t) 351 359 (face font-lock-string-face fontified t) 359 361 (fontified t) 361 363 (face font-lock-string-face fontified t) 363 364 (fontified t) 364 365 (fontified t) 365 366 (fontified t) 366 367 (fontified t) 367 368 (fontified t c-is-sws t) 368 370 (fontified t c-is-sws t) 370 371 (face font-lock-keyword-face fontified t c-is-sws t) 371 376 (face font-lock-keyword-face fontified t) 376 377 (fontified t) 377 378 (fontified t) 378 379 (fontified t) 379 380 (fontified t) 380 381 (fontified t) 381 382 (fontified t) 382 383 (fontified t) 383 384 (fontified t) 384 395 (fontified t) 395 396 (fontified t) 396 397 (fontified t) 397 398 (fontified t) 398 399 (fontified t) 399 400 (fontified t) 400 401 (fontified t) 401 402 (fontified t) 402 404 (fontified t) 404 405 (fontified t) 405 416 (fontified t c-is-sws t) 416 417 (fontified t) 417 423 (fontified t)) . 1875) (undo-tree-id374 . -423) (undo-tree-id375 . -207) (undo-tree-id377 . -89) (undo-tree-id379 . -73) (undo-tree-id381 . -364) (undo-tree-id383 . -366) (undo-tree-id385 . -366) (undo-tree-id387 . -366) (undo-tree-id389 . -3)) ((1875 . 2298)) (26108 29171 906171 486000) 0 nil])
([nil nil ((1389 . 1395) (#("		" 0 2 (fontified nil)) . -1389) (undo-tree-id831 . -2) (#("	" 0 1 (fontified t)) . 1391)) nil (26108 29456 30133 963000) 0 nil])
([nil nil ((1875 . 1876)) ((#("
" 0 1 (fontified t)) . 1875) (undo-tree-id704 . -1)) (26108 29171 656039 195000) 0 nil])
([nil nil ((1396 . 1398) (#("		    " 0 6 (fontified t)) . -1396) (undo-tree-id830 . -6) 1402) nil (26108 29456 30132 360000) 0 nil])
([nil nil ((626 . 628) (t 26108 28100 904340 802000)) ((#("
	" 0 1 (fontified t) 1 2 (fontified t)) . 626) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1)) (26108 29171 380357 580000) 0 nil])
([nil nil ((2317 . 2320) (#("		" 0 2 (fontified nil)) . -2317) (undo-tree-id829 . -2) (#("	" 0 1 (fontified t)) . 2319)) nil (26108 29456 30130 466000) 0 nil])
([nil nil ((nil rear-nonsticky nil 664 . 665) (nil fontified nil 662 . 665) (nil fontified nil 661 . 662) (nil category c->-as-paren-syntax 661 . 662) (nil fontified nil 660 . 661) (nil category c-<-as-paren-syntax 660 . 661) (nil fontified nil 655 . 660) (nil fontified nil 654 . 655) (nil fontified nil 651 . 654) (nil fontified nil 648 . 651) (nil fontified nil 643 . 648) (nil fontified nil 642 . 643) (nil fontified nil 641 . 642) (nil category c->-as-paren-syntax 641 . 642) (nil fontified nil 635 . 641) (nil fontified nil 634 . 635) (nil category c-<-as-paren-syntax 634 . 635) (nil fontified nil 629 . 634) (nil fontified nil 627 . 629) (627 . 665)) ((#("		Lista<String> lista = new Lista<>();" 0 2 (fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face fontified nil) 5 6 (face font-lock-type-face fontified nil) 6 7 (face font-lock-type-face fontified nil) 7 8 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 8 9 (face font-lock-type-face fontified nil) 9 10 (face font-lock-type-face fontified nil) 10 11 (face font-lock-type-face fontified nil) 11 12 (face font-lock-type-face fontified nil) 12 13 (face font-lock-type-face fontified nil) 13 14 (face font-lock-type-face fontified nil) 14 15 (c-type c-decl-id-start fontified nil category c->-as-paren-syntax) 15 16 (fontified nil) 16 21 (face font-lock-variable-name-face fontified nil) 21 23 (fontified nil) 23 24 (fontified nil) 24 27 (face font-lock-keyword-face fontified nil) 27 28 (fontified nil) 28 33 (face font-lock-type-face fontified nil) 33 34 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 34 35 (fontified nil category c->-as-paren-syntax) 35 37 (fontified nil) 37 38 (fontified nil rear-nonsticky nil)) . 627) (undo-tree-id694 . -2) (undo-tree-id695 . -2) (undo-tree-id696 . -2) (nil rear-nonsticky t 664 . 665)) (26108 29171 222712 525000) 0 nil])
([nil nil ((#("
 		Lista<String> ord = lista.mergeSort((a,b) -> {
			String aSinMayus = a.toLowerCase().replaceAll(\" \",\"\");
			String aLimpio = Normalizer.normalize(aSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
			String bSinMayus = b.toLowerCase().replaceAll(\" \",\"\");
			String bLimpio = Normalizer.normalize(bSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
			
			return aLimpio.compareTo(bLimpio);
			
		    });	" 0 1 (fontified nil) 1 2 (fontified nil) 2 4 (fontified nil) 4 9 (face font-lock-type-face fontified nil) 9 10 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 10 16 (face font-lock-type-face fontified nil) 16 17 (c-type c-decl-id-start fontified nil category c->-as-paren-syntax) 17 18 (fontified nil) 18 21 (face font-lock-variable-name-face fontified nil) 21 24 (fontified nil) 24 29 (fontified nil) 29 51 (fontified nil) 51 54 (fontified t) 54 59 (face font-lock-type-face fontified t) 59 60 (face font-lock-type-face c-type c-decl-id-start fontified t) 60 61 (fontified t) 61 62 (face font-lock-variable-name-face fontified t) 62 63 (face font-lock-variable-name-face fontified t) 63 64 (face font-lock-variable-name-face fontified t) 64 65 (face font-lock-variable-name-face fontified t) 65 66 (face font-lock-variable-name-face fontified t) 66 67 (face font-lock-variable-name-face fontified t) 67 68 (face font-lock-variable-name-face fontified t) 68 69 (face font-lock-variable-name-face fontified t) 69 70 (face font-lock-variable-name-face fontified t) 70 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 100 (fontified t) 100 103 (face font-lock-string-face fontified t) 103 104 (fontified t) 104 106 (face font-lock-string-face fontified t) 106 107 (fontified t) 107 108 (fontified t rear-nonsticky t) 108 109 (fontified t) 109 112 (fontified t) 112 113 (face font-lock-type-face fontified t) 113 114 (face font-lock-type-face fontified t) 114 115 (face font-lock-type-face fontified t) 115 116 (face font-lock-type-face fontified t) 116 117 (face font-lock-type-face fontified t) 117 118 (face font-lock-type-face c-type c-decl-id-start fontified t) 118 119 (fontified t) 119 120 (face font-lock-variable-name-face fontified t) 120 121 (face font-lock-variable-name-face fontified t) 121 122 (face font-lock-variable-name-face fontified t) 122 123 (face font-lock-variable-name-face fontified t) 123 124 (face font-lock-variable-name-face fontified t) 124 125 (face font-lock-variable-name-face fontified t) 125 126 (face font-lock-variable-name-face fontified t) 126 127 (fontified t) 127 128 (fontified t) 128 129 (fontified t) 129 149 (fontified t) 149 150 (fontified t) 150 151 (fontified t) 151 152 (fontified t) 152 153 (fontified t) 153 154 (fontified t) 154 155 (fontified t) 155 156 (fontified t) 156 157 (fontified t) 157 158 (fontified t) 158 159 (fontified t) 159 160 (fontified t) 160 161 (fontified t) 161 171 (face font-lock-constant-face fontified t) 171 172 (fontified t) 172 176 (face font-lock-constant-face fontified t) 176 177 (fontified t) 177 180 (fontified t) 180 182 (fontified t) 182 193 (fontified t) 193 201 (face font-lock-string-face fontified t) 201 203 (fontified t) 203 205 (face font-lock-string-face fontified t) 205 206 (fontified t) 206 207 (fontified t) 207 208 (fontified t) 208 211 (fontified t) 211 216 (face font-lock-type-face fontified t) 216 217 (face font-lock-type-face c-type c-decl-id-start fontified t) 217 218 (fontified t) 218 219 (face font-lock-variable-name-face fontified t) 219 220 (face font-lock-variable-name-face fontified t) 220 221 (face font-lock-variable-name-face fontified t) 221 222 (face font-lock-variable-name-face fontified t) 222 223 (face font-lock-variable-name-face fontified t) 223 224 (face font-lock-variable-name-face fontified t) 224 225 (face font-lock-variable-name-face fontified t) 225 226 (face font-lock-variable-name-face fontified t) 226 227 (face font-lock-variable-name-face fontified t) 227 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 232 (fontified t) 232 233 (fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 236 (fontified t) 236 237 (fontified t) 237 238 (fontified t) 238 239 (fontified t) 239 240 (fontified t) 240 241 (fontified t) 241 242 (fontified t) 242 243 (fontified t) 243 244 (fontified t) 244 245 (fontified t) 245 257 (fontified t) 257 260 (face font-lock-string-face fontified t) 260 261 (fontified t) 261 263 (face font-lock-string-face fontified t) 263 264 (fontified t) 264 265 (fontified t rear-nonsticky t) 265 266 (fontified t) 266 269 (fontified t) 269 270 (face font-lock-type-face fontified t) 270 271 (face font-lock-type-face fontified t) 271 272 (face font-lock-type-face fontified t) 272 273 (face font-lock-type-face fontified t) 273 274 (face font-lock-type-face fontified t) 274 275 (face font-lock-type-face c-type c-decl-id-start fontified t) 275 276 (fontified t) 276 277 (face font-lock-variable-name-face fontified t) 277 278 (face font-lock-variable-name-face fontified t) 278 279 (face font-lock-variable-name-face fontified t) 279 280 (face font-lock-variable-name-face fontified t) 280 281 (face font-lock-variable-name-face fontified t) 281 282 (face font-lock-variable-name-face fontified t) 282 283 (face font-lock-variable-name-face fontified t) 283 284 (fontified t) 284 285 (fontified t) 285 286 (fontified t) 286 306 (fontified t) 306 307 (fontified t) 307 308 (fontified t) 308 309 (fontified t) 309 310 (fontified t) 310 311 (fontified t) 311 312 (fontified t) 312 313 (fontified t) 313 314 (fontified t) 314 315 (fontified t) 315 316 (fontified t) 316 317 (fontified t) 317 318 (fontified t) 318 328 (face font-lock-constant-face fontified t) 328 329 (fontified t) 329 333 (face font-lock-constant-face fontified t) 333 334 (fontified t) 334 337 (fontified t) 337 339 (fontified t) 339 350 (fontified t) 350 358 (face font-lock-string-face fontified t) 358 360 (fontified t) 360 362 (face font-lock-string-face fontified t) 362 363 (fontified t) 363 364 (fontified t) 364 365 (fontified t) 365 366 (fontified t) 366 368 (fontified t) 368 369 (fontified t) 369 370 (fontified t c-is-sws t) 370 372 (fontified t c-is-sws t) 372 373 (face font-lock-keyword-face fontified t c-is-sws t) 373 378 (face font-lock-keyword-face fontified t) 378 379 (fontified t) 379 380 (fontified t) 380 381 (fontified t) 381 382 (fontified t) 382 383 (fontified t) 383 384 (fontified t) 384 385 (fontified t) 385 386 (fontified t) 386 397 (fontified t) 397 398 (fontified t) 398 399 (fontified t) 399 400 (fontified t) 400 401 (fontified t) 401 402 (fontified t) 402 403 (fontified t) 403 404 (fontified t) 404 406 (fontified t) 406 407 (fontified t) 407 410 (fontified t) 410 411 (fontified t) 411 418 (fontified t) 418 419 (fontified t) 419 421 (fontified t)) . 1917) (undo-tree-id822 . -421) (undo-tree-id823 . -206) (undo-tree-id824 . -411) (undo-tree-id825 . -365) (undo-tree-id826 . -1) (undo-tree-id827 . -410) (#("	" 0 1 (fontified nil)) . 1917) (undo-tree-id828 . -1) (1909 . 1917) 1910) nil (26108 29456 30128 182000) 0 nil])
([nil nil ((629 . 630)) ((#("`" 0 1 (fontified t)) . 629) (undo-tree-id693 . -1)) (26108 29170 943508 506000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1919) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (#(" " 0 1 (fontified t)) . -1920) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (#(" " 0 1 (fontified t)) . -1921) (undo-tree-id815 . -1) (#(" " 0 1 (fontified t)) . -1922) (undo-tree-id816 . -1) (#(" " 0 1 (fontified t)) . -1923) (undo-tree-id817 . -1) (#(" " 0 1 (fontified t)) . -1924) (undo-tree-id818 . -1) (#(" " 0 1 (fontified t)) . -1925) (undo-tree-id819 . -1) (#(" " 0 1 (fontified nil)) . -1926) (undo-tree-id820 . -1) (#("	" 0 1 (fontified nil)) . 1927) (undo-tree-id821 . -1) (1919 . 1927) 1920) nil (26108 29456 30120 237000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t)) . -629) (undo-tree-id402 . -1) 630) ((629 . 630)) (26108 29170 514089 731000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1917) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (#(" " 0 1 (fontified t)) . -1918) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (#(" " 0 1 (fontified t)) . -1919) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (#(" " 0 1 (fontified t)) . -1920) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (#(" " 0 1 (fontified t)) . -1921) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (#(" " 0 1 (fontified t)) . -1922) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (#(" " 0 1 (fontified t)) . -1923) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (#(" " 0 1 (fontified t)) . -1924) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (#(" " 0 1 (fontified nil)) . -1925) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (#("	" 0 1 (fontified nil)) . 1926) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (1918 . 1926) 1919) nil (26108 29456 30105 800000) 0 nil])
([nil nil ((627 . 628) (#("		" 0 2 (fontified t)) . -627) (undo-tree-id400 . -2) 629) ((627 . 629) (#("	" 0 1 (fontified t)) . 627)) (26108 29170 201164 698000) 0 nil])
([nil nil ((963 . 964) (t 26108 29456 38657 254000)) nil (26108 29503 402526 430000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -1632) (undo-tree-id407 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -1633) (undo-tree-id408 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -1634) (undo-tree-id409 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -1635) (undo-tree-id410 . -1) 1636 (t 26108 28130 800585 300000)) ((1632 . 1636) (t 26108 29158 954238 816000)) (26108 29151 265686 824000) 0 nil])
([nil nil ((962 . 968)) nil (26108 29503 402525 689000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1884) (undo-tree-id403 . -1) (#("s" 0 1 (fontified t)) . -1885) (undo-tree-id404 . -1) (#("t" 0 1 (fontified t)) . -1886) (undo-tree-id405 . -1) (#("a" 0 1 (fontified t)) . -1887) (undo-tree-id406 . -1) 1888) ((1884 . 1888)) (26108 29151 56539 460000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1270 . 1271) (nil fontified nil 1270 . 1271) (nil fontified nil 1269 . 1270) (nil fontified nil 1266 . 1269) (nil fontified nil 1265 . 1266) (nil fontified nil 1260 . 1265) (nil fontified nil 1248 . 1260) (nil fontified nil 1247 . 1248) (nil fontified nil 1246 . 1247) (nil fontified nil 1245 . 1246) (nil fontified nil 1244 . 1245) (nil fontified nil 1243 . 1244) (nil fontified nil 1237 . 1243) (nil fontified nil 1234 . 1237) (nil fontified nil 1230 . 1234) (nil fontified nil 1226 . 1230) (nil fontified nil 1221 . 1226) (nil fontified nil 1207 . 1221) (nil fontified nil 1196 . 1207) (nil fontified nil 1191 . 1196) (nil fontified nil 1186 . 1191) (nil fontified nil 1179 . 1186) (nil fontified nil 1178 . 1179) (nil fontified nil 1177 . 1178) (nil fontified nil 1172 . 1177) (nil fontified nil 1168 . 1172) (nil fontified nil 1157 . 1168) (nil fontified nil 1152 . 1157) (nil fontified nil 1138 . 1152) (nil fontified nil 1137 . 1138) (nil fontified nil 1134 . 1137) (nil fontified nil 1133 . 1134) (nil fontified nil 1131 . 1133) (nil fontified nil 1128 . 1131) (nil fontified nil 1127 . 1128) (nil fontified nil 1125 . 1127) (nil fontified nil 1124 . 1125) (nil fontified nil 1123 . 1124) (nil fontified nil 1116 . 1123) (nil fontified nil 1110 . 1116) (nil fontified nil 1091 . 1110) (nil fontified nil 1081 . 1091) (nil fontified nil 1080 . 1081) (nil fontified nil 1077 . 1080) (nil fontified nil 1074 . 1077) (nil fontified nil 1061 . 1074) (nil fontified nil 1060 . 1061) (nil fontified nil 1059 . 1060) (nil fontified nil 1050 . 1059) (nil fontified nil 1031 . 1050) (nil fontified nil 1026 . 1031) (nil fontified nil 1023 . 1026) (nil fontified nil 1016 . 1023) (nil fontified nil 1015 . 1016) (nil fontified nil 1014 . 1015) (nil fontified nil 1012 . 1014) (nil fontified nil 1010 . 1012) (nil fontified nil 1006 . 1010) (nil fontified nil 1005 . 1006) (nil category c->-as-paren-syntax 1005 . 1006) (nil fontified nil 1004 . 1005) (nil category c-<-as-paren-syntax 1004 . 1005) (nil fontified nil 999 . 1004) (nil fontified nil 998 . 999) (nil fontified nil 995 . 998) (nil fontified nil 994 . 995) (nil fontified nil 992 . 994) (nil fontified nil 991 . 992) (nil fontified nil 990 . 991) (nil fontified nil 989 . 990) (nil fontified nil 988 . 989) (nil fontified nil 987 . 988) (nil fontified nil 986 . 987) (nil fontified nil 985 . 986) (nil category c->-as-paren-syntax 985 . 986) (nil fontified nil 979 . 985) (nil fontified nil 978 . 979) (nil category c-<-as-paren-syntax 978 . 979) (nil fontified nil 973 . 978) (nil fontified nil 971 . 973) (nil fontified nil 970 . 971) (nil fontified nil 969 . 970) (nil fontified nil 968 . 969) (968 . 1271)) nil (26108 29503 402522 383000) 0 nil])
([nil nil ((626 . 628) (t 26108 28156 743549 795000)) ((#("
	" 0 1 (fontified t) 1 2 (fontified t)) . 626) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1)) (26108 29150 893707 788000) 0 nil])
([nil nil ((971 . 976) (#("		" 0 2 (fontified t)) . 971) (undo-tree-id968 . -1) 972) nil (26108 29503 402511 753000) 0 nil])
([nil nil ((626 . 628)) ((#("
	" 0 1 (fontified t) 1 2 (fontified t)) . 626) (undo-tree-id680 . -2) (undo-tree-id681 . -2) (undo-tree-id682 . -2) (undo-tree-id683 . -2) (undo-tree-id684 . -2) (undo-tree-id685 . -1) (undo-tree-id686 . -2)) (26108 29150 701742 275000) 0 nil])
([nil nil ((1013 . 1018) (#("		" 0 2 (fontified t)) . 1013) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) 1014) nil (26108 29503 402510 230000) 0 nil])
([nil nil ((628 . 633)) ((#("priba" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 628) (undo-tree-id675 . -5) (undo-tree-id676 . -3) (undo-tree-id677 . -3) (undo-tree-id678 . -3) (undo-tree-id679 . -5)) (26108 29150 520170 179000) 0 nil])
([nil nil ((1053 . 1058)) nil (26108 29503 402487 478000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -631) (undo-tree-id466 . -1) (#("a" 0 1 (fontified t)) . -632) (undo-tree-id467 . -1) 633) ((631 . 633)) (26108 29150 298293 94000) 0 nil])
([nil nil ((1059 . 1064) (#("		" 0 2 (fontified t)) . 1059) (undo-tree-id963 . -1) (undo-tree-id964 . -1) 1060) nil (26108 29503 402486 726000) 0 nil])
([nil nil ((631 . 636)) ((#("vate " 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t)) . 631) (undo-tree-id672 . -5) (undo-tree-id673 . -5) (undo-tree-id674 . -5)) (26108 29150 82196 168000) 0 nil])
([nil nil ((1122 . 1127) (#("		" 0 2 (fontified t)) . 1122) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) 1123) nil (26108 29503 402484 743000) 0 nil])
([nil nil ((636 . 646)) ((#("Lista<> od" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 6 7 (c-type c-decl-id-start category c->-as-paren-syntax fontified t) 7 8 (fontified t) 8 9 (face font-lock-variable-name-face fontified t) 9 10 (face font-lock-variable-name-face fontified t)) . 636) (undo-tree-id670 . -10) (undo-tree-id671 . -10)) (26108 29149 891324 363000) 0 nil])
([nil nil ((1186 . 1191)) nil (26108 29503 402482 418000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -645) (undo-tree-id465 . -1) 646) ((645 . 646)) (26108 29149 690099 498000) 0 nil])
([nil nil ((1192 . 1197) (#("		" 0 2 (fontified t)) . 1192) (undo-tree-id958 . -1) (undo-tree-id959 . -1) 1193) nil (26108 29503 402481 727000) 0 nil])
([nil nil ((645 . 652)) ((#("rdenada" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (face font-lock-variable-name-face fontified t) 6 7 (face font-lock-variable-name-face fontified t)) . 645) (undo-tree-id664 . -7) (undo-tree-id665 . -5) (undo-tree-id666 . -5) (undo-tree-id667 . -5) (undo-tree-id668 . -5) (undo-tree-id669 . -7)) (26108 29149 382187 5000) 0 nil])
([nil nil ((1213 . 1218)) nil (26108 29503 402479 824000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -650) (undo-tree-id463 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -651) (undo-tree-id464 . -1) 652) ((650 . 652)) (26108 29149 130739 713000) 0 nil])
([nil nil ((1219 . 1224) (#("		" 0 2 (fontified t)) . 1219) (undo-tree-id956 . -1) (undo-tree-id957 . -1) 1220) nil (26108 29503 402478 922000) 0 nil])
([nil nil ((650 . 652)) ((#("do" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t)) . 650) (undo-tree-id660 . -2) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -2)) (26108 29148 961751 168000) 0 nil])
([nil nil ((1270 . 1272) (#("		    " 0 6 (fontified t)) . 1270) (undo-tree-id954 . -1) (undo-tree-id955 . -1) 1271) nil (26108 29503 402476 818000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -651) (undo-tree-id462 . -1) 652) ((651 . 652)) (26108 29148 775837 463000) 0 nil])
([nil nil ((1295 . 1300) (#("		" 0 2 (fontified t)) . -1295) (undo-tree-id953 . -2) 1297) nil (26108 29503 402474 524000) 0 nil])
([nil nil ((651 . 653)) ((#("o " 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t)) . 651) (undo-tree-id658 . -2) (undo-tree-id659 . -2)) (26108 29148 578558 659000) 0 nil])
([nil nil ((964 . 965) (#(" " 0 1 (fontified t)) . -964) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (965 . 966) (#(" " 0 1 (fontified t)) . -965) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (966 . 967) (#(" " 0 1 (fontified t)) . -966) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (967 . 968) (#(" " 0 1 (fontified t)) . -967) (undo-tree-id951 . -1) (undo-tree-id952 . -1) 968) nil (26108 29503 402471 728000) 0 nil])
([nil nil ((653 . 654)) ((#("{" 0 1 (fontified t)) . 653)) (26108 29148 415009 1000) 0 nil])
([nil nil ((970 . 971) (#(" " 0 1 (fontified nil)) . -970) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (#("	" 0 1 (fontified nil)) . 971) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (963 . 971) 964) nil (26108 29503 402459 816000) 0 nil])
([nil nil ((1109 . 1110) (#("	" 0 1 (fontified nil)) . 1108) (undo-tree-id461 . -1) (1109 . 1110)) ((#("
" 0 1 (fontified nil)) . 1109) (undo-tree-id657 . -1) (1108 . 1109) (#("	" 0 1 (fontified t)) . 1109)) (26108 29148 262628 889000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -962) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (963 . 964) (#(" " 0 1 (fontified t)) . -963) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (964 . 965) (#(" " 0 1 (fontified t)) . -964) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (965 . 966) (#(" " 0 1 (fontified t)) . -965) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (966 . 967) (#(" " 0 1 (fontified t)) . -966) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (967 . 968) (#(" " 0 1 (fontified t)) . -967) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (968 . 969) (#(" " 0 1 (fontified t)) . -968) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (969 . 970) (#(" " 0 1 (fontified t)) . -969) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) 970) nil (26108 29503 402443 456000) 0 nil])
([nil nil ((1108 . 1109) (1108 . 1109)) ((#("}" 0 1 (fontified nil)) . 1108) (#("	" 0 1 (fontified t)) . 1108)) (26108 29148 46832 356000) 0 nil])
([nil nil ((#("		Lista<String> lista = new Lista<>();
		int longitd = lista.getLongitud();

		FileReader lectorArchivo = new FileReader(nombreArchivo);
		BufferedReader lector = new BufferedReader(lectorArchivo);

		String renglon;

		while((renglon = lector.readLine()) != null){
		    lista.agrega(renglon);
		}
" 0 2 (fontified t) 2 7 (face font-lock-type-face fontified t) 7 8 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 8 14 (face font-lock-type-face fontified t) 14 15 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 15 16 (fontified t) 16 17 (face font-lock-variable-name-face fontified t) 17 18 (face font-lock-variable-name-face fontified t) 18 19 (face font-lock-variable-name-face fontified t) 19 20 (face font-lock-variable-name-face fontified t) 20 21 (face font-lock-variable-name-face fontified t) 21 23 (fontified t) 23 24 (fontified t) 24 27 (face font-lock-keyword-face fontified t) 27 28 (fontified t) 28 33 (face font-lock-type-face fontified t) 33 34 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 34 35 (fontified t category c->-as-paren-syntax) 35 39 (fontified t) 39 41 (fontified t) 41 43 (face font-lock-type-face fontified t) 43 44 (face font-lock-type-face c-type c-decl-id-start fontified t) 44 45 (fontified t) 45 52 (face font-lock-variable-name-face fontified t) 52 55 (fontified t) 55 60 (fontified t) 60 79 (fontified t) 79 88 (face font-lock-type-face fontified t) 88 89 (face font-lock-type-face c-type c-decl-id-start fontified t) 89 90 (fontified t) 90 103 (face font-lock-variable-name-face fontified t) 103 106 (fontified t) 106 109 (face font-lock-keyword-face fontified t) 109 110 (fontified t) 110 120 (face font-lock-type-face fontified t) 120 139 (fontified t) 139 145 (face font-lock-type-face fontified t) 145 152 (face font-lock-type-face fontified t) 152 153 (face font-lock-type-face c-type c-decl-id-start fontified t) 153 154 (fontified t) 154 156 (face font-lock-variable-name-face fontified t) 156 157 (face font-lock-variable-name-face fontified t) 157 160 (face font-lock-variable-name-face fontified t) 160 162 (fontified t) 162 163 (fontified t) 163 166 (face font-lock-keyword-face fontified t) 166 167 (fontified t) 167 181 (face font-lock-type-face fontified t) 181 186 (fontified t) 186 197 (fontified t) 197 201 (fontified t) 201 206 (face font-lock-type-face fontified t) 206 207 (face font-lock-type-face c-type c-decl-id-start fontified t) 207 208 (fontified t) 208 215 (face font-lock-variable-name-face fontified t) 215 220 (fontified t) 220 225 (face font-lock-keyword-face fontified t) 225 236 (fontified t) 236 250 (fontified t) 250 255 (fontified t) 255 259 (fontified t) 259 263 (face font-lock-constant-face fontified t) 263 266 (fontified t) 266 272 (fontified t) 272 273 (fontified t) 273 274 (fontified t) 274 275 (fontified t) 275 276 (fontified t) 276 277 (fontified t) 277 289 (fontified t) 289 294 (fontified t) 294 295 (fontified t) 295 298 (fontified t) 298 299 (fontified t)) . -1957) (undo-tree-id974 . -299) (undo-tree-id975 . -299) 2256 (t 26108 29503 421554 495000)) nil (26108 29573 672341 55000) 0 nil])
([nil nil ((656 . 661) (#("	" 0 1 (fontified nil)) . 655) (undo-tree-id460 . -1) (656 . 657)) ((#("
" 0 1 (fontified nil)) . 656) (655 . 656) (#("	    " 0 5 (fontified t)) . 656)) (26108 29147 767613 638000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1956) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) 1957) nil (26108 29573 672335 384000) 0 nil])
([nil nil ((nil rear-nonsticky nil 945 . 946) (nil fontified nil 945 . 946) (nil fontified nil 942 . 945) (nil fontified nil 941 . 942) (nil fontified nil 924 . 941) (nil fontified nil 923 . 924) (nil fontified nil 917 . 923) (nil fontified nil 914 . 917) (nil fontified nil 910 . 914) (nil fontified nil 876 . 910) (nil fontified nil 871 . 876) (nil fontified nil 866 . 871) (nil fontified nil 859 . 866) (nil fontified nil 858 . 859) (nil fontified nil 857 . 858) (nil fontified nil 852 . 857) (nil fontified nil 832 . 852) (nil fontified nil 818 . 832) (nil fontified nil 817 . 818) (nil fontified nil 814 . 817) (nil fontified nil 811 . 814) (nil fontified nil 805 . 811) (nil fontified nil 804 . 805) (nil fontified nil 803 . 804) (nil fontified nil 790 . 803) (nil fontified nil 771 . 790) (nil fontified nil 761 . 771) (nil fontified nil 760 . 761) (nil fontified nil 757 . 760) (nil fontified nil 754 . 757) (nil fontified nil 741 . 754) (nil fontified nil 740 . 741) (nil fontified nil 739 . 740) (nil fontified nil 730 . 739) (nil fontified nil 711 . 730) (nil fontified nil 706 . 711) (nil fontified nil 703 . 706) (nil fontified nil 696 . 703) (nil fontified nil 695 . 696) (nil fontified nil 694 . 695) (nil fontified nil 692 . 694) (nil fontified nil 690 . 692) (nil fontified nil 686 . 690) (nil fontified nil 685 . 686) (nil category c->-as-paren-syntax 685 . 686) (nil fontified nil 684 . 685) (nil category c-<-as-paren-syntax 684 . 685) (nil fontified nil 679 . 684) (nil fontified nil 678 . 679) (nil fontified nil 675 . 678) (nil fontified nil 672 . 675) (nil fontified nil 671 . 672) (nil fontified nil 670 . 671) (nil fontified nil 669 . 670) (nil category c->-as-paren-syntax 669 . 670) (nil fontified nil 663 . 669) (nil fontified nil 662 . 663) (nil category c-<-as-paren-syntax 662 . 663) (nil fontified nil 657 . 662) (nil fontified nil 655 . 657) (655 . 946)) ((#("		Lista<String> l = new Lista<>();
		int longitd = lista.getLongitud();

		FileReader lectorArchivo = new FileReader(nombreArchivo);
		BufferedReader lector = new BufferedReader(lectorArchivo);

		String renglon;

		while((renglon = lector.readLine()) != null){
		    l.agrega(renglon);
		}
" 0 2 (fontified nil) 2 7 (face font-lock-type-face fontified nil) 7 8 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 8 14 (face font-lock-type-face fontified nil) 14 15 (c-type c-decl-id-start fontified nil category c->-as-paren-syntax) 15 16 (fontified nil) 16 17 (face font-lock-variable-name-face fontified nil) 17 20 (fontified nil) 20 23 (face font-lock-keyword-face fontified nil) 23 24 (fontified nil) 24 29 (face font-lock-type-face fontified nil) 29 30 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 30 31 (fontified nil category c->-as-paren-syntax) 31 35 (fontified nil) 35 37 (fontified nil) 37 39 (face font-lock-type-face fontified nil) 39 40 (face font-lock-type-face c-type c-decl-id-start fontified nil) 40 41 (fontified nil) 41 48 (face font-lock-variable-name-face fontified nil) 48 51 (fontified nil) 51 56 (fontified nil) 56 72 (fontified nil) 72 73 (fontified nil) 73 75 (fontified nil) 75 84 (face font-lock-type-face fontified nil) 84 85 (face font-lock-type-face c-type c-decl-id-start fontified nil) 85 86 (fontified nil) 86 99 (face font-lock-variable-name-face fontified nil) 99 102 (fontified nil) 102 105 (face font-lock-keyword-face fontified nil) 105 106 (fontified nil) 106 116 (face font-lock-type-face fontified nil) 116 133 (fontified nil) 133 135 (fontified nil) 135 148 (face font-lock-type-face fontified nil) 148 149 (face font-lock-type-face c-type c-decl-id-start fontified nil) 149 150 (fontified nil) 150 156 (face font-lock-variable-name-face fontified nil) 156 159 (fontified nil) 159 162 (face font-lock-keyword-face fontified nil) 162 163 (fontified nil) 163 177 (face font-lock-type-face fontified nil) 177 194 (fontified nil) 194 195 (fontified nil) 195 197 (fontified nil) 197 202 (face font-lock-type-face fontified nil) 202 203 (face font-lock-type-face c-type c-decl-id-start fontified nil) 203 204 (fontified nil) 204 211 (face font-lock-variable-name-face fontified nil) 211 213 (fontified nil) 213 214 (fontified nil) 214 216 (fontified nil) 216 221 (face font-lock-keyword-face fontified nil) 221 255 (fontified nil) 255 259 (face font-lock-constant-face fontified nil) 259 262 (fontified nil) 262 268 (fontified nil) 268 269 (fontified nil) 269 286 (fontified nil) 286 287 (fontified nil) 287 289 (fontified nil) 289 290 (fontified nil) 290 291 (fontified nil rear-nonsticky nil)) . 655) (undo-tree-id651 . -34) (undo-tree-id652 . -35) (undo-tree-id653 . -291) (undo-tree-id654 . -134) (undo-tree-id655 . -74) (undo-tree-id656 . -36) (nil rear-nonsticky t 945 . 946)) (26108 29147 727704 396000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1953) (undo-tree-id1143 . -1) 1954 (t 26108 29573 690878 44000)) nil (26108 29720 659587 892000) 0 nil])
([nil nil ((656 . 661) (#("		" 0 2 (fontified nil)) . 656) (655 . 656)) ((#("
" 0 1 (fontified t)) . 655) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (656 . 658) (#("	    " 0 5 (fontified t)) . 656) (undo-tree-id650 . -2)) (26108 29147 687319 316000) 0 nil])
([nil nil ((1826 . 1827) (#("s" 0 1 (face font-lock-string-face fontified t)) . -1826) (undo-tree-id1122 . -1) (1827 . 1828) (#("u" 0 1 (face font-lock-string-face fontified t)) . -1827) (undo-tree-id1123 . -1) (1828 . 1829) (#("p" 0 1 (face font-lock-string-face fontified t)) . -1828) (undo-tree-id1124 . -1) (1829 . 1830) (#("o" 0 1 (face font-lock-string-face fontified t)) . -1829) (undo-tree-id1125 . -1) (1830 . 1831) (#("n" 0 1 (face font-lock-string-face fontified t)) . -1830) (undo-tree-id1126 . -1) (1831 . 1832) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1831) (undo-tree-id1127 . -1) (1832 . 1833) (#(" " 0 1 (face font-lock-string-face fontified t)) . -1832) (undo-tree-id1128 . -1) (1833 . 1834) (#("q" 0 1 (face font-lock-string-face fontified t)) . -1833) (undo-tree-id1129 . -1) (1834 . 1835) (#("u" 0 1 (face font-lock-string-face fontified t)) . -1834) (undo-tree-id1130 . -1) (1835 . 1836) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1835) (undo-tree-id1131 . -1) (1836 . 1837) (#(" " 0 1 (face font-lock-string-face fontified t)) . -1836) (undo-tree-id1132 . -1) (1837 . 1838) (#("s" 0 1 (face font-lock-string-face fontified t)) . -1837) (undo-tree-id1133 . -1) (1838 . 1839) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1838) (undo-tree-id1134 . -1) (1839 . 1840) (#(" " 0 1 (face font-lock-string-face fontified t)) . -1839) (undo-tree-id1135 . -1) (1840 . 1841) (#("v" 0 1 (face font-lock-string-face fontified t)) . -1840) (undo-tree-id1136 . -1) (1841 . 1842) (#("o" 0 1 (face font-lock-string-face fontified t)) . -1841) (undo-tree-id1137 . -1) (1842 . 1843) (#("l" 0 1 (face font-lock-string-face fontified t)) . -1842) (undo-tree-id1138 . -1) (1843 . 1844) (#("t" 0 1 (face font-lock-string-face fontified t)) . -1843) (undo-tree-id1139 . -1) (1844 . 1845) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1844) (undo-tree-id1140 . -1) (1845 . 1846) (#("a" 0 1 (face font-lock-string-face fontified t)) . -1845) (undo-tree-id1141 . -1) (1846 . 1847) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -1846) (undo-tree-id1142 . -1) 1847) nil (26108 29720 659583 774000) 0 nil])
([nil nil ((694 . 699) (#("		" 0 2 (fontified t)) . 694) (undo-tree-id459 . -1) 695) ((694 . 696) (#("	    " 0 5 (fontified t)) . 694)) (26108 29147 646525 413000) 0 nil])
([nil nil ((1817 . 1818) (#("\"" 0 1 (face font-lock-warning-face fontified t)) . -1817) (undo-tree-id1113 . -1) (1818 . 1819) (#("A" 0 1 (face font-lock-string-face fontified t)) . -1818) (undo-tree-id1114 . -1) (1819 . 1820) (#("q" 0 1 (face font-lock-string-face fontified t)) . -1819) (undo-tree-id1115 . -1) (1820 . 1821) (#("u" 0 1 (face font-lock-string-face fontified t)) . -1820) (undo-tree-id1116 . -1) (1821 . 1822) (#("í" 0 1 (face font-lock-string-face fontified t)) . -1821) (undo-tree-id1117 . -1) (1822 . 1823) (#(" " 0 1 (face font-lock-string-face fontified t)) . -1822) (undo-tree-id1118 . -1) (1823 . 1824) (#("s" 0 1 (face font-lock-string-face fontified t)) . -1823) (undo-tree-id1119 . -1) (1824 . 1825) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1824) (undo-tree-id1120 . -1) (1825 . 1826) (#(" " 0 1 (face font-lock-string-face fontified t)) . -1825) (undo-tree-id1121 . -1) 1826) nil (26108 29720 659564 849000) 0 nil])
([nil nil ((735 . 740) (#("		" 0 2 (fontified t)) . 735) (undo-tree-id458 . -1) 736) ((735 . 737) (#("	    " 0 5 (fontified t)) . 735)) (26108 29147 606599 530000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1817) (1818 . 1819) 1817) nil (26108 29720 659541 766000) 0 nil])
([nil nil ((798 . 803) (#("		" 0 2 (fontified t)) . 798) (undo-tree-id457 . -1) 799) ((798 . 800) (#("	    " 0 5 (fontified t)) . 798)) (26108 29147 6422 682000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1818) (1819 . 1820) 1818) nil (26108 29720 659540 955000) 0 nil])
([nil nil ((862 . 867)) ((#("	    " 0 5 (fontified t)) . 862)) (26108 29146 834122 910000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1819) (1820 . 1821) 1819) nil (26108 29720 659540 193000) 0 nil])
([nil nil ((868 . 873) (#("		" 0 2 (fontified t)) . 868) (undo-tree-id456 . -1) 869) ((868 . 870) (#("	    " 0 5 (fontified t)) . 868)) (26108 29146 712902 677000) 0 nil])
([nil nil ((1819 . 1820) (#("f" 0 1 (fontified t)) . -1819) (undo-tree-id1112 . -1) 1820) nil (26108 29720 659539 211000) 0 nil])
([nil nil ((889 . 894)) ((#("	    " 0 5 (fontified t)) . 889)) (26108 29146 672991 792000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1819) (1820 . 1821) 1819) nil (26108 29720 659537 618000) 0 nil])
([nil nil ((895 . 900) (#("		" 0 2 (fontified t)) . 895) (undo-tree-id455 . -1) 896) ((895 . 897) (#("	    " 0 5 (fontified t)) . 895)) (26108 29146 72047 281000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1820) (1821 . 1822) 1820) nil (26108 29720 659536 717000) 0 nil])
([nil nil ((946 . 948) (#("		    " 0 6 (fontified t)) . 946) (undo-tree-id454 . -1) 947) ((946 . 952) (#("		" 0 2 (fontified t)) . 946)) (26108 29145 928221 248000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1821) (1822 . 1823) 1821) nil (26108 29720 659535 915000) 0 nil])
([nil nil ((967 . 972) (#("		" 0 2 (fontified t)) . -967) (undo-tree-id453 . -2) 969) ((967 . 969) (#("	    " 0 5 (fontified t)) . 967)) (26108 29145 764845 117000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1822) (1823 . 1824) 1822) nil (26108 29720 659535 134000) 0 nil])
([nil nil ((981 . 986) (#("	" 0 1 (fontified t)) . 981) 986) ((981 . 982) (#("	    " 0 5 (fontified t)) . 981)) (26108 29145 622127 903000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1823) (1824 . 1825) 1823) nil (26108 29720 659534 262000) 0 nil])
([nil nil ((1024 . 1029) (#("	" 0 1 (fontified t)) . 1024) 1033) ((1024 . 1025) (#("	    " 0 5 (fontified t)) . 1024)) (26108 29145 450618 323000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1824) (1825 . 1826) 1824) nil (26108 29720 659533 461000) 0 nil])
([nil nil ((1076 . 1082) (#("		" 0 2 (fontified t)) . 1076) 1082) ((1076 . 1078) (#("		    " 0 6 (fontified t)) . 1076)) (26108 29145 290926 719000) 0 nil])
([nil nil ((1824 . 1825) (#("r" 0 1 (fontified t)) . -1824) (undo-tree-id1111 . -1) 1825) nil (26108 29720 659532 529000) 0 nil])
([nil nil ((1137 . 1143) (#("		" 0 2 (fontified t)) . 1137) 1147) ((1137 . 1139) (#("		    " 0 6 (fontified t)) . 1137)) (26108 29145 142582 432000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1824) (1825 . 1826) 1824) nil (26108 29720 659531 186000) 0 nil])
([nil nil ((1239 . 1245) (#("		" 0 2 (fontified t)) . 1239) 1253) ((1239 . 1241) (#("		    " 0 6 (fontified t)) . 1239)) (26108 29144 988691 704000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1825) (1826 . 1827) 1825) nil (26108 29720 659530 365000) 0 nil])
([nil nil ((1300 . 1306) (#("		" 0 2 (fontified t)) . 1300) 1318) ((1300 . 1302) (#("		    " 0 6 (fontified t)) . 1300)) (26108 29144 846897 119000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1826) (1827 . 1828) 1826) nil (26108 29720 659529 573000) 0 nil])
([nil nil ((1405 . 1411) (#("		" 0 2 (fontified t)) . 1405) 1427) ((1405 . 1407) (#("		    " 0 6 (fontified t)) . 1405)) (26108 29144 688766 716000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1827) (1828 . 1829) 1827) nil (26108 29720 659528 742000) 0 nil])
([nil nil ((1449 . 1451) (#("	    " 0 5 (fontified t)) . 1449) 1458) ((1449 . 1454) (#("		" 0 2 (fontified t)) . 1449)) (26108 29144 535944 582000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1828) (1829 . 1830) 1828) nil (26108 29720 659527 750000) 0 nil])
([nil nil ((1456 . 1461)) ((#("	    " 0 5 (fontified t)) . 1456)) (26108 29144 379999 377000) 0 nil])
([nil nil ((1828 . 1829) (#("f" 0 1 (fontified t)) . -1828) (undo-tree-id1110 . -1) 1829) nil (26108 29720 659526 888000) 0 nil])
([nil nil ((642 . 643)) ((#("5" 0 1 (fontified t)) . 642) (undo-tree-id646 . -1) (undo-tree-id647 . -1)) (26108 29144 229666 878000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1828) (1829 . 1830) 1828) nil (26108 29720 659525 516000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -642) (undo-tree-id452 . -1) 643) ((642 . 643)) (26108 29144 79985 23000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 1821) (1822 . 1823) 1821) nil (26108 29720 659524 744000) 0 nil])
([nil nil ((642 . 643)) ((#("T" 0 1 (face font-lock-type-face fontified t)) . 642)) (26108 29143 920101 889000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 1822) (1823 . 1824) 1822) nil (26108 29720 659523 913000) 0 nil])
([nil nil ((653 . 655)) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 653) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1)) (26108 29143 746164 673000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . 1823) (1824 . 1825) 1823) nil (26108 29720 659523 121000) 0 nil])
([nil nil ((654 . 655)) ((#("K" 0 1 (face font-lock-type-face fontified t)) . 654) (undo-tree-id641 . -1) (undo-tree-id642 . -1)) (26108 29143 598612 0) 0 nil])
([nil nil ((1821 . 1822) (#("." 0 1 (fontified t)) . -1821) (undo-tree-id1107 . -1) (1822 . 1823) (#("r" 0 1 (fontified t)) . -1822) (undo-tree-id1108 . -1) (1823 . 1824) (#("e" 0 1 (fontified t)) . -1823) (undo-tree-id1109 . -1) 1824) nil (26108 29720 659521 899000) 0 nil])
([nil nil ((#("K" 0 1 (face font-lock-type-face fontified t)) . -654) (undo-tree-id451 . -1) 655) ((654 . 655)) (26108 29143 424316 145000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 1825) (1826 . 1827) 1825) nil (26108 29720 659519 184000) 0 nil])
([nil nil ((654 . 661)) ((#("Lista<>" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 6 7 (category c->-as-paren-syntax fontified t)) . 654) (undo-tree-id638 . -6) (undo-tree-id639 . -7) (undo-tree-id640 . -6)) (26108 29143 262252 329000) 0 nil])
([nil nil ((1824 . 1825) (#("t" 0 1 (fontified t)) . -1824) (undo-tree-id1102 . -1) (1825 . 1826) (#("3" 0 1 (fontified t)) . -1825) (undo-tree-id1103 . -1) (1826 . 1827) (#("i" 0 1 (fontified t)) . -1826) (undo-tree-id1104 . -1) (1827 . 1828) (#("n" 0 1 (fontified t)) . -1827) (undo-tree-id1105 . -1) (1828 . 1829) (#("g" 0 1 (fontified t)) . -1828) (undo-tree-id1106 . -1) 1829) nil (26108 29720 659517 782000) 0 nil])
([nil nil ((660 . 661)) ((#("T" 0 1 (face font-lock-type-face fontified t)) . 660)) (26108 29140 952422 437000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1824) (1825 . 1826) 1824) nil (26108 29720 659513 564000) 0 nil])
([nil nil ((662 . 668)) ((#(" lista" 0 1 (fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (face font-lock-variable-name-face fontified t)) . 662)) (26108 29140 334052 284000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1825) (1826 . 1827) 1825) nil (26108 29720 659512 702000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -1003) (undo-tree-id437 . -1) (#("i" 0 1 (fontified t)) . -1004) (undo-tree-id438 . -1) (#("s" 0 1 (fontified t)) . -1005) (undo-tree-id439 . -1) (#("t" 0 1 (fontified t)) . -1006) (undo-tree-id440 . -1) (#("a" 0 1 (fontified t)) . -1007) (undo-tree-id441 . -1) (#("<" 0 1 (fontified t)) . -1008) (undo-tree-id442 . -1) (#("S" 0 1 (face font-lock-type-face fontified t)) . -1009) (undo-tree-id443 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -1010) (undo-tree-id444 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -1011) (undo-tree-id445 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -1012) (undo-tree-id446 . -1) (#("n" 0 1 (face font-lock-type-face fontified t)) . -1013) (undo-tree-id447 . -1) (#("g" 0 1 (face font-lock-type-face fontified t)) . -1014) (undo-tree-id448 . -1) (#(">" 0 1 (c-type c-decl-id-start fontified t)) . -1015) (undo-tree-id449 . -1) (#(" " 0 1 (fontified t)) . -1016) (undo-tree-id450 . -1) 1017) ((1003 . 1017)) (26108 29140 150450 523000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 1824) (1825 . 1826) 1824) nil (26108 29720 659511 871000) 0 nil])
([nil nil ((#("		Lista<String> l = new Lista<>();
		int longitd = lista.getLongitud();

		FileReader lectorArchivo = new FileReader(nombreArchivo);
		BufferedReader lector = new BufferedReader(lectorArchivo);

		String renglon;

		while((renglon = lector.readLine()) != null){
		    l.agrega(renglon);
		}

		System.out.println(ord.toString());
" 0 2 (fontified t) 2 7 (face font-lock-type-face fontified t) 7 8 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 8 14 (face font-lock-type-face fontified t) 14 15 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 15 16 (fontified t) 16 17 (face font-lock-variable-name-face fontified t) 17 20 (fontified t) 20 23 (face font-lock-keyword-face fontified t) 23 24 (fontified t) 24 29 (face font-lock-type-face fontified t) 29 30 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 30 31 (fontified t category c->-as-paren-syntax) 31 35 (fontified t) 35 37 (fontified t) 37 39 (face font-lock-type-face fontified t) 39 40 (face font-lock-type-face c-type c-decl-id-start fontified t) 40 41 (fontified t) 41 48 (face font-lock-variable-name-face fontified t) 48 51 (fontified t) 51 56 (fontified t) 56 75 (fontified t) 75 84 (face font-lock-type-face fontified t) 84 85 (face font-lock-type-face c-type c-decl-id-start fontified t) 85 86 (fontified t) 86 99 (face font-lock-variable-name-face fontified t) 99 102 (fontified t) 102 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t) 106 116 (face font-lock-type-face fontified t) 116 135 (fontified t) 135 141 (face font-lock-type-face fontified t) 141 148 (face font-lock-type-face fontified t) 148 149 (face font-lock-type-face c-type c-decl-id-start fontified t) 149 150 (fontified t) 150 152 (face font-lock-variable-name-face fontified t) 152 153 (face font-lock-variable-name-face fontified t) 153 156 (face font-lock-variable-name-face fontified t) 156 158 (fontified t) 158 159 (fontified t) 159 162 (face font-lock-keyword-face fontified t) 162 163 (fontified t) 163 177 (face font-lock-type-face fontified t) 177 197 (fontified t) 197 202 (face font-lock-type-face fontified t) 202 203 (face font-lock-type-face c-type c-decl-id-start fontified t) 203 204 (fontified t) 204 211 (face font-lock-variable-name-face fontified t) 211 216 (fontified t) 216 221 (face font-lock-keyword-face fontified t) 221 246 (fontified t) 246 251 (fontified t) 251 255 (fontified t) 255 259 (face font-lock-constant-face fontified t) 259 262 (fontified t) 262 268 (fontified t) 268 269 (fontified t) 269 281 (fontified t) 281 286 (fontified t) 286 287 (fontified t) 287 290 (fontified t) 290 291 (fontified t) 291 292 (fontified t) 292 330 (fontified t)) . 2005) (undo-tree-id426 . -330) (undo-tree-id427 . -291) (undo-tree-id429 . -291) (undo-tree-id431 . -2) (undo-tree-id433 . -34) (undo-tree-id434 . -329) (undo-tree-id435 . -291) (undo-tree-id436 . -292)) ((2005 . 2335)) (26108 29139 972650 962000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 1825) (1826 . 1827) 1825) nil (26108 29720 659511 99000) 0 nil])
([nil nil ((2002 . 2004) (#("	" 0 1 (fontified nil)) . -2002) (undo-tree-id425 . -1) (#("	" 0 1 (fontified t)) . 2003)) ((2002 . 2004) (#("		" 0 1 (fontified t) 1 2 (fontified t)) . 2002) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1)) (26108 29139 820324 599000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1826) (1827 . 1828) 1826) nil (26108 29720 659510 308000) 0 nil])
([nil nil ((2002 . 2004) (#("	" 0 1 (fontified nil)) . -2002) (undo-tree-id424 . -1) (#("	" 0 1 (fontified t)) . 2003)) ((2002 . 2004) (#("		" 0 2 (fontified t)) . 2002)) (26108 29139 653741 639000) 0 nil])
([nil nil ((1824 . 1825) (#("r" 0 1 (fontified t)) . -1824) (undo-tree-id1099 . -1) (1825 . 1826) (#("t" 0 1 (fontified t)) . -1825) (undo-tree-id1100 . -1) (1826 . 1827) (#("e" 0 1 (fontified t)) . -1826) (undo-tree-id1101 . -1) 1827) nil (26108 29720 659509 55000) 0 nil])
([nil nil ((#("	    int longitd = lista.getLongitud();
" 0 5 (fontified t) 5 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face c-type c-decl-id-start fontified t) 8 9 (fontified t) 9 16 (face font-lock-variable-name-face fontified t) 16 19 (fontified t) 19 24 (fontified t) 24 40 (fontified t)) . -711) (undo-tree-id423 . -40) 751) ((711 . 751)) (26108 29139 486222 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1824) (1825 . 1826) 1824) nil (26108 29720 659506 40000) 0 nil])
([nil nil ((1964 . 1970)) ((#("Lista " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 1964) (undo-tree-id627 . -6) (undo-tree-id628 . -5) (undo-tree-id629 . -5) (undo-tree-id630 . -5) (undo-tree-id631 . -5) (undo-tree-id632 . -5) (undo-tree-id633 . -5) (undo-tree-id634 . -6)) (26108 29139 335950 505000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1825) (1826 . 1827) 1825) nil (26108 29720 659505 278000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1969) (undo-tree-id422 . -1) 1970) ((1969 . 1970)) (26108 29139 194145 991000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1826) (1827 . 1828) 1826) nil (26108 29720 659504 427000) 0 nil])
([nil nil ((1969 . 1971)) ((#("<>" 0 1 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 1 2 (c-type c-decl-id-start category c->-as-paren-syntax fontified t)) . 1969) (undo-tree-id621 . -1) (undo-tree-id622 . -2) (undo-tree-id623 . -2) (undo-tree-id624 . -2) (undo-tree-id625 . -2) (undo-tree-id626 . -1)) (26108 29139 46651 257000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1827) (1828 . 1829) 1827) nil (26108 29720 659503 645000) 0 nil])
([nil nil ((1970 . 1976)) ((#("String" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face fontified t)) . 1970)) (26108 29138 906521 127000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 1825) (1826 . 1827) 1825) nil (26108 29720 659502 764000) 0 nil])
([nil nil ((1977 . 1983)) ((#(" lista" 0 1 (fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (face font-lock-variable-name-face fontified t)) . 1977) (undo-tree-id617 . -6) (undo-tree-id618 . -5) (undo-tree-id619 . -5) (undo-tree-id620 . -6)) (26108 29138 759909 791000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 1826) (1827 . 1828) 1826) nil (26108 29720 659501 962000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -1982) (undo-tree-id421 . -1) 1983) ((1982 . 1983)) (26108 29138 588618 601000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 1827) (1828 . 1829) 1827) nil (26108 29720 659501 20000) 0 nil])
([nil nil ((1982 . 1988)) ((#(" = nre" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 1982) (undo-tree-id615 . -6) (undo-tree-id616 . -6)) (26108 29138 416846 704000) 0 nil])
([nil nil ((1825 . 1826) (#("e" 0 1 (fontified t)) . -1825) (undo-tree-id1096 . -1) (1826 . 1827) (#("e" 0 1 (fontified t)) . -1826) (undo-tree-id1097 . -1) (1827 . 1828) (#("e" 0 1 (fontified t)) . -1827) (undo-tree-id1098 . -1) 1828) nil (26108 29720 659499 758000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1986) (undo-tree-id419 . -1) (#("e" 0 1 (fontified t)) . -1987) (undo-tree-id420 . -1) 1988) ((1986 . 1988)) (26108 29138 222364 298000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1825) (1826 . 1827) 1825) nil (26108 29720 659496 532000) 0 nil])
([nil nil ((1986 . 1994)) ((#("ew Lisra" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face fontified t)) . 1986) (undo-tree-id608 . -8) (undo-tree-id609 . -6) (undo-tree-id610 . -6) (undo-tree-id611 . -6) (undo-tree-id612 . -6) (undo-tree-id613 . -6) (undo-tree-id614 . -8)) (26108 29138 44775 603000) 0 nil])
([nil nil ((1821 . 1822) (#(" " 0 1 (fontified t)) . -1821) (undo-tree-id1091 . -1) (1822 . 1823) (#(" " 0 1 (fontified t)) . -1822) (undo-tree-id1092 . -1) (1823 . 1824) (#(" " 0 1 (fontified t)) . -1823) (undo-tree-id1093 . -1) (1824 . 1825) (#("1" 0 1 (fontified t)) . -1824) (undo-tree-id1094 . -1) (1825 . 1826) (#("." 0 1 (fontified t)) . -1825) (undo-tree-id1095 . -1) 1826) nil (26108 29720 659494 949000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-type-face fontified t)) . -1992) (undo-tree-id417 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -1993) (undo-tree-id418 . -1) 1994) ((1992 . 1994)) (26108 29137 848246 787000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1821) (1822 . 1823) 1821) nil (26108 29720 659490 360000) 0 nil])
([nil nil ((1992 . 1997)) ((#("ta<>>" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 3 4 (category c->-as-paren-syntax fontified t) 4 5 (fontified t)) . 1992) (undo-tree-id603 . -5) (undo-tree-id604 . -4) (undo-tree-id605 . -4) (undo-tree-id606 . -4) (undo-tree-id607 . -5)) (26108 29137 637856 299000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1822) (1823 . 1824) 1822) nil (26108 29720 659489 579000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -1996) (undo-tree-id416 . -1) 1997) ((1996 . 1997)) (26108 29137 398240 916000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1823) (1824 . 1825) 1823) nil (26108 29720 659488 768000) 0 nil])
([nil nil ((1996 . 1998)) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 1996) (undo-tree-id600 . -2) (undo-tree-id601 . -2) (undo-tree-id602 . -2)) (26108 29137 164315 921000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1824) (1825 . 1826) 1824) nil (26108 29720 659487 585000) 0 nil])
([nil nil ((1998 . 1999)) ((#(";" 0 1 (fontified t)) . 1998) (undo-tree-id598 . -1) (undo-tree-id599 . -1)) (26108 29136 856322 485000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1825) (1826 . 1827) 1825) nil (26108 29720 659486 734000) 0 nil])
([nil nil ((1999 . 2002)) ((#("
		" 0 1 (fontified t) 1 3 (fontified t)) . 1999) (undo-tree-id596 . -3) (undo-tree-id597 . -1)) (26108 29136 672199 682000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1826) (1827 . 1828) 1826) nil (26108 29720 659485 872000) 0 nil])
([nil nil ((2002 . 2005)) ((#("odn" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 2002) (undo-tree-id589 . -3) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -2) (undo-tree-id594 . -2) (undo-tree-id595 . -3)) (26108 29136 440094 614000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1827) (1828 . 1829) 1827) nil (26108 29720 659485 101000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -2004) (undo-tree-id415 . -1) 2005) ((2004 . 2005)) (26108 29136 206370 502000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1828) (1829 . 1830) 1828) nil (26108 29720 659484 219000) 0 nil])
([nil nil ((2004 . 2005)) ((#("r" 0 1 (fontified t)) . 2004) (undo-tree-id587 . -1) (undo-tree-id588 . -1)) (26108 29135 960562 536000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1829) (1830 . 1831) 1829) nil (26108 29720 659483 408000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2003) (undo-tree-id413 . -1) (#("r" 0 1 (fontified t)) . -2004) (undo-tree-id414 . -1) 2005) ((2003 . 2005)) (26108 29135 708284 391000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1830) (1831 . 1832) 1830) nil (26108 29720 659482 496000) 0 nil])
([nil nil ((2003 . 2010)) ((#("rdenado" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 2003) (undo-tree-id584 . -7) (undo-tree-id585 . -7) (undo-tree-id586 . -7)) (26108 29135 264360 557000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1831) (1832 . 1833) 1831) nil (26108 29720 659481 634000) 0 nil])
([nil nil ((2010 . 2012)) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 2010)) (26108 29135 70826 244000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1832) (1833 . 1834) 1832) nil (26108 29720 659480 803000) 0 nil])
([nil nil ((1418 . 1423) (#("	" 0 1 (fontified nil)) . 1417) (undo-tree-id412 . -1) (1418 . 1419)) ((#("
" 0 1 (fontified nil)) . 1418) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (1417 . 1418) (#("	    " 0 5 (fontified t)) . 1418) (undo-tree-id582 . -5) (undo-tree-id583 . -5)) (26108 29134 930611 608000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1833) (1834 . 1835) 1833) nil (26108 29720 659480 11000) 0 nil])
([nil nil ((1423 . 1434)) ((#("System.outp" 0 1 (fontified t c-is-sws t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . 1423) (undo-tree-id577 . -11)) (26108 29134 722014 368000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1834) (1835 . 1836) 1834) nil (26108 29720 659479 79000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1433) (undo-tree-id411 . -1) 1434) ((1433 . 1434)) (26108 29134 544385 599000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1835) (1836 . 1837) 1835) nil (26108 29720 659477 917000) 0 nil])
([nil nil ((1433 . 1441)) ((#(".println" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 1433) (undo-tree-id572 . -8) (undo-tree-id573 . -8) (undo-tree-id574 . -8) (undo-tree-id575 . -8) (undo-tree-id576 . -8)) (26108 29134 364346 522000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1836) (1837 . 1838) 1836) nil (26108 29720 659476 755000) 0 nil])
([nil nil ((1441 . 1443)) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 1441) (undo-tree-id568 . -1) (undo-tree-id569 . -2) (undo-tree-id570 . -1) (undo-tree-id571 . -1)) (26108 29134 170153 126000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1837) (1838 . 1839) 1837) nil (26108 29720 659475 773000) 0 nil])
([nil nil ((1442 . 1454)) ((#("ord.toString" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t)) . 1442) (undo-tree-id566 . -12) (undo-tree-id567 . -12)) (26108 29133 930319 744000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1838) (1839 . 1840) 1838) nil (26108 29720 659474 541000) 0 nil])
([nil nil ((1454 . 1456)) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 1454)) (26108 29133 662495 373000) 0 nil])
([nil nil ((1839 . 1840) (#(" " 0 1 (fontified t)) . -1839) (undo-tree-id1083 . -1) (1840 . 1841) (#(" " 0 1 (fontified t)) . -1840) (undo-tree-id1084 . -1) (1841 . 1842) (#(" " 0 1 (fontified t)) . -1841) (undo-tree-id1085 . -1) (1842 . 1843) (#(" " 0 1 (fontified t)) . -1842) (undo-tree-id1086 . -1) (1843 . 1844) (#(" " 0 1 (fontified t)) . -1843) (undo-tree-id1087 . -1) (1844 . 1845) (#(" " 0 1 (fontified t)) . -1844) (undo-tree-id1088 . -1) (1845 . 1846) (#(" " 0 1 (fontified t)) . -1845) (undo-tree-id1089 . -1) (1846 . 1847) (#(" " 0 1 (fontified t)) . -1846) (undo-tree-id1090 . -1) 1847) nil (26108 29720 659471 886000) 0 nil])
([nil nil ((1457 . 1458)) ((#(";" 0 1 (fontified t)) . 1457)) (26108 29133 260344 545000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1839) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (#(" " 0 1 (fontified t)) . -1840) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (#(" " 0 1 (fontified t)) . -1841) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (#(" " 0 1 (fontified t)) . -1842) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (#(" " 0 1 (fontified t)) . -1843) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (#(" " 0 1 (fontified t)) . -1844) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (#(" " 0 1 (fontified t)) . -1845) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (#(" " 0 1 (fontified t)) . -1846) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (#(")" 0 1 (fontified t)) . -1847) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (#(";" 0 1 (fontified t)) . -1848) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) 1849) nil (26108 29720 659459 323000) 0 nil])
([nil nil ((2051 . 2055)) ((#("list" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 2051)) (26108 29133 63550 73000) 0 nil])
([nil nil ((1839 . 1840)) nil (26108 29720 659386 617000) 0 nil])
([nil nil ((2056 . 2057)) ((";" . 2056)) (26108 29132 449788 808000) 0 nil])
([nil nil ((1840 . 1841)) nil (26108 29720 659382 520000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -669) (undo-tree-id479 . -1) 670 (t 26108 28574 494037 363000)) ((669 . 670)) (26108 29132 210174 37000) 0 nil])
([nil nil ((1830 . 1831) (#("." 0 1 (fontified t)) . -1830) (undo-tree-id1240 . -1) (1831 . 1832) (#("t" 0 1 (fontified t)) . -1831) (undo-tree-id1241 . -1) (1832 . 1833) (#("o" 0 1 (fontified t)) . -1832) (undo-tree-id1242 . -1) (1833 . 1834) (#("S" 0 1 (fontified t)) . -1833) (undo-tree-id1243 . -1) (1834 . 1835) (#("t" 0 1 (fontified t)) . -1834) (undo-tree-id1244 . -1) (1835 . 1836) (#("r" 0 1 (fontified t)) . -1835) (undo-tree-id1245 . -1) (1836 . 1837) (#("i" 0 1 (fontified t)) . -1836) (undo-tree-id1246 . -1) (1837 . 1838) (#("n" 0 1 (fontified t)) . -1837) (undo-tree-id1247 . -1) (1838 . 1839) (#("g" 0 1 (fontified t)) . -1838) (undo-tree-id1248 . -1) 1839 (t 26108 29720 672699 784000)) nil (26108 29841 322242 29000) 0 nil])
([nil nil ((1416 . 1417)) ((#("\\" 0 1 (c-is-sws t c-in-sws t fontified t)) . 1416) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1)) (26108 29132 12362 603000) 0 nil])
([nil nil ((1835 . 1836) (#(" " 0 1 (fontified t)) . -1835) (undo-tree-id1236 . -1) (1836 . 1837) (#(" " 0 1 (fontified t)) . -1836) (undo-tree-id1237 . -1) (1837 . 1838) (#(" " 0 1 (fontified t)) . -1837) (undo-tree-id1238 . -1) (1838 . 1839) (#(" " 0 1 (fontified t)) . -1838) (undo-tree-id1239 . -1) 1839) nil (26108 29841 322233 563000) 0 nil])
([nil nil ((1417 . 1423)) ((#("
	    " 0 1 (c-in-sws t fontified t) 1 2 (c-is-sws t fontified t) 2 6 (c-is-sws t fontified t)) . 1417)) (26108 29131 730114 530000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1837) (1838 . 1839) 1837) nil (26108 29841 322229 185000) 0 nil])
([nil nil ((#("\\" 0 1 (c-is-sws t c-in-sws t fontified t)) . -1416) (undo-tree-id478 . -1) 1417) ((1416 . 1417)) (26108 29131 576309 763000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1838) (1839 . 1840) 1838) nil (26108 29841 322228 73000) 0 nil])
([nil nil ((#("	    Lista<String> l = new Lista<>();

	    FileReader lectorArchivo = new FileReader(nombreArchivo);
	    BufferedReader lector = new BufferedReader(lectorArchivo);
	    
	    String renglon;
	    
	    while((renglon = lector.readLine()) != null){
		l.agrega(renglon);
	    }

	    
" 0 5 (fontified t) 5 10 (face font-lock-type-face fontified t) 10 11 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 11 17 (face font-lock-type-face fontified t) 17 18 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 18 19 (fontified t) 19 20 (face font-lock-variable-name-face fontified t) 20 23 (fontified t) 23 26 (face font-lock-keyword-face fontified t) 26 27 (fontified t) 27 32 (face font-lock-type-face fontified t) 32 33 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 33 34 (fontified t category c->-as-paren-syntax) 34 38 (fontified t) 38 39 (fontified t) 39 44 (fontified t) 44 53 (face font-lock-type-face fontified t) 53 54 (face font-lock-type-face c-type c-decl-id-start fontified t) 54 55 (fontified t) 55 68 (face font-lock-variable-name-face fontified t) 68 71 (fontified t) 71 74 (face font-lock-keyword-face fontified t) 74 75 (fontified t) 75 85 (face font-lock-type-face fontified t) 85 102 (fontified t) 102 107 (fontified t) 107 120 (face font-lock-type-face fontified t) 120 121 (face font-lock-type-face c-type c-decl-id-start fontified t) 121 122 (fontified t) 122 128 (face font-lock-variable-name-face fontified t) 128 131 (fontified t) 131 134 (face font-lock-keyword-face fontified t) 134 135 (fontified t) 135 149 (face font-lock-type-face fontified t) 149 166 (fontified t) 166 171 (fontified t) 171 172 (fontified t) 172 177 (fontified t) 177 182 (face font-lock-type-face fontified t) 182 183 (face font-lock-type-face c-type c-decl-id-start fontified t) 183 184 (fontified t) 184 191 (face font-lock-variable-name-face fontified t) 191 193 (fontified t) 193 198 (fontified t) 198 199 (fontified t) 199 204 (fontified t) 204 209 (face font-lock-keyword-face fontified t) 209 243 (fontified t) 243 247 (face font-lock-constant-face fontified t) 247 250 (fontified t) 250 252 (fontified t) 252 253 (fontified t) 253 270 (fontified t) 270 271 (fontified t) 271 276 (fontified t) 276 277 (fontified t) 277 278 (fontified t rear-nonsticky t) 278 279 (fontified t) 279 284 (fontified t) 284 285 (fontified t)) . 672) (undo-tree-id472 . -285) (undo-tree-id473 . -285) (undo-tree-id474 . -2) (undo-tree-id475 . -37) (undo-tree-id476 . -38) (undo-tree-id477 . -278)) ((672 . 957)) (26108 29131 400307 961000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1839) (1840 . 1841) 1839) nil (26108 29841 322227 131000) 0 nil])
([nil nil ((1721 . 1724)) ((#("
		" 0 1 (fontified t) 1 3 (fontified t)) . 1721) (undo-tree-id552 . -3) (undo-tree-id553 . -1) (undo-tree-id554 . -3) (undo-tree-id555 . -3) (undo-tree-id556 . -3) (undo-tree-id557 . -3) (undo-tree-id558 . -3) (undo-tree-id559 . -3) (undo-tree-id560 . -1) (undo-tree-id561 . -3)) (26108 29131 234649 979000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . 1840) (1841 . 1842) 1840) nil (26108 29841 322226 179000) 0 nil])
([nil nil ((nil fontified nil 2001 . 2002) (nil fontified nil 2000 . 2001) (nil fontified nil 1995 . 2000) (nil fontified nil 1994 . 1995) (nil fontified nil 1977 . 1994) (nil fontified nil 1976 . 1977) (nil fontified nil 1974 . 1976) (nil fontified nil 1971 . 1974) (nil fontified nil 1967 . 1971) (nil fontified nil 1933 . 1967) (nil fontified nil 1928 . 1933) (nil fontified nil 1923 . 1928) (nil fontified nil 1922 . 1923) (nil fontified nil 1917 . 1922) (nil fontified nil 1915 . 1917) (nil fontified nil 1908 . 1915) (nil fontified nil 1907 . 1908) (nil fontified nil 1906 . 1907) (nil fontified nil 1901 . 1906) (nil fontified nil 1896 . 1901) (nil fontified nil 1895 . 1896) (nil fontified nil 1890 . 1895) (nil fontified nil 1873 . 1890) (nil fontified nil 1859 . 1873) (nil fontified nil 1858 . 1859) (nil fontified nil 1855 . 1858) (nil fontified nil 1852 . 1855) (nil fontified nil 1846 . 1852) (nil fontified nil 1845 . 1846) (nil fontified nil 1844 . 1845) (nil fontified nil 1831 . 1844) (nil fontified nil 1826 . 1831) (nil fontified nil 1809 . 1826) (nil fontified nil 1799 . 1809) (nil fontified nil 1798 . 1799) (nil fontified nil 1795 . 1798) (nil fontified nil 1792 . 1795) (nil fontified nil 1779 . 1792) (nil fontified nil 1778 . 1779) (nil fontified nil 1777 . 1778) (nil fontified nil 1768 . 1777) (nil fontified nil 1763 . 1768) (nil fontified nil 1762 . 1763) (nil fontified nil 1758 . 1762) (nil fontified nil 1757 . 1758) (nil category c->-as-paren-syntax 1757 . 1758) (nil fontified nil 1756 . 1757) (nil category c-<-as-paren-syntax 1756 . 1757) (nil fontified nil 1751 . 1756) (nil fontified nil 1750 . 1751) (nil fontified nil 1747 . 1750) (nil fontified nil 1744 . 1747) (nil fontified nil 1743 . 1744) (nil fontified nil 1742 . 1743) (nil fontified nil 1741 . 1742) (nil category c->-as-paren-syntax 1741 . 1742) (nil fontified nil 1735 . 1741) (nil fontified nil 1734 . 1735) (nil category c-<-as-paren-syntax 1734 . 1735) (nil fontified nil 1729 . 1734) (nil fontified nil 1724 . 1729) (1724 . 2002)) ((#("	    Lista<String> l = new Lista<>();

	    FileReader lectorArchivo = new FileReader(nombreArchivo);
	    BufferedReader lector = new BufferedReader(lectorArchivo);
	    
	    String renglon;
	    
	    while((renglon = lector.readLine()) != null){
		l.agrega(renglon);
	    }
" 0 5 (fontified nil) 5 10 (face font-lock-type-face fontified nil) 10 11 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 11 17 (face font-lock-type-face fontified nil) 17 18 (c-type c-decl-id-start fontified nil category c->-as-paren-syntax) 18 19 (fontified nil) 19 20 (face font-lock-variable-name-face fontified nil) 20 23 (fontified nil) 23 26 (face font-lock-keyword-face fontified nil) 26 27 (fontified nil) 27 32 (face font-lock-type-face fontified nil) 32 33 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 33 34 (fontified nil category c->-as-paren-syntax) 34 38 (fontified nil) 38 39 (fontified nil) 39 44 (fontified nil) 44 53 (face font-lock-type-face fontified nil) 53 54 (face font-lock-type-face c-type c-decl-id-start fontified nil) 54 55 (fontified nil) 55 68 (face font-lock-variable-name-face fontified nil) 68 70 (fontified nil) 70 71 (fontified nil) 71 74 (face font-lock-keyword-face fontified nil) 74 75 (fontified nil) 75 85 (face font-lock-type-face fontified nil) 85 102 (fontified nil) 102 107 (fontified nil) 107 120 (face font-lock-type-face fontified nil) 120 121 (face font-lock-type-face c-type c-decl-id-start fontified nil) 121 122 (fontified nil) 122 128 (face font-lock-variable-name-face fontified nil) 128 131 (fontified nil) 131 134 (face font-lock-keyword-face fontified nil) 134 135 (fontified nil) 135 149 (face font-lock-type-face fontified nil) 149 166 (fontified nil) 166 171 (fontified nil) 171 172 (fontified nil) 172 177 (fontified nil) 177 182 (face font-lock-type-face fontified nil) 182 183 (face font-lock-type-face c-type c-decl-id-start fontified nil) 183 184 (fontified nil) 184 191 (face font-lock-variable-name-face fontified nil) 191 193 (fontified nil) 193 198 (fontified nil) 198 199 (fontified nil) 199 204 (fontified nil) 204 209 (face font-lock-keyword-face fontified nil) 209 243 (fontified nil) 243 247 (face font-lock-constant-face fontified nil) 247 250 (fontified nil) 250 252 (fontified nil) 252 253 (fontified nil) 253 270 (fontified nil) 270 271 (fontified nil) 271 276 (fontified nil) 276 277 (fontified nil) 277 278 (fontified nil rear-nonsticky t)) . 1724) (undo-tree-id544 . -38) (undo-tree-id545 . -111) (undo-tree-id546 . -40) (undo-tree-id547 . -5) (undo-tree-id548 . -38) (undo-tree-id549 . -38) (undo-tree-id550 . -38) (undo-tree-id551 . -38) (nil fontified t 1724 . 1729) (nil fontified t 1729 . 1734) (nil fontified t 1734 . 1735) (nil fontified t 1735 . 1741) (nil fontified t 1741 . 1742) (nil fontified t 1742 . 1743) (nil fontified t 1743 . 1744) (nil fontified t 1744 . 1747) (nil fontified t 1747 . 1750) (nil fontified t 1750 . 1751) (nil fontified t 1751 . 1756) (nil fontified t 1756 . 1757) (nil fontified t 1757 . 1758) (nil fontified t 1758 . 1762) (nil fontified t 2001 . 2002)) (26108 29131 72337 50000) 0 nil])
([nil nil ((1841 . 1842)) nil (26108 29841 322225 268000) 0 nil])
([nil nil ((1762 . 1763)) ((#("`" 0 1 (fontified t)) . 1762) (undo-tree-id542 . -1) (undo-tree-id543 . -1)) (26108 29130 923659 219000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1830) (undo-tree-id1224 . -1) (#(" " 0 1 (fontified t)) . -1831) (undo-tree-id1225 . -1) (#(" " 0 1 (fontified t)) . -1832) (undo-tree-id1226 . -1) (#(" " 0 1 (fontified t)) . -1833) (undo-tree-id1227 . -1) (#(" " 0 1 (fontified t)) . -1834) (undo-tree-id1228 . -1) (#(" " 0 1 (fontified t)) . -1835) (undo-tree-id1229 . -1) (#(" " 0 1 (fontified t)) . -1836) (undo-tree-id1230 . -1) (#("a" 0 1 (fontified t)) . -1837) (undo-tree-id1231 . -1) (#("s" 0 1 (fontified t)) . -1838) (undo-tree-id1232 . -1) (#("d" 0 1 (fontified t)) . -1839) (undo-tree-id1233 . -1) (#("f" 0 1 (fontified t)) . -1840) (undo-tree-id1234 . -1) (#("a" 0 1 (fontified t)) . -1841) (undo-tree-id1235 . -1) 1842) nil (26108 29841 322223 74000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t)) . -1762) (undo-tree-id471 . -1) 1763) ((1762 . 1763)) (26108 29130 772361 617000) 0 nil])
([nil nil ((1830 . 1837)) nil (26108 29841 322214 187000) 0 nil])
([nil nil ((1762 . 1769)) ((#("			    " 0 7 (fontified t)) . 1762)) (26108 29130 624457 89000) 0 nil])
([nil nil ((1835 . 1837)) nil (26108 29841 322213 396000) 0 nil])
([nil nil ((1722 . 1724) (#("			    " 0 2 (fontified t) 2 7 (fontified t)) . -1722) (undo-tree-id469 . -7) (undo-tree-id470 . -2) 1729) ((1722 . 1729) (#("		" 0 2 (fontified t)) . 1722)) (26108 29130 476880 82000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1833) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (#("d" 0 1 (fontified t)) . -1834) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (#("a" 0 1 (fontified t)) . -1835) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (#("a" 0 1 (fontified t)) . -1836) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (#("j" 0 1 (fontified t)) . -1837) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (#("a" 0 1 (fontified t)) . -1838) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) 1839) nil (26108 29841 322210 480000) 0 nil])
([nil nil ((1765 . 1767) (#("	    " 0 5 (fontified t)) . 1765) (undo-tree-id468 . -1) 1766) ((1765 . 1770) (#("		" 0 2 (fontified t)) . 1765)) (26108 29130 308746 525000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1830) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (#("f" 0 1 (fontified t)) . -1831) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (#("a" 0 1 (fontified t)) . -1832) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) 1833) nil (26108 29841 322183 380000) 0 nil])
([nil nil ((1825 . 1827) (#("	    " 0 5 (fontified t)) . 1825) 1834) ((1825 . 1830) (#("		" 0 2 (fontified t)) . 1825)) (26108 29130 140740 886000) 0 nil])
([nil nil ((1830 . 1831)) nil (26109 4007 862898 987000) 0 nil])
([nil nil ((1892 . 1894) (#("	    " 0 5 (fontified t)) . 1892) 1905) ((1892 . 1897) (#("		" 0 2 (fontified t)) . 1892)) (26108 29129 966730 891000) 0 nil])
([nil nil ((1831 . 1832)) nil (26109 4012 781147 506000) 0 nil] [nil nil ((1831 . 1832) (t 26108 29841 338046 791000)) ((#(";" 0 1 (fontified t)) . 1831)) (26109 4007 696724 305000) 0 nil])
([nil nil ((1916 . 1918) (#("	    " 0 5 (fontified t)) . 1916) 1933) ((1916 . 1921) (#("		" 0 2 (fontified t)) . 1916)) (26108 29129 740882 514000) 0 nil])
([nil nil ((1871 . 1874) (t 26109 4012 795294 224000)) nil (26109 4384 537993 461000) 0 nil])
([nil nil ((326 . 328) (t 26109 2903 712842 575000)) ((#("//" 0 1 (c-in-sws t c-is-sws t face font-lock-comment-delimiter-face fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . 326)) (26109 4007 528926 577000) 0 nil] [nil nil ((#("." 0 1 (fontified t)) . -1820) (undo-tree-id0 . -1) (undo-tree-id2 . -1) (#("r" 0 1 (fontified t)) . -1821) (undo-tree-id3 . -1) (#("e" 0 1 (fontified t)) . -1822) (undo-tree-id5 . -1) (#("v" 0 1 (fontified t)) . -1823) (undo-tree-id6 . -1) (#("e" 0 1 (fontified t)) . -1824) (undo-tree-id7 . -1) (#("r" 0 1 (fontified t)) . -1825) (undo-tree-id8 . -1) (#("s" 0 1 (fontified t)) . -1826) (undo-tree-id9 . -1) (#("a" 0 1 (fontified t)) . -1827) (undo-tree-id10 . -1) (#("(" 0 1 (fontified t)) . -1828) (undo-tree-id11 . -1) (#(")" 0 1 (fontified t)) . -1829) (undo-tree-id12 . -1) 1830 (t 26108 29849 234625 56000)) ((1820 . 1830)) (26109 2901 931729 264000) 0 nil])
([nil nil ((1964 . 1970) (#("		" 0 2 (fontified t)) . 1964) 1978) ((1964 . 1966) (#("		    " 0 6 (fontified t)) . 1964)) (26108 29129 519148 837000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1909 . 1910) (nil fontified nil 1874 . 1910) (1874 . 1910)) nil (26109 4384 537992 599000) 0 nil])
([nil nil ((350 . 352)) ((#("//" 0 1 (c-is-sws t face font-lock-comment-delimiter-face fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . 350)) (26109 4007 381007 153000) 0 nil])
([nil nil ((1820 . 1821)) ((#(" " 0 1 (fontified t)) . 1820) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1)) (26109 2901 653782 662000) 0 nil])
([nil nil ((1989 . 1991) (#("	    " 0 5 (fontified t)) . 1989) 1995) ((1989 . 1994) (#("		" 0 2 (fontified t)) . 1989)) (26108 29129 144981 897000) 0 nil])
([nil nil ((1872 . 1874) (#("		    " 0 2 (fontified t) 2 6 (fontified t)) . 1872) (undo-tree-id149 . -2) (undo-tree-id150 . -2) 1906) nil (26109 4384 537991 397000) 0 nil])
([nil nil ((426 . 428)) ((#("//" 0 1 (c-is-sws t face font-lock-comment-delimiter-face fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . 426)) (26109 4007 187989 940000) 0 nil])
([nil nil ((1821 . 1822)) ((#("*" 0 1 (fontified t)) . 1821) (undo-tree-id133 . -1) (undo-tree-id134 . -1)) (26109 2901 371374 850000) 0 nil])
([nil nil ((#("	private Lista<T> ordenado(Lista<T> lista){

	    lista = new Lista<>();	
	    Lista<String> ord = lista.mergeSort((a,b) -> {
		    String aSinMayus = a.toLowerCase().replaceAll(\" \",\"\");
		    String aLimpio = Normalizer.normalize(aSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
		    String bSinMayus = b.toLowerCase().replaceAll(\" \",\"\");
		    String bLimpio = Normalizer.normalize(bSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
		
		    return aLimpio.compareTo(bLimpio);
		
		});
	    
	    System.out.println(ord.toString());
	    
	}
" 0 1 (fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (face font-lock-keyword-face fontified t) 6 7 (face font-lock-keyword-face fontified t) 7 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 10 (face font-lock-type-face fontified t) 10 11 (face font-lock-type-face fontified t) 11 12 (face font-lock-type-face fontified t) 12 13 (face font-lock-type-face fontified t) 13 14 (face font-lock-type-face fontified t) 14 15 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 15 16 (face font-lock-type-face fontified t) 16 17 (c-type c-decl-id-start category c->-as-paren-syntax fontified t) 17 18 (fontified t) 18 19 (face font-lock-function-name-face fontified t) 19 20 (face font-lock-function-name-face fontified t) 20 21 (face font-lock-function-name-face fontified t) 21 22 (face font-lock-function-name-face fontified t) 22 23 (face font-lock-function-name-face fontified t) 23 24 (face font-lock-function-name-face fontified t) 24 25 (face font-lock-function-name-face fontified t) 25 26 (face font-lock-function-name-face fontified t) 26 27 (c-type c-decl-arg-start fontified t) 27 28 (face font-lock-type-face fontified t) 28 29 (face font-lock-type-face fontified t) 29 30 (face font-lock-type-face fontified t) 30 31 (face font-lock-type-face fontified t) 31 32 (face font-lock-type-face fontified t) 32 33 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 33 34 (face font-lock-type-face fontified t) 34 35 (category c->-as-paren-syntax fontified t) 35 36 (fontified t) 36 37 (face font-lock-variable-name-face fontified t) 37 38 (face font-lock-variable-name-face fontified t) 38 39 (face font-lock-variable-name-face fontified t) 39 40 (face font-lock-variable-name-face fontified t) 40 41 (face font-lock-variable-name-face fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 50 (fontified t) 50 55 (fontified t) 55 57 (fontified t) 57 58 (fontified t) 58 61 (face font-lock-keyword-face fontified t) 61 62 (fontified t) 62 67 (face font-lock-type-face fontified t) 67 68 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 68 69 (fontified t category c->-as-paren-syntax) 69 71 (fontified t) 71 72 (fontified t rear-nonsticky t) 72 73 (fontified t) 73 74 (fontified t) 74 79 (fontified t) 79 84 (face font-lock-type-face fontified t) 84 85 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 85 91 (face font-lock-type-face fontified t) 91 92 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 92 93 (fontified t) 93 96 (face font-lock-variable-name-face fontified t) 96 99 (fontified t) 99 104 (fontified t) 104 126 (fontified t) 126 132 (fontified t) 132 137 (face font-lock-type-face fontified t) 137 138 (face font-lock-type-face c-type c-decl-id-start fontified t) 138 139 (fontified t) 139 140 (face font-lock-variable-name-face fontified t) 140 141 (face font-lock-variable-name-face fontified t) 141 142 (face font-lock-variable-name-face fontified t) 142 143 (face font-lock-variable-name-face fontified t) 143 144 (face font-lock-variable-name-face fontified t) 144 145 (face font-lock-variable-name-face fontified t) 145 146 (face font-lock-variable-name-face fontified t) 146 147 (face font-lock-variable-name-face fontified t) 147 148 (face font-lock-variable-name-face fontified t) 148 150 (fontified t) 150 151 (fontified t) 151 152 (fontified t) 152 153 (fontified t) 153 154 (fontified t) 154 155 (fontified t) 155 156 (fontified t) 156 157 (fontified t) 157 158 (fontified t) 158 159 (fontified t) 159 160 (fontified t) 160 161 (fontified t) 161 162 (fontified t) 162 163 (fontified t) 163 164 (fontified t) 164 165 (fontified t) 165 166 (fontified t) 166 178 (fontified t) 178 181 (face font-lock-string-face fontified t) 181 182 (fontified t) 182 184 (face font-lock-string-face fontified t) 184 185 (fontified t) 185 186 (fontified t rear-nonsticky t) 186 187 (fontified t) 187 193 (fontified t) 193 194 (face font-lock-type-face fontified t) 194 195 (face font-lock-type-face fontified t) 195 196 (face font-lock-type-face fontified t) 196 197 (face font-lock-type-face fontified t) 197 198 (face font-lock-type-face fontified t) 198 199 (face font-lock-type-face c-type c-decl-id-start fontified t) 199 200 (fontified t) 200 201 (face font-lock-variable-name-face fontified t) 201 202 (face font-lock-variable-name-face fontified t) 202 203 (face font-lock-variable-name-face fontified t) 203 204 (face font-lock-variable-name-face fontified t) 204 205 (face font-lock-variable-name-face fontified t) 205 206 (face font-lock-variable-name-face fontified t) 206 207 (face font-lock-variable-name-face fontified t) 207 208 (fontified t) 208 209 (fontified t) 209 210 (fontified t) 210 230 (fontified t) 230 231 (fontified t) 231 232 (fontified t) 232 233 (fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 236 (fontified t) 236 237 (fontified t) 237 238 (fontified t) 238 239 (fontified t) 239 240 (fontified t) 240 241 (fontified t) 241 242 (fontified t) 242 252 (face font-lock-constant-face fontified t) 252 253 (fontified t) 253 257 (face font-lock-constant-face fontified t) 257 258 (fontified t) 258 261 (fontified t) 261 263 (fontified t) 263 274 (fontified t) 274 282 (face font-lock-string-face fontified t) 282 284 (fontified t) 284 286 (face font-lock-string-face fontified t) 286 287 (fontified t) 287 288 (fontified t) 288 289 (fontified t) 289 295 (fontified t) 295 300 (face font-lock-type-face fontified t) 300 301 (face font-lock-type-face c-type c-decl-id-start fontified t) 301 302 (fontified t) 302 303 (face font-lock-variable-name-face fontified t) 303 304 (face font-lock-variable-name-face fontified t) 304 305 (face font-lock-variable-name-face fontified t) 305 306 (face font-lock-variable-name-face fontified t) 306 307 (face font-lock-variable-name-face fontified t) 307 308 (face font-lock-variable-name-face fontified t) 308 309 (face font-lock-variable-name-face fontified t) 309 310 (face font-lock-variable-name-face fontified t) 310 311 (face font-lock-variable-name-face fontified t) 311 313 (fontified t) 313 314 (fontified t) 314 315 (fontified t) 315 316 (fontified t) 316 317 (fontified t) 317 318 (fontified t) 318 319 (fontified t) 319 320 (fontified t) 320 321 (fontified t) 321 322 (fontified t) 322 323 (fontified t) 323 324 (fontified t) 324 325 (fontified t) 325 326 (fontified t) 326 327 (fontified t) 327 328 (fontified t) 328 329 (fontified t) 329 341 (fontified t) 341 344 (face font-lock-string-face fontified t) 344 345 (fontified t) 345 347 (face font-lock-string-face fontified t) 347 348 (fontified t) 348 349 (fontified t rear-nonsticky t) 349 350 (fontified t) 350 356 (fontified t) 356 357 (face font-lock-type-face fontified t) 357 358 (face font-lock-type-face fontified t) 358 359 (face font-lock-type-face fontified t) 359 360 (face font-lock-type-face fontified t) 360 361 (face font-lock-type-face fontified t) 361 362 (face font-lock-type-face c-type c-decl-id-start fontified t) 362 363 (fontified t) 363 364 (face font-lock-variable-name-face fontified t) 364 365 (face font-lock-variable-name-face fontified t) 365 366 (face font-lock-variable-name-face fontified t) 366 367 (face font-lock-variable-name-face fontified t) 367 368 (face font-lock-variable-name-face fontified t) 368 369 (face font-lock-variable-name-face fontified t) 369 370 (face font-lock-variable-name-face fontified t) 370 371 (fontified t) 371 372 (fontified t) 372 373 (fontified t) 373 393 (fontified t) 393 394 (fontified t) 394 395 (fontified t) 395 396 (fontified t) 396 397 (fontified t) 397 398 (fontified t) 398 399 (fontified t) 399 400 (fontified t) 400 401 (fontified t) 401 402 (fontified t) 402 403 (fontified t) 403 404 (fontified t) 404 405 (fontified t) 405 415 (face font-lock-constant-face fontified t) 415 416 (fontified t) 416 420 (face font-lock-constant-face fontified t) 420 421 (fontified t) 421 424 (fontified t) 424 426 (fontified t) 426 437 (fontified t) 437 445 (face font-lock-string-face fontified t) 445 447 (fontified t) 447 449 (face font-lock-string-face fontified t) 449 450 (fontified t) 450 451 (fontified t) 451 452 (fontified t) 452 454 (fontified t) 454 455 (fontified t) 455 461 (fontified t) 461 462 (face font-lock-keyword-face fontified t) 462 467 (face font-lock-keyword-face fontified t) 467 468 (fontified t) 468 469 (fontified t) 469 470 (fontified t) 470 471 (fontified t) 471 472 (fontified t) 472 473 (fontified t) 473 474 (fontified t) 474 475 (fontified t) 475 486 (fontified t) 486 487 (fontified t) 487 488 (fontified t) 488 489 (fontified t) 489 490 (fontified t) 490 491 (fontified t) 491 492 (fontified t) 492 493 (fontified t) 493 495 (fontified t) 495 496 (fontified t) 496 498 (fontified t) 498 499 (fontified t) 499 501 (fontified t) 501 502 (fontified t) 502 503 (fontified t) 503 504 (fontified t) 504 505 (fontified t) 505 506 (fontified t c-is-sws t) 506 510 (fontified t c-is-sws t) 510 511 (fontified t c-is-sws t) 511 516 (fontified t c-is-sws t) 516 517 (fontified t c-is-sws t) 517 518 (fontified t) 518 519 (fontified t) 519 520 (fontified t) 520 521 (fontified t) 521 522 (fontified t) 522 523 (fontified t) 523 524 (fontified t) 524 525 (fontified t) 525 526 (fontified t) 526 527 (fontified t) 527 528 (fontified t) 528 529 (fontified t) 529 530 (fontified t) 530 531 (fontified t) 531 532 (fontified t) 532 533 (fontified t) 533 534 (fontified t) 534 535 (fontified t) 535 536 (fontified t) 536 537 (fontified t) 537 538 (fontified t) 538 539 (fontified t) 539 540 (fontified t) 540 541 (fontified t) 541 542 (fontified t) 542 543 (fontified t) 543 544 (fontified t) 544 545 (fontified t) 545 546 (fontified t) 546 547 (fontified t) 547 548 (fontified t) 548 549 (fontified t) 549 550 (fontified t) 550 551 (fontified t) 551 552 (fontified t rear-nonsticky t) 552 557 (fontified t) 557 558 (fontified t) 558 559 (fontified t) 559 560 (fontified t) 560 561 (fontified t)) . -627) (undo-tree-id501 . -561) (undo-tree-id502 . -45) (undo-tree-id503 . -44) (undo-tree-id504 . -45) (undo-tree-id505 . -45) (undo-tree-id506 . -45) (undo-tree-id507 . -45) (undo-tree-id508 . -45) (undo-tree-id509 . -561) 1188 (t 26108 28717 911575 640000)) ((627 . 1188)) (26108 29128 787657 451000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1896) (undo-tree-id141 . -1) (#("i" 0 1 (fontified t)) . -1897) (undo-tree-id142 . -1) (#("l" 0 1 (fontified t)) . -1898) (undo-tree-id143 . -1) (#("e" 0 1 (fontified t)) . -1899) (undo-tree-id144 . -1) (#("N" 0 1 (fontified t)) . -1900) (undo-tree-id145 . -1) (#("a" 0 1 (fontified t)) . -1901) (undo-tree-id146 . -1) (#("m" 0 1 (fontified t)) . -1902) (undo-tree-id147 . -1) (#("e" 0 1 (fontified t)) . -1903) (undo-tree-id148 . -1) 1904) nil (26109 4384 537988 211000) 0 nil])
([nil nil ((444 . 445)) ((#("/" 0 1 (c-is-sws t fontified t)) . 444) (undo-tree-id139 . -1)) (26109 4007 22412 58000) 0 nil])
([nil nil ((1822 . 1825)) ((#(" -1" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 1822)) (26109 2901 1714 424000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -626) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) 627) ((626 . 627)) (26108 29128 477884 781000) 0 nil])
([nil nil ((1896 . 1897)) nil (26109 4384 537979 916000) 0 nil])
([nil nil ((441 . 443)) ((#("//" 0 1 (c-is-sws t face font-lock-comment-delimiter-face fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . 441)) (26109 4006 814891 296000) 0 nil])
([nil nil ((1788 . 1791) (t 26109 2846 440663 318000)) ((#("
		" 0 1 (fontified t) 1 3 (fontified t)) . 1788) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -1) (undo-tree-id132 . -3)) (26109 2900 839562 662000) 0 nil])
([nil nil ((281 . 282)) ((#("
" 0 1 (fontified t)) . 281)) (26108 29124 268531 613000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t)) . -1896) (undo-tree-id140 . -1) 1897) nil (26109 4384 537978 172000) 0 nil])
([nil nil ((#("/" 0 1 (c-is-sws t fontified t)) . -446) (undo-tree-id138 . -1) 447) ((446 . 447) (t 26109 3992 745444 903000)) (26109 3992 729558 425000) 0 nil])
([nil nil ((1791 . 1812)) ((#("String reversa = ord " 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t) 6 7 (fontified t) 7 8 (face font-lock-variable-name-face fontified t) 8 9 (face font-lock-variable-name-face fontified t) 9 10 (face font-lock-variable-name-face fontified t) 10 11 (face font-lock-variable-name-face fontified t) 11 12 (face font-lock-variable-name-face fontified t) 12 13 (face font-lock-variable-name-face fontified t) 13 14 (face font-lock-variable-name-face fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t)) . 1791) (undo-tree-id115 . -21) (undo-tree-id116 . -17) (undo-tree-id117 . -21) (undo-tree-id118 . -21) (undo-tree-id119 . -21) (undo-tree-id120 . -21) (undo-tree-id121 . -21) (undo-tree-id122 . -21)) (26109 2900 669378 637000) 0 nil])
([nil nil ((nil rear-nonsticky nil 841 . 842) (nil fontified nil 841 . 842) (nil fontified nil 840 . 841) (nil fontified nil 839 . 840) (nil fontified nil 838 . 839) (nil fontified nil 833 . 838) (nil fontified nil 832 . 833) (nil fontified nil 831 . 832) (nil fontified nil 830 . 831) (nil fontified nil 829 . 830) (nil fontified nil 828 . 829) (nil fontified nil 827 . 828) (nil fontified nil 826 . 827) (nil fontified nil 825 . 826) (nil fontified nil 824 . 825) (nil fontified nil 823 . 824) (nil fontified nil 822 . 823) (nil fontified nil 821 . 822) (nil fontified nil 820 . 821) (nil fontified nil 819 . 820) (nil fontified nil 818 . 819) (nil fontified nil 817 . 818) (nil fontified nil 816 . 817) (nil fontified nil 815 . 816) (nil fontified nil 814 . 815) (nil fontified nil 813 . 814) (nil fontified nil 812 . 813) (nil fontified nil 811 . 812) (nil fontified nil 810 . 811) (nil fontified nil 809 . 810) (nil fontified nil 808 . 809) (nil fontified nil 807 . 808) (nil fontified nil 806 . 807) (nil fontified nil 805 . 806) (nil fontified nil 804 . 805) (nil fontified nil 803 . 804) (nil fontified nil 802 . 803) (nil fontified nil 801 . 802) (nil fontified nil 800 . 801) (nil fontified nil 799 . 800) (nil fontified nil 798 . 799) (nil fontified nil 797 . 798) (nil fontified nil 792 . 797) (nil fontified nil 791 . 792) (nil fontified nil 787 . 791) (nil fontified nil 786 . 787) (nil fontified nil 785 . 786) (nil fontified nil 784 . 785) (nil fontified nil 783 . 784) (nil fontified nil 782 . 783) (nil fontified nil 780 . 782) (nil fontified nil 779 . 780) (nil fontified nil 777 . 779) (nil fontified nil 776 . 777) (nil fontified nil 774 . 776) (nil fontified nil 773 . 774) (nil fontified nil 772 . 773) (nil fontified nil 771 . 772) (nil fontified nil 770 . 771) (nil fontified nil 769 . 770) (nil fontified nil 768 . 769) (nil fontified nil 767 . 768) (nil fontified nil 756 . 767) (nil fontified nil 755 . 756) (nil fontified nil 754 . 755) (nil fontified nil 753 . 754) (nil fontified nil 752 . 753) (nil fontified nil 751 . 752) (nil fontified nil 750 . 751) (nil fontified nil 749 . 750) (nil fontified nil 748 . 749) (nil fontified nil 743 . 748) (nil fontified nil 742 . 743) (nil fontified nil 736 . 742) (nil fontified nil 735 . 736) (nil fontified nil 733 . 735) (nil fontified nil 732 . 733) (nil fontified nil 731 . 732) (nil fontified nil 730 . 731) (nil fontified nil 728 . 730) (nil fontified nil 726 . 728) (nil fontified nil 718 . 726) (nil fontified nil 707 . 718) (nil fontified nil 705 . 707) (nil fontified nil 702 . 705) (nil fontified nil 701 . 702) (nil fontified nil 697 . 701) (nil fontified nil 696 . 697) (nil fontified nil 686 . 696) (nil fontified nil 685 . 686) (nil fontified nil 684 . 685) (nil fontified nil 683 . 684) (nil fontified nil 682 . 683) (nil fontified nil 681 . 682) (nil fontified nil 680 . 681) (nil fontified nil 679 . 680) (nil fontified nil 678 . 679) (nil fontified nil 677 . 678) (nil fontified nil 676 . 677) (nil fontified nil 675 . 676) (nil fontified nil 674 . 675) (nil fontified nil 654 . 674) (nil fontified nil 653 . 654) (nil fontified nil 652 . 653) (nil fontified nil 651 . 652) (nil fontified nil 650 . 651) (nil fontified nil 649 . 650) (nil fontified nil 648 . 649) (nil fontified nil 647 . 648) (nil fontified nil 646 . 647) (nil fontified nil 645 . 646) (nil fontified nil 644 . 645) (nil fontified nil 643 . 644) (nil fontified nil 642 . 643) (nil fontified nil 641 . 642) (nil fontified nil 640 . 641) (nil fontified nil 639 . 640) (nil fontified nil 638 . 639) (nil fontified nil 637 . 638) (nil fontified nil 631 . 637) (nil fontified nil 630 . 631) (nil fontified nil 629 . 630) (nil fontified nil 628 . 629) (nil fontified nil 626 . 628) (nil fontified nil 625 . 626) (nil fontified nil 622 . 625) (nil fontified nil 610 . 622) (nil fontified nil 609 . 610) (nil fontified nil 608 . 609) (nil fontified nil 607 . 608) (nil fontified nil 606 . 607) (nil fontified nil 605 . 606) (nil fontified nil 604 . 605) (nil fontified nil 603 . 604) (nil fontified nil 602 . 603) (nil fontified nil 601 . 602) (nil fontified nil 600 . 601) (nil fontified nil 599 . 600) (nil fontified nil 598 . 599) (nil fontified nil 597 . 598) (nil fontified nil 596 . 597) (nil fontified nil 595 . 596) (nil fontified nil 594 . 595) (nil fontified nil 592 . 594) (nil fontified nil 591 . 592) (nil fontified nil 590 . 591) (nil fontified nil 589 . 590) (nil fontified nil 588 . 589) (nil fontified nil 587 . 588) (nil fontified nil 586 . 587) (nil fontified nil 585 . 586) (nil fontified nil 584 . 585) (nil fontified nil 583 . 584) (nil fontified nil 582 . 583) (nil fontified nil 581 . 582) (nil fontified nil 576 . 581) (nil fontified nil 570 . 576) (nil fontified nil 569 . 570) (nil fontified nil 568 . 569) (nil fontified nil 567 . 568) (nil fontified nil 565 . 567) (nil fontified nil 563 . 565) (nil fontified nil 555 . 563) (nil fontified nil 544 . 555) (nil fontified nil 542 . 544) (nil fontified nil 539 . 542) (nil fontified nil 538 . 539) (nil fontified nil 534 . 538) (nil fontified nil 533 . 534) (nil fontified nil 523 . 533) (nil fontified nil 522 . 523) (nil fontified nil 521 . 522) (nil fontified nil 520 . 521) (nil fontified nil 519 . 520) (nil fontified nil 518 . 519) (nil fontified nil 517 . 518) (nil fontified nil 516 . 517) (nil fontified nil 515 . 516) (nil fontified nil 514 . 515) (nil fontified nil 513 . 514) (nil fontified nil 512 . 513) (nil fontified nil 511 . 512) (nil fontified nil 491 . 511) (nil fontified nil 490 . 491) (nil fontified nil 489 . 490) (nil fontified nil 488 . 489) (nil fontified nil 487 . 488) (nil fontified nil 486 . 487) (nil fontified nil 485 . 486) (nil fontified nil 484 . 485) (nil fontified nil 483 . 484) (nil fontified nil 482 . 483) (nil fontified nil 481 . 482) (nil fontified nil 480 . 481) (nil fontified nil 479 . 480) (nil fontified nil 478 . 479) (nil fontified nil 477 . 478) (nil fontified nil 476 . 477) (nil fontified nil 475 . 476) (nil fontified nil 474 . 475) (nil fontified nil 468 . 474) (nil fontified nil 467 . 468) (nil fontified nil 466 . 467) (nil fontified nil 465 . 466) (nil fontified nil 463 . 465) (nil fontified nil 462 . 463) (nil fontified nil 459 . 462) (nil fontified nil 447 . 459) (nil fontified nil 446 . 447) (nil fontified nil 445 . 446) (nil fontified nil 444 . 445) (nil fontified nil 443 . 444) (nil fontified nil 442 . 443) (nil fontified nil 441 . 442) (nil fontified nil 440 . 441) (nil fontified nil 439 . 440) (nil fontified nil 438 . 439) (nil fontified nil 437 . 438) (nil fontified nil 436 . 437) (nil fontified nil 435 . 436) (nil fontified nil 434 . 435) (nil fontified nil 433 . 434) (nil fontified nil 432 . 433) (nil fontified nil 431 . 432) (nil fontified nil 429 . 431) (nil fontified nil 428 . 429) (nil fontified nil 427 . 428) (nil fontified nil 426 . 427) (nil fontified nil 425 . 426) (nil fontified nil 424 . 425) (nil fontified nil 423 . 424) (nil fontified nil 422 . 423) (nil fontified nil 421 . 422) (nil fontified nil 420 . 421) (nil fontified nil 419 . 420) (nil fontified nil 418 . 419) (nil fontified nil 413 . 418) (nil fontified nil 407 . 413) (nil fontified nil 385 . 407) (nil fontified nil 380 . 385) (nil fontified nil 377 . 380) (nil fontified nil 374 . 377) (nil fontified nil 373 . 374) (nil fontified nil 372 . 373) (nil category c->-as-paren-syntax 372 . 373) (nil fontified nil 366 . 372) (nil fontified nil 365 . 366) (nil category c-<-as-paren-syntax 365 . 366) (nil fontified nil 360 . 365) (nil fontified nil 355 . 360) (nil fontified nil 354 . 355) (nil fontified nil 353 . 354) (nil fontified nil 352 . 353) (nil fontified nil 350 . 352) (nil fontified nil 349 . 350) (nil category c->-as-paren-syntax 349 . 350) (nil fontified nil 348 . 349) (nil category c-<-as-paren-syntax 348 . 349) (nil fontified nil 343 . 348) (nil fontified nil 342 . 343) (nil fontified nil 339 . 342) (nil fontified nil 338 . 339) (nil fontified nil 336 . 338) (nil fontified nil 331 . 336) (nil fontified nil 326 . 331) (nil fontified nil 325 . 326) (nil fontified nil 324 . 325) (nil fontified nil 323 . 324) (nil fontified nil 322 . 323) (nil fontified nil 321 . 322) (nil fontified nil 320 . 321) (nil fontified nil 319 . 320) (nil fontified nil 318 . 319) (nil fontified nil 317 . 318) (nil fontified nil 316 . 317) (nil fontified nil 315 . 316) (nil category c->-as-paren-syntax 315 . 316) (nil fontified nil 314 . 315) (nil fontified nil 313 . 314) (nil category c-<-as-paren-syntax 313 . 314) (nil fontified nil 312 . 313) (nil fontified nil 311 . 312) (nil fontified nil 310 . 311) (nil fontified nil 309 . 310) (nil fontified nil 308 . 309) (nil fontified nil 307 . 308) (nil fontified nil 306 . 307) (nil fontified nil 305 . 306) (nil fontified nil 304 . 305) (nil fontified nil 303 . 304) (nil fontified nil 302 . 303) (nil fontified nil 301 . 302) (nil fontified nil 300 . 301) (nil fontified nil 299 . 300) (nil fontified nil 298 . 299) (nil fontified nil 297 . 298) (nil category c->-as-paren-syntax 297 . 298) (nil fontified nil 296 . 297) (nil fontified nil 295 . 296) (nil category c-<-as-paren-syntax 295 . 296) (nil fontified nil 294 . 295) (nil fontified nil 293 . 294) (nil fontified nil 292 . 293) (nil fontified nil 291 . 292) (nil fontified nil 290 . 291) (nil fontified nil 289 . 290) (nil fontified nil 288 . 289) (nil fontified nil 287 . 288) (nil fontified nil 286 . 287) (nil fontified nil 285 . 286) (nil fontified nil 284 . 285) (nil fontified nil 283 . 284) (nil fontified nil 282 . 283) (nil fontified nil 281 . 282) (281 . 842)) ((#("	private Lista<T> ordenado(Lista<T> lista){

	    lista = new Lista<>();	
	    Lista<String> ord = lista.mergeSort((a,b) -> {
		    String aSinMayus = a.toLowerCase().replaceAll(\" \",\"\");
		    String aLimpio = Normalizer.normalize(aSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
		    String bSinMayus = b.toLowerCase().replaceAll(\" \",\"\");
		    String bLimpio = Normalizer.normalize(bSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
		
		    return aLimpio.compareTo(bLimpio);
		
		});
	    
	    System.out.println(ord.toString());
	    
	}
" 0 1 (fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil) 4 5 (face font-lock-keyword-face fontified nil) 5 6 (face font-lock-keyword-face fontified nil) 6 7 (face font-lock-keyword-face fontified nil) 7 8 (face font-lock-keyword-face fontified nil) 8 9 (fontified nil) 9 10 (face font-lock-type-face fontified nil) 10 11 (face font-lock-type-face fontified nil) 11 12 (face font-lock-type-face fontified nil) 12 13 (face font-lock-type-face fontified nil) 13 14 (face font-lock-type-face fontified nil) 14 15 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 15 16 (face font-lock-type-face fontified nil) 16 17 (c-type c-decl-id-start fontified nil category c->-as-paren-syntax) 17 18 (fontified nil) 18 19 (face font-lock-function-name-face fontified nil) 19 20 (face font-lock-function-name-face fontified nil) 20 21 (face font-lock-function-name-face fontified nil) 21 22 (face font-lock-function-name-face fontified nil) 22 23 (face font-lock-function-name-face fontified nil) 23 24 (face font-lock-function-name-face fontified nil) 24 25 (face font-lock-function-name-face fontified nil) 25 26 (face font-lock-function-name-face fontified nil) 26 27 (c-type c-decl-arg-start fontified nil) 27 28 (face font-lock-type-face fontified nil) 28 29 (face font-lock-type-face fontified nil) 29 30 (face font-lock-type-face fontified nil) 30 31 (face font-lock-type-face fontified nil) 31 32 (face font-lock-type-face fontified nil) 32 33 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 33 34 (face font-lock-type-face fontified nil) 34 35 (fontified nil category c->-as-paren-syntax) 35 36 (fontified nil) 36 37 (face font-lock-variable-name-face fontified nil) 37 38 (face font-lock-variable-name-face fontified nil) 38 39 (face font-lock-variable-name-face fontified nil) 39 40 (face font-lock-variable-name-face fontified nil) 40 41 (face font-lock-variable-name-face fontified nil) 41 42 (fontified nil) 42 43 (fontified nil) 43 44 (fontified nil) 44 45 (fontified nil) 45 50 (fontified nil) 50 55 (fontified nil) 55 57 (fontified nil) 57 58 (fontified nil) 58 61 (face font-lock-keyword-face fontified nil) 61 62 (fontified nil) 62 67 (face font-lock-type-face fontified nil) 67 68 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 68 69 (fontified nil category c->-as-paren-syntax) 69 71 (fontified nil) 71 72 (fontified nil rear-nonsticky t) 72 73 (fontified nil) 73 74 (fontified nil) 74 79 (fontified nil) 79 84 (face font-lock-type-face fontified nil) 84 85 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 85 91 (face font-lock-type-face fontified nil) 91 92 (c-type c-decl-id-start fontified nil category c->-as-paren-syntax) 92 93 (fontified nil) 93 96 (face font-lock-variable-name-face fontified nil) 96 99 (fontified nil) 99 104 (fontified nil) 104 126 (fontified nil) 126 132 (fontified nil) 132 137 (face font-lock-type-face fontified nil) 137 138 (face font-lock-type-face c-type c-decl-id-start fontified nil) 138 139 (fontified nil) 139 140 (face font-lock-variable-name-face fontified nil) 140 141 (face font-lock-variable-name-face fontified nil) 141 142 (face font-lock-variable-name-face fontified nil) 142 143 (face font-lock-variable-name-face fontified nil) 143 144 (face font-lock-variable-name-face fontified nil) 144 145 (face font-lock-variable-name-face fontified nil) 145 146 (face font-lock-variable-name-face fontified nil) 146 147 (face font-lock-variable-name-face fontified nil) 147 148 (face font-lock-variable-name-face fontified nil) 148 150 (fontified nil) 150 151 (fontified nil) 151 152 (fontified nil) 152 153 (fontified nil) 153 154 (fontified nil) 154 155 (fontified nil) 155 156 (fontified nil) 156 157 (fontified nil) 157 158 (fontified nil) 158 159 (fontified nil) 159 160 (fontified nil) 160 161 (fontified nil) 161 162 (fontified nil) 162 163 (fontified nil) 163 164 (fontified nil) 164 165 (fontified nil) 165 166 (fontified nil) 166 178 (fontified nil) 178 181 (face font-lock-string-face fontified nil) 181 182 (fontified nil) 182 184 (face font-lock-string-face fontified nil) 184 185 (fontified nil) 185 186 (fontified nil rear-nonsticky t) 186 187 (fontified nil) 187 193 (fontified nil) 193 194 (face font-lock-type-face fontified nil) 194 195 (face font-lock-type-face fontified nil) 195 196 (face font-lock-type-face fontified nil) 196 197 (face font-lock-type-face fontified nil) 197 198 (face font-lock-type-face fontified nil) 198 199 (face font-lock-type-face c-type c-decl-id-start fontified nil) 199 200 (fontified nil) 200 201 (face font-lock-variable-name-face fontified nil) 201 202 (face font-lock-variable-name-face fontified nil) 202 203 (face font-lock-variable-name-face fontified nil) 203 204 (face font-lock-variable-name-face fontified nil) 204 205 (face font-lock-variable-name-face fontified nil) 205 206 (face font-lock-variable-name-face fontified nil) 206 207 (face font-lock-variable-name-face fontified nil) 207 208 (fontified nil) 208 209 (fontified nil) 209 210 (fontified nil) 210 230 (fontified nil) 230 231 (fontified nil) 231 232 (fontified nil) 232 233 (fontified nil) 233 234 (fontified nil) 234 235 (fontified nil) 235 236 (fontified nil) 236 237 (fontified nil) 237 238 (fontified nil) 238 239 (fontified nil) 239 240 (fontified nil) 240 241 (fontified nil) 241 242 (fontified nil) 242 252 (face font-lock-constant-face fontified nil) 252 253 (fontified nil) 253 257 (face font-lock-constant-face fontified nil) 257 258 (fontified nil) 258 261 (fontified nil) 261 263 (fontified nil) 263 274 (fontified nil) 274 282 (face font-lock-string-face fontified nil) 282 284 (fontified nil) 284 286 (face font-lock-string-face fontified nil) 286 287 (fontified nil) 287 288 (fontified nil) 288 289 (fontified nil) 289 295 (fontified nil) 295 300 (face font-lock-type-face fontified nil) 300 301 (face font-lock-type-face c-type c-decl-id-start fontified nil) 301 302 (fontified nil) 302 303 (face font-lock-variable-name-face fontified nil) 303 304 (face font-lock-variable-name-face fontified nil) 304 305 (face font-lock-variable-name-face fontified nil) 305 306 (face font-lock-variable-name-face fontified nil) 306 307 (face font-lock-variable-name-face fontified nil) 307 308 (face font-lock-variable-name-face fontified nil) 308 309 (face font-lock-variable-name-face fontified nil) 309 310 (face font-lock-variable-name-face fontified nil) 310 311 (face font-lock-variable-name-face fontified nil) 311 313 (fontified nil) 313 314 (fontified nil) 314 315 (fontified nil) 315 316 (fontified nil) 316 317 (fontified nil) 317 318 (fontified nil) 318 319 (fontified nil) 319 320 (fontified nil) 320 321 (fontified nil) 321 322 (fontified nil) 322 323 (fontified nil) 323 324 (fontified nil) 324 325 (fontified nil) 325 326 (fontified nil) 326 327 (fontified nil) 327 328 (fontified nil) 328 329 (fontified nil) 329 341 (fontified nil) 341 344 (face font-lock-string-face fontified nil) 344 345 (fontified nil) 345 347 (face font-lock-string-face fontified nil) 347 348 (fontified nil) 348 349 (fontified nil rear-nonsticky t) 349 350 (fontified nil) 350 356 (fontified nil) 356 357 (face font-lock-type-face fontified nil) 357 358 (face font-lock-type-face fontified nil) 358 359 (face font-lock-type-face fontified nil) 359 360 (face font-lock-type-face fontified nil) 360 361 (face font-lock-type-face fontified nil) 361 362 (face font-lock-type-face c-type c-decl-id-start fontified nil) 362 363 (fontified nil) 363 364 (face font-lock-variable-name-face fontified nil) 364 365 (face font-lock-variable-name-face fontified nil) 365 366 (face font-lock-variable-name-face fontified nil) 366 367 (face font-lock-variable-name-face fontified nil) 367 368 (face font-lock-variable-name-face fontified nil) 368 369 (face font-lock-variable-name-face fontified nil) 369 370 (face font-lock-variable-name-face fontified nil) 370 371 (fontified nil) 371 372 (fontified nil) 372 373 (fontified nil) 373 393 (fontified nil) 393 394 (fontified nil) 394 395 (fontified nil) 395 396 (fontified nil) 396 397 (fontified nil) 397 398 (fontified nil) 398 399 (fontified nil) 399 400 (fontified nil) 400 401 (fontified nil) 401 402 (fontified nil) 402 403 (fontified nil) 403 404 (fontified nil) 404 405 (fontified nil) 405 415 (face font-lock-constant-face fontified nil) 415 416 (fontified nil) 416 420 (face font-lock-constant-face fontified nil) 420 421 (fontified nil) 421 424 (fontified nil) 424 426 (fontified nil) 426 437 (fontified nil) 437 445 (face font-lock-string-face fontified nil) 445 447 (fontified nil) 447 449 (face font-lock-string-face fontified nil) 449 450 (fontified nil) 450 451 (fontified nil) 451 452 (fontified nil) 452 454 (fontified nil) 454 455 (fontified nil) 455 461 (fontified nil) 461 462 (face font-lock-keyword-face fontified nil) 462 467 (face font-lock-keyword-face fontified nil) 467 468 (fontified nil) 468 469 (fontified nil) 469 470 (fontified nil) 470 471 (fontified nil) 471 472 (fontified nil) 472 473 (fontified nil) 473 474 (fontified nil) 474 475 (fontified nil) 475 486 (fontified nil) 486 487 (fontified nil) 487 488 (fontified nil) 488 489 (fontified nil) 489 490 (fontified nil) 490 491 (fontified nil) 491 492 (fontified nil) 492 493 (fontified nil) 493 495 (fontified nil) 495 496 (fontified nil) 496 498 (fontified nil) 498 499 (fontified nil) 499 501 (fontified nil) 501 502 (fontified nil) 502 503 (fontified nil) 503 504 (fontified nil) 504 505 (fontified nil) 505 506 (fontified nil) 506 510 (fontified nil) 510 511 (fontified nil) 511 516 (fontified nil) 516 517 (fontified nil) 517 518 (fontified nil) 518 519 (fontified nil) 519 520 (fontified nil) 520 521 (fontified nil) 521 522 (fontified nil) 522 523 (fontified nil) 523 524 (fontified nil) 524 525 (fontified nil) 525 526 (fontified nil) 526 527 (fontified nil) 527 528 (fontified nil) 528 529 (fontified nil) 529 530 (fontified nil) 530 531 (fontified nil) 531 532 (fontified nil) 532 533 (fontified nil) 533 534 (fontified nil) 534 535 (fontified nil) 535 536 (fontified nil) 536 537 (fontified nil) 537 538 (fontified nil) 538 539 (fontified nil) 539 540 (fontified nil) 540 541 (fontified nil) 541 542 (fontified nil) 542 543 (fontified nil) 543 544 (fontified nil) 544 545 (fontified nil) 545 546 (fontified nil) 546 547 (fontified nil) 547 548 (fontified nil) 548 549 (fontified nil) 549 550 (fontified nil) 550 551 (fontified nil) 551 552 (fontified nil rear-nonsticky t) 552 557 (fontified nil) 557 558 (fontified nil) 558 559 (fontified nil) 559 560 (fontified nil) 560 561 (fontified nil rear-nonsticky nil)) . 281) (undo-tree-id540 . -46) (undo-tree-id541 . -44) (nil rear-nonsticky t 841 . 842)) (26108 29123 814548 245000) 0 nil])
([nil nil ((1896 . 1909)) nil (26109 4384 537967 913000) 0 nil])
nil
([nil nil ((1812 . 1813)) ((#(" " 0 1 (fontified t)) . 1812) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1)) (26109 2900 527754 222000) 0 nil])
([nil nil ((281 . 285) (#("	" 0 1 (fontified t)) . 281)) ((281 . 282) (#("    " 0 4 (fontified t)) . 281)) (26108 29123 546024 441000) 0 nil])
([nil nil ((1911 . 1914)) nil (26109 4384 537964 387000) 0 nil])
([nil nil ((1813 . 1814)) ((#("*" 0 1 (fontified t)) . 1813) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1)) (26109 2900 365638 460000) 0 nil])
([nil nil ((328 . 329)) ((#("	" 0 1 (fontified t)) . 328)) (26108 29123 335880 730000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1890) (undo-tree-id151 . -1) (undo-tree-id152 . -1) 1891 (t 26109 4384 550367 950000)) nil (26109 4430 941536 549000) 0 nil])
([nil nil ((1814 . 1815)) ((#(" " 0 1 (fontified t)) . 1814) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1)) (26109 2900 109811 527000) 0 nil])
([nil nil ((330 . 331) (#("	    " 0 5 (fontified t)) . 330) (undo-tree-id490 . -1) 331) ((330 . 335) (#("	" 0 1 (fontified t)) . 330)) (26108 29123 128427 411000) 0 nil])
([nil nil ((2103 . 2109) (t 26109 4430 956927 286000)) nil (26109 5121 154052 369000) 0 nil])
([nil nil ((1815 . 1817)) ((#("-1" 0 1 (fontified t) 1 2 (fontified t)) . 1815) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2)) (26109 2899 855545 566000) 0 nil])
([nil nil ((355 . 356) (#("	    " 0 5 (fontified t)) . 355) (undo-tree-id489 . -1) 356) ((355 . 360) (#("	" 0 1 (fontified t)) . 355)) (26108 29122 940277 764000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2128 . 2129) (nil fontified nil 2109 . 2129) (2109 . 2129)) nil (26109 5121 154048 582000) 0 nil])
([nil nil ((1817 . 1818)) ((#(";" 0 1 (fontified t)) . 1817)) (26109 2899 561487 439000) 0 nil])
([nil nil ((403 . 405) (#("		    " 0 6 (fontified t)) . 403) (undo-tree-id488 . -1) 404) ((403 . 409) (#("		" 0 2 (fontified t)) . 403)) (26108 29122 738494 5000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -1891) (undo-tree-id153 . -1) (#("e" 0 1 (fontified t)) . -1892) (undo-tree-id154 . -1) (#("t" 0 1 (fontified t)) . -1893) (undo-tree-id155 . -1) 1894 (t 26109 5121 165789 263000)) nil (26109 5145 981045 152000) 0 nil])
([nil nil ((1817 . 1818)) ((#(")" 0 1 (fontified t)) . 1817)) (26109 2899 218143 552000) 0 nil])
([nil nil ((460 . 462) (#("		    " 0 6 (fontified t)) . 460) (undo-tree-id487 . -2) 462) ((460 . 466) (#("		" 0 2 (fontified t)) . 460)) (26108 29122 544532 286000) 0 nil])
([nil nil ((1891 . 1893)) nil (26109 5145 981031 787000) 0 nil])
([nil nil ((1808 . 1809)) ((#("(" 0 1 (fontified t)) . 1808)) (26109 2898 606953 981000) 0 nil])
([nil nil ((558 . 560) (#("		    " 0 6 (fontified t)) . 558) (undo-tree-id486 . -2) 560) ((558 . 564) (#("		" 0 2 (fontified t)) . 558)) (26108 29122 336637 478000) 0 nil])
([nil nil ((1874 . 1876) (t 26109 5145 995458 446000)) nil (26109 5157 224777 380000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1849) (undo-tree-id27 . -1) (undo-tree-id29 . -1) (undo-tree-id31 . -1) (undo-tree-id33 . -1) (undo-tree-id35 . -1) (undo-tree-id37 . -1) (#("r" 0 1 (fontified t)) . -1850) (undo-tree-id38 . -1) (undo-tree-id40 . -1) (undo-tree-id42 . -1) (undo-tree-id44 . -1) (undo-tree-id46 . -1) (#("d" 0 1 (fontified t)) . -1851) (undo-tree-id48 . -1) (undo-tree-id50 . -1) (undo-tree-id52 . -1) (undo-tree-id54 . -1) (undo-tree-id56 . -1) (#(" " 0 1 (fontified t)) . -1852) (undo-tree-id57 . -1) (undo-tree-id59 . -1) (undo-tree-id61 . -1) (undo-tree-id63 . -1) (#("*" 0 1 (fontified t)) . -1853) (undo-tree-id65 . -1) (undo-tree-id67 . -1) (undo-tree-id69 . -1) (undo-tree-id71 . -1) (#(" " 0 1 (fontified t)) . -1854) (undo-tree-id72 . -1) (undo-tree-id74 . -1) (undo-tree-id76 . -1) (#("-" 0 1 (fontified t)) . -1855) (undo-tree-id78 . -1) (undo-tree-id80 . -1) (#("1" 0 1 (fontified t)) . -1856) (undo-tree-id82 . -1) 1857) ((1849 . 1857)) (26109 2898 253458 654000) 0 nil])
([nil nil ((615 . 617) (#("		    " 0 6 (fontified t)) . 615) (undo-tree-id485 . -2) 617) ((615 . 621) (#("		" 0 2 (fontified t)) . 615)) (26108 29122 160483 970000) 0 nil])
([nil nil ((2101 . 2102) (t 26109 5157 235312 471000)) nil (26109 5195 172598 774000) 0 nil])
([nil nil ((1849 . 1850)) ((#("o" 0 1 (fontified t)) . 1849) (undo-tree-id95 . -1) (undo-tree-id96 . -1)) (26109 2897 937624 190000) 0 nil])
([nil nil ((716 . 718) (#("		    " 0 6 (fontified t)) . 716) (undo-tree-id484 . -2) 718) ((716 . 722) (#("		" 0 2 (fontified t)) . 716)) (26108 29121 938434 0) 0 nil])
([nil nil ((2102 . 2103)) nil (26109 5195 172597 161000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1849) (undo-tree-id25 . -1) 1850) ((1849 . 1850)) (26109 2897 587532 205000) 0 nil])
([nil nil ((756 . 761) (#("		" 0 2 (fontified t)) . -756) (undo-tree-id483 . -2) 758) ((756 . 758) (#("	    " 0 5 (fontified t)) . 756)) (26108 29121 788412 589000) 0 nil])
([nil nil ((2104 . 2109)) nil (26109 5195 172593 364000) 0 nil])
([nil nil ((1849 . 1852)) ((#("sre" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 1849) (undo-tree-id93 . -3) (undo-tree-id94 . -3)) (26109 2897 298518 437000) 0 nil])
([nil nil ((765 . 766) (#("	    " 0 1 (fontified t) 1 5 (fontified t)) . -765) (undo-tree-id482 . -5) 770) ((765 . 770) (#("	" 0 1 (fontified t)) . 765)) (26108 29121 532737 820000) 0 nil])
([nil nil ((2103 . 2105) (t 26109 5195 188169 470000)) nil (26109 5213 505641 32000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1849) (undo-tree-id13 . -1) (undo-tree-id15 . -1) (undo-tree-id17 . -1) (#("r" 0 1 (fontified t)) . -1850) (undo-tree-id19 . -1) (undo-tree-id21 . -1) (#("e" 0 1 (fontified t)) . -1851) (undo-tree-id23 . -1) 1852) ((1849 . 1852)) (26109 2896 962058 240000) 0 nil])
([nil nil ((767 . 768) (#("	    " 0 5 (fontified t)) . 767) (undo-tree-id481 . -1) 768) ((767 . 772) (#("	" 0 1 (fontified t)) . 767)) (26108 29121 310837 644000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2106) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("+" 0 1 (fontified t)) . -2107) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#(" " 0 1 (fontified t)) . -2108) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#("\\" 0 1 (fontified t)) . -2109) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("n" 0 1 (fontified t)) . -2110) (undo-tree-id182 . -1) (undo-tree-id183 . -1) 2111) nil (26109 5213 505635 903000) 0 nil])
([nil nil ((1849 . 1856)) ((#("reversa" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 1849) (t 26109 2880 410724 616000)) (26109 2896 649728 993000) 0 nil])
([nil nil ((810 . 814) (#("	" 0 1 (fontified t)) . -810) (undo-tree-id480 . -1) 811) ((810 . 811) (#("    " 0 4 (fontified t)) . 810)) (26108 29121 98278 588000) 0 nil])
([nil nil ((2087 . 2090) (t 26109 5213 514614 895000)) nil (26109 5226 676803 171000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1813) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("*" 0 1 (fontified t)) . -1814) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#(" " 0 1 (fontified t)) . -1815) (undo-tree-id91 . -1) (undo-tree-id92 . -1) 1816 (t 26109 2880 410724 616000)) ((1813 . 1816)) (26109 2896 648060 299000) 0 nil])
([nil nil ((243 . 244) (#("L" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -243) (undo-tree-id513 . -1) (244 . 245) (#("i" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -244) (undo-tree-id514 . -1) (245 . 246) (#("s" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -245) (undo-tree-id515 . -1) (246 . 247) (#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -246) (undo-tree-id516 . -1) (247 . 248) (#("a" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -247) (undo-tree-id517 . -1) 248 (t 26108 28767 771743 576000)) ((247 . 248) (#(" " 0 1 (fontified nil)) . 247) (246 . 247) (#(" " 0 1 (fontified nil)) . 246) (undo-tree-id539 . -1) (245 . 246) (#(" " 0 1 (fontified nil)) . 245) (244 . 245) (#(" " 0 1 (fontified nil)) . 244) (243 . 244) (#(" " 0 1 (fontified t)) . 243)) (26108 29120 892364 523000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -2089) (undo-tree-id184 . -1) 2090 (t 26109 5226 687792 569000)) nil (26109 5235 317444 908000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -247) (undo-tree-id529 . -1) (#(";" 0 1 (fontified t)) . -248) (undo-tree-id530 . -1) 249) ((247 . 249)) (26108 29120 652932 529000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . 243) (244 . 245) 243) ((#("*" 0 1 (c-type c-decl-id-start fontified nil)) . 244) (243 . 244)) (26108 28799 874703 955000) 0 nil])
([nil nil ((1911 . 1914) (t 26109 5235 327691 973000)) nil (26109 5321 944589 548000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -243) (undo-tree-id519 . -1) (undo-tree-id521 . -1) (#(" " 0 1 (fontified t)) . -244) (undo-tree-id523 . -1) (undo-tree-id525 . -1) (#(" " 0 1 (fontified t)) . -245) (undo-tree-id526 . -1) (#(" " 0 1 (fontified t)) . -246) (undo-tree-id528 . -1) 247) ((243 . 247)) (26108 29120 450049 90000) 0 nil])
([nil nil ((245 . 246) (#(" " 0 1 (fontified t)) . -245) (undo-tree-id510 . -1) (246 . 247) (#(" " 0 1 (fontified t)) . -246) (undo-tree-id511 . -1) (247 . 248) (#(" " 0 1 (fontified t)) . -247) (undo-tree-id512 . -1) 248) ((247 . 248) (#(" " 0 1 (fontified nil)) . 247) (undo-tree-id518 . -1) (246 . 247) (#(" " 0 1 (fontified nil)) . 246) (245 . 246) (#(" " 0 1 (fontified t)) . 245)) (26108 28799 872438 80000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1966 . 1967) (nil fontified nil 1915 . 1967) (nil fontified nil 1914 . 1915) (1914 . 1967)) nil (26109 5321 944588 386000) 0 nil])
([nil nil ((243 . 244)) ((#("*" 0 1 (c-type c-decl-id-start fontified t)) . 243) (undo-tree-id537 . -1) (undo-tree-id538 . -1)) (26108 29120 260483 621000) 0 nil])
nil
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -1951) (undo-tree-id187 . -1) (#("f" 0 1 (face font-lock-string-face fontified t)) . -1952) (undo-tree-id188 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -1953) (undo-tree-id189 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -1954) (undo-tree-id190 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1955) (undo-tree-id191 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -1956) (undo-tree-id192 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -1957) (undo-tree-id193 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -1958) (undo-tree-id194 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1959) (undo-tree-id195 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -1960) (undo-tree-id196 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -1961) (undo-tree-id197 . -1) (#("x" 0 1 (face font-lock-string-face fontified t)) . -1962) (undo-tree-id198 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -1963) (undo-tree-id199 . -1) 1964) nil (26109 5321 944585 330000) 0 nil])
([nil nil ((244 . 245)) ((#(";" 0 1 (fontified t)) . 244) (t 26108 29090 417934 949000)) (26108 29088 889338 704000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face fontified t)) . -1951) (undo-tree-id186 . -1) 1952) nil (26109 5321 944574 39000) 0 nil])
([nil nil ((nil rear-nonsticky nil 342 . 343) (nil fontified nil 246 . 343) (246 . 343) (t 26108 28806 785154 764000)) ((#("import java.util.Comparator;
import java.util.Iterator;
import java.util.NoSuchElementException;
" 0 6 (face font-lock-keyword-face fontified nil) 6 7 (fontified nil) 7 11 (face font-lock-constant-face fontified nil) 11 12 (fontified nil) 12 16 (face font-lock-constant-face fontified nil) 16 17 (fontified nil) 17 26 (face font-lock-type-face fontified nil) 26 27 (face font-lock-type-face c-type c-decl-id-start fontified nil) 27 29 (fontified nil) 29 35 (face font-lock-keyword-face fontified nil) 35 36 (fontified nil) 36 40 (face font-lock-constant-face fontified nil) 40 41 (fontified nil) 41 45 (face font-lock-constant-face fontified nil) 45 46 (fontified nil) 46 53 (face font-lock-type-face fontified nil) 53 54 (face font-lock-type-face c-type c-decl-id-start fontified nil) 54 56 (fontified nil) 56 62 (face font-lock-keyword-face fontified nil) 62 63 (fontified nil) 63 67 (face font-lock-constant-face fontified nil) 67 68 (fontified nil) 68 72 (face font-lock-constant-face fontified nil) 72 73 (fontified nil) 73 94 (face font-lock-type-face fontified nil) 94 95 (face font-lock-type-face c-type c-decl-id-start fontified nil) 95 96 (fontified nil) 96 97 (rear-nonsticky nil fontified nil)) . 246) (undo-tree-id531 . -97) (undo-tree-id532 . -97) (undo-tree-id533 . -97) (undo-tree-id534 . -97) (undo-tree-id535 . -97) (undo-tree-id536 . -97) (nil rear-nonsticky t 342 . 343) (t 26108 29076 781331 638000)) (26108 29076 764860 326000) 0 nil])
([nil nil ((1951 . 1954)) nil (26109 5321 944571 965000) 0 nil])
nil
([nil nil ((#("r" 0 1 (fontified t)) . -1953) (undo-tree-id185 . -1) 1954) nil (26109 5321 944570 383000) 0 nil])
([nil nil ((1953 . 1958)) nil (26109 5321 944561 125000) 0 nil])
([nil nil ((1958 . 1960)) nil (26109 5321 944559 713000) 0 nil])
([nil nil ((1959 . 1972)) nil (26109 5321 944553 281000) 0 nil])
([nil nil ((215 . 216) (t 26109 5321 960077 509000)) nil (26109 5400 542473 59000) 0 nil])
([nil nil ((nil rear-nonsticky nil 227 . 228) (nil fontified nil 215 . 228) (215 . 228)) nil (26109 5400 542471 937000) 0 nil])
([nil nil ((215 . 222)) nil (26109 5400 542470 114000) 0 nil])
([nil nil ((235 . 236)) nil (26109 5400 542466 878000) 0 nil])
([nil nil ((#("import java.nio.file;" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 5 (face font-lock-keyword-face fontified t) 5 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 11 (fontified t) 11 16 (fontified t) 16 19 (face font-lock-type-face fontified t) 19 20 (face font-lock-type-face c-type c-decl-id-start rear-nonsticky t fontified t) 20 21 (fontified t)) . 215) (undo-tree-id207 . -21) (undo-tree-id208 . -21) (t 26109 5400 559303 260000)) nil (26109 5412 611051 323000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -214) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) 215) nil (26109 5412 611045 933000) 0 nil])
([nil nil ((214 . 215) (t 26109 5412 629190 781000)) nil (26109 5509 818437 476000) 0 nil])
([nil nil ((nil rear-nonsticky nil 240 . 241) (nil fontified nil 215 . 241) (215 . 241)) nil (26109 5509 818433 599000) 0 nil])
([nil nil ((#("import java.nio.file.Path;" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 11 (face font-lock-constant-face fontified t) 11 12 (fontified t) 12 15 (face font-lock-constant-face fontified t) 15 16 (fontified t) 16 20 (face font-lock-constant-face fontified t) 20 21 (fontified t) 21 24 (face font-lock-type-face fontified t) 24 25 (face font-lock-type-face c-type c-decl-id-start fontified t) 25 26 (rear-nonsticky t fontified t)) . 215) (undo-tree-id215 . -26) (t 26109 5509 828340 205000)) nil (26109 5524 878936 895000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -214) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) 215) nil (26109 5524 878932 587000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1972) (undo-tree-id264 . -1) 1973 (t 26109 5524 894883 124000)) nil (26109 6416 434649 477000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t)) . -1951) (undo-tree-id256 . -1) (#("a" 0 1 (fontified t)) . -1952) (undo-tree-id257 . -1) (#("t" 0 1 (fontified t)) . -1953) (undo-tree-id258 . -1) (#("h" 0 1 (fontified t)) . -1954) (undo-tree-id259 . -1) (#("." 0 1 (fontified t)) . -1955) (undo-tree-id260 . -1) (#("o" 0 1 (fontified t)) . -1956) (undo-tree-id261 . -1) (#("f" 0 1 (fontified t)) . -1957) (undo-tree-id262 . -1) (#("(" 0 1 (fontified t)) . -1958) (undo-tree-id263 . -1) 1959) nil (26109 6416 434647 233000) 0 nil])
([nil nil ((#("		//Path path = Path.of(nombreArchivo);" 0 2 (fontified t c-is-sws t c-in-sws t) 2 3 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 3 4 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 4 7 (face font-lock-comment-face fontified t c-in-sws t) 7 8 (face font-lock-comment-face fontified t c-in-sws t) 8 9 (face font-lock-comment-face fontified t c-in-sws t) 9 13 (face font-lock-comment-face fontified t c-in-sws t) 13 15 (face font-lock-comment-face fontified t c-in-sws t) 15 20 (face font-lock-comment-face fontified t c-in-sws t) 20 21 (face font-lock-comment-face fontified t c-in-sws t) 21 22 (face font-lock-comment-face fontified t c-in-sws t) 22 23 (face font-lock-comment-face fontified t c-in-sws t) 23 24 (face font-lock-comment-face fontified t c-in-sws t) 24 25 (face font-lock-comment-face fontified t c-in-sws t) 25 26 (face font-lock-comment-face fontified t c-in-sws t) 26 27 (face font-lock-comment-face fontified t c-in-sws t) 27 28 (face font-lock-comment-face fontified t c-in-sws t) 28 29 (face font-lock-comment-face fontified t c-in-sws t) 29 30 (face font-lock-comment-face fontified t c-in-sws t) 30 31 (face font-lock-comment-face fontified t c-in-sws t) 31 32 (face font-lock-comment-face fontified t c-in-sws t) 32 33 (face font-lock-comment-face fontified t c-in-sws t) 33 34 (face font-lock-comment-face fontified t c-in-sws t) 34 35 (face font-lock-comment-face fontified t c-in-sws t) 35 36 (face font-lock-comment-face fontified t c-in-sws t) 36 37 (face font-lock-comment-face fontified t c-in-sws t) 37 38 (face font-lock-comment-face fontified t c-in-sws t) 38 39 (face font-lock-comment-face fontified t c-in-sws t rear-nonsticky t)) . 1872) (undo-tree-id254 . -39) (undo-tree-id255 . -39)) nil (26109 6416 434641 121000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1871) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) 1872) nil (26109 6416 434639 57000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -1885) (undo-tree-id243 . -1) (#("y" 0 1 (face font-lock-variable-name-face fontified t)) . -1886) (undo-tree-id244 . -1) (#("W" 0 1 (face font-lock-variable-name-face fontified t)) . -1887) (undo-tree-id245 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -1888) (undo-tree-id246 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -1889) (undo-tree-id247 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -1890) (undo-tree-id248 . -1) 1891) nil (26109 6416 434634 349000) 0 nil])
([nil nil ((1886 . 1889)) nil (26109 6416 434629 780000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -1888) (undo-tree-id242 . -1) 1889) nil (26109 6416 434628 999000) 0 nil])
([nil nil ((1889 . 1893)) nil (26109 6416 434627 847000) 0 nil])
([nil nil ((1893 . 1897)) nil (26109 6416 434627 255000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -1896) (undo-tree-id241 . -1) 1897) nil (26109 6416 434626 634000) 0 nil])
([nil nil ((1896 . 1900)) nil (26109 6416 434625 442000) 0 nil])
([nil nil ((1936 . 1951)) nil (26109 6416 434624 921000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1949) (undo-tree-id239 . -1) (#("r" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1950) (undo-tree-id240 . -1) 1951) nil (26109 6416 434624 250000) 0 nil])
([nil nil ((1949 . 1953)) nil (26109 6416 434622 226000) 0 nil])
([nil nil ((1953 . 1954)) nil (26109 6416 434621 735000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1951) (undo-tree-id236 . -1) (#("e" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1952) (undo-tree-id237 . -1) (#("c" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -1953) (undo-tree-id238 . -1) 1954) nil (26109 6416 434620 864000) 0 nil])
([nil nil ((1951 . 1966)) nil (26109 6416 434618 88000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1964) (undo-tree-id234 . -1) (#(" " 0 1 (fontified t)) . -1965) (undo-tree-id235 . -1) 1966) nil (26109 6416 434617 6000) 0 nil])
([nil nil ((1964 . 1970)) nil (26109 6416 434614 792000) 0 nil])
([nil nil ((#("U" 0 1 (face font-lock-type-face fontified t)) . -1967) (undo-tree-id231 . -1) (#("f" 0 1 (face font-lock-type-face fontified t)) . -1968) (undo-tree-id232 . -1) (#("f" 0 1 (face font-lock-type-face fontified t)) . -1969) (undo-tree-id233 . -1) 1970) nil (26109 6416 434613 319000) 0 nil])
([nil nil ((1967 . 1980)) nil (26109 6416 434588 613000) 0 nil])
([nil nil ((1980 . 1982)) nil (26109 6416 434587 712000) 0 nil])
([nil nil ((1981 . 1996)) nil (26109 6416 434587 61000) 0 nil])
([nil nil ((1997 . 1998)) nil (26109 6416 434586 580000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1996) (1997 . 1998) 1996) nil (26109 6416 434585 959000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . 1997) (1998 . 1999) 1997) nil (26109 6416 434584 987000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-type-face fontified t)) . -1996) (undo-tree-id229 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -1997) (undo-tree-id230 . -1) 1998) nil (26109 6416 434583 805000) 0 nil])
([nil nil ((1996 . 1997)) nil (26109 6416 434581 931000) 0 nil])
([nil nil ((1997 . 1998)) nil (26109 6416 434581 280000) 0 nil])
([nil nil ((1998 . 2001)) nil (26109 6416 434580 729000) 0 nil])
([nil nil ((2001 . 2010)) nil (26109 6416 434580 68000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2001) (undo-tree-id220 . -1) (#("s" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2002) (undo-tree-id221 . -1) (#("c" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2003) (undo-tree-id222 . -1) (#("i" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2004) (undo-tree-id223 . -1) (#("r" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2005) (undo-tree-id224 . -1) (#("t" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2006) (undo-tree-id225 . -1) (#("o" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2007) (undo-tree-id226 . -1) (#("r" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2008) (undo-tree-id227 . -1) (#(" " 0 1 (fontified t)) . -2009) (undo-tree-id228 . -1) 2010) nil (26109 6416 434577 743000) 0 nil])
([nil nil ((2001 . 2010)) nil (26109 6416 434570 460000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2009) (undo-tree-id219 . -1) 2010) nil (26109 6416 434569 458000) 0 nil])
([nil nil ((2009 . 2013)) nil (26109 6416 434567 434000) 0 nil])
([nil nil ((2013 . 2015)) nil (26109 6416 434566 903000) 0 nil])
([nil nil ((2015 . 2017)) nil (26109 6416 434566 242000) 0 nil])
([nil nil ((2017 . 2024)) nil (26109 6416 434565 741000) 0 nil])
([nil nil ((2016 . 2019)) nil (26109 6416 434564 939000) 0 nil])
([nil nil ((2020 . 2021)) nil (26109 6416 434564 148000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -2075) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) 2076) nil (26109 6416 434561 653000) 0 nil])
([nil nil ((2075 . 2076)) nil (26109 6416 434547 637000) 0 nil])
([nil nil ((2019 . 2023) (t 26109 6416 449735 588000)) nil (26109 6458 850195 882000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t)) . -2021) (undo-tree-id271 . -1) (#("s" 0 1 (fontified t)) . -2022) (undo-tree-id272 . -1) 2023) nil (26109 6458 850194 710000) 0 nil])
([nil nil ((2021 . 2022)) nil (26109 6458 850192 115000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -2020) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#("O" 0 1 (fontified t)) . -2021) (undo-tree-id269 . -1) (undo-tree-id270 . -1) 2022) nil (26109 6458 850190 91000) 0 nil])
([nil nil ((2020 . 2028)) nil (26109 6458 850176 216000) 0 nil])
([nil nil ((2028 . 2030)) nil (26109 6458 850172 659000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2035) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (#(" " 0 1 (fontified t)) . -2036) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#(" " 0 1 (fontified t)) . -2037) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (#(" " 0 1 (fontified t)) . -2038) (undo-tree-id314 . -1) (undo-tree-id315 . -1) 2039 (t 26109 6458 866215 710000)) nil (26109 6594 83560 237000) 0 nil])
([nil nil ((2035 . 2049)) nil (26109 6594 83555 187000) 0 nil])
([nil nil ((2049 . 2051)) nil (26109 6594 83554 576000) 0 nil])
([nil nil ((2051 . 2052)) nil (26109 6594 83553 975000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -2079) (undo-tree-id287 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -2080) (undo-tree-id288 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2081) (undo-tree-id289 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -2082) (undo-tree-id290 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -2083) (undo-tree-id291 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -2084) (undo-tree-id292 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2085) (undo-tree-id293 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -2086) (undo-tree-id294 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2087) (undo-tree-id295 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -2088) (undo-tree-id296 . -1) (#("q" 0 1 (face font-lock-string-face fontified t)) . -2089) (undo-tree-id297 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -2090) (undo-tree-id298 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2091) (undo-tree-id299 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -2092) (undo-tree-id300 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -2093) (undo-tree-id301 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -2094) (undo-tree-id302 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -2095) (undo-tree-id303 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -2096) (undo-tree-id304 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -2097) (undo-tree-id305 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -2098) (undo-tree-id306 . -1) (#("R" 0 1 (face font-lock-string-face fontified t)) . -2099) (undo-tree-id307 . -1) 2100) nil (26109 6594 83551 240000) 0 nil])
([nil nil ((#("q" 0 1 (face font-lock-string-face fontified t)) . -2076) (undo-tree-id284 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -2077) (undo-tree-id285 . -1) (#("í" 0 1 (face font-lock-string-face fontified t)) . -2078) (undo-tree-id286 . -1) 2079) nil (26109 6594 83535 360000) 0 nil])
([nil nil ((2076 . 2089)) nil (26109 6594 83511 857000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -2084) (undo-tree-id279 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -2085) (undo-tree-id280 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -2086) (undo-tree-id281 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -2087) (undo-tree-id282 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -2088) (undo-tree-id283 . -1) 2089) nil (26109 6594 83510 444000) 0 nil])
([nil nil ((2084 . 2087)) nil (26109 6594 83506 216000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -2085) (undo-tree-id277 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -2086) (undo-tree-id278 . -1) 2087) nil (26109 6594 83505 14000) 0 nil])
([nil nil ((2085 . 2093)) nil (26109 6594 83502 589000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-string-face fontified t)) . -2089) (undo-tree-id273 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -2090) (undo-tree-id274 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -2091) (undo-tree-id275 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -2092) (undo-tree-id276 . -1) 2093) nil (26109 6594 83500 335000) 0 nil])
([nil nil ((2089 . 2094)) nil (26109 6594 83486 79000) 0 nil])
([nil nil ((2094 . 2105)) nil (26109 6594 83482 452000) 0 nil])
([nil nil ((2121 . 2123) (t 26109 6594 98970 375000)) nil (26109 8931 34195 625000) 0 nil])
([nil nil ((2123 . 2125)) nil (26109 8931 34194 703000) 0 nil])
([nil nil ((2124 . 2138)) nil (26109 8931 34194 62000) 0 nil])
([nil nil ((2138 . 2140)) nil (26109 8931 34193 290000) 0 nil])
([nil nil ((2139 . 2141)) nil (26109 8931 34192 429000) 0 nil])
([nil nil ((2200 . 2206)) nil (26109 8931 34190 876000) 0 nil])
([nil nil ((2200 . 2201)) nil (26109 8931 34187 89000) 0 nil])
([nil nil ((2201 . 2203) (t 26109 8931 51718 787000)) nil (26109 9090 580039 649000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2202) (undo-tree-id440 . -1) 2203) nil (26109 9090 580038 698000) 0 nil])
([nil nil ((2202 . 2205)) nil (26109 9090 580037 575000) 0 nil])
([nil nil ((2205 . 2206) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 2205) (undo-tree-id439 . -4) (2201 . 2205) 2205) nil (26109 9090 580036 824000) 0 nil])
([nil nil ((2206 . 2209)) nil (26109 9090 580035 401000) 0 nil])
([nil nil ((2209 . 2211)) nil (26109 9090 580034 870000) 0 nil])
([nil nil ((2210 . 2211)) nil (26109 9090 580034 389000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2210) (undo-tree-id438 . -1) 2211) nil (26109 9090 580033 808000) 0 nil])
([nil nil ((2210 . 2225)) nil (26109 9090 580032 566000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2224) (undo-tree-id437 . -1) 2225) nil (26109 9090 580031 915000) 0 nil])
([nil nil ((2224 . 2226)) nil (26109 9090 580030 833000) 0 nil])
([nil nil ((2225 . 2227)) nil (26109 9090 580030 332000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -2225) (undo-tree-id435 . -1) (#("r" 0 1 (fontified t)) . -2226) (undo-tree-id436 . -1) 2227) nil (26109 9090 580029 630000) 0 nil])
([nil nil ((2225 . 2227)) nil (26109 9090 580027 907000) 0 nil])
([nil nil ((2226 . 2231)) nil (26109 9090 580027 376000) 0 nil])
([nil nil ((2234 . 2236)) nil (26109 9090 580026 725000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -2234) (undo-tree-id433 . -1) (#("}" 0 1 (fontified t)) . -2235) (undo-tree-id434 . -1) 2236) nil (26109 9090 580025 913000) 0 nil])
([nil nil ((2234 . 2235)) nil (26109 9090 580024 110000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2234) (undo-tree-id432 . -1) 2235) nil (26109 9090 580023 338000) 0 nil])
([nil nil ((2234 . 2235)) nil (26109 9090 580022 266000) 0 nil])
([nil nil ((2235 . 2237)) nil (26109 9090 580021 705000) 0 nil])
([nil nil ((2236 . 2242)) nil (26109 9090 580021 204000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2234) (undo-tree-id431 . -1) 2235) nil (26109 9090 580020 553000) 0 nil])
([nil nil ((2237 . 2242) (#("	    " 0 5 (fontified nil)) . 2236) (undo-tree-id430 . -5) (2241 . 2242)) nil (26109 9090 580019 120000) 0 nil])
([nil nil ((2236 . 2238)) nil (26109 9090 580017 648000) 0 nil])
([nil nil ((1193 . 1198) (#("	    " 0 5 (fontified nil)) . 1193) (1192 . 1193)) nil (26109 10397 872152 376000) 0 nil])
([nil nil ((#("	    int longitd = lista.getLongitud();
" 0 5 (fontified t) 5 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face c-type c-decl-id-start fontified t) 8 9 (fontified t) 9 16 (face font-lock-variable-name-face fontified t) 16 40 (fontified t)) . 1019) (undo-tree-id0 . -40) (t 26109 10399 132422 619000)) nil (26109 10558 375392 490000) 0 nil] [nil nil ((nil rear-nonsticky nil 1320 . 1321) (nil fontified nil 1319 . 1321) (nil fontified nil 1318 . 1319) (nil fontified nil 1317 . 1318) (nil fontified nil 1316 . 1317) (nil fontified nil 1315 . 1316) (nil fontified nil 1314 . 1315) (nil fontified nil 1313 . 1314) (nil fontified nil 1312 . 1313) (nil fontified nil 1311 . 1312) (nil fontified nil 1310 . 1311) (nil fontified nil 1309 . 1310) (nil fontified nil 1308 . 1309) (nil fontified nil 1307 . 1308) (nil fontified nil 1306 . 1307) (nil fontified nil 1305 . 1306) (nil fontified nil 1304 . 1305) (nil fontified nil 1303 . 1304) (nil fontified nil 1302 . 1303) (nil fontified nil 1301 . 1302) (nil fontified nil 1300 . 1301) (nil fontified nil 1299 . 1300) (nil fontified nil 1298 . 1299) (nil fontified nil 1297 . 1298) (nil fontified nil 1296 . 1297) (nil fontified nil 1295 . 1296) (nil fontified nil 1294 . 1295) (nil fontified nil 1293 . 1294) (nil fontified nil 1292 . 1293) (nil fontified nil 1291 . 1292) (nil fontified nil 1290 . 1291) (nil fontified nil 1289 . 1290) (nil fontified nil 1288 . 1289) (nil fontified nil 1287 . 1288) (nil fontified nil 1286 . 1287) (nil fontified nil 1285 . 1286) (nil fontified nil 1284 . 1285) (nil fontified nil 1283 . 1284) (nil fontified nil 1282 . 1283) (nil fontified nil 1281 . 1282) (nil fontified nil 1280 . 1281) (nil fontified nil 1279 . 1280) (nil fontified nil 1278 . 1279) (nil fontified nil 1277 . 1278) (nil fontified nil 1276 . 1277) (nil fontified nil 1275 . 1276) (nil fontified nil 1274 . 1275) (nil fontified nil 1273 . 1274) (nil fontified nil 1272 . 1273) (nil fontified nil 1271 . 1272) (nil fontified nil 1270 . 1271) (nil fontified nil 1269 . 1270) (nil fontified nil 1268 . 1269) (nil fontified nil 1267 . 1268) (nil fontified nil 1266 . 1267) (nil fontified nil 1265 . 1266) (nil fontified nil 1264 . 1265) (nil fontified nil 1263 . 1264) (nil fontified nil 1262 . 1263) (nil fontified nil 1261 . 1262) (nil fontified nil 1260 . 1261) (nil fontified nil 1259 . 1260) (nil fontified nil 1258 . 1259) (nil fontified nil 1257 . 1258) (nil fontified nil 1256 . 1257) (nil fontified nil 1255 . 1256) (nil fontified nil 1254 . 1255) (nil fontified nil 1253 . 1254) (nil fontified nil 1252 . 1253) (nil fontified nil 1251 . 1252) (nil fontified nil 1250 . 1251) (nil fontified nil 1249 . 1250) (nil fontified nil 1248 . 1249) (nil fontified nil 1247 . 1248) (nil fontified nil 1246 . 1247) (nil fontified nil 1245 . 1246) (nil fontified nil 1244 . 1245) (nil fontified nil 1243 . 1244) (nil fontified nil 1242 . 1243) (nil fontified nil 1241 . 1242) (nil fontified nil 1240 . 1241) (nil fontified nil 1239 . 1240) (nil fontified nil 1238 . 1239) (nil fontified nil 1237 . 1238) (nil fontified nil 1227 . 1237) (nil fontified nil 1226 . 1227) (nil fontified nil 1223 . 1226) (nil fontified nil 1222 . 1223) (nil fontified nil 1220 . 1222) (nil fontified nil 1219 . 1220) (nil fontified nil 1218 . 1219) (nil fontified nil 1217 . 1218) (nil fontified nil 1216 . 1217) (nil fontified nil 1215 . 1216) (nil fontified nil 1214 . 1215) (nil fontified nil 1213 . 1214) (nil fontified nil 1212 . 1213) (nil fontified nil 1211 . 1212) (nil fontified nil 1210 . 1211) (nil fontified nil 1209 . 1210) (nil fontified nil 1208 . 1209) (nil fontified nil 1207 . 1208) (nil fontified nil 1206 . 1207) (nil fontified nil 1205 . 1206) (nil fontified nil 1204 . 1205) (nil fontified nil 1203 . 1204) (nil fontified nil 1195 . 1203) (nil fontified nil 1194 . 1195) (nil fontified nil 1193 . 1194) (nil fontified nil 1192 . 1193) (1192 . 1321)) ((#("		FileWriter escritorArchivo = new FileWriter(nombreArchivo);
		BufferedWriter escritor = new BufferedWriter(escritorArchivo);
		" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 11 (face font-lock-type-face fontified nil) 11 12 (face font-lock-type-face c-type c-decl-id-start fontified nil) 12 13 (fontified nil) 13 14 (face font-lock-variable-name-face fontified nil) 14 15 (face font-lock-variable-name-face fontified nil) 15 16 (face font-lock-variable-name-face fontified nil) 16 17 (face font-lock-variable-name-face fontified nil) 17 18 (face font-lock-variable-name-face fontified nil) 18 19 (face font-lock-variable-name-face fontified nil) 19 20 (face font-lock-variable-name-face fontified nil) 20 21 (face font-lock-variable-name-face fontified nil) 21 22 (face font-lock-variable-name-face fontified nil) 22 23 (face font-lock-variable-name-face fontified nil) 23 24 (face font-lock-variable-name-face fontified nil) 24 25 (face font-lock-variable-name-face fontified nil) 25 26 (face font-lock-variable-name-face fontified nil) 26 27 (face font-lock-variable-name-face fontified nil) 27 28 (face font-lock-variable-name-face fontified nil) 28 30 (fontified nil) 30 31 (fontified nil) 31 34 (face font-lock-keyword-face fontified nil) 34 35 (fontified nil) 35 45 (face font-lock-type-face fontified nil) 45 46 (fontified nil) 46 47 (fontified nil) 47 48 (fontified nil) 48 49 (fontified nil) 49 50 (fontified nil) 50 51 (fontified nil) 51 52 (fontified nil) 52 53 (fontified nil) 53 54 (fontified nil) 54 55 (fontified nil) 55 56 (fontified nil) 56 57 (fontified nil) 57 58 (fontified nil) 58 59 (fontified nil) 59 60 (fontified nil) 60 61 (fontified nil rear-nonsticky t) 61 62 (fontified nil) 62 63 (fontified nil) 63 64 (fontified nil) 64 65 (face font-lock-type-face fontified nil) 65 66 (face font-lock-type-face fontified nil) 66 67 (face font-lock-type-face fontified nil) 67 68 (face font-lock-type-face fontified nil) 68 69 (face font-lock-type-face fontified nil) 69 70 (face font-lock-type-face fontified nil) 70 71 (face font-lock-type-face fontified nil) 71 72 (face font-lock-type-face fontified nil) 72 73 (face font-lock-type-face fontified nil) 73 74 (face font-lock-type-face fontified nil) 74 75 (face font-lock-type-face fontified nil) 75 76 (face font-lock-type-face fontified nil) 76 77 (face font-lock-type-face fontified nil) 77 78 (face font-lock-type-face c-type c-decl-id-start fontified nil) 78 79 (fontified nil) 79 80 (face font-lock-variable-name-face fontified nil) 80 81 (face font-lock-variable-name-face fontified nil) 81 82 (face font-lock-variable-name-face fontified nil) 82 83 (face font-lock-variable-name-face fontified nil) 83 84 (face font-lock-variable-name-face fontified nil) 84 85 (face font-lock-variable-name-face fontified nil) 85 86 (face font-lock-variable-name-face fontified nil) 86 87 (face font-lock-variable-name-face fontified nil) 87 88 (fontified nil) 88 89 (fontified nil) 89 90 (fontified nil) 90 91 (face font-lock-keyword-face fontified nil) 91 92 (face font-lock-keyword-face fontified nil) 92 93 (face font-lock-keyword-face fontified nil) 93 94 (fontified nil) 94 95 (face font-lock-type-face fontified nil) 95 96 (face font-lock-type-face fontified nil) 96 97 (face font-lock-type-face fontified nil) 97 98 (face font-lock-type-face fontified nil) 98 99 (face font-lock-type-face fontified nil) 99 100 (face font-lock-type-face fontified nil) 100 101 (face font-lock-type-face fontified nil) 101 102 (face font-lock-type-face fontified nil) 102 103 (face font-lock-type-face fontified nil) 103 104 (face font-lock-type-face fontified nil) 104 105 (face font-lock-type-face fontified nil) 105 106 (face font-lock-type-face fontified nil) 106 107 (face font-lock-type-face fontified nil) 107 108 (face font-lock-type-face fontified nil) 108 109 (fontified nil) 109 110 (fontified nil) 110 111 (fontified nil) 111 112 (fontified nil) 112 113 (fontified nil) 113 114 (fontified nil) 114 115 (fontified nil) 115 116 (fontified nil) 116 117 (fontified nil) 117 118 (fontified nil) 118 119 (fontified nil) 119 120 (fontified nil) 120 121 (fontified nil) 121 122 (fontified nil) 122 123 (fontified nil) 123 124 (fontified nil) 124 125 (fontified nil) 125 126 (fontified nil) 126 127 (fontified nil) 127 128 (fontified nil) 128 129 (fontified nil rear-nonsticky nil)) . 1192) (undo-tree-id771 . -2) (undo-tree-id772 . -2) (undo-tree-id773 . -2) (nil rear-nonsticky t 1320 . 1321)) (26109 10396 272362 886000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1279 . 1280) (nil fontified nil 1261 . 1280) (nil fontified nil 1247 . 1261) (nil fontified nil 1246 . 1247) (nil fontified nil 1243 . 1246) (nil fontified nil 1240 . 1243) (nil fontified nil 1232 . 1240) (nil fontified nil 1231 . 1232) (nil fontified nil 1230 . 1231) (nil fontified nil 1217 . 1230) (nil fontified nil 1198 . 1217) (nil fontified nil 1188 . 1198) (nil fontified nil 1187 . 1188) (nil fontified nil 1184 . 1187) (nil fontified nil 1181 . 1184) (nil fontified nil 1166 . 1181) (nil fontified nil 1165 . 1166) (nil fontified nil 1164 . 1165) (nil fontified nil 1155 . 1164) (nil fontified nil 1153 . 1155) (1153 . 1280) (t 26109 10558 421256 128000)) nil (26109 10664 833268 763000) 0 nil])
([nil nil ((1192 . 1197) (#("		" 0 1 (fontified t) 1 2 (fontified t)) . -1192) (undo-tree-id429 . -2) 1194) ((1192 . 1194) (#("	    " 0 5 (fontified t)) . 1192)) (26109 10395 414423 475000) 0 nil])
([nil nil ((#("		FileWriter escritorArchivo = new FileWriter(nombreArchivo);
		BufferedWriter escritor = new BufferedWriter(escritorArchivo);
" 0 2 (fontified t) 2 11 (face font-lock-type-face fontified t) 11 12 (face font-lock-type-face c-type c-decl-id-start fontified t) 12 13 (fontified t) 13 28 (face font-lock-variable-name-face fontified t) 28 31 (fontified t) 31 34 (face font-lock-keyword-face fontified t) 34 35 (fontified t) 35 45 (face font-lock-type-face fontified t) 45 64 (fontified t) 64 77 (face font-lock-type-face fontified t) 77 78 (face font-lock-type-face c-type c-decl-id-start fontified t) 78 79 (fontified t) 79 87 (face font-lock-variable-name-face fontified t) 87 90 (fontified t) 90 93 (face font-lock-keyword-face fontified t) 93 94 (fontified t) 94 108 (face font-lock-type-face fontified t) 108 126 (fontified t) 126 127 (rear-nonsticky t fontified t)) . 1153) (undo-tree-id13 . -127) (undo-tree-id14 . -62) (undo-tree-id15 . -62)) nil (26109 10671 687130 120000) 0 nil] [nil nil ((#("		FileWriter escritorArchivo = new FileWriter(nombreArchivo);
		BufferedWriter escritor = new BufferedWriter(escritorArchivo);
" 0 2 (fontified t) 2 11 (face font-lock-type-face fontified t) 11 12 (face font-lock-type-face c-type c-decl-id-start fontified t) 12 13 (fontified t) 13 28 (face font-lock-variable-name-face fontified t) 28 31 (fontified t) 31 34 (face font-lock-keyword-face fontified t) 34 35 (fontified t) 35 45 (face font-lock-type-face fontified t) 45 64 (fontified t) 64 77 (face font-lock-type-face fontified t) 77 78 (face font-lock-type-face c-type c-decl-id-start fontified t) 78 79 (fontified t) 79 87 (face font-lock-variable-name-face fontified t) 87 90 (fontified t) 90 93 (face font-lock-keyword-face fontified t) 93 94 (fontified t) 94 108 (face font-lock-type-face fontified t) 108 127 (fontified t)) . 1960) (undo-tree-id1 . -127) (undo-tree-id2 . -127) (undo-tree-id4 . -62)) ((1960 . 2087) (t 26109 10653 55850 173000)) (26109 10653 35876 189000) 0 nil])
([nil nil ((1257 . 1262) (#("		" 0 1 (fontified t) 1 2 (fontified t)) . 1257) (undo-tree-id428 . -1) 1258) ((1257 . 1259) (#("	    " 0 5 (fontified t)) . 1257)) (26109 10381 262857 812000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1152) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 1153) nil (26109 10671 687120 572000) 0 nil])
nil
([nil nil ((1193 . 1198) (#("	    " 0 5 (fontified nil)) . 1192) (undo-tree-id427 . -5) (1197 . 1198)) ((#("
" 0 1 (fontified nil)) . 1197) (1192 . 1197) (#("	    " 0 5 (fontified t)) . 1193)) (26109 10377 897127 489000) 0 nil])
([nil nil ((645 . 656) (t 26109 10671 702763 286000)) nil (26109 10829 298980 137000) 0 nil])
([nil nil ((#("	FileWriter escritorArchivo = new FileWriter(nombreArchivo);
		BufferedWriter escritor = new BufferedWriter(escritorArchivo);
        " 0 1 (fontified t c-is-sws t) 1 2 (face font-lock-type-face fontified t c-is-sws t) 2 10 (face font-lock-type-face fontified t) 10 11 (face font-lock-type-face c-type c-decl-id-start fontified t) 11 12 (fontified t) 12 13 (face font-lock-variable-name-face fontified t) 13 14 (face font-lock-variable-name-face fontified t) 14 15 (face font-lock-variable-name-face fontified t) 15 16 (face font-lock-variable-name-face fontified t) 16 17 (face font-lock-variable-name-face fontified t) 17 18 (face font-lock-variable-name-face fontified t) 18 19 (face font-lock-variable-name-face fontified t) 19 20 (face font-lock-variable-name-face fontified t) 20 21 (face font-lock-variable-name-face fontified t) 21 22 (face font-lock-variable-name-face fontified t) 22 23 (face font-lock-variable-name-face fontified t) 23 24 (face font-lock-variable-name-face fontified t) 24 25 (face font-lock-variable-name-face fontified t) 25 26 (face font-lock-variable-name-face fontified t) 26 27 (face font-lock-variable-name-face fontified t) 27 29 (fontified t) 29 30 (fontified t) 30 33 (face font-lock-keyword-face fontified t) 33 34 (fontified t) 34 44 (face font-lock-type-face fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t rear-nonsticky t) 60 61 (fontified t) 61 62 (fontified t c-is-sws t) 62 63 (fontified t c-is-sws t) 63 64 (face font-lock-type-face fontified t) 64 65 (face font-lock-type-face fontified t) 65 66 (face font-lock-type-face fontified t) 66 67 (face font-lock-type-face fontified t) 67 68 (face font-lock-type-face fontified t) 68 69 (face font-lock-type-face fontified t) 69 70 (face font-lock-type-face fontified t) 70 71 (face font-lock-type-face fontified t) 71 72 (face font-lock-type-face fontified t) 72 73 (face font-lock-type-face fontified t) 73 74 (face font-lock-type-face fontified t) 74 75 (face font-lock-type-face fontified t) 75 76 (face font-lock-type-face fontified t) 76 77 (face font-lock-type-face c-type c-decl-id-start fontified t) 77 78 (fontified t) 78 79 (face font-lock-variable-name-face fontified t) 79 80 (face font-lock-variable-name-face fontified t) 80 81 (face font-lock-variable-name-face fontified t) 81 82 (face font-lock-variable-name-face fontified t) 82 83 (face font-lock-variable-name-face fontified t) 83 84 (face font-lock-variable-name-face fontified t) 84 85 (face font-lock-variable-name-face fontified t) 85 86 (face font-lock-variable-name-face fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 90 (face font-lock-keyword-face fontified t) 90 91 (face font-lock-keyword-face fontified t) 91 92 (face font-lock-keyword-face fontified t) 92 93 (fontified t) 93 94 (face font-lock-type-face fontified t) 94 95 (face font-lock-type-face fontified t) 95 96 (face font-lock-type-face fontified t) 96 97 (face font-lock-type-face fontified t) 97 98 (face font-lock-type-face fontified t) 98 99 (face font-lock-type-face fontified t) 99 100 (face font-lock-type-face fontified t) 100 101 (face font-lock-type-face fontified t) 101 102 (face font-lock-type-face fontified t) 102 103 (face font-lock-type-face fontified t) 103 104 (face font-lock-type-face fontified t) 104 105 (face font-lock-type-face fontified t) 105 106 (face font-lock-type-face fontified t) 106 107 (face font-lock-type-face fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 116 (fontified t) 116 117 (fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 120 (fontified t) 120 121 (fontified t) 121 122 (fontified t) 122 123 (fontified t) 123 124 (fontified t) 124 125 (fontified t) 125 126 (fontified t) 126 134 (fontified nil)) . -2010) (undo-tree-id425 . -134) (#("	" 0 1 (fontified nil)) . 2144) (undo-tree-id426 . -1) (2136 . 2144) 2137) ((#("        " 0 8 (fontified nil)) . 2136) (2010 . 2145)) (26109 10377 682803 544000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -651) (undo-tree-id47 . -1) (#("d" 0 1 (fontified t)) . -652) (undo-tree-id48 . -1) (#("e" 0 1 (fontified t)) . -653) (undo-tree-id49 . -1) (#("r" 0 1 (fontified t)) . -654) (undo-tree-id50 . -1) (#("a" 0 1 (fontified t)) . -655) (undo-tree-id51 . -1) 656) nil (26109 10829 298978 674000) 0 nil])
([nil nil ((2246 . 2248) (#("	" 0 1 (fontified nil)) . -2246) (undo-tree-id423 . -1) (#("	" 0 1 (fontified t)) . 2247)) ((2246 . 2248) (#("		" 0 1 (fontified t) 1 2 (fontified t)) . 2246)) (26109 10377 407976 475000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -645) (undo-tree-id41 . -1) (#("&" 0 1 (fontified t)) . -646) (undo-tree-id42 . -1) (#("&" 0 1 (fontified t)) . -647) (undo-tree-id43 . -1) (#(" " 0 1 (fontified t)) . -648) (undo-tree-id44 . -1) (#("b" 0 1 (fontified t)) . -649) (undo-tree-id45 . -1) (#("a" 0 1 (fontified t)) . -650) (undo-tree-id46 . -1) 651) nil (26109 10829 298974 166000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2289 . 2290) (nil fontified nil 2289 . 2290) (nil fontified nil 2288 . 2289) (nil fontified nil 2287 . 2288) (nil fontified nil 2286 . 2287) (nil fontified nil 2285 . 2286) (nil fontified nil 2284 . 2285) (nil fontified nil 2283 . 2284) (nil fontified nil 2282 . 2283) (nil fontified nil 2281 . 2282) (nil fontified nil 2280 . 2281) (nil fontified nil 2279 . 2280) (nil fontified nil 2278 . 2279) (nil fontified nil 2277 . 2278) (nil fontified nil 2276 . 2277) (nil fontified nil 2275 . 2276) (nil fontified nil 2274 . 2275) (nil fontified nil 2273 . 2274) (nil fontified nil 2255 . 2273) (nil fontified nil 2246 . 2255) (2246 . 2290)) ((#("	        System.out.println(ord.reversa());
" 0 9 (fontified nil) 9 27 (fontified nil) 27 28 (fontified nil) 28 29 (fontified nil) 29 30 (fontified nil) 30 31 (fontified nil) 31 32 (fontified nil) 32 33 (fontified nil) 33 34 (fontified nil) 34 35 (fontified nil) 35 36 (fontified nil) 36 37 (fontified nil) 37 38 (fontified nil) 38 39 (fontified nil) 39 40 (fontified nil) 40 41 (fontified nil) 41 42 (fontified nil) 42 43 (fontified nil) 43 44 (fontified nil rear-nonsticky nil)) . 2246) (undo-tree-id764 . -44) (undo-tree-id765 . -44) (undo-tree-id766 . -44) (undo-tree-id767 . -44) (undo-tree-id768 . -44) (undo-tree-id769 . -44) (undo-tree-id770 . -44) (nil fontified t 2246 . 2255) (nil fontified t 2255 . 2273) (nil fontified t 2273 . 2274) (nil fontified t 2274 . 2275) (nil fontified t 2275 . 2276) (nil fontified t 2276 . 2277) (nil fontified t 2277 . 2278) (nil fontified t 2278 . 2279) (nil fontified t 2279 . 2280) (nil fontified t 2280 . 2281) (nil fontified t 2281 . 2282) (nil fontified t 2282 . 2283) (nil fontified t 2283 . 2284) (nil fontified t 2284 . 2285) (nil fontified t 2285 . 2286) (nil fontified t 2286 . 2287) (nil fontified t 2287 . 2288) (nil fontified t 2288 . 2289) (nil rear-nonsticky t 2289 . 2290)) (26109 10377 21829 210000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2239 . 2240) (nil fontified nil 2196 . 2240) (2196 . 2240)) nil (26109 10829 298969 788000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2399 . 2400) (nil fontified nil 2399 . 2400) (nil fontified nil 2398 . 2399) (nil fontified nil 2397 . 2398) (nil fontified nil 2396 . 2397) (nil fontified nil 2395 . 2396) (nil fontified nil 2394 . 2395) (nil fontified nil 2393 . 2394) (nil fontified nil 2392 . 2393) (nil fontified nil 2391 . 2392) (nil fontified nil 2390 . 2391) (nil fontified nil 2389 . 2390) (nil fontified nil 2388 . 2389) (nil fontified nil 2387 . 2388) (nil fontified nil 2386 . 2387) (nil fontified nil 2385 . 2386) (nil fontified nil 2384 . 2385) (nil fontified nil 2383 . 2384) (nil fontified nil 2382 . 2383) (nil fontified nil 2381 . 2382) (nil fontified nil 2380 . 2381) (nil fontified nil 2379 . 2380) (nil fontified nil 2378 . 2379) (nil fontified nil 2377 . 2378) (nil fontified nil 2376 . 2377) (nil fontified nil 2375 . 2376) (nil fontified nil 2374 . 2375) (nil fontified nil 2373 . 2374) (nil fontified nil 2372 . 2373) (nil fontified nil 2371 . 2372) (nil fontified nil 2370 . 2371) (nil fontified nil 2369 . 2370) (nil fontified nil 2368 . 2369) (nil fontified nil 2367 . 2368) (nil fontified nil 2365 . 2367) (nil fontified nil 2364 . 2365) (nil fontified nil 2357 . 2364) (nil fontified nil 2347 . 2357) (nil fontified nil 2346 . 2347) (nil fontified nil 2344 . 2346) (nil fontified nil 2343 . 2344) (nil fontified nil 2342 . 2343) (nil fontified nil 2341 . 2342) (nil fontified nil 2340 . 2341) (nil fontified nil 2339 . 2340) (nil fontified nil 2338 . 2339) (nil fontified nil 2337 . 2338) (nil fontified nil 2336 . 2337) (nil fontified nil 2335 . 2336) (nil fontified nil 2334 . 2335) (nil fontified nil 2333 . 2334) (nil fontified nil 2332 . 2333) (nil fontified nil 2331 . 2332) (nil fontified nil 2330 . 2331) (nil fontified nil 2329 . 2330) (nil fontified nil 2328 . 2329) (nil fontified nil 2327 . 2328) (nil fontified nil 2326 . 2327) (nil fontified nil 2324 . 2326) (nil fontified nil 2323 . 2324) (nil fontified nil 2322 . 2323) (nil fontified nil 2321 . 2322) (nil fontified nil 2320 . 2321) (nil fontified nil 2319 . 2320) (nil fontified nil 2318 . 2319) (nil fontified nil 2317 . 2318) (nil fontified nil 2316 . 2317) (nil fontified nil 2315 . 2316) (nil fontified nil 2314 . 2315) (nil fontified nil 2313 . 2314) (nil fontified nil 2312 . 2313) (nil fontified nil 2311 . 2312) (nil fontified nil 2310 . 2311) (nil fontified nil 2309 . 2310) (nil fontified nil 2308 . 2309) (nil fontified nil 2307 . 2308) (nil fontified nil 2306 . 2307) (nil fontified nil 2305 . 2306) (nil fontified nil 2304 . 2305) (nil fontified nil 2303 . 2304) (nil fontified nil 2302 . 2303) (nil fontified nil 2301 . 2302) (nil fontified nil 2300 . 2301) (nil fontified nil 2299 . 2300) (nil fontified nil 2298 . 2299) (nil fontified nil 2297 . 2298) (nil fontified nil 2296 . 2297) (nil fontified nil 2295 . 2296) (nil fontified nil 2294 . 2295) (nil fontified nil 2293 . 2294) (nil fontified nil 2292 . 2293) (nil fontified nil 2291 . 2292) (nil fontified nil 2290 . 2291) (2290 . 2400)) ((#("		escritor.write(ord.toString());
		escritor.close();
		System.out.println(\"Archivo guardado correctamente\");
" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil) 17 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil) 21 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil) 24 25 (fontified nil) 25 26 (fontified nil) 26 27 (fontified nil) 27 28 (fontified nil) 28 29 (fontified nil) 29 30 (fontified nil) 30 31 (fontified nil) 31 32 (fontified nil) 32 33 (fontified nil) 33 34 (fontified nil) 34 35 (fontified nil) 35 36 (fontified nil) 36 37 (fontified nil) 37 38 (fontified nil) 38 39 (fontified nil) 39 40 (fontified nil) 40 41 (fontified nil) 41 42 (fontified nil) 42 43 (fontified nil) 43 44 (fontified nil) 44 45 (fontified nil) 45 46 (fontified nil) 46 47 (fontified nil) 47 48 (fontified nil) 48 49 (fontified nil) 49 50 (fontified nil) 50 51 (fontified nil) 51 52 (fontified nil) 52 53 (fontified nil) 53 54 (fontified nil) 54 55 (fontified nil) 55 56 (fontified nil) 56 57 (fontified nil) 57 67 (fontified nil) 67 74 (fontified nil) 74 75 (fontified nil) 75 77 (face font-lock-string-face fontified nil) 77 78 (face font-lock-string-face fontified nil) 78 79 (face font-lock-string-face fontified nil) 79 80 (face font-lock-string-face fontified nil) 80 81 (face font-lock-string-face fontified nil) 81 82 (face font-lock-string-face fontified nil) 82 83 (face font-lock-string-face fontified nil) 83 84 (face font-lock-string-face fontified nil) 84 85 (face font-lock-string-face fontified nil) 85 86 (face font-lock-string-face fontified nil) 86 87 (face font-lock-string-face fontified nil) 87 88 (face font-lock-string-face fontified nil) 88 89 (face font-lock-string-face fontified nil) 89 90 (face font-lock-string-face fontified nil) 90 91 (face font-lock-string-face fontified nil) 91 92 (face font-lock-string-face fontified nil) 92 93 (face font-lock-string-face fontified nil) 93 94 (face font-lock-string-face fontified nil) 94 95 (face font-lock-string-face fontified nil) 95 96 (face font-lock-string-face fontified nil) 96 97 (face font-lock-string-face fontified nil) 97 98 (face font-lock-string-face fontified nil) 98 99 (face font-lock-string-face fontified nil) 99 100 (face font-lock-string-face fontified nil) 100 101 (face font-lock-string-face fontified nil) 101 102 (face font-lock-string-face fontified nil) 102 103 (face font-lock-string-face fontified nil) 103 104 (face font-lock-string-face fontified nil) 104 105 (face font-lock-string-face fontified nil) 105 106 (face font-lock-string-face fontified nil) 106 107 (face font-lock-string-face fontified nil) 107 108 (fontified nil) 108 109 (fontified nil) 109 110 (fontified nil rear-nonsticky nil)) . 2290) (undo-tree-id760 . -20) (undo-tree-id761 . -20) (undo-tree-id762 . -20) (undo-tree-id763 . -20) (nil rear-nonsticky t 2399 . 2400)) (26109 10376 829862 532000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2476 . 2477) (nil fontified nil 2474 . 2477) (nil fontified nil 2442 . 2474) (nil fontified nil 2401 . 2442) (nil fontified nil 2367 . 2401) (nil fontified nil 2348 . 2367) (nil fontified nil 2334 . 2348) (nil fontified nil 2333 . 2334) (nil fontified nil 2330 . 2333) (nil fontified nil 2327 . 2330) (nil fontified nil 2319 . 2327) (nil fontified nil 2318 . 2319) (nil fontified nil 2317 . 2318) (nil fontified nil 2304 . 2317) (nil fontified nil 2285 . 2304) (nil fontified nil 2275 . 2285) (nil fontified nil 2274 . 2275) (nil fontified nil 2271 . 2274) (nil fontified nil 2268 . 2271) (nil fontified nil 2253 . 2268) (nil fontified nil 2252 . 2253) (nil fontified nil 2251 . 2252) (nil fontified nil 2242 . 2251) (nil fontified nil 2240 . 2242) (2240 . 2477)) nil (26109 10829 298968 155000) 0 nil])
([nil nil ((2310 . 2318)) ((#(".reverds" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . 2310) (undo-tree-id757 . -8) (undo-tree-id758 . -7) (undo-tree-id759 . -8)) (26109 10376 645375 670000) 0 nil])
([nil nil ((2196 . 2197)) nil (26109 10829 298964 598000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2317) (undo-tree-id422 . -1) 2318) ((2317 . 2318)) (26109 10376 491752 682000) 0 nil])
([nil nil ((2196 . 2198)) nil (26109 10829 298964 77000) 0 nil])
([nil nil ((2317 . 2318)) ((#("s" 0 1 (fontified t)) . 2317) (undo-tree-id756 . -1)) (26109 10376 265669 355000) 0 nil])
([nil nil ((2198 . 2204)) nil (26109 10829 298963 476000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2317) (undo-tree-id421 . -1) 2318) ((2317 . 2318)) (26109 10376 66119 701000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2203) (undo-tree-id40 . -1) 2204) nil (26109 10829 298962 825000) 0 nil])
([nil nil ((2317 . 2318)) ((#("a" 0 1 (fontified t)) . 2317) (undo-tree-id754 . -1) (undo-tree-id755 . -1)) (26109 10375 880322 84000) 0 nil])
([nil nil ((2203 . 2205)) nil (26109 10829 298961 582000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2316) (undo-tree-id419 . -1) (#("a" 0 1 (fontified t)) . -2317) (undo-tree-id420 . -1) 2318) ((2316 . 2318)) (26109 10375 695910 73000) 0 nil])
([nil nil ((2204 . 2210)) nil (26109 10829 298961 21000) 0 nil])
([nil nil ((2316 . 2318)) ((#("sa" 0 1 (fontified t) 1 2 (fontified t)) . 2316) (undo-tree-id752 . -2) (undo-tree-id753 . -2)) (26109 10375 498082 965000) 0 nil])
([nil nil ((2211 . 2225)) nil (26109 10829 298960 310000) 0 nil])
([nil nil ((2318 . 2320)) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 2318)) (26109 10375 313586 44000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2223) (undo-tree-id38 . -1) (#("e" 0 1 (fontified t)) . -2224) (undo-tree-id39 . -1) 2225) nil (26109 10829 298959 408000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2411) (undo-tree-id404 . -1) (undo-tree-id406 . -1) (#(" " 0 1 (fontified t)) . -2412) (undo-tree-id408 . -1) (undo-tree-id410 . -1) (#(" " 0 1 (fontified t)) . -2413) (undo-tree-id411 . -1) (#(" " 0 1 (fontified t)) . -2414) (undo-tree-id413 . -1) (#(" " 0 1 (fontified t)) . -2415) (undo-tree-id414 . -1) (#(" " 0 1 (fontified t)) . -2416) (undo-tree-id415 . -1) (#(" " 0 1 (fontified t)) . -2417) (undo-tree-id416 . -1) (#(" " 0 1 (fontified nil)) . -2418) (undo-tree-id417 . -1) (#("	" 0 1 (fontified nil)) . 2419) (undo-tree-id418 . -1) (2411 . 2419) 2412) ((#("        " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 2411) (2411 . 2420)) (26109 10374 737876 215000) 0 nil])
([nil nil ((2223 . 2225)) nil (26109 10829 298957 495000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -2409) (undo-tree-id316 . -1) (undo-tree-id318 . -1) (undo-tree-id320 . -1) (undo-tree-id322 . -1) (undo-tree-id324 . -1) (undo-tree-id326 . -1) (undo-tree-id328 . -1) (#(" " 0 1 (fontified t)) . -2410) (undo-tree-id330 . -1) (undo-tree-id332 . -1) (undo-tree-id334 . -1) (undo-tree-id336 . -1) (undo-tree-id338 . -1) (undo-tree-id340 . -1) (#(" " 0 1 (fontified t)) . -2411) (undo-tree-id342 . -1) (undo-tree-id344 . -1) (undo-tree-id346 . -1) (undo-tree-id348 . -1) (undo-tree-id350 . -1) (undo-tree-id352 . -1) (#(" " 0 1 (fontified t)) . -2412) (undo-tree-id353 . -1) (undo-tree-id355 . -1) (undo-tree-id357 . -1) (undo-tree-id359 . -1) (undo-tree-id361 . -1) (#(" " 0 1 (fontified t)) . -2413) (undo-tree-id363 . -1) (undo-tree-id365 . -1) (undo-tree-id367 . -1) (undo-tree-id369 . -1) (undo-tree-id371 . -1) (#(" " 0 1 (fontified t)) . -2414) (undo-tree-id372 . -1) (undo-tree-id374 . -1) (undo-tree-id376 . -1) (undo-tree-id378 . -1) (#(" " 0 1 (fontified t)) . -2415) (undo-tree-id380 . -1) (undo-tree-id382 . -1) (undo-tree-id384 . -1) (undo-tree-id386 . -1) (#(" " 0 1 (fontified t)) . -2416) (undo-tree-id387 . -1) (undo-tree-id389 . -1) (undo-tree-id391 . -1) (#(" " 0 1 (fontified nil)) . -2417) (undo-tree-id393 . -1) (undo-tree-id395 . -1) (undo-tree-id397 . -1) (#("	" 0 1 (fontified nil)) . 2418) (undo-tree-id398 . -1) (undo-tree-id400 . -1) (undo-tree-id402 . -1) (2410 . 2418) 2411) ((#("        " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 2410) (2409 . 2419)) (26109 10374 529249 781000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -2223) (undo-tree-id36 . -1) (#("e" 0 1 (fontified t)) . -2224) (undo-tree-id37 . -1) 2225) nil (26109 10829 298956 402000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2141) (undo-tree-id444 . -1) (#("e" 0 1 (fontified t)) . -2142) (undo-tree-id445 . -1) (#("q" 0 1 (fontified t)) . -2143) (undo-tree-id446 . -1) (#("u" 0 1 (fontified t)) . -2144) (undo-tree-id447 . -1) (#("a" 0 1 (fontified t)) . -2145) (undo-tree-id448 . -1) (#("l" 0 1 (fontified t)) . -2146) (undo-tree-id449 . -1) (#("s" 0 1 (fontified t)) . -2147) (undo-tree-id450 . -1) (#("(" 0 1 (fontified t)) . -2148) (undo-tree-id451 . -1) (#("\"" 0 1 (face font-lock-warning-face fontified t)) . -2149) (undo-tree-id452 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -2150) (undo-tree-id453 . -1) (#(")" 0 1 (fontified t)) . -2151) (undo-tree-id454 . -1) 2152 (t 26109 9090 593931 979000)) ((2141 . 2152)) (26109 10374 332043 320000) 0 nil])
([nil nil ((2223 . 2231)) nil (26109 10829 298952 124000) 0 nil])
([nil nil ((2141 . 2147)) ((#(" == nu" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 2141) (undo-tree-id748 . -6) (undo-tree-id749 . -6) (undo-tree-id750 . -6) (undo-tree-id751 . -6)) (26109 10374 152027 744000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2221) (undo-tree-id26 . -1) (#("n" 0 1 (fontified t)) . -2222) (undo-tree-id27 . -1) (#("e" 0 1 (fontified t)) . -2223) (undo-tree-id28 . -1) (#("w" 0 1 (face font-lock-keyword-face fontified t)) . -2224) (undo-tree-id29 . -1) (#(" " 0 1 (fontified t)) . -2225) (undo-tree-id30 . -1) (#("L" 0 1 (face font-lock-type-face fontified t)) . -2226) (undo-tree-id31 . -1) (#("i" 0 1 (face font-lock-type-face fontified t)) . -2227) (undo-tree-id32 . -1) (#("s" 0 1 (face font-lock-type-face fontified t)) . -2228) (undo-tree-id33 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -2229) (undo-tree-id34 . -1) (#("a" 0 1 (face font-lock-type-face fontified t)) . -2230) (undo-tree-id35 . -1) 2231) nil (26109 10829 298949 740000) 0 nil])
([nil nil ((2147 . 2149)) ((#(";;" 0 1 (fontified t) 1 2 (fontified t)) . 2147) (undo-tree-id746 . -2) (undo-tree-id747 . -2)) (26109 10373 965980 446000) 0 nil])
([nil nil ((2221 . 2233)) nil (26109 10829 298942 877000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -2147) (undo-tree-id441 . -1) (#(";" 0 1 (fontified t)) . -2148) (undo-tree-id443 . -1) 2149) ((2147 . 2149)) (26109 10373 540038 356000) 0 nil])
([nil nil ((2233 . 2234)) nil (26109 10829 298942 286000) 0 nil])
([nil nil ((2147 . 2149)) ((#("ll" 0 1 (face font-lock-constant-face fontified t) 1 2 (face font-lock-constant-face fontified t)) . 2147)) (26109 10373 313855 882000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -2233) (undo-tree-id25 . -1) 2234) nil (26109 10829 298941 24000) 0 nil])
([nil nil ((#(" if(bandera == null){			        
		System.out.println(ord.toString());" 0 1 (fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (face font-lock-constant-face fontified t) 16 17 (face font-lock-constant-face fontified t) 17 18 (face font-lock-constant-face fontified t) 18 19 (face font-lock-constant-face fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 24 (fontified t) 24 32 (fontified t) 32 33 (fontified t) 33 70 (fontified t)) . 2130) (undo-tree-id540 . -70) (undo-tree-id541 . -70) (t 26109 9128 28416 999000)) ((2130 . 2200)) (26109 10373 105514 263000) 0 nil])
([nil nil ((2233 . 2235)) nil (26109 10829 298939 110000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2120) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (#(" " 0 1 (fontified t)) . -2121) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (#(" " 0 1 (fontified t)) . -2122) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (#(" " 0 1 (fontified t)) . -2123) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (#("}" 0 1 (fontified t)) . -2124) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (#(" " 0 1 (fontified t)) . -2125) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (#("e" 0 1 (fontified t)) . -2126) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (#("l" 0 1 (fontified t)) . -2127) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (#("s" 0 1 (fontified t)) . -2128) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -2129) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) 2130) ((2120 . 2130)) (26109 10372 821706 812000) 0 nil])
([nil nil ((2235 . 2236)) nil (26109 10829 298938 369000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2118) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (#(" " 0 1 (fontified t)) . -2119) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (#(" " 0 1 (fontified t)) . -2120) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (#(" " 0 1 (fontified t)) . -2121) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (#(" " 0 1 (fontified t)) . -2122) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (#(" " 0 1 (fontified t)) . -2123) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (#(" " 0 1 (fontified t)) . -2124) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (#(" " 0 1 (fontified t)) . -2125) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (#(" " 0 1 (fontified nil)) . -2126) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (#("	" 0 1 (fontified nil)) . 2127) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (2119 . 2127) 2120) ((#("        " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 2119) (2118 . 2128)) (26109 10372 579756 537000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -2425) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("r" 0 1 (fontified t)) . -2426) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("d" 0 1 (fontified t)) . -2427) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 2428) nil (26109 10829 298935 844000) 0 nil])
([nil nil ((2331 . 2337)) ((#("
	    " 0 1 (fontified t) 1 6 (fontified t)) . 2331)) (26109 10372 367814 716000) 0 nil])
([nil nil ((2425 . 2432)) nil (26109 10829 298918 381000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2404 . 2405) (nil fontified nil 2368 . 2405) (nil fontified nil 2367 . 2368) (nil fontified nil 2359 . 2367) (nil fontified nil 2357 . 2359) (nil fontified nil 2356 . 2357) (nil fontified nil 2355 . 2356) (nil fontified nil 2354 . 2355) (nil fontified nil 2353 . 2354) (nil fontified nil 2352 . 2353) (nil fontified nil 2351 . 2352) (nil fontified nil 2350 . 2351) (nil fontified nil 2349 . 2350) (nil fontified nil 2348 . 2349) (nil fontified nil 2347 . 2348) (nil fontified nil 2346 . 2347) (nil fontified nil 2345 . 2346) (nil fontified nil 2344 . 2345) (nil fontified nil 2343 . 2344) (nil fontified nil 2342 . 2343) (nil fontified nil 2341 . 2342) (nil fontified nil 2340 . 2341) (nil fontified nil 2339 . 2340) (nil fontified nil 2338 . 2339) (nil fontified nil 2337 . 2338) (nil fontified nil 2336 . 2337) (nil fontified nil 2335 . 2336) (nil fontified nil 2331 . 2335) (2331 . 2405)) ((#("else if(bandera == null){			        
		System.out.println(ord.toString());" 0 1 (face font-lock-keyword-face fontified nil c-is-sws t) 1 4 (face font-lock-keyword-face fontified nil) 4 5 (fontified nil) 5 6 (face font-lock-keyword-face fontified nil) 6 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil) 17 18 (fontified nil) 18 19 (fontified nil) 19 20 (face font-lock-constant-face fontified nil) 20 21 (face font-lock-constant-face fontified nil) 21 22 (face font-lock-constant-face fontified nil) 22 23 (face font-lock-constant-face fontified nil) 23 24 (fontified nil) 24 25 (fontified nil) 25 26 (fontified nil) 26 28 (fontified nil) 28 36 (fontified nil) 36 37 (fontified nil) 37 58 (fontified nil) 58 73 (fontified nil) 73 74 (fontified nil rear-nonsticky nil)) . 2331) (undo-tree-id744 . -4) (undo-tree-id745 . -25) (nil rear-nonsticky t 2404 . 2405)) (26109 10372 155856 236000) 0 nil])
([nil nil ((2196 . 2197) (t 26109 10829 318158 122000)) nil (26109 10874 498475 598000) 0 nil])
([nil nil ((2331 . 2332)) ((#(" " 0 1 (fontified t c-in-sws t c-is-sws t)) . 2331)) (26109 10371 963786 402000) 0 nil])
([nil nil ((2197 . 2198)) nil (26109 10874 498474 536000) 0 nil])
([nil nil ((#(" if(bandera == null){" 0 1 (fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (face font-lock-constant-face fontified t) 16 17 (face font-lock-constant-face fontified t) 17 18 (face font-lock-constant-face fontified t) 18 19 (face font-lock-constant-face fontified t) 19 20 (fontified t) 20 21 (fontified t)) . -2336) (undo-tree-id479 . -21) 2357) ((2336 . 2357)) (26109 10371 705679 176000) 0 nil])
([nil nil ((2526 . 2527)) nil (26109 10874 498473 144000) 0 nil])
([nil nil ((#("System.out.println(ord.reversa());
" 0 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t rear-nonsticky t)) . -2170) (undo-tree-id477 . -35) (undo-tree-id478 . -35) 2205) ((2170 . 2205)) (26109 10371 524284 234000) 0 nil])
([nil nil ((#("		" 0 2 (c-in-sws t face font-lock-comment-face fontified nil)) . 2524) (undo-tree-id52 . -2) (2527 . 2528)) nil (26109 10874 498469 637000) 0 nil])
([nil nil ((2161 . 2163) (#("	        		" 0 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . 2161) (undo-tree-id475 . -9) (undo-tree-id476 . -9)) ((2161 . 2172) (#("		" 0 2 (fontified t)) . 2161) (undo-tree-id742 . -2) (undo-tree-id743 . -2)) (26109 10371 333010 135000) 0 nil])
([nil nil ((#("/*		Lista<String> inversa = ord.reversa();
	        System.out.println(ord.reversa());
		FileWriter escritorArchivo = new FileWriter(nombreArchivo);
		BufferedWriter escritor = new BufferedWriter(escritorArchivo);
		escritor.write(inversa.toString());
		escritor.close();
		System.out.println(\"Archivo guardado correctamente\");
*/
" 0 1 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 2 4 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 4 5 (c-in-sws t face font-lock-comment-face fontified t) 5 6 (c-in-sws t face font-lock-comment-face fontified t) 6 7 (c-in-sws t face font-lock-comment-face fontified t) 7 8 (c-in-sws t face font-lock-comment-face fontified t) 8 9 (c-in-sws t face font-lock-comment-face fontified t) 9 10 (c-in-sws t face font-lock-comment-face c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 10 11 (c-in-sws t face font-lock-comment-face fontified t) 11 12 (c-in-sws t face font-lock-comment-face fontified t) 12 13 (c-in-sws t face font-lock-comment-face fontified t) 13 14 (c-in-sws t face font-lock-comment-face fontified t) 14 15 (c-in-sws t face font-lock-comment-face fontified t) 15 16 (c-in-sws t face font-lock-comment-face fontified t) 16 17 (c-in-sws t face font-lock-comment-face category c->-as-paren-syntax fontified t) 17 18 (c-in-sws t face font-lock-comment-face fontified t) 18 19 (c-in-sws t face font-lock-comment-face fontified t) 19 20 (c-in-sws t face font-lock-comment-face fontified t) 20 21 (c-in-sws t face font-lock-comment-face fontified t) 21 22 (c-in-sws t face font-lock-comment-face fontified t) 22 23 (c-in-sws t face font-lock-comment-face fontified t) 23 24 (c-in-sws t face font-lock-comment-face fontified t) 24 25 (c-in-sws t face font-lock-comment-face fontified t) 25 26 (c-in-sws t face font-lock-comment-face fontified t) 26 27 (c-in-sws t face font-lock-comment-face fontified t) 27 28 (c-in-sws t face font-lock-comment-face fontified t) 28 29 (c-in-sws t face font-lock-comment-face fontified t) 29 30 (c-in-sws t face font-lock-comment-face fontified t) 30 31 (c-in-sws t face font-lock-comment-face fontified t) 31 32 (c-in-sws t face font-lock-comment-face fontified t) 32 33 (c-in-sws t face font-lock-comment-face fontified t) 33 34 (c-in-sws t face font-lock-comment-face fontified t) 34 35 (c-in-sws t face font-lock-comment-face fontified t) 35 36 (c-in-sws t face font-lock-comment-face fontified t) 36 37 (c-in-sws t face font-lock-comment-face fontified t) 37 38 (c-in-sws t face font-lock-comment-face fontified t) 38 39 (c-in-sws t face font-lock-comment-face fontified t) 39 40 (c-in-sws t face font-lock-comment-face fontified t) 40 41 (c-in-sws t face font-lock-comment-face fontified t) 41 42 (c-in-sws t face font-lock-comment-face fontified t) 42 43 (c-in-sws t face font-lock-comment-face fontified t) 43 52 (c-in-sws t face font-lock-comment-face fontified t) 52 63 (c-in-sws t face font-lock-comment-face fontified t) 63 70 (c-in-sws t face font-lock-comment-face fontified t) 70 71 (c-in-sws t face font-lock-comment-face fontified t) 71 86 (c-in-sws t face font-lock-comment-face fontified t) 86 87 (c-in-sws t face font-lock-comment-face fontified t rear-nonsticky t) 87 89 (c-in-sws t face font-lock-comment-face fontified t) 89 98 (c-in-sws t face font-lock-comment-face fontified t) 98 99 (c-in-sws t face font-lock-comment-face fontified t c-type c-decl-id-start) 99 100 (c-in-sws t face font-lock-comment-face fontified t) 100 115 (c-in-sws t face font-lock-comment-face fontified t) 115 118 (c-in-sws t face font-lock-comment-face fontified t) 118 121 (c-in-sws t face font-lock-comment-face fontified t) 121 122 (c-in-sws t face font-lock-comment-face fontified t) 122 132 (c-in-sws t face font-lock-comment-face fontified t) 132 151 (c-in-sws t face font-lock-comment-face fontified t) 151 164 (c-in-sws t face font-lock-comment-face fontified t) 164 165 (c-in-sws t face font-lock-comment-face fontified t c-type c-decl-id-start) 165 166 (c-in-sws t face font-lock-comment-face fontified t) 166 174 (c-in-sws t face font-lock-comment-face fontified t) 174 177 (c-in-sws t face font-lock-comment-face fontified t) 177 180 (c-in-sws t face font-lock-comment-face fontified t) 180 181 (c-in-sws t face font-lock-comment-face fontified t) 181 195 (c-in-sws t face font-lock-comment-face fontified t) 195 214 (c-in-sws t face font-lock-comment-face fontified t) 214 231 (c-in-sws t face font-lock-comment-face fontified t) 231 232 (c-in-sws t face font-lock-comment-face fontified t) 232 233 (c-in-sws t face font-lock-comment-face fontified t) 233 234 (c-in-sws t face font-lock-comment-face fontified t) 234 235 (c-in-sws t face font-lock-comment-face fontified t) 235 236 (c-in-sws t face font-lock-comment-face fontified t) 236 237 (c-in-sws t face font-lock-comment-face fontified t) 237 238 (c-in-sws t face font-lock-comment-face fontified t) 238 250 (c-in-sws t face font-lock-comment-face fontified t) 250 251 (c-in-sws t face font-lock-comment-face fontified t) 251 252 (c-in-sws t face font-lock-comment-face fontified t) 252 293 (c-in-sws t face font-lock-comment-face fontified t) 293 325 (c-in-sws t face font-lock-comment-face fontified t) 325 327 (c-in-sws t face font-lock-comment-face fontified t) 327 328 (c-in-sws t face font-lock-comment-face fontified t rear-nonsticky t) 328 329 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 329 330 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 330 331 (c-is-sws t fontified t)) . 2196) (undo-tree-id62 . -331) (undo-tree-id63 . -328) (undo-tree-id64 . -87) (t 26109 10874 515381 724000)) nil (26109 10981 577017 958000) 0 nil])
([nil nil ((2162 . 2164) (#("		" 0 2 (fontified nil)) . 2161) (undo-tree-id474 . -2) (2163 . 2164)) ((#("
" 0 1 (fontified nil)) . 2163) (2161 . 2163) (#("		" 0 1 (fontified t) 1 2 (fontified t)) . 2162)) (26109 10371 161719 243000) 0 nil])
([nil nil ((2196 . 2197)) nil (26109 10981 577015 664000) 0 nil])
([nil nil ((2161 . 2163)) ((#("		" 0 1 (fontified t) 1 2 (fontified t)) . 2161) (undo-tree-id733 . -2) (undo-tree-id734 . -2) (undo-tree-id735 . -2) (undo-tree-id736 . -2) (undo-tree-id737 . -2) (undo-tree-id738 . -2) (undo-tree-id739 . -2) (undo-tree-id740 . -2) (undo-tree-id741 . -2)) (26109 10370 992053 947000) 0 nil])
([nil nil ((2196 . 2198)) nil (26109 10981 577015 113000) 0 nil])
([nil nil ((2163 . 2170)) ((#("Lista<>" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 6 7 (c-type c-decl-id-start category c->-as-paren-syntax fontified t)) . 2163) (undo-tree-id725 . -6) (undo-tree-id726 . -7) (undo-tree-id727 . -7) (undo-tree-id728 . -7) (undo-tree-id729 . -7) (undo-tree-id730 . -7) (undo-tree-id731 . -6) (undo-tree-id732 . -6)) (26109 10370 823841 291000) 0 nil])
([nil nil ((2198 . 2200)) nil (26109 10981 577014 622000) 0 nil])
([nil nil ((2169 . 2176)) ((#("String " 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face fontified t) 6 7 (fontified t)) . 2169) (undo-tree-id723 . -7) (undo-tree-id724 . -7)) (26109 10370 659613 428000) 0 nil])
([nil nil ((2200 . 2202)) nil (26109 10981 577014 111000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2175) (undo-tree-id473 . -1) 2176) ((2175 . 2176)) (26109 10370 488277 620000) 0 nil])
([nil nil ((#("a" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -2201) (undo-tree-id61 . -1) 2202) nil (26109 10981 577013 320000) 0 nil])
([nil nil ((2176 . 2179)) ((#(" - " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 2176) (undo-tree-id718 . -3) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -3)) (26109 10370 326354 962000) 0 nil])
([nil nil ((2201 . 2213)) nil (26109 10981 577011 777000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -2177) (undo-tree-id471 . -1) (#(" " 0 1 (fontified t)) . -2178) (undo-tree-id472 . -1) 2179) ((2177 . 2179)) (26109 10370 159787 59000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-comment-face fontified t)) . -2210) (undo-tree-id58 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -2211) (undo-tree-id59 . -1) (#("q" 0 1 (face font-lock-comment-face fontified t)) . -2212) (undo-tree-id60 . -1) 2213) nil (26109 10981 577010 554000) 0 nil])
([nil nil ((2177 . 2178)) ((#(" " 0 1 (fontified t)) . 2177) (undo-tree-id716 . -1) (undo-tree-id717 . -1)) (26109 10369 981621 898000) 0 nil])
([nil nil ((2210 . 2217)) nil (26109 10981 577006 316000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2177) (undo-tree-id470 . -1) 2178) ((2177 . 2178)) (26109 10369 834140 175000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-comment-face fontified t)) . -2216) (undo-tree-id57 . -1) 2217) nil (26109 10981 577005 635000) 0 nil])
([nil nil ((2177 . 2179)) ((#("= " 0 1 (fontified t) 1 2 (fontified t)) . 2177) (undo-tree-id713 . -2) (undo-tree-id714 . -2) (undo-tree-id715 . -2)) (26109 10369 660268 538000) 0 nil])
([nil nil ((2216 . 2218)) nil (26109 10981 577004 483000) 0 nil])
([nil nil ((2177 . 2185)) ((#("reversa " 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (face font-lock-variable-name-face fontified t) 6 7 (face font-lock-variable-name-face fontified t) 7 8 (fontified t)) . 2177)) (26109 10369 495912 985000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -2217) (undo-tree-id56 . -1) 2218) nil (26109 10981 577003 852000) 0 nil])
([nil nil ((2187 . 2198)) ((#("ord.reversa" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . 2187) (undo-tree-id710 . -11) (undo-tree-id711 . -11) (undo-tree-id712 . -11)) (26109 10369 324078 880000) 0 nil])
([nil nil ((2217 . 2223)) nil (26109 10981 577002 429000) 0 nil])
([nil nil ((2198 . 2200)) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 2198) (undo-tree-id708 . -2) (undo-tree-id709 . -2)) (26109 10369 162050 953000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-comment-face fontified t)) . -2222) (undo-tree-id55 . -1) 2223) nil (26109 10981 577001 658000) 0 nil])
([nil nil ((2200 . 2201)) ((#(";" 0 1 (fontified t)) . 2200)) (26109 10368 978037 547000) 0 nil])
([nil nil ((2222 . 2243)) nil (26109 10981 577000 275000) 0 nil])
([nil nil ((#("	    } else if (bandera.equals(\"-r -o\")){
		Lista<String> reversa = ord.reversa();
		escritor.write(ord.reversa().toString());
		escritor.close();
		System.out.println(\"Archivo guardado correctamente\");
" 0 6 (fontified t) 6 7 (fontified t) 7 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 13 (face font-lock-keyword-face fontified t) 13 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (face font-lock-string-face fontified t) 32 33 (face font-lock-string-face fontified t) 33 34 (face font-lock-string-face fontified t) 34 35 (face font-lock-string-face fontified t) 35 36 (face font-lock-string-face fontified t) 36 37 (face font-lock-string-face fontified t) 37 38 (face font-lock-string-face fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t c-is-sws t) 43 44 (fontified t c-is-sws t) 44 45 (face font-lock-type-face fontified t c-is-sws t) 45 46 (face font-lock-type-face fontified t) 46 47 (face font-lock-type-face fontified t) 47 48 (face font-lock-type-face fontified t) 48 49 (face font-lock-type-face fontified t) 49 50 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 50 51 (face font-lock-type-face fontified t) 51 52 (face font-lock-type-face fontified t) 52 53 (face font-lock-type-face fontified t) 53 54 (face font-lock-type-face fontified t) 54 55 (face font-lock-type-face fontified t) 55 56 (face font-lock-type-face fontified t) 56 57 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 57 58 (fontified t) 58 59 (face font-lock-variable-name-face fontified t) 59 60 (face font-lock-variable-name-face fontified t) 60 61 (face font-lock-variable-name-face fontified t) 61 62 (face font-lock-variable-name-face fontified t) 62 63 (face font-lock-variable-name-face fontified t) 63 64 (face font-lock-variable-name-face fontified t) 64 65 (face font-lock-variable-name-face fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t c-is-sws t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 116 (fontified t) 116 117 (fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 120 (fontified t) 120 121 (fontified t) 121 122 (fontified t) 122 123 (fontified t) 123 124 (fontified t) 124 125 (fontified t) 125 126 (fontified t) 126 127 (fontified t) 127 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t c-is-sws t) 130 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 134 (fontified t) 134 135 (fontified t) 135 136 (fontified t) 136 137 (fontified t) 137 138 (fontified t) 138 139 (fontified t) 139 140 (fontified t) 140 141 (fontified t) 141 142 (fontified t) 142 143 (fontified t) 143 144 (fontified t) 144 145 (fontified t) 145 146 (fontified t) 146 147 (fontified t) 147 148 (fontified t) 148 149 (fontified t) 149 150 (fontified t c-is-sws t) 150 160 (fontified t) 160 167 (fontified t) 167 168 (fontified t) 168 170 (face font-lock-string-face fontified t) 170 171 (face font-lock-string-face fontified t) 171 172 (face font-lock-string-face fontified t) 172 173 (face font-lock-string-face fontified t) 173 174 (face font-lock-string-face fontified t) 174 175 (face font-lock-string-face fontified t) 175 176 (face font-lock-string-face fontified t) 176 177 (face font-lock-string-face fontified t) 177 178 (face font-lock-string-face fontified t) 178 179 (face font-lock-string-face fontified t) 179 180 (face font-lock-string-face fontified t) 180 181 (face font-lock-string-face fontified t) 181 182 (face font-lock-string-face fontified t) 182 183 (face font-lock-string-face fontified t) 183 184 (face font-lock-string-face fontified t) 184 185 (face font-lock-string-face fontified t) 185 186 (face font-lock-string-face fontified t) 186 187 (face font-lock-string-face fontified t) 187 188 (face font-lock-string-face fontified t) 188 189 (face font-lock-string-face fontified t) 189 190 (face font-lock-string-face fontified t) 190 191 (face font-lock-string-face fontified t) 191 192 (face font-lock-string-face fontified t) 192 193 (face font-lock-string-face fontified t) 193 194 (face font-lock-string-face fontified t) 194 195 (face font-lock-string-face fontified t) 195 196 (face font-lock-string-face fontified t) 196 197 (face font-lock-string-face fontified t) 197 198 (face font-lock-string-face fontified t) 198 199 (face font-lock-string-face fontified t) 199 200 (face font-lock-string-face fontified t) 200 201 (fontified t) 201 202 (fontified t) 202 203 (fontified t)) . 2119) (undo-tree-id704 . -203) (undo-tree-id705 . -42) (undo-tree-id706 . -42) (undo-tree-id707 . -42) (t 26109 10267 550577 888000)) ((2119 . 2322) (t 26109 10302 304404 101000)) (26109 10302 285939 183000) 0 nil] [nil nil ((#("o" 0 1 (fontified t)) . -2219) (undo-tree-id457 . -1) (#("r" 0 1 (fontified t)) . -2220) (undo-tree-id458 . -1) (#("d" 0 1 (fontified t)) . -2221) (undo-tree-id459 . -1) (#("." 0 1 (fontified t)) . -2222) (undo-tree-id460 . -1) (#("r" 0 1 (fontified t)) . -2223) (undo-tree-id461 . -1) (#("e" 0 1 (fontified t)) . -2224) (undo-tree-id462 . -1) (#("v" 0 1 (fontified t)) . -2225) (undo-tree-id463 . -1) (#("e" 0 1 (fontified t)) . -2226) (undo-tree-id464 . -1) (#("r" 0 1 (fontified t)) . -2227) (undo-tree-id465 . -1) (#("s" 0 1 (fontified t)) . -2228) (undo-tree-id466 . -1) (#("a" 0 1 (fontified t)) . -2229) (undo-tree-id467 . -1) (#("(" 0 1 (fontified t)) . -2230) (undo-tree-id468 . -1) (#(")" 0 1 (fontified t)) . -2231) (undo-tree-id469 . -1) 2232) ((2219 . 2232)) (26109 10211 879054 432000) 0 nil])
([nil nil ((2243 . 2245)) nil (26109 10981 576999 744000) 0 nil])
nil
([nil nil ((2219 . 2225)) ((#("revera" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 2219) (undo-tree-id700 . -6) (undo-tree-id701 . -5) (undo-tree-id702 . -5) (undo-tree-id703 . -6)) (26109 10209 451282 202000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-comment-face fontified t)) . -2244) (undo-tree-id54 . -1) 2245) nil (26109 10981 576998 552000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2224) (undo-tree-id455 . -1) 2225) ((2224 . 2225)) (26109 10208 281461 894000) 0 nil])
([nil nil ((2244 . 2247)) nil (26109 10981 576996 338000) 0 nil])
([nil nil ((2224 . 2226)) ((#("sa" 0 1 (fontified t) 1 2 (fontified t)) . 2224)) (26109 10208 58545 546000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-comment-face c-in-sws t fontified t)) . -2235) (undo-tree-id53 . -1) 2236) nil (26109 10981 576993 873000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -600) (undo-tree-id616 . -1) 601) ((600 . 601)) (26109 10207 885754 291000) 0 nil] [nil nil ((#("package mx.unam.ciencias.edd.proyecto1;

import java.io.FileReader;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.BufferedReader;
import java.io.IOException;
import java.text.Normalizer;
import mx.unam.ciencias.edd.Lista;

public class Proyecto1 {
    
    public static void main(String args[]){

	if(args.length < 1){
	    System.out.println(\"Debes al menos ingresar el nombre del archivo\");
	    return;
	}

	
        /* Para pasar el nombre del archivo.txt como parametro en el .jar
	 * y además la bandera como segundo parametro. */
	String nombreArchivo = args[0];
	
  
	String bandera = \"\";
	if(args.length > 1){
	    bandera = args[1];
	}
	/* Leemos e imprimimos el archivo de texto previamente pasado como
	 * parametro por el usuario, lo anterior metiendo cada renglon del
	 * archivo a una lista e invocando el método toString de la clase
	 * Lista. Si ocurre alguna excepción, imprimimos
	 * un mensaje de error.*/
	try {
            		
	    Lista<String> lista = new Lista<>();
	    int longitd = lista.getLongitud();
	    
	    FileReader lectorArchivo = new FileReader(nombreArchivo);
	    BufferedReader lector = new BufferedReader(lectorArchivo);

	    FileWriter escritorArchivo = new FileWriter(nombreArchivo);
	    BufferedWriter escritor = new BufferedWriter(escritorArchivo);
		
	    
	    String renglon;
	    
	    while((renglon = lector.readLine()) != null){
		lista.agrega(renglon);
	    }
	

	    Lista<String> ord = lista.mergeSort((a,b) -> {
		    String aSinMayus = a.toLowerCase().replaceAll(\" \",\"\");
		    String aLimpio = Normalizer.normalize(aSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
		    String bSinMayus = b.toLowerCase().replaceAll(\" \",\"\");
		    String bLimpio = Normalizer.normalize(bSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
		    
		    return aLimpio.compareTo(bLimpio);
		    
		});	

	    
	    if(bandera.equals(\"-r\")){
	        System.out.println(ord.reversa());
	    } else if(bandera.equals(\"-o\")) {
		escritor.write(ord.toString());
		escritor.close();
		System.out.println(\"Archivo guardado correctamente\");
	    } else if (bandera.equals(\"-r -o\")){
		Lista<String> reversa = ord.reversa();
		escritor.write(reversa.toString());
		escritor.close();
		System.out.println(\"Archivo guardado correctamente\");
	    } else			        
		System.out.println(ord.toString());
	    
	    
	} catch(IOException e) {
	    System.out.println(\"\\nAlgo salió mal: \\n\");
	    e.printStackTrace();
	}    
	    
	
    }     
	

	



}
 
" 0 7 (face font-lock-keyword-face fontified t) 7 29 (fontified t) 29 37 (face font-lock-constant-face fontified t) 37 38 (face font-lock-constant-face c-type c-decl-id-start fontified t) 38 41 (fontified t) 41 47 (face font-lock-keyword-face fontified t) 47 48 (fontified t) 48 52 (face font-lock-constant-face fontified t) 52 53 (fontified t) 53 55 (face font-lock-constant-face fontified t) 55 56 (fontified t) 56 65 (face font-lock-type-face fontified t) 65 66 (face font-lock-type-face c-type c-decl-id-start fontified t) 66 68 (fontified t) 68 74 (face font-lock-keyword-face fontified t) 74 75 (fontified t) 75 79 (face font-lock-constant-face fontified t) 79 80 (fontified t) 80 82 (face font-lock-constant-face fontified t) 82 83 (fontified t) 83 92 (face font-lock-type-face fontified t) 92 93 (face font-lock-type-face c-type c-decl-id-start fontified t) 93 95 (fontified t) 95 101 (face font-lock-keyword-face fontified t) 101 102 (fontified t) 102 106 (face font-lock-constant-face fontified t) 106 107 (fontified t) 107 109 (face font-lock-constant-face fontified t) 109 110 (fontified t) 110 123 (face font-lock-type-face fontified t) 123 124 (face font-lock-type-face c-type c-decl-id-start fontified t) 124 126 (fontified t) 126 132 (face font-lock-keyword-face fontified t) 132 133 (fontified t) 133 137 (face font-lock-constant-face fontified t) 137 138 (fontified t) 138 140 (face font-lock-constant-face fontified t) 140 141 (fontified t) 141 154 (face font-lock-type-face fontified t) 154 155 (face font-lock-type-face c-type c-decl-id-start fontified t) 155 157 (fontified t) 157 163 (face font-lock-keyword-face fontified t) 163 164 (fontified t) 164 168 (face font-lock-constant-face fontified t) 168 169 (fontified t) 169 171 (face font-lock-constant-face fontified t) 171 172 (fontified t) 172 182 (face font-lock-type-face fontified t) 182 183 (face font-lock-type-face c-type c-decl-id-start fontified t) 183 185 (fontified t) 185 191 (face font-lock-keyword-face fontified t) 191 192 (fontified t) 192 196 (face font-lock-constant-face fontified t) 196 197 (fontified t) 197 201 (face font-lock-constant-face fontified t) 201 202 (fontified t) 202 211 (face font-lock-type-face fontified t) 211 212 (face font-lock-type-face c-type c-decl-id-start fontified t) 212 213 (fontified t) 213 214 (fontified t) 214 220 (face font-lock-keyword-face fontified t) 220 221 (fontified t) 221 223 (face font-lock-constant-face fontified t) 223 224 (fontified t) 224 228 (face font-lock-constant-face fontified t) 228 229 (fontified t) 229 237 (face font-lock-constant-face fontified t) 237 238 (fontified t) 238 241 (face font-lock-constant-face fontified t) 241 242 (fontified t) 242 246 (face font-lock-type-face fontified t) 246 247 (face font-lock-type-face c-type c-decl-id-start fontified t) 247 248 (fontified t) 248 249 (fontified t) 249 250 (fontified t) 250 256 (face font-lock-keyword-face fontified t) 256 257 (fontified t) 257 261 (face font-lock-keyword-face fontified t) 261 262 (c-type c-decl-type-start face font-lock-keyword-face fontified t) 262 263 (fontified t) 263 272 (face font-lock-type-face fontified t) 272 284 (fontified t) 284 290 (face font-lock-keyword-face fontified t) 290 291 (fontified t) 291 297 (face font-lock-keyword-face fontified t) 297 298 (fontified t) 298 301 (face font-lock-type-face fontified t) 301 302 (face font-lock-type-face c-type c-decl-id-start fontified t) 302 303 (fontified t) 303 307 (face font-lock-function-name-face fontified t) 307 308 (c-type c-decl-arg-start fontified t) 308 314 (face font-lock-type-face fontified t) 314 315 (fontified t) 315 319 (face font-lock-variable-name-face fontified t) 319 325 (fontified t) 325 326 (fontified t) 326 328 (face font-lock-keyword-face fontified t) 328 346 (fontified t) 346 347 (fontified t) 347 348 (fontified t c-is-sws t) 348 352 (fontified t c-is-sws t) 352 353 (fontified t c-is-sws t) 353 371 (fontified t) 371 418 (face font-lock-string-face fontified t) 418 420 (fontified t) 420 421 (fontified t) 421 422 (fontified t) 422 426 (fontified t) 426 427 (face font-lock-keyword-face fontified t c-is-sws t) 427 432 (face font-lock-keyword-face fontified t) 432 433 (fontified t) 433 434 (fontified t) 434 435 (fontified t) 435 436 (fontified t c-is-sws t) 436 437 (fontified t) 437 438 (fontified t) 438 439 (fontified t c-in-sws t c-is-sws t) 439 440 (fontified t c-is-sws t) 440 448 (fontified t c-is-sws t c-in-sws t) 448 449 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 449 451 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 451 561 (face font-lock-comment-face fontified t c-in-sws t) 561 564 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 564 565 (c-in-sws t fontified t) 565 566 (fontified t c-in-sws t c-is-sws t) 566 567 (face font-lock-type-face fontified t c-is-sws t) 567 571 (face font-lock-type-face fontified t) 571 572 (face font-lock-type-face c-type c-decl-id-start fontified t) 572 573 (fontified t) 573 586 (face font-lock-variable-name-face fontified t) 586 604 (fontified t) 604 609 (face font-lock-type-face fontified t) 609 610 (face font-lock-type-face c-type c-decl-id-start fontified t) 610 611 (fontified t) 611 618 (face font-lock-variable-name-face fontified t) 618 621 (fontified t) 621 623 (face font-lock-string-face fontified t) 623 626 (fontified t) 626 628 (face font-lock-keyword-face fontified t) 628 674 (fontified t) 674 675 (fontified t c-is-sws t c-in-sws t) 675 676 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 676 678 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 678 951 (face font-lock-comment-face fontified t c-in-sws t) 951 953 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 953 954 (fontified t c-is-sws t) 954 955 (fontified t c-in-sws t c-is-sws t) 955 956 (face font-lock-keyword-face fontified t c-is-sws t) 956 958 (face font-lock-keyword-face fontified t) 958 981 (fontified t) 981 986 (face font-lock-type-face fontified t) 986 987 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 987 993 (face font-lock-type-face fontified t) 993 994 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 994 995 (fontified t) 995 1000 (face font-lock-variable-name-face fontified t) 1000 1003 (fontified t) 1003 1006 (face font-lock-keyword-face fontified t) 1006 1007 (fontified t) 1007 1012 (face font-lock-type-face fontified t) 1012 1013 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1013 1014 (fontified t category c->-as-paren-syntax) 1014 1023 (fontified t) 1023 1025 (face font-lock-type-face fontified t) 1025 1026 (face font-lock-type-face c-type c-decl-id-start fontified t) 1026 1027 (fontified t) 1027 1034 (face font-lock-variable-name-face fontified t) 1034 1064 (fontified t) 1064 1069 (fontified t) 1069 1078 (face font-lock-type-face fontified t) 1078 1079 (face font-lock-type-face c-type c-decl-id-start fontified t) 1079 1080 (fontified t) 1080 1093 (face font-lock-variable-name-face fontified t) 1093 1096 (fontified t) 1096 1099 (face font-lock-keyword-face fontified t) 1099 1100 (fontified t) 1100 1110 (face font-lock-type-face fontified t) 1110 1132 (fontified t) 1132 1145 (face font-lock-type-face fontified t) 1145 1146 (face font-lock-type-face c-type c-decl-id-start fontified t) 1146 1147 (fontified t) 1147 1153 (face font-lock-variable-name-face fontified t) 1153 1156 (fontified t) 1156 1159 (face font-lock-keyword-face fontified t) 1159 1160 (fontified t) 1160 1174 (face font-lock-type-face fontified t) 1174 1191 (fontified t) 1191 1197 (fontified t) 1197 1198 (face font-lock-type-face fontified t) 1198 1206 (face font-lock-type-face fontified t) 1206 1207 (face font-lock-type-face c-type c-decl-id-start fontified t) 1207 1208 (fontified t) 1208 1209 (face font-lock-variable-name-face fontified t) 1209 1210 (face font-lock-variable-name-face fontified t) 1210 1211 (face font-lock-variable-name-face fontified t) 1211 1212 (face font-lock-variable-name-face fontified t) 1212 1213 (face font-lock-variable-name-face fontified t) 1213 1214 (face font-lock-variable-name-face fontified t) 1214 1215 (face font-lock-variable-name-face fontified t) 1215 1216 (face font-lock-variable-name-face fontified t) 1216 1217 (face font-lock-variable-name-face fontified t) 1217 1218 (face font-lock-variable-name-face fontified t) 1218 1219 (face font-lock-variable-name-face fontified t) 1219 1220 (face font-lock-variable-name-face fontified t) 1220 1221 (face font-lock-variable-name-face fontified t) 1221 1222 (face font-lock-variable-name-face fontified t) 1222 1223 (face font-lock-variable-name-face fontified t) 1223 1225 (fontified t) 1225 1226 (fontified t) 1226 1229 (face font-lock-keyword-face fontified t) 1229 1230 (fontified t) 1230 1240 (face font-lock-type-face fontified t) 1240 1241 (fontified t) 1241 1242 (fontified t) 1242 1243 (fontified t) 1243 1244 (fontified t) 1244 1245 (fontified t) 1245 1246 (fontified t) 1246 1247 (fontified t) 1247 1248 (fontified t) 1248 1249 (fontified t) 1249 1250 (fontified t) 1250 1251 (fontified t) 1251 1252 (fontified t) 1252 1253 (fontified t) 1253 1254 (fontified t) 1254 1255 (fontified t) 1255 1256 (fontified t rear-nonsticky t) 1256 1257 (fontified t) 1257 1262 (fontified t) 1262 1263 (face font-lock-type-face fontified t) 1263 1264 (face font-lock-type-face fontified t) 1264 1265 (face font-lock-type-face fontified t) 1265 1266 (face font-lock-type-face fontified t) 1266 1267 (face font-lock-type-face fontified t) 1267 1268 (face font-lock-type-face fontified t) 1268 1269 (face font-lock-type-face fontified t) 1269 1270 (face font-lock-type-face fontified t) 1270 1271 (face font-lock-type-face fontified t) 1271 1272 (face font-lock-type-face fontified t) 1272 1273 (face font-lock-type-face fontified t) 1273 1274 (face font-lock-type-face fontified t) 1274 1275 (face font-lock-type-face fontified t) 1275 1276 (face font-lock-type-face c-type c-decl-id-start fontified t) 1276 1277 (fontified t) 1277 1278 (face font-lock-variable-name-face fontified t) 1278 1279 (face font-lock-variable-name-face fontified t) 1279 1280 (face font-lock-variable-name-face fontified t) 1280 1281 (face font-lock-variable-name-face fontified t) 1281 1282 (face font-lock-variable-name-face fontified t) 1282 1283 (face font-lock-variable-name-face fontified t) 1283 1284 (face font-lock-variable-name-face fontified t) 1284 1285 (face font-lock-variable-name-face fontified t) 1285 1286 (fontified t) 1286 1287 (fontified t) 1287 1288 (fontified t) 1288 1289 (face font-lock-keyword-face fontified t) 1289 1290 (face font-lock-keyword-face fontified t) 1290 1291 (face font-lock-keyword-face fontified t) 1291 1292 (fontified t) 1292 1293 (face font-lock-type-face fontified t) 1293 1294 (face font-lock-type-face fontified t) 1294 1295 (face font-lock-type-face fontified t) 1295 1296 (face font-lock-type-face fontified t) 1296 1297 (face font-lock-type-face fontified t) 1297 1298 (face font-lock-type-face fontified t) 1298 1299 (face font-lock-type-face fontified t) 1299 1300 (face font-lock-type-face fontified t) 1300 1301 (face font-lock-type-face fontified t) 1301 1302 (face font-lock-type-face fontified t) 1302 1303 (face font-lock-type-face fontified t) 1303 1304 (face font-lock-type-face fontified t) 1304 1305 (face font-lock-type-face fontified t) 1305 1306 (face font-lock-type-face fontified t) 1306 1307 (fontified t) 1307 1308 (fontified t) 1308 1309 (fontified t) 1309 1310 (fontified t) 1310 1311 (fontified t) 1311 1312 (fontified t) 1312 1313 (fontified t) 1313 1314 (fontified t) 1314 1315 (fontified t) 1315 1316 (fontified t) 1316 1317 (fontified t) 1317 1318 (fontified t) 1318 1319 (fontified t) 1319 1320 (fontified t) 1320 1321 (fontified t) 1321 1322 (fontified t) 1322 1323 (fontified t) 1323 1324 (fontified t) 1324 1325 (fontified t) 1325 1326 (fontified t) 1326 1327 (fontified t rear-nonsticky t) 1327 1328 (fontified t) 1328 1333 (fontified t) 1333 1334 (fontified t) 1334 1339 (fontified t) 1339 1344 (face font-lock-type-face fontified t) 1344 1345 (face font-lock-type-face c-type c-decl-id-start fontified t) 1345 1346 (fontified t) 1346 1353 (face font-lock-variable-name-face fontified t) 1353 1366 (fontified t) 1366 1371 (face font-lock-keyword-face fontified t) 1371 1405 (fontified t) 1405 1409 (face font-lock-constant-face fontified t) 1409 1452 (fontified t) 1452 1457 (face font-lock-type-face fontified t) 1457 1458 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 1458 1464 (face font-lock-type-face fontified t) 1464 1465 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 1465 1466 (fontified t) 1466 1469 (face font-lock-variable-name-face fontified t) 1469 1505 (fontified t) 1505 1510 (face font-lock-type-face fontified t) 1510 1511 (face font-lock-type-face c-type c-decl-id-start fontified t) 1511 1512 (fontified t) 1512 1521 (face font-lock-variable-name-face fontified t) 1521 1551 (fontified t) 1551 1554 (face font-lock-string-face fontified t) 1554 1555 (fontified t) 1555 1557 (face font-lock-string-face fontified t) 1557 1566 (fontified t) 1566 1571 (face font-lock-type-face fontified t) 1571 1572 (face font-lock-type-face c-type c-decl-id-start fontified t) 1572 1573 (fontified t) 1573 1580 (face font-lock-variable-name-face fontified t) 1580 1615 (fontified t) 1615 1625 (face font-lock-constant-face fontified t) 1625 1626 (fontified t) 1626 1630 (face font-lock-constant-face fontified t) 1630 1637 (fontified t) 1637 1647 (fontified t) 1647 1655 (face font-lock-string-face fontified t) 1655 1657 (fontified t) 1657 1659 (face font-lock-string-face fontified t) 1659 1661 (fontified t) 1661 1668 (fontified t) 1668 1673 (face font-lock-type-face fontified t) 1673 1674 (face font-lock-type-face c-type c-decl-id-start fontified t) 1674 1675 (fontified t) 1675 1684 (face font-lock-variable-name-face fontified t) 1684 1714 (fontified t) 1714 1717 (face font-lock-string-face fontified t) 1717 1718 (fontified t) 1718 1720 (face font-lock-string-face fontified t) 1720 1729 (fontified t) 1729 1734 (face font-lock-type-face fontified t) 1734 1735 (face font-lock-type-face c-type c-decl-id-start fontified t) 1735 1736 (fontified t) 1736 1743 (face font-lock-variable-name-face fontified t) 1743 1778 (fontified t) 1778 1788 (face font-lock-constant-face fontified t) 1788 1789 (fontified t) 1789 1793 (face font-lock-constant-face fontified t) 1793 1810 (fontified t) 1810 1818 (face font-lock-string-face fontified t) 1818 1820 (fontified t) 1820 1822 (face font-lock-string-face fontified t) 1822 1838 (fontified t) 1838 1844 (face font-lock-keyword-face fontified t) 1844 1851 (fontified t) 1851 1872 (fontified t) 1872 1885 (fontified t) 1885 1886 (fontified t) 1886 1887 (fontified t) 1887 1894 (fontified t) 1894 1899 (fontified t) 1899 1901 (face font-lock-keyword-face fontified t) 1901 1917 (fontified t) 1917 1921 (face font-lock-string-face fontified t) 1921 1924 (fontified t) 1924 1925 (fontified t) 1925 1934 (fontified t) 1934 1952 (fontified t) 1952 1953 (fontified t) 1953 1954 (fontified t) 1954 1955 (fontified t) 1955 1956 (fontified t) 1956 1957 (fontified t) 1957 1958 (fontified t) 1958 1959 (fontified t) 1959 1960 (fontified t) 1960 1961 (fontified t) 1961 1962 (fontified t) 1962 1963 (fontified t) 1963 1964 (fontified t) 1964 1965 (fontified t) 1965 1966 (fontified t) 1966 1967 (fontified t) 1967 1968 (fontified t) 1968 1969 (fontified t) 1969 1976 (fontified t) 1976 1980 (face font-lock-keyword-face fontified t) 1980 1981 (fontified t) 1981 1983 (face font-lock-keyword-face fontified t) 1983 1984 (fontified t) 1984 1999 (fontified t) 1999 2003 (face font-lock-string-face fontified t) 2003 2007 (fontified t) 2007 2008 (fontified t) 2008 2009 (fontified t c-is-sws t) 2009 2010 (fontified t) 2010 2011 (fontified t) 2011 2012 (fontified t) 2012 2013 (fontified t) 2013 2014 (fontified t) 2014 2015 (fontified t) 2015 2016 (fontified t) 2016 2017 (fontified t) 2017 2018 (fontified t) 2018 2019 (fontified t) 2019 2020 (fontified t) 2020 2021 (fontified t) 2021 2022 (fontified t) 2022 2023 (fontified t) 2023 2024 (fontified t) 2024 2025 (fontified t) 2025 2026 (fontified t) 2026 2027 (fontified t) 2027 2028 (fontified t) 2028 2029 (fontified t) 2029 2030 (fontified t) 2030 2031 (fontified t) 2031 2032 (fontified t) 2032 2033 (fontified t) 2033 2034 (fontified t) 2034 2035 (fontified t) 2035 2036 (fontified t) 2036 2037 (fontified t) 2037 2038 (fontified t) 2038 2039 (fontified t) 2039 2040 (fontified t) 2040 2041 (fontified t) 2041 2042 (fontified t) 2042 2044 (fontified t) 2044 2045 (fontified t) 2045 2046 (fontified t) 2046 2047 (fontified t) 2047 2048 (fontified t) 2048 2049 (fontified t) 2049 2050 (fontified t) 2050 2051 (fontified t) 2051 2052 (fontified t) 2052 2053 (fontified t) 2053 2054 (fontified t) 2054 2055 (fontified t) 2055 2056 (fontified t) 2056 2057 (fontified t) 2057 2058 (fontified t) 2058 2059 (fontified t) 2059 2060 (fontified t) 2060 2061 (fontified t) 2061 2062 (fontified t) 2062 2064 (fontified t c-is-sws t) 2064 2065 (fontified t c-is-sws t) 2065 2075 (fontified t) 2075 2082 (fontified t) 2082 2083 (fontified t) 2083 2085 (face font-lock-string-face fontified t) 2085 2086 (face font-lock-string-face fontified t) 2086 2087 (face font-lock-string-face fontified t) 2087 2088 (face font-lock-string-face fontified t) 2088 2089 (face font-lock-string-face fontified t) 2089 2090 (face font-lock-string-face fontified t) 2090 2091 (face font-lock-string-face fontified t) 2091 2092 (face font-lock-string-face fontified t) 2092 2093 (face font-lock-string-face fontified t) 2093 2094 (face font-lock-string-face fontified t) 2094 2095 (face font-lock-string-face fontified t) 2095 2096 (face font-lock-string-face fontified t) 2096 2097 (face font-lock-string-face fontified t) 2097 2098 (face font-lock-string-face fontified t) 2098 2099 (face font-lock-string-face fontified t) 2099 2100 (face font-lock-string-face fontified t) 2100 2101 (face font-lock-string-face fontified t) 2101 2102 (face font-lock-string-face fontified t) 2102 2103 (face font-lock-string-face fontified t) 2103 2104 (face font-lock-string-face fontified t) 2104 2105 (face font-lock-string-face fontified t) 2105 2106 (face font-lock-string-face fontified t) 2106 2107 (face font-lock-string-face fontified t) 2107 2108 (face font-lock-string-face fontified t) 2108 2109 (face font-lock-string-face fontified t) 2109 2110 (face font-lock-string-face fontified t) 2110 2111 (face font-lock-string-face fontified t) 2111 2112 (face font-lock-string-face fontified t) 2112 2113 (face font-lock-string-face fontified t) 2113 2114 (face font-lock-string-face fontified t) 2114 2115 (face font-lock-string-face fontified t) 2115 2116 (fontified t) 2116 2117 (fontified t) 2117 2118 (fontified t) 2118 2124 (fontified t) 2124 2125 (fontified t) 2125 2129 (face font-lock-keyword-face fontified t) 2129 2130 (fontified t) 2130 2131 (face font-lock-keyword-face fontified t) 2131 2132 (face font-lock-keyword-face fontified t) 2132 2133 (fontified t) 2133 2134 (fontified t) 2134 2135 (fontified t) 2135 2136 (fontified t) 2136 2137 (fontified t) 2137 2138 (fontified t) 2138 2139 (fontified t) 2139 2140 (fontified t) 2140 2141 (fontified t) 2141 2142 (fontified t) 2142 2143 (fontified t) 2143 2144 (fontified t) 2144 2145 (fontified t) 2145 2146 (fontified t) 2146 2147 (fontified t) 2147 2148 (fontified t) 2148 2149 (fontified t) 2149 2150 (face font-lock-string-face fontified t) 2150 2151 (face font-lock-string-face fontified t) 2151 2152 (face font-lock-string-face fontified t) 2152 2153 (face font-lock-string-face fontified t) 2153 2154 (face font-lock-string-face fontified t) 2154 2155 (face font-lock-string-face fontified t) 2155 2156 (face font-lock-string-face fontified t) 2156 2157 (fontified t) 2157 2158 (fontified t) 2158 2159 (fontified t) 2159 2160 (fontified t) 2160 2162 (fontified t) 2162 2163 (face font-lock-type-face fontified t) 2163 2164 (face font-lock-type-face fontified t) 2164 2165 (face font-lock-type-face fontified t) 2165 2166 (face font-lock-type-face fontified t) 2166 2167 (face font-lock-type-face fontified t) 2167 2168 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 2168 2169 (face font-lock-type-face fontified t) 2169 2170 (face font-lock-type-face fontified t) 2170 2171 (face font-lock-type-face fontified t) 2171 2172 (face font-lock-type-face fontified t) 2172 2173 (face font-lock-type-face fontified t) 2173 2174 (face font-lock-type-face fontified t) 2174 2175 (c-type c-decl-id-start category c->-as-paren-syntax fontified t) 2175 2176 (fontified t) 2176 2177 (face font-lock-variable-name-face fontified t) 2177 2178 (face font-lock-variable-name-face fontified t) 2178 2179 (face font-lock-variable-name-face fontified t) 2179 2180 (face font-lock-variable-name-face fontified t) 2180 2181 (face font-lock-variable-name-face fontified t) 2181 2182 (face font-lock-variable-name-face fontified t) 2182 2183 (face font-lock-variable-name-face fontified t) 2183 2184 (fontified t) 2184 2185 (fontified t) 2185 2186 (fontified t) 2186 2187 (fontified t) 2187 2188 (fontified t) 2188 2189 (fontified t) 2189 2190 (fontified t) 2190 2191 (fontified t) 2191 2192 (fontified t) 2192 2193 (fontified t) 2193 2194 (fontified t) 2194 2195 (fontified t) 2195 2196 (fontified t) 2196 2197 (fontified t) 2197 2198 (fontified t) 2198 2199 (fontified t) 2199 2200 (fontified t) 2200 2201 (fontified t) 2201 2203 (fontified t) 2203 2204 (fontified t) 2204 2205 (fontified t) 2205 2206 (fontified t) 2206 2207 (fontified t) 2207 2208 (fontified t) 2208 2209 (fontified t) 2209 2210 (fontified t) 2210 2211 (fontified t) 2211 2212 (fontified t) 2212 2213 (fontified t) 2213 2214 (fontified t) 2214 2215 (fontified t) 2215 2216 (fontified t) 2216 2217 (fontified t) 2217 2218 (fontified t) 2218 2219 (fontified t) 2219 2220 (fontified t) 2220 2221 (fontified t) 2221 2222 (fontified t) 2222 2223 (fontified t) 2223 2224 (fontified t) 2224 2225 (fontified t) 2225 2226 (fontified t) 2226 2227 (fontified t) 2227 2228 (fontified t) 2228 2229 (fontified t) 2229 2230 (fontified t) 2230 2231 (fontified t) 2231 2232 (fontified t) 2232 2233 (fontified t) 2233 2234 (fontified t) 2234 2235 (fontified t) 2235 2236 (fontified t) 2236 2237 (fontified t) 2237 2238 (fontified t) 2238 2239 (fontified t) 2239 2241 (fontified t) 2241 2242 (fontified t) 2242 2243 (fontified t) 2243 2244 (fontified t) 2244 2245 (fontified t) 2245 2246 (fontified t) 2246 2247 (fontified t) 2247 2248 (fontified t) 2248 2249 (fontified t) 2249 2250 (fontified t) 2250 2251 (fontified t) 2251 2252 (fontified t) 2252 2253 (fontified t) 2253 2254 (fontified t) 2254 2255 (fontified t) 2255 2256 (fontified t) 2256 2257 (fontified t) 2257 2258 (fontified t) 2258 2259 (fontified t) 2259 2261 (fontified t) 2261 2262 (fontified t) 2262 2272 (fontified t) 2272 2279 (fontified t) 2279 2280 (fontified t) 2280 2282 (face font-lock-string-face fontified t) 2282 2283 (face font-lock-string-face fontified t) 2283 2284 (face font-lock-string-face fontified t) 2284 2285 (face font-lock-string-face fontified t) 2285 2286 (face font-lock-string-face fontified t) 2286 2287 (face font-lock-string-face fontified t) 2287 2288 (face font-lock-string-face fontified t) 2288 2289 (face font-lock-string-face fontified t) 2289 2290 (face font-lock-string-face fontified t) 2290 2291 (face font-lock-string-face fontified t) 2291 2292 (face font-lock-string-face fontified t) 2292 2293 (face font-lock-string-face fontified t) 2293 2294 (face font-lock-string-face fontified t) 2294 2295 (face font-lock-string-face fontified t) 2295 2296 (face font-lock-string-face fontified t) 2296 2297 (face font-lock-string-face fontified t) 2297 2298 (face font-lock-string-face fontified t) 2298 2299 (face font-lock-string-face fontified t) 2299 2300 (face font-lock-string-face fontified t) 2300 2301 (face font-lock-string-face fontified t) 2301 2302 (face font-lock-string-face fontified t) 2302 2303 (face font-lock-string-face fontified t) 2303 2304 (face font-lock-string-face fontified t) 2304 2305 (face font-lock-string-face fontified t) 2305 2306 (face font-lock-string-face fontified t) 2306 2307 (face font-lock-string-face fontified t) 2307 2308 (face font-lock-string-face fontified t) 2308 2309 (face font-lock-string-face fontified t) 2309 2310 (face font-lock-string-face fontified t) 2310 2311 (face font-lock-string-face fontified t) 2311 2312 (face font-lock-string-face fontified t) 2312 2313 (fontified t) 2313 2314 (fontified t) 2314 2315 (fontified t) 2315 2320 (fontified t) 2320 2321 (fontified t) 2321 2322 (fontified t) 2322 2326 (face font-lock-keyword-face fontified t) 2326 2327 (fontified t) 2327 2329 (fontified t) 2329 2337 (fontified t) 2337 2338 (fontified t) 2338 2359 (fontified t) 2359 2374 (fontified t) 2374 2375 (fontified t rear-nonsticky t) 2375 2376 (fontified t) 2376 2381 (fontified t) 2381 2382 (fontified t) 2382 2387 (fontified t) 2387 2388 (fontified t) 2388 2390 (fontified t) 2390 2391 (fontified t) 2391 2396 (face font-lock-keyword-face fontified t) 2396 2397 (fontified t) 2397 2414 (fontified t) 2414 2438 (fontified t) 2438 2439 (face font-lock-string-face fontified t) 2439 2440 (face font-lock-string-face fontified t) 2440 2441 (face font-lock-string-face fontified t) 2441 2455 (face font-lock-string-face fontified t) 2455 2456 (face font-lock-string-face fontified t) 2456 2457 (face font-lock-string-face fontified t) 2457 2458 (face font-lock-string-face fontified t) 2458 2459 (face font-lock-string-face fontified t) 2459 2460 (face font-lock-string-face fontified t) 2460 2462 (fontified t) 2462 2463 (fontified t) 2463 2468 (fontified t) 2468 2487 (fontified t) 2487 2488 (fontified t rear-nonsticky t) 2488 2489 (fontified t) 2489 2509 (fontified t) 2509 2527 (fontified t)) . -1) (undo-tree-id542 . -2007) (undo-tree-id543 . -1825) (undo-tree-id544 . -213) (undo-tree-id545 . -2527) (undo-tree-id547 . -2010) (undo-tree-id548 . -1191) (undo-tree-id549 . -2009) (undo-tree-id550 . -1934) (undo-tree-id551 . -1925) (undo-tree-id552 . -2160) (undo-tree-id553 . -2008) (undo-tree-id554 . -2160) (undo-tree-id555 . -2521) (undo-tree-id556 . -2527) (undo-tree-id557 . -2117) (undo-tree-id558 . -2117) (undo-tree-id559 . -2321) (undo-tree-id560 . -2326) (undo-tree-id561 . -2160) 2528 (t 26109 9389 958622 485000)) ((1 . 2528)) (26109 9582 424031 945000) 0 nil])
([nil nil ((2235 . 2238)) nil (26109 10981 576981 270000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -598) (undo-tree-id606 . -1) (#(" " 0 1 (fontified t)) . -599) (undo-tree-id607 . -1) (#(" " 0 1 (fontified t)) . -600) (undo-tree-id608 . -1) (#(" " 0 1 (fontified t)) . -601) (undo-tree-id609 . -1) (#(" " 0 1 (fontified t)) . -602) (undo-tree-id610 . -1) (#(" " 0 1 (fontified t)) . -603) (undo-tree-id611 . -1) (#(" " 0 1 (fontified t)) . -604) (undo-tree-id612 . -1) (#(" " 0 1 (fontified t)) . -605) (undo-tree-id613 . -1) (#(" " 0 1 (fontified nil)) . -606) (undo-tree-id614 . -1) (#("	" 0 1 (fontified nil)) . 607) (undo-tree-id615 . -1) (599 . 607) 600) ((#("        " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 599) (598 . 608)) (26109 10207 651507 12000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2453 . 2454) (nil fontified nil 1731 . 2454) (nil fontified nil 1730 . 1731) (nil category c->-as-paren-syntax 1730 . 1731) (nil fontified nil 1724 . 1730) (nil fontified nil 1723 . 1724) (nil category c-<-as-paren-syntax 1723 . 1724) (nil fontified nil 896 . 1723) (nil fontified nil 895 . 896) (nil category c->-as-paren-syntax 895 . 896) (nil fontified nil 889 . 895) (nil fontified nil 888 . 889) (nil category c-<-as-paren-syntax 888 . 889) (nil fontified nil 582 . 888) (nil fontified nil 581 . 582) (nil category c->-as-paren-syntax 581 . 582) (nil fontified nil 580 . 581) (nil category c-<-as-paren-syntax 580 . 581) (nil fontified nil 562 . 580) (nil fontified nil 561 . 562) (nil category c->-as-paren-syntax 561 . 562) (nil fontified nil 555 . 561) (nil fontified nil 554 . 555) (nil category c-<-as-paren-syntax 554 . 555) (nil fontified nil 1 . 554) (1 . 2454)) ((#("import java.io.FileReader;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.BufferedReader;
import java.io.IOException;
import java.text.Normalizer;
import mx.unam.ciencias.edd.Lista;

public class Proyecto1 {

    public static void main(String args[]) {

        if (args.length < 1) {
            System.out.println(\"Debes al menos ingresar el nombre del archivo\");
            return;
        }

        String nombreArchivo = args[0];
        String bandera = args.length > 1 ? args[1] : \"\";

        try {
            Lista<String> lista = new Lista<>();
            FileReader lectorArchivo = new FileReader(nombreArchivo);
            BufferedReader lector = new BufferedReader(lectorArchivo);

            String renglon;

            while ((renglon = lector.readLine()) != null) {
                lista.agrega(renglon);
            }

            Lista<String> ord = lista.mergeSort((a, b) -> {
                String aSinMayus = a.toLowerCase().replaceAll(\" \", \"\");
                String aLimpio = Normalizer.normalize(aSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
                String bSinMayus = b.toLowerCase().replaceAll(\" \", \"\");
                String bLimpio = Normalizer.normalize(bSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");

                return aLimpio.compareTo(bLimpio);
            });

            if (bandera.equals(\"-r\")) {
                System.out.println(ord.reversa());
            } else if (bandera.equals(\"-o\")) {
                escribirArchivo(nombreArchivo + \".sorted\", ord.toString());
                System.out.println(\"Archivo guardado correctamente\");
            } else if (bandera.equals(\"-r -o\")) {
                Lista<String> reversa = ord.reversa();
                escribirArchivo(nombreArchivo + \".reversed.sorted\", reversa.toString());
                System.out.println(\"Archivo guardado correctamente\");
            } else {
                System.out.println(ord.toString());
            }

        } catch (IOException e) {
            System.out.println(\"\\nAlgo salió mal: \\n\");
            e.printStackTrace();
        }

    }

    private static void escribirArchivo(String nombreArchivo, String contenido) throws IOException {
        FileWriter escritorArchivo = new FileWriter(nombreArchivo);
        BufferedWriter escritor = new BufferedWriter(escritorArchivo);
        escritor.write(contenido);
        escritor.close();
    }
}
" 0 6 (face font-lock-keyword-face fontified nil) 6 7 (fontified nil) 7 11 (face font-lock-constant-face fontified nil) 11 12 (fontified nil) 12 14 (face font-lock-constant-face fontified nil) 14 15 (fontified nil) 15 24 (face font-lock-type-face fontified nil) 24 25 (face font-lock-type-face c-type c-decl-id-start fontified nil) 25 27 (fontified nil) 27 33 (face font-lock-keyword-face fontified nil) 33 34 (fontified nil) 34 38 (face font-lock-constant-face fontified nil) 38 39 (fontified nil) 39 41 (face font-lock-constant-face fontified nil) 41 42 (fontified nil) 42 51 (face font-lock-type-face fontified nil) 51 52 (face font-lock-type-face c-type c-decl-id-start fontified nil) 52 54 (fontified nil) 54 60 (face font-lock-keyword-face fontified nil) 60 61 (fontified nil) 61 65 (face font-lock-constant-face fontified nil) 65 66 (fontified nil) 66 68 (face font-lock-constant-face fontified nil) 68 69 (fontified nil) 69 82 (face font-lock-type-face fontified nil) 82 83 (face font-lock-type-face c-type c-decl-id-start fontified nil) 83 85 (fontified nil) 85 91 (face font-lock-keyword-face fontified nil) 91 92 (fontified nil) 92 96 (face font-lock-constant-face fontified nil) 96 97 (fontified nil) 97 99 (face font-lock-constant-face fontified nil) 99 100 (fontified nil) 100 113 (face font-lock-type-face fontified nil) 113 114 (face font-lock-type-face c-type c-decl-id-start fontified nil) 114 116 (fontified nil) 116 122 (face font-lock-keyword-face fontified nil) 122 123 (fontified nil) 123 127 (face font-lock-constant-face fontified nil) 127 128 (fontified nil) 128 130 (face font-lock-constant-face fontified nil) 130 131 (fontified nil) 131 141 (face font-lock-type-face fontified nil) 141 142 (face font-lock-type-face c-type c-decl-id-start fontified nil) 142 144 (fontified nil) 144 150 (face font-lock-keyword-face fontified nil) 150 151 (fontified nil) 151 155 (face font-lock-constant-face fontified nil) 155 156 (fontified nil) 156 160 (face font-lock-constant-face fontified nil) 160 161 (fontified nil) 161 170 (face font-lock-type-face fontified nil) 170 171 (face font-lock-type-face c-type c-decl-id-start fontified nil) 171 173 (fontified nil) 173 179 (face font-lock-keyword-face fontified nil) 179 180 (fontified nil) 180 182 (face font-lock-constant-face fontified nil) 182 183 (fontified nil) 183 187 (face font-lock-constant-face fontified nil) 187 188 (fontified nil) 188 196 (face font-lock-constant-face fontified nil) 196 197 (fontified nil) 197 200 (face font-lock-constant-face fontified nil) 200 201 (fontified nil) 201 205 (face font-lock-type-face fontified nil) 205 206 (face font-lock-type-face c-type c-decl-id-start fontified nil) 206 209 (fontified nil) 209 215 (face font-lock-keyword-face fontified nil) 215 216 (fontified nil) 216 220 (face font-lock-keyword-face fontified nil) 220 221 (c-type c-decl-type-start face font-lock-keyword-face fontified nil) 221 222 (fontified nil) 222 231 (face font-lock-type-face fontified nil) 231 239 (fontified nil) 239 245 (face font-lock-keyword-face fontified nil) 245 246 (fontified nil) 246 252 (face font-lock-keyword-face fontified nil) 252 253 (fontified nil) 253 256 (face font-lock-type-face fontified nil) 256 257 (face font-lock-type-face c-type c-decl-id-start fontified nil) 257 258 (fontified nil) 258 262 (face font-lock-function-name-face fontified nil) 262 263 (c-type c-decl-arg-start fontified nil) 263 269 (face font-lock-type-face fontified nil) 269 270 (fontified nil) 270 274 (face font-lock-variable-name-face fontified nil) 274 289 (fontified nil) 289 291 (face font-lock-keyword-face fontified nil) 291 343 (fontified nil) 343 390 (face font-lock-string-face fontified nil) 390 405 (fontified nil) 405 411 (face font-lock-keyword-face fontified nil) 411 432 (fontified nil) 432 437 (face font-lock-type-face fontified nil) 437 438 (face font-lock-type-face c-type c-decl-id-start fontified nil) 438 439 (fontified nil) 439 452 (face font-lock-variable-name-face fontified nil) 452 472 (fontified nil) 472 477 (face font-lock-type-face fontified nil) 477 478 (face font-lock-type-face c-type c-decl-id-start fontified nil) 478 479 (fontified nil) 479 486 (face font-lock-variable-name-face fontified nil) 486 517 (fontified nil) 517 519 (face font-lock-string-face fontified nil) 519 530 (fontified nil) 530 533 (face font-lock-keyword-face fontified nil) 533 548 (fontified nil) 548 553 (face font-lock-type-face fontified nil) 553 554 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 554 560 (face font-lock-type-face fontified nil) 560 561 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 561 562 (fontified nil) 562 567 (face font-lock-variable-name-face fontified nil) 567 570 (fontified nil) 570 573 (face font-lock-keyword-face fontified nil) 573 574 (fontified nil) 574 579 (face font-lock-type-face fontified nil) 579 580 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 580 581 (category c->-as-paren-syntax fontified nil) 581 597 (fontified nil) 597 606 (face font-lock-type-face fontified nil) 606 607 (face font-lock-type-face c-type c-decl-id-start fontified nil) 607 608 (fontified nil) 608 621 (face font-lock-variable-name-face fontified nil) 621 624 (fontified nil) 624 627 (face font-lock-keyword-face fontified nil) 627 628 (fontified nil) 628 638 (face font-lock-type-face fontified nil) 638 667 (fontified nil) 667 680 (face font-lock-type-face fontified nil) 680 681 (face font-lock-type-face c-type c-decl-id-start fontified nil) 681 682 (fontified nil) 682 688 (face font-lock-variable-name-face fontified nil) 688 691 (fontified nil) 691 694 (face font-lock-keyword-face fontified nil) 694 695 (fontified nil) 695 709 (face font-lock-type-face fontified nil) 709 739 (fontified nil) 739 744 (face font-lock-type-face fontified nil) 744 745 (face font-lock-type-face c-type c-decl-id-start fontified nil) 745 746 (fontified nil) 746 753 (face font-lock-variable-name-face fontified nil) 753 768 (fontified nil) 768 773 (face font-lock-keyword-face fontified nil) 773 808 (fontified nil) 808 812 (face font-lock-constant-face fontified nil) 812 882 (fontified nil) 882 887 (face font-lock-type-face fontified nil) 887 888 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 888 894 (face font-lock-type-face fontified nil) 894 895 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 895 896 (fontified nil) 896 899 (face font-lock-variable-name-face fontified nil) 899 946 (fontified nil) 946 951 (face font-lock-type-face fontified nil) 951 952 (face font-lock-type-face c-type c-decl-id-start fontified nil) 952 953 (fontified nil) 953 962 (face font-lock-variable-name-face fontified nil) 962 992 (fontified nil) 992 995 (face font-lock-string-face fontified nil) 995 997 (fontified nil) 997 999 (face font-lock-string-face fontified nil) 999 1018 (fontified nil) 1018 1023 (face font-lock-type-face fontified nil) 1023 1024 (face font-lock-type-face c-type c-decl-id-start fontified nil) 1024 1025 (fontified nil) 1025 1032 (face font-lock-variable-name-face fontified nil) 1032 1067 (fontified nil) 1067 1077 (face font-lock-constant-face fontified nil) 1077 1078 (fontified nil) 1078 1082 (face font-lock-constant-face fontified nil) 1082 1099 (fontified nil) 1099 1107 (face font-lock-string-face fontified nil) 1107 1109 (fontified nil) 1109 1111 (face font-lock-string-face fontified nil) 1111 1130 (fontified nil) 1130 1135 (face font-lock-type-face fontified nil) 1135 1136 (face font-lock-type-face c-type c-decl-id-start fontified nil) 1136 1137 (fontified nil) 1137 1146 (face font-lock-variable-name-face fontified nil) 1146 1176 (fontified nil) 1176 1179 (face font-lock-string-face fontified nil) 1179 1181 (fontified nil) 1181 1183 (face font-lock-string-face fontified nil) 1183 1202 (fontified nil) 1202 1207 (face font-lock-type-face fontified nil) 1207 1208 (face font-lock-type-face c-type c-decl-id-start fontified nil) 1208 1209 (fontified nil) 1209 1216 (face font-lock-variable-name-face fontified nil) 1216 1251 (fontified nil) 1251 1261 (face font-lock-constant-face fontified nil) 1261 1262 (fontified nil) 1262 1266 (face font-lock-constant-face fontified nil) 1266 1283 (fontified nil) 1283 1291 (face font-lock-string-face fontified nil) 1291 1293 (fontified nil) 1293 1295 (face font-lock-string-face fontified nil) 1295 1315 (fontified nil) 1315 1321 (face font-lock-keyword-face fontified nil) 1321 1379 (fontified nil) 1379 1381 (face font-lock-keyword-face fontified nil) 1381 1398 (fontified nil) 1398 1402 (face font-lock-string-face fontified nil) 1402 1472 (fontified nil) 1472 1476 (face font-lock-keyword-face fontified nil) 1476 1477 (fontified nil) 1477 1479 (face font-lock-keyword-face fontified nil) 1479 1496 (fontified nil) 1496 1500 (face font-lock-string-face fontified nil) 1500 1505 (fontified nil) 1505 1553 (fontified nil) 1553 1562 (face font-lock-string-face fontified nil) 1562 1616 (fontified nil) 1616 1648 (face font-lock-string-face fontified nil) 1648 1665 (fontified nil) 1665 1669 (face font-lock-keyword-face fontified nil) 1669 1670 (fontified nil) 1670 1672 (face font-lock-keyword-face fontified nil) 1672 1689 (fontified nil) 1689 1696 (face font-lock-string-face fontified nil) 1696 1717 (fontified nil) 1717 1722 (face font-lock-type-face fontified nil) 1722 1723 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 1723 1729 (face font-lock-type-face fontified nil) 1729 1730 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 1730 1731 (fontified nil) 1731 1738 (face font-lock-variable-name-face fontified nil) 1738 1804 (fontified nil) 1804 1822 (face font-lock-string-face fontified nil) 1822 1845 (fontified nil) 1845 1880 (fontified nil) 1880 1912 (face font-lock-string-face fontified nil) 1912 1929 (fontified nil) 1929 1933 (face font-lock-keyword-face fontified nil) 1933 2013 (fontified nil) 2013 2018 (face font-lock-keyword-face fontified nil) 2018 2068 (fontified nil) 2068 2090 (face font-lock-string-face fontified nil) 2090 2148 (fontified nil) 2148 2155 (face font-lock-keyword-face fontified nil) 2155 2156 (fontified nil) 2156 2162 (face font-lock-keyword-face fontified nil) 2162 2163 (fontified nil) 2163 2166 (face font-lock-type-face fontified nil) 2166 2167 (face font-lock-type-face c-type c-decl-id-start fontified nil) 2167 2168 (fontified nil) 2168 2183 (face font-lock-function-name-face fontified nil) 2183 2184 (c-type c-decl-arg-start fontified nil) 2184 2190 (face font-lock-type-face fontified nil) 2190 2191 (fontified nil) 2191 2204 (face font-lock-variable-name-face fontified nil) 2204 2205 (c-type c-decl-arg-start fontified nil) 2205 2206 (fontified nil) 2206 2212 (face font-lock-type-face fontified nil) 2212 2213 (fontified nil) 2213 2222 (face font-lock-variable-name-face fontified nil) 2222 2224 (fontified nil) 2224 2230 (face font-lock-keyword-face fontified nil) 2230 2231 (fontified nil) 2231 2242 (face font-lock-type-face fontified nil) 2242 2253 (fontified nil) 2253 2262 (face font-lock-type-face fontified nil) 2262 2263 (face font-lock-type-face c-type c-decl-id-start fontified nil) 2263 2264 (fontified nil) 2264 2279 (face font-lock-variable-name-face fontified nil) 2279 2282 (fontified nil) 2282 2285 (face font-lock-keyword-face fontified nil) 2285 2286 (fontified nil) 2286 2296 (face font-lock-type-face fontified nil) 2296 2321 (fontified nil) 2321 2334 (face font-lock-type-face fontified nil) 2334 2335 (face font-lock-type-face c-type c-decl-id-start fontified nil) 2335 2336 (fontified nil) 2336 2344 (face font-lock-variable-name-face fontified nil) 2344 2347 (fontified nil) 2347 2350 (face font-lock-keyword-face fontified nil) 2350 2351 (fontified nil) 2351 2365 (face font-lock-type-face fontified nil) 2365 2452 (fontified nil) 2452 2453 (fontified nil rear-nonsticky nil)) . 1) (undo-tree-id563 . -1367) (undo-tree-id564 . -2143) (undo-tree-id565 . -1366) (undo-tree-id566 . -2143) (undo-tree-id567 . -2143) (nil rear-nonsticky t 2453 . 2454) (t 26109 9501 947741 27000)) (26109 9501 932799 255000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2178) (undo-tree-id94 . -1) (#("q" 0 1 (fontified t)) . -2179) (undo-tree-id95 . -1) (#("u" 0 1 (fontified t)) . -2180) (undo-tree-id96 . -1) (#("a" 0 1 (fontified t)) . -2181) (undo-tree-id97 . -1) (#("l" 0 1 (fontified t)) . -2182) (undo-tree-id98 . -1) (#("s" 0 1 (fontified t)) . -2183) (undo-tree-id99 . -1) 2184 (t 26109 10981 594955 114000)) nil (26109 11219 635388 188000) 0 nil])
([nil nil ((619 . 622)) ((#("arg" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 619) (undo-tree-id685 . -3) (undo-tree-id686 . -3) (undo-tree-id687 . -3) (undo-tree-id688 . -3) (undo-tree-id689 . -3) (undo-tree-id690 . -3) (undo-tree-id691 . -3) (undo-tree-id692 . -3) (undo-tree-id693 . -3) (undo-tree-id694 . -3) (undo-tree-id695 . -3) (undo-tree-id696 . -3) (undo-tree-id697 . -3) (undo-tree-id698 . -3) (undo-tree-id699 . -3)) (26109 10207 443125 264000) 0 nil])
nil
([nil nil ((2178 . 2186)) nil (26109 11219 635383 560000) 0 nil])
([nil nil ((622 . 628)) ((#("s.lent" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 622) (undo-tree-id671 . -6) (undo-tree-id672 . -5) (undo-tree-id673 . -5) (undo-tree-id674 . -5) (undo-tree-id675 . -5) (undo-tree-id676 . -5) (undo-tree-id677 . -5) (undo-tree-id678 . -5) (undo-tree-id679 . -5) (undo-tree-id680 . -5) (undo-tree-id681 . -5) (undo-tree-id682 . -5) (undo-tree-id683 . -5) (undo-tree-id684 . -6)) (26109 10207 238913 969000) 0 nil])
([nil nil ((2190 . 2191)) nil (26109 11219 635383 29000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -627) (undo-tree-id605 . -1) 628) ((627 . 628)) (26109 10207 29125 474000) 0 nil])
([nil nil ((2191 . 2198)) nil (26109 11219 635382 518000) 0 nil])
([nil nil ((627 . 630)) ((#("gth" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 627) (undo-tree-id659 . -3) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -3)) (26109 10206 815337 547000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-string-face fontified t)) . -2197) (undo-tree-id93 . -1) 2198) nil (26109 11219 635381 626000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -628) (undo-tree-id603 . -1) (#("h" 0 1 (fontified t)) . -629) (undo-tree-id604 . -1) 630) ((628 . 630)) (26109 10206 599105 242000) 0 nil])
([nil nil ((2197 . 2198)) nil (26109 11219 635380 294000) 0 nil])
([nil nil ((628 . 635)) ((#("th > 1 " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 628) (undo-tree-id649 . -7) (undo-tree-id650 . -6) (undo-tree-id651 . -6) (undo-tree-id652 . -6) (undo-tree-id653 . -6) (undo-tree-id654 . -6) (undo-tree-id655 . -6) (undo-tree-id656 . -6) (undo-tree-id657 . -6) (undo-tree-id658 . -7)) (26109 10206 386784 114000) 0 nil])
([nil nil ((2198 . 2211)) nil (26109 11219 635379 502000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -634) (undo-tree-id602 . -1) 635) ((634 . 635)) (26109 10206 185142 431000) 0 nil])
([nil nil ((2211 . 2212)) nil (26109 11219 635378 891000) 0 nil])
([nil nil ((634 . 635)) ((#("?" 0 1 (fontified t)) . 634) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1)) (26109 10205 987171 515000) 0 nil])
([nil nil ((2216 . 2217)) nil (26109 11219 635378 230000) 0 nil])
([nil nil ((634 . 635)) ((#(" " 0 1 (fontified t)) . 634)) (26109 10205 772803 796000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -2217) (undo-tree-id92 . -1) 2218) nil (26109 11219 635377 418000) 0 nil])
([nil nil ((636 . 640)) ((#(" aeg" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 636) (undo-tree-id637 . -4) (undo-tree-id638 . -2) (undo-tree-id639 . -2) (undo-tree-id640 . -2) (undo-tree-id641 . -2) (undo-tree-id642 . -4)) (26109 10205 567417 269000) 0 nil])
([nil nil ((2213 . 2214)) nil (26109 11219 635375 975000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -638) (undo-tree-id600 . -1) (#("g" 0 1 (fontified t)) . -639) (undo-tree-id601 . -1) 640) ((638 . 640)) (26109 10205 399111 448000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -2212) (undo-tree-id91 . -1) 2213) nil (26109 11219 635375 134000) 0 nil])
([nil nil ((638 . 644)) ((#("rgs[1]" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 638) (undo-tree-id633 . -6) (undo-tree-id634 . -6) (undo-tree-id635 . -6) (undo-tree-id636 . -6)) (26109 10205 167370 221000) 0 nil])
([nil nil ((2190 . 2191)) nil (26109 11219 635373 601000) 0 nil])
([nil nil ((644 . 645)) ((#(" " 0 1 (fontified t)) . 644) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1)) (26109 10204 915322 349000) 0 nil])
([nil nil ((#("archivo." 0 1 (face font-lock-comment-face fontified t c-in-sws t) 1 2 (face font-lock-comment-face fontified t c-in-sws t) 2 3 (face font-lock-comment-face fontified t c-in-sws t) 3 4 (face font-lock-comment-face fontified t c-in-sws t) 4 5 (face font-lock-comment-face fontified t c-in-sws t) 5 6 (face font-lock-comment-face fontified t c-in-sws t) 6 7 (face font-lock-comment-face fontified t c-in-sws t) 7 8 (face font-lock-comment-face fontified t c-in-sws t)) . -2266) (undo-tree-id90 . -8) 2274) nil (26109 11219 635372 900000) 0 nil])
([nil nil ((645 . 646)) ((#(":" 0 1 (fontified t)) . 645) (undo-tree-id628 . -1) (undo-tree-id629 . -1)) (26109 10204 634997 329000) 0 nil])
([nil nil ((#("el " 0 1 (face font-lock-comment-face fontified t c-in-sws t) 1 2 (face font-lock-comment-face fontified t c-in-sws t) 2 3 (face font-lock-comment-face fontified t c-in-sws t)) . -2263) (undo-tree-id89 . -3) 2266) nil (26109 11219 635371 637000) 0 nil])
([nil nil ((646 . 647)) ((#(" " 0 1 (fontified t)) . 646)) (26109 10204 164923 131000) 0 nil])
([nil nil ((#("en " 0 1 (face font-lock-comment-face fontified t c-in-sws t) 1 2 (face font-lock-comment-face fontified t c-in-sws t) 2 3 (face font-lock-comment-face fontified t c-in-sws t)) . -2260) (undo-tree-id88 . -3) 2263) nil (26109 11219 635370 74000) 0 nil])
([nil nil ((#("
	if(args.length > 1){
	    bandera = args[1];
	}" 0 1 (fontified t) 1 2 (fontified t) 2 4 (face font-lock-keyword-face fontified t) 4 49 (fontified t)) . 650) (undo-tree-id599 . -49)) ((650 . 699)) (26109 10203 931117 528000) 0 nil])
([nil nil ((#("reversa " 0 1 (face font-lock-comment-face fontified t c-in-sws t) 1 2 (face font-lock-comment-face fontified t c-in-sws t) 2 3 (face font-lock-comment-face fontified t c-in-sws t) 3 4 (face font-lock-comment-face fontified t c-in-sws t) 4 5 (face font-lock-comment-face fontified t c-in-sws t) 5 6 (face font-lock-comment-face fontified t c-in-sws t) 6 7 (face font-lock-comment-face fontified t c-in-sws t) 7 8 (face font-lock-comment-face fontified t c-in-sws t)) . -2252) (undo-tree-id87 . -8) 2260) nil (26109 11219 635368 652000) 0 nil])
([nil nil ((#("getLongitud();" 0 14 (fontified t)) . -1020) (undo-tree-id595 . -14) (undo-tree-id597 . -13) 1034) ((1020 . 1034)) (26109 10203 706897 918000) 0 nil])
([nil nil ((#("la " 0 1 (face font-lock-comment-face fontified t c-in-sws t) 1 2 (face font-lock-comment-face fontified t c-in-sws t) 2 3 (face font-lock-comment-face fontified t c-in-sws t)) . -2249) (undo-tree-id86 . -3) 2252) nil (26109 11219 635367 239000) 0 nil])
([nil nil ((#("lista." 0 6 (fontified t)) . -1014) (undo-tree-id590 . -6) (undo-tree-id592 . -6) (undo-tree-id594 . -6) 1020) ((1014 . 1020)) (26109 10203 464720 801000) 0 nil])
([nil nil ((#("guardar " 0 1 (face font-lock-comment-face fontified t c-in-sws t) 1 2 (face font-lock-comment-face fontified t c-in-sws t) 2 3 (face font-lock-comment-face fontified t c-in-sws t) 3 4 (face font-lock-comment-face fontified t c-in-sws t) 4 5 (face font-lock-comment-face fontified t c-in-sws t) 5 6 (face font-lock-comment-face fontified t c-in-sws t) 6 7 (face font-lock-comment-face fontified t c-in-sws t) 7 8 (face font-lock-comment-face fontified t c-in-sws t)) . -2241) (undo-tree-id85 . -8) 2249) nil (26109 11219 635365 987000) 0 nil])
([nil nil ((#("longitd = " 0 7 (face font-lock-variable-name-face fontified t) 7 10 (fontified t)) . -1004) (undo-tree-id584 . -10) (undo-tree-id586 . -10) (undo-tree-id588 . -10) 1014) ((1004 . 1014)) (26109 10203 257159 333000) 0 nil])
([nil nil ((#("que " 0 1 (face font-lock-comment-face fontified t c-in-sws t) 1 2 (face font-lock-comment-face fontified t c-in-sws t) 2 3 (face font-lock-comment-face fontified t c-in-sws t) 3 4 (face font-lock-comment-face fontified t c-in-sws t)) . -2237) (undo-tree-id84 . -4) 2241) nil (26109 11219 635364 704000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . 995) (#("	    int " 0 5 (fontified t) 5 7 (face font-lock-type-face fontified t) 7 8 (face font-lock-type-face c-type c-decl-id-start fontified t) 8 9 (fontified t)) . -995) (undo-tree-id617 . -9) 1004) ((995 . 1004) (995 . 996)) (26109 10203 61632 280000) 0 nil] [nil nil ((#("int " 0 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face c-type c-decl-id-start fontified t) 3 4 (fontified t)) . -1000) (undo-tree-id577 . -4) (undo-tree-id578 . -4) (undo-tree-id579 . -4) (undo-tree-id580 . -4) (undo-tree-id581 . -4) (undo-tree-id582 . -4) (undo-tree-id583 . -4) 1004) ((1000 . 1004)) (26109 9730 68868 99000) 0 nil])
([nil nil ((#("tengo " 0 1 (face font-lock-comment-face fontified t c-in-sws t) 1 2 (face font-lock-comment-face fontified t c-in-sws t) 2 3 (face font-lock-comment-face fontified t c-in-sws t) 3 4 (face font-lock-comment-face fontified t c-in-sws t) 4 5 (face font-lock-comment-face fontified t c-in-sws t) 5 6 (face font-lock-comment-face fontified t c-in-sws t)) . -2231) (undo-tree-id83 . -6) 2237) nil (26109 11219 635363 1000) 0 nil])
([nil nil ((2062 . 2064) (t 26109 10079 851162 409000)) ((#("//" 0 1 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) . 2062)) (26109 10202 881096 835000) 0 nil])
([nil nil ((#("Lista<>();
	    " 0 5 (face font-lock-type-face fontified t) 5 6 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 6 7 (fontified t category c->-as-paren-syntax) 7 11 (fontified t) 11 16 (fontified t)) . -984) (undo-tree-id568 . -16) (undo-tree-id569 . -16) (undo-tree-id570 . -16) (undo-tree-id571 . -16) (undo-tree-id572 . -16) (undo-tree-id573 . -16) (undo-tree-id574 . -16) (undo-tree-id575 . -11) (undo-tree-id576 . -16) 1000) ((984 . 1000)) (26109 9730 68294 979000) 0 nil])
([nil nil ((#("Aqui " 0 1 (face font-lock-comment-face fontified t c-in-sws t) 1 2 (face font-lock-comment-face fontified t c-in-sws t) 2 3 (face font-lock-comment-face fontified t c-in-sws t) 3 4 (face font-lock-comment-face fontified t c-in-sws t) 4 5 (face font-lock-comment-face fontified t c-in-sws t)) . -2226) (undo-tree-id82 . -5) 2231) nil (26109 11219 635361 508000) 0 nil])
([nil nil ((2099 . 2104) (#("		" 0 1 (c-is-sws t fontified nil) 1 2 (c-is-sws t fontified nil)) . 2099) (2101 . 2103)) ((#("//" 0 1 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified nil) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified nil)) . 2101) (2099 . 2101) (#("	    " 0 1 (c-is-sws t fontified t) 1 5 (c-is-sws t c-in-sws t fontified t)) . 2099)) (26109 10202 698759 762000) 0 nil])
nil
([nil nil ((#("/" 0 1 (fontified t c-is-sws t c-in-sws t)) . -2223) (undo-tree-id79 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -2224) (undo-tree-id80 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -2225) (undo-tree-id81 . -1) 2226) nil (26109 11219 635359 625000) 0 nil])
([nil nil ((2145 . 2150) (#("	" 0 1 (c-is-sws t fontified nil)) . 2145) (2146 . 2148)) ((#("//" 0 1 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified nil) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified nil)) . 2146) (2145 . 2146) (#("	    " 0 1 (c-is-sws t fontified t) 1 5 (c-is-sws t c-in-sws t fontified t)) . 2145)) (26109 10202 507047 926000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2270 . 2271) (nil fontified nil 2270 . 2271) (nil fontified nil 2269 . 2270) (nil fontified nil 2268 . 2269) (nil fontified nil 2267 . 2268) (nil fontified nil 2266 . 2267) (nil fontified nil 2265 . 2266) (nil fontified nil 2264 . 2265) (nil fontified nil 2263 . 2264) (nil fontified nil 2262 . 2263) (nil fontified nil 2261 . 2262) (nil fontified nil 2260 . 2261) (nil fontified nil 2259 . 2260) (nil fontified nil 2258 . 2259) (nil fontified nil 2257 . 2258) (nil fontified nil 2256 . 2257) (nil fontified nil 2255 . 2256) (nil fontified nil 2254 . 2255) (nil fontified nil 2253 . 2254) (nil fontified nil 2252 . 2253) (nil fontified nil 2251 . 2252) (nil fontified nil 2250 . 2251) (nil fontified nil 2249 . 2250) (nil fontified nil 2248 . 2249) (nil fontified nil 2247 . 2248) (nil fontified nil 2246 . 2247) (nil fontified nil 2245 . 2246) (nil fontified nil 2244 . 2245) (nil fontified nil 2243 . 2244) (nil fontified nil 2242 . 2243) (nil fontified nil 2241 . 2242) (nil fontified nil 2240 . 2241) (nil fontified nil 2239 . 2240) (nil fontified nil 2238 . 2239) (nil fontified nil 2237 . 2238) (nil fontified nil 2236 . 2237) (nil fontified nil 2235 . 2236) (nil fontified nil 2234 . 2235) (nil fontified nil 2233 . 2234) (nil fontified nil 2232 . 2233) (nil fontified nil 2231 . 2232) (nil fontified nil 2230 . 2231) (nil fontified nil 2229 . 2230) (nil fontified nil 2228 . 2229) (nil fontified nil 2227 . 2228) (nil fontified nil 2226 . 2227) (nil fontified nil 2225 . 2226) (nil fontified nil 2224 . 2225) (nil fontified nil 2223 . 2224) (2223 . 2271)) nil (26109 11219 635352 231000) 0 nil])
([nil nil ((2189 . 2194) (#("	" 0 1 (c-is-sws t fontified nil)) . 2189) (2190 . 2192)) ((#("//" 0 1 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified nil) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified nil)) . 2190) (2189 . 2190) (#("	    " 0 1 (c-is-sws t fontified t) 1 5 (c-is-sws t c-in-sws t fontified t)) . 2189)) (26109 10202 326755 158000) 0 nil])
([nil nil ((#("archivo." 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (rear-nonsticky t fontified t)) . -2263) (undo-tree-id78 . -8) 2271) nil (26109 11219 635345 378000) 0 nil])
([nil nil ((2215 . 2220) (#("	" 0 1 (c-is-sws t fontified nil)) . 2215) (2216 . 2218)) ((#("//" 0 1 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified nil) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified nil)) . 2216) (2215 . 2216) (#("	    " 0 1 (c-is-sws t fontified t) 1 5 (c-is-sws t c-in-sws t fontified t)) . 2215)) (26109 10202 141425 605000) 0 nil])
([nil nil ((#("el " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -2260) (undo-tree-id77 . -3) 2263) nil (26109 11219 635343 996000) 0 nil])
([nil nil ((2283 . 2284)) ((#("]" 0 1 (fontified t)) . 2283) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1)) (26109 10201 952482 26000) 0 nil])
([nil nil ((#("en " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -2257) (undo-tree-id76 . -3) 2260) nil (26109 11219 635342 433000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t c-is-sws t)) . -2282) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id621 . -1) (#("]" 0 1 (fontified t)) . -2283) (undo-tree-id623 . -1) 2284) ((2282 . 2284) (t 26109 10157 582320 236000)) (26109 10157 565878 912000) 0 nil])
([nil nil ((#("reversa " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . -2249) (undo-tree-id75 . -8) 2257) nil (26109 11219 635341 160000) 0 nil])
nil
([nil nil ((#("la " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -2246) (undo-tree-id74 . -3) 2249) nil (26109 11219 635339 858000) 0 nil])
([nil nil ((#("guardar " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t)) . -2238) (undo-tree-id73 . -8) 2246) nil (26109 11219 635338 385000) 0 nil])
([nil nil ((#("que " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -2234) (undo-tree-id72 . -4) 2238) nil (26109 11219 635337 213000) 0 nil])
([nil nil ((#("tengo " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . -2228) (undo-tree-id71 . -6) 2234) nil (26109 11219 635335 901000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -2223) (undo-tree-id66 . -1) (#("q" 0 1 (fontified t)) . -2224) (undo-tree-id67 . -1) (#("u" 0 1 (fontified t)) . -2225) (undo-tree-id68 . -1) (#("i" 0 1 (fontified t)) . -2226) (undo-tree-id69 . -1) (#(" " 0 1 (fontified t)) . -2227) (undo-tree-id70 . -1) 2228) nil (26109 11219 635333 696000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2745 . 2746) (nil fontified nil 2240 . 2746) (nil fontified nil 2239 . 2240) (nil category c->-as-paren-syntax 2239 . 2240) (nil fontified nil 2233 . 2239) (nil fontified nil 2232 . 2233) (nil category c-<-as-paren-syntax 2232 . 2233) (nil fontified nil 2223 . 2232) (2223 . 2746)) nil (26109 11219 635328 457000) 0 nil])
([nil nil ((2266 . 2272) (#("    " 0 4 (fontified t)) . 2266) (undo-tree-id65 . -3) 2269) nil (26109 11219 635325 972000) 0 nil])
([nil nil ((2278 . 2281) (#("        " 0 8 (fontified t)) . 2278) 2298) nil (26109 11219 635317 576000) 0 nil])
([nil nil ((2341 . 2344) (#("        " 0 8 (fontified t)) . 2341) 2377) nil (26109 11219 635316 434000) 0 nil])
([nil nil ((2407 . 2410) (#("        " 0 8 (fontified t)) . 2407) 2445) nil (26109 11219 635315 603000) 0 nil])
([nil nil ((2441 . 2448) (#("            " 0 12 (fontified t)) . 2441) 2482) nil (26109 11219 635314 691000) 0 nil])
([nil nil ((2478 . 2481) (#("        " 0 8 (fontified t)) . 2478) 2487) nil (26109 11219 635313 449000) 0 nil])
([nil nil ((2483 . 2486) (#("        " 0 8 (fontified t)) . 2483) 2508) nil (26109 11219 635312 627000) 0 nil])
([nil nil ((2504 . 2507) (#("        " 0 8 (fontified t)) . 2504) 2545) nil (26109 11219 635311 765000) 0 nil])
([nil nil ((2561 . 2567) (#("    " 0 4 (fontified t)) . 2561) 2590) nil (26109 11219 635310 713000) 0 nil])
([nil nil ((2593 . 2596) (#("        " 0 8 (fontified t)) . 2593) 2638) nil (26109 11219 635309 611000) 0 nil])
([nil nil ((2676 . 2679) (#("        " 0 8 (fontified t)) . 2676) 2704) nil (26109 11219 635307 277000) 0 nil])
([nil nil ((2700 . 2706) (#("    " 0 4 (fontified t)) . 2700) 2705) nil (26109 11312 385157 416000) 0 nil])
([nil nil ((2222 . 2224) (#("		    " 0 2 (fontified nil c-is-sws t c-in-sws t) 2 6 (fontified nil)) . 2222) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (2221 . 2222) (t 26109 11219 654965 776000)) nil (26109 11319 123116 682000) 0 nil] [nil nil ((2266 . 2267) (t 26109 11219 654965 776000)) ((#("
" 0 1 (fontified t)) . 2266)) (26109 11312 384137 629000) 0 nil])
([nil nil ((2221 . 2223)) nil (26109 11319 123113 836000) 0 nil])
nil
([nil nil ((2223 . 2225)) nil (26109 11319 123112 754000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-comment-face fontified t)) . -2224) (undo-tree-id100 . -1) (undo-tree-id101 . -1) 2225) nil (26109 11319 123110 350000) 0 nil])
([nil nil ((2224 . 2234)) nil (26109 43437 330020 194000) 0 nil])
([nil nil ((1832 . 1833) (t 26109 11319 141930 294000)) nil (26109 43635 741239 378000) 0 nil] [nil nil ((#("//NO FUNCIONA
" 0 1 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1 2 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2 14 (face font-lock-comment-face fontified t c-in-sws t)) . 2221) (undo-tree-id0 . -14) (undo-tree-id1 . -14) (t 26109 11319 141930 294000)) ((2221 . 2235)) (26109 43437 329230 997000) 0 nil])
([nil nil ((2069 . 2072)) nil (26109 43635 741238 677000) 0 nil])
nil
([nil nil ((2721 . 2728)) nil (26109 43635 741238 186000) 0 nil])
([nil nil ((#("			for (String linea : reversa) {
			    escritor.write(linea + \"\\n\");
			}
" 0 3 (fontified t) 3 6 (face font-lock-keyword-face fontified t) 6 8 (fontified t) 8 13 (face font-lock-type-face fontified t) 13 14 (face font-lock-type-face c-type c-decl-id-start fontified t) 14 15 (fontified t) 15 20 (face font-lock-variable-name-face fontified t) 20 64 (fontified t) 64 68 (face font-lock-string-face fontified t) 68 76 (fontified t)) . 2421) (undo-tree-id19 . -76)) nil (26109 43635 741237 555000) 0 nil])
([nil nil ((2421 . 2422)) nil (26109 43635 741236 443000) 0 nil])
([nil nil ((2421 . 2424)) nil (26109 43635 741235 982000) 0 nil])
([nil nil ((2424 . 2435)) nil (26109 43635 741235 451000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2433) (undo-tree-id17 . -1) (#("w" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2434) (undo-tree-id18 . -1) 2435) nil (26109 43635 741234 680000) 0 nil])
([nil nil ((2433 . 2436)) nil (26109 43635 741232 806000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -2434) (undo-tree-id15 . -1) (#("r" 0 1 (fontified t)) . -2435) (undo-tree-id16 . -1) 2436) nil (26109 43635 741232 45000) 0 nil])
([nil nil ((2434 . 2435)) nil (26109 43635 741230 292000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2433) (undo-tree-id13 . -1) (#("w" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2434) (undo-tree-id14 . -1) 2435) nil (26109 43635 741229 450000) 0 nil])
([nil nil ((2433 . 2437)) nil (26109 43635 741227 807000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -2436) (undo-tree-id12 . -1) 2437) nil (26109 43635 741227 76000) 0 nil])
([nil nil ((2436 . 2438)) nil (26109 43635 741225 803000) 0 nil])
([nil nil ((2438 . 2440)) nil (26109 43635 741225 292000) 0 nil])
([nil nil ((2439 . 2449)) nil (26109 43635 741224 781000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -2447) (undo-tree-id10 . -1) (#("o" 0 1 (fontified t)) . -2448) (undo-tree-id11 . -1) 2449) nil (26109 43635 741223 850000) 0 nil])
([nil nil ((2447 . 2450)) nil (26109 43635 741221 966000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -2447) (undo-tree-id7 . -1) (#("O" 0 1 (fontified t)) . -2448) (undo-tree-id8 . -1) (#("s" 0 1 (fontified t)) . -2449) (undo-tree-id9 . -1) 2450) nil (26109 43635 741220 674000) 0 nil])
([nil nil ((2447 . 2449)) nil (26109 43635 741216 506000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -2447) (undo-tree-id5 . -1) (#("O" 0 1 (fontified t)) . -2448) (undo-tree-id6 . -1) 2449) nil (26109 43635 741215 705000) 0 nil])
([nil nil ((2447 . 2449)) nil (26109 43635 741213 972000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -2447) (undo-tree-id3 . -1) (#("O" 0 1 (fontified t)) . -2448) (undo-tree-id4 . -1) 2449) nil (26109 43635 741212 900000) 0 nil])
([nil nil ((2447 . 2448)) nil (26109 43635 741210 114000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2447) (undo-tree-id2 . -1) 2448) nil (26109 43635 741208 582000) 0 nil])
([nil nil ((2447 . 2455)) nil (26109 43635 741199 745000) 0 nil])
([nil nil ((2455 . 2457)) nil (26109 43635 741198 323000) 0 nil])
([nil nil ((2458 . 2459)) nil (26109 43635 741193 854000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -2428) (undo-tree-id20 . -1) 2429 (t 26109 43635 789230 202000)) nil (26109 43653 96304 694000) 0 nil])
([nil nil ((2427 . 2428)) nil (26109 43653 96292 131000) 0 nil])
([nil nil ((1 . 8) (#("package" 0 7 (face font-lock-keyword-face fontified t)) . 1) (t 26109 43653 115304 937000)) nil (26109 47131 671895 659000) 0 nil])
([nil nil ((2225 . 2226)) nil (26109 47131 671894 547000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -2225) (undo-tree-id26 . -1) 2226) nil (26109 47195 586845 463000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-type-face fontified t)) . -1) (undo-tree-id39 . -1) 2 (t 26109 47197 265612 702000)) nil (26109 47222 547203 666000) 0 nil] [nil nil ((#("//NO FUNCIONA
		Lista<String> reversa = ord.reversa();
		    try {
			FileWriter escritorArchivo = new FileWriter(nombreArchivo);
			BufferedWriter escritor = new BufferedWriter(escritorArchivo);
			escritor.write(reversa.toString());
			escritor.close();
			System.out.println(\"Archivo guardado correctamente\");
		    } catch (IOException e) {
			System.out.println(\"\\nAlgo salió mal al guardar la reversa en el archivo: \\n\");
			e.printStackTrace();
		    }
		    
	    }" 0 1 (face font-lock-comment-delimiter-face c-is-sws t c-in-sws t fontified t) 1 2 (face font-lock-comment-delimiter-face c-in-sws t fontified t) 2 13 (face font-lock-comment-face c-in-sws t fontified t) 13 14 (c-in-sws t face font-lock-comment-face fontified t) 14 15 (c-in-sws t c-is-sws t fontified t) 15 16 (c-in-sws t c-is-sws t fontified t) 16 17 (face font-lock-type-face c-is-sws t fontified t) 17 21 (face font-lock-type-face fontified t) 21 22 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 22 28 (face font-lock-type-face fontified t) 28 29 (c-type c-decl-id-start category c->-as-paren-syntax fontified t) 29 30 (fontified t) 30 37 (face font-lock-variable-name-face fontified t) 37 55 (fontified t) 55 61 (fontified t) 61 64 (face font-lock-keyword-face fontified t) 64 70 (fontified t) 70 79 (face font-lock-type-face fontified t) 79 80 (face font-lock-type-face c-type c-decl-id-start fontified t) 80 81 (fontified t) 81 96 (face font-lock-variable-name-face fontified t) 96 99 (fontified t) 99 102 (face font-lock-keyword-face fontified t) 102 103 (fontified t) 103 113 (face font-lock-type-face fontified t) 113 133 (fontified t) 133 146 (face font-lock-type-face fontified t) 146 147 (face font-lock-type-face c-type c-decl-id-start fontified t) 147 148 (fontified t) 148 156 (face font-lock-variable-name-face fontified t) 156 159 (fontified t) 159 162 (face font-lock-keyword-face fontified t) 162 163 (fontified t) 163 177 (face font-lock-type-face fontified t) 177 196 (fontified t) 196 199 (fontified t) 199 200 (fontified t) 200 201 (fontified t) 201 202 (fontified t) 202 203 (fontified t) 203 204 (fontified t) 204 205 (fontified t) 205 206 (fontified t) 206 207 (fontified t) 207 208 (fontified t) 208 209 (fontified t) 209 210 (fontified t) 210 211 (fontified t) 211 212 (fontified t) 212 213 (fontified t) 213 214 (fontified t) 214 215 (fontified t) 215 216 (fontified t) 216 217 (fontified t) 217 218 (fontified t) 218 219 (fontified t) 219 220 (fontified t) 220 221 (fontified t) 221 222 (fontified t) 222 223 (fontified t) 223 224 (fontified t) 224 225 (fontified t) 225 226 (fontified t) 226 227 (fontified t) 227 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 232 (fontified t) 232 233 (fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 238 (fontified t) 238 252 (fontified t) 252 253 (fontified t) 253 255 (fontified t) 255 256 (fontified t) 256 278 (fontified t) 278 310 (face font-lock-string-face fontified t) 310 321 (fontified t) 321 326 (face font-lock-keyword-face fontified t) 326 328 (fontified t) 328 367 (fontified t) 367 425 (face font-lock-string-face fontified t) 425 452 (fontified t) 452 459 (fontified t) 459 466 (fontified t) 466 467 (fontified t) 467 473 (fontified t)) . 2225) (undo-tree-id30 . -473) (undo-tree-id31 . -14) (undo-tree-id32 . -460)) ((2225 . 2698)) (26109 47194 225034 579000) 0 nil] [nil nil ((#("//NO FUNCIONA
		Lista<String> reversa = ord.reversa();
		    try {
			FileWriter escritorArchivo = new FileWriter(nombreArchivo);
			BufferedWriter escritor = new BufferedWriter(escritorArchivo);
			escritor.write(reversa.toString());
			escritor.close();
			System.out.println(\"Archivo guardado correctamente\");
		    } catch (IOException e) {
			System.out.println(\"\\nAlgo salió mal al guardar la reversa en el archivo: \\n\");
			e.printStackTrace();
		    }
		    
	    }
" 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t c-is-sws t) 1 2 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2 13 (face font-lock-comment-face fontified t c-in-sws t) 13 14 (c-in-sws t face font-lock-comment-face fontified t) 14 15 (fontified t c-is-sws t) 15 16 (c-is-sws t fontified t c-in-sws t) 16 17 (face font-lock-type-face fontified t c-is-sws t) 17 21 (face font-lock-type-face fontified t) 21 22 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 22 28 (face font-lock-type-face fontified t) 28 29 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 29 30 (fontified t) 30 37 (face font-lock-variable-name-face fontified t) 37 55 (fontified t) 55 61 (fontified t) 61 64 (face font-lock-keyword-face fontified t) 64 70 (fontified t) 70 79 (face font-lock-type-face fontified t) 79 80 (face font-lock-type-face c-type c-decl-id-start fontified t) 80 81 (fontified t) 81 96 (face font-lock-variable-name-face fontified t) 96 99 (fontified t) 99 102 (face font-lock-keyword-face fontified t) 102 103 (fontified t) 103 113 (face font-lock-type-face fontified t) 113 133 (fontified t) 133 146 (face font-lock-type-face fontified t) 146 147 (face font-lock-type-face c-type c-decl-id-start fontified t) 147 148 (fontified t) 148 156 (face font-lock-variable-name-face fontified t) 156 159 (fontified t) 159 162 (face font-lock-keyword-face fontified t) 162 163 (fontified t) 163 177 (face font-lock-type-face fontified t) 177 196 (fontified t) 196 199 (fontified t) 199 200 (fontified t) 200 201 (fontified t) 201 202 (fontified t) 202 203 (fontified t) 203 204 (fontified t) 204 205 (fontified t) 205 206 (fontified t) 206 207 (fontified t) 207 208 (fontified t) 208 209 (fontified t) 209 210 (fontified t) 210 211 (fontified t) 211 212 (fontified t) 212 213 (fontified t) 213 214 (fontified t) 214 215 (fontified t) 215 216 (fontified t) 216 217 (fontified t) 217 218 (fontified t) 218 219 (fontified t) 219 220 (fontified t) 220 221 (fontified t) 221 222 (fontified t) 222 223 (fontified t) 223 224 (fontified t) 224 225 (fontified t) 225 226 (fontified t) 226 227 (fontified t) 227 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 232 (fontified t) 232 233 (fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 238 (fontified t) 238 252 (fontified t) 252 253 (fontified t) 253 255 (fontified t) 255 256 (fontified t) 256 278 (fontified t) 278 310 (face font-lock-string-face fontified t) 310 321 (fontified t) 321 326 (face font-lock-keyword-face fontified t) 326 328 (fontified t) 328 367 (fontified t) 367 425 (face font-lock-string-face fontified t) 425 452 (fontified t) 452 459 (fontified t) 459 466 (fontified t) 466 467 (fontified t) 467 474 (fontified t)) . 2225) (undo-tree-id21 . -474) (undo-tree-id22 . -14) (undo-tree-id23 . -195) (undo-tree-id24 . -474) (undo-tree-id25 . -460)) ((2225 . 2699)) (26109 47131 671887 895000) 0 nil])
([nil nil ((1 . 2)) nil (26109 47222 547190 982000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2933 . 2934) (nil fontified nil 2225 . 2934) (2225 . 2934)) ((#("                try {
                    FileWriter escritorArchivo = new FileWriter(nombreArchivo);
                    BufferedWriter escritor = new BufferedWriter(escritorArchivo);
                    escritor.write(ord.toString());
                    escritor.newLine(); // Agregar una línea en blanco para separar la lista ordenada de la reversa
                    escritor.write(ord.reversa().toString());
                    escritor.close();
                    System.out.println(\"Archivo guardado correctamente\");
                } catch (IOException e) {
                    System.out.println(\"\\nAlgo salió mal al guardar la reversa en el archivo: \\n\");
                    e.printStackTrace();" 0 16 (fontified nil) 16 19 (face font-lock-keyword-face fontified nil) 19 42 (fontified nil) 42 51 (face font-lock-type-face fontified nil) 51 52 (face font-lock-type-face c-type c-decl-id-start fontified nil) 52 53 (fontified nil) 53 68 (face font-lock-variable-name-face fontified nil) 68 71 (fontified nil) 71 74 (face font-lock-keyword-face fontified nil) 74 75 (fontified nil) 75 85 (face font-lock-type-face fontified nil) 85 122 (fontified nil) 122 135 (face font-lock-type-face fontified nil) 135 136 (face font-lock-type-face c-type c-decl-id-start fontified nil) 136 137 (fontified nil) 137 145 (face font-lock-variable-name-face fontified nil) 145 148 (fontified nil) 148 151 (face font-lock-keyword-face fontified nil) 151 152 (fontified nil) 152 166 (face font-lock-type-face fontified nil) 166 276 (fontified nil) 276 277 (c-is-sws t c-in-sws t fontified nil) 277 278 (c-is-sws t c-in-sws t face font-lock-comment-delimiter-face fontified nil) 278 280 (c-in-sws t face font-lock-comment-delimiter-face fontified nil) 280 353 (c-in-sws t face font-lock-comment-face fontified nil) 353 373 (c-in-sws t c-is-sws t fontified nil) 373 374 (c-is-sws t fontified nil) 374 492 (fontified nil) 492 524 (face font-lock-string-face fontified nil) 524 545 (fontified nil) 545 550 (face font-lock-keyword-face fontified nil) 550 608 (fontified nil) 608 666 (face font-lock-string-face fontified nil) 666 708 (fontified nil) 708 709 (rear-nonsticky nil fontified nil)) . 2225) (nil fontified t 2891 . 2933) (nil fontified t 2833 . 2891) (nil fontified t 2775 . 2833) (nil fontified t 2770 . 2775) (nil fontified t 2749 . 2770) (nil fontified t 2717 . 2749) (nil fontified t 2599 . 2717) (nil fontified t 2598 . 2599) (nil fontified t 2578 . 2598) (nil fontified t 2505 . 2578) (nil fontified t 2503 . 2505) (nil fontified t 2502 . 2503) (nil fontified t 2501 . 2502) (nil fontified t 2391 . 2501) (nil fontified t 2377 . 2391) (nil fontified t 2376 . 2377) (nil fontified t 2373 . 2376) (nil fontified t 2370 . 2373) (nil fontified t 2362 . 2370) (nil fontified t 2361 . 2362) (nil fontified t 2360 . 2361) (nil fontified t 2347 . 2360) (nil fontified t 2310 . 2347) (nil fontified t 2300 . 2310) (nil fontified t 2299 . 2300) (nil fontified t 2296 . 2299) (nil fontified t 2293 . 2296) (nil fontified t 2278 . 2293) (nil fontified t 2277 . 2278) (nil fontified t 2276 . 2277) (nil fontified t 2267 . 2276) (nil fontified t 2244 . 2267) (nil fontified t 2241 . 2244) (nil fontified t 2225 . 2241) (nil rear-nonsticky t 2933 . 2934)) (26109 47193 917326 829000) 0 nil])
nil
([nil nil ((#("	Lista<String> reversa = ord.reversa();
		    try {
			FileWriter escritorArchivo = new FileWriter(nombreArchivo);
			BufferedWriter escritor = new BufferedWriter(escritorArchivo);
			escritor.write(reversa.toString());
			escritor.close();
			System.out.println(\"Archivo guardado correctamente\");
		    } catch (IOException e) {
			System.out.println(\"\\nAlgo salió mal al guardar la reversa en el archivo: \\n\");
			e.printStackTrace();
		    }
	" 0 1 (fontified nil c-in-sws t c-is-sws t) 1 2 (face font-lock-type-face fontified nil c-is-sws t) 2 6 (face font-lock-type-face fontified nil) 6 7 (c-<>-c-types-set t fontified nil category c-<-as-paren-syntax) 7 13 (face font-lock-type-face fontified nil) 13 14 (c-type c-decl-id-start fontified nil category c->-as-paren-syntax) 14 15 (fontified nil) 15 22 (face font-lock-variable-name-face fontified nil) 22 40 (fontified nil) 40 46 (fontified t) 46 49 (face font-lock-keyword-face fontified t) 49 55 (fontified t) 55 64 (face font-lock-type-face fontified t) 64 65 (face font-lock-type-face c-type c-decl-id-start fontified t) 65 66 (fontified t) 66 81 (face font-lock-variable-name-face fontified t) 81 84 (fontified t) 84 87 (face font-lock-keyword-face fontified t) 87 88 (fontified t) 88 98 (face font-lock-type-face fontified t) 98 118 (fontified t) 118 131 (face font-lock-type-face fontified t) 131 132 (face font-lock-type-face c-type c-decl-id-start fontified t) 132 133 (fontified t) 133 141 (face font-lock-variable-name-face fontified t) 141 144 (fontified t) 144 147 (face font-lock-keyword-face fontified t) 147 148 (fontified t) 148 162 (face font-lock-type-face fontified t) 162 181 (fontified t) 181 184 (fontified t) 184 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t) 187 188 (fontified t) 188 189 (fontified t) 189 190 (fontified t) 190 191 (fontified t) 191 192 (fontified t) 192 193 (fontified t) 193 194 (fontified t) 194 195 (fontified t) 195 196 (fontified t) 196 197 (fontified t) 197 198 (fontified t) 198 199 (fontified t) 199 200 (fontified t) 200 201 (fontified t) 201 202 (fontified t) 202 203 (fontified t) 203 204 (fontified t) 204 205 (fontified t) 205 206 (fontified t) 206 207 (fontified t) 207 208 (fontified t) 208 209 (fontified t) 209 210 (fontified t) 210 211 (fontified t) 211 212 (fontified t) 212 213 (fontified t) 213 214 (fontified t) 214 215 (fontified t) 215 216 (fontified t) 216 217 (fontified t) 217 218 (fontified t) 218 219 (fontified t) 219 220 (fontified t) 220 223 (fontified t) 223 237 (fontified t) 237 238 (fontified t) 238 240 (fontified t) 240 241 (fontified t) 241 263 (fontified t) 263 295 (face font-lock-string-face fontified t) 295 306 (fontified t) 306 311 (face font-lock-keyword-face fontified t) 311 313 (fontified t) 313 352 (fontified t) 352 410 (face font-lock-string-face fontified t) 410 437 (fontified t) 437 444 (fontified t) 444 446 (fontified t)) . 2247) (undo-tree-id40 . -446) (undo-tree-id41 . -445) (#("	" 0 1 (fontified nil c-in-sws t c-is-sws t)) . 2247) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (2239 . 2247) 2240 (t 26109 47222 566178 311000)) nil (26109 47237 927679 423000) 0 nil])
([nil nil ((2935 . 2937) (#("	    " 0 5 (fontified nil)) . 2935) (undo-tree-id29 . -5) (2940 . 2941)) ((#("}" 0 1 (fontified nil)) . 2940) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (2935 . 2940) (#("		" 0 2 (fontified t)) . 2935)) (26109 47193 485390 371000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2955 . 2956) (nil fontified nil 2264 . 2956) (nil fontified nil 2247 . 2264) (2247 . 2956)) nil (26109 47237 927664 665000) 0 nil])
([nil nil ((2938 . 2941)) ((#("
		" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 2938) (undo-tree-id33 . -2) (undo-tree-id34 . -1) (undo-tree-id35 . -2)) (26109 47192 905937 477000) 0 nil])
([nil nil ((2956 . 2957) (t 26109 47237 946519 874000)) nil (26109 47275 247549 399000) 0 nil])
([nil nil ((2939 . 2944) (#("	" 0 1 (fontified nil)) . 2939) (undo-tree-id27 . -1) (2940 . 2941)) ((#("}" 0 1 (fontified nil)) . 2940) (2939 . 2940) (#("	    " 0 5 (fontified t)) . 2939) (t 26109 47160 184774 505000)) (26109 47160 163566 304000) 0 nil])
([nil nil ((2957 . 2958)) nil (26109 47275 247547 816000) 0 nil])
nil
([nil nil ((2239 . 2241) (#("                        " 0 1 (fontified t c-is-sws t) 1 8 (fontified t c-is-sws t) 8 24 (fontified t c-is-sws t)) . 2239) (undo-tree-id44 . -8) (undo-tree-id45 . -23) (undo-tree-id46 . -8) (undo-tree-id47 . -8) 2262) nil (26109 47275 247543 738000) 0 nil])
([nil nil ((#("
	if(args.length < 1){
	    System.out.println(\"Debes al menos ingresar el nombre del archivo\");
	    return;
	}

	
        /* Para pasar el nombre del archivo.txt como parametro en el .jar
	 * y además la bandera como segundo parametro. */
	String nombreArchivo = args[0];
	
  
	String bandera = \"\";
	if(args.length > 1){
	    bandera = args[1];
	}
	/* Leemos e imprimimos el archivo de texto previamente pasado como
	 * parametro por el usuario, lo anterior metiendo cada renglon del
	 * archivo a una lista e invocando el método toString de la clase
	 * Lista. Si ocurre alguna excepción, imprimimos
	 * un mensaje de error.*/
	try {
            		
	    Lista<String> lista = new Lista<>();
	    
	    FileReader lectorArchivo = new FileReader(nombreArchivo);
	    BufferedReader lector = new BufferedReader(lectorArchivo);
	    
	    String renglon;
	    
	    while((renglon = lector.readLine()) != null){
		lista.agrega(renglon);
	    }
	

	    Lista<String> ord = lista.mergeSort((a,b) -> {
		    String aSinMayus = a.toLowerCase().replaceAll(\" \",\"\");
		    String aLimpio = Normalizer.normalize(aSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
		    String bSinMayus = b.toLowerCase().replaceAll(\" \",\"\");
		    String bLimpio = Normalizer.normalize(bSinMayus, Normalizer.Form.NFD).replaceAll(\"[^a-z]\", \"\");
		    
		    return aLimpio.compareTo(bLimpio);
		    
		});	

	    
	    if(bandera.equals(\"-r\")){
	        System.out.println(ord.reversa());
	    } else if(bandera.equals(\"-o\")) {

		FileWriter escritorArchivo = new FileWriter(nombreArchivo);
		BufferedWriter escritor = new BufferedWriter(escritorArchivo);
		escritor.write(ord.toString());
		escritor.close();
		System.out.println(\"Archivo guardado correctamente\");
		
	    } else if(bandera.equals(\"\")){			        
		System.out.println(ord.toString());
	    } else if (bandera.contains(\"-r\") && bandera.contains(\"-o\")){
//NO FUNCIONA
		try {
                    FileWriter escritorArchivo = new FileWriter(nombreArchivo);
                    BufferedWriter escritor = new BufferedWriter(escritorArchivo);
                    escritor.write(ord.toString());
                    escritor.newLine(); // Agregar una línea en blanco para separar la lista ordenada de la reversa
                    escritor.write(ord.reversa().toString());
                    escritor.close();
                    System.out.println(\"Archivo guardado correctamente\");
                } catch (IOException e) {
                    System.out.println(\"\\nAlgo salió mal al guardar la reversa en el archivo: \\n\");
                    e.printStackTrace(); }	    
	    }
	    
	} catch(IOException e) {
	    System.out.println(\"\\nAlgo salió mal: \\n\");
	    e.printStackTrace();
	}    
	    
	
    }     
" 0 2 (fontified t) 2 4 (face font-lock-keyword-face fontified t) 4 47 (fontified t) 47 94 (face font-lock-string-face fontified t) 94 102 (fontified t) 102 108 (face font-lock-keyword-face fontified t) 108 116 (fontified t) 116 124 (fontified t c-is-sws t c-in-sws t) 124 125 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 125 127 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 127 237 (face font-lock-comment-face fontified t c-in-sws t) 237 240 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 240 241 (fontified t c-in-sws t) 241 242 (fontified t c-in-sws t c-is-sws t) 242 243 (face font-lock-type-face fontified t c-is-sws t) 243 247 (face font-lock-type-face fontified t) 247 248 (face font-lock-type-face c-type c-decl-id-start fontified t) 248 249 (fontified t) 249 262 (face font-lock-variable-name-face fontified t) 262 280 (fontified t) 280 285 (face font-lock-type-face fontified t) 285 286 (face font-lock-type-face c-type c-decl-id-start fontified t) 286 287 (fontified t) 287 294 (face font-lock-variable-name-face fontified t) 294 297 (fontified t) 297 299 (face font-lock-string-face fontified t) 299 302 (fontified t) 302 304 (face font-lock-keyword-face fontified t) 304 350 (fontified t) 350 351 (fontified t c-is-sws t c-in-sws t) 351 352 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 352 354 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 354 627 (face font-lock-comment-face fontified t c-in-sws t) 627 629 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 629 630 (fontified t c-is-sws t) 630 631 (fontified t c-in-sws t c-is-sws t) 631 632 (face font-lock-keyword-face fontified t c-is-sws t) 632 634 (face font-lock-keyword-face fontified t) 634 657 (fontified t) 657 662 (face font-lock-type-face fontified t) 662 663 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 663 669 (face font-lock-type-face fontified t) 669 670 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 670 671 (fontified t) 671 676 (face font-lock-variable-name-face fontified t) 676 679 (fontified t) 679 682 (face font-lock-keyword-face fontified t) 682 683 (fontified t) 683 688 (face font-lock-type-face fontified t) 688 689 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 689 690 (fontified t category c->-as-paren-syntax) 690 705 (fontified t) 705 714 (face font-lock-type-face fontified t) 714 715 (face font-lock-type-face c-type c-decl-id-start fontified t) 715 716 (fontified t) 716 729 (face font-lock-variable-name-face fontified t) 729 732 (fontified t) 732 735 (face font-lock-keyword-face fontified t) 735 736 (fontified t) 736 746 (face font-lock-type-face fontified t) 746 768 (fontified t) 768 781 (face font-lock-type-face fontified t) 781 782 (face font-lock-type-face c-type c-decl-id-start fontified t) 782 783 (fontified t) 783 789 (face font-lock-variable-name-face fontified t) 789 792 (fontified t) 792 795 (face font-lock-keyword-face fontified t) 795 796 (fontified t) 796 810 (face font-lock-type-face fontified t) 810 838 (fontified t) 838 843 (face font-lock-type-face fontified t) 843 844 (face font-lock-type-face c-type c-decl-id-start fontified t) 844 845 (fontified t) 845 852 (face font-lock-variable-name-face fontified t) 852 865 (fontified t) 865 870 (face font-lock-keyword-face fontified t) 870 904 (fontified t) 904 908 (face font-lock-constant-face fontified t) 908 951 (fontified t) 951 956 (face font-lock-type-face fontified t) 956 957 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 957 963 (face font-lock-type-face fontified t) 963 964 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 964 965 (fontified t) 965 968 (face font-lock-variable-name-face fontified t) 968 1004 (fontified t) 1004 1009 (face font-lock-type-face fontified t) 1009 1010 (face font-lock-type-face c-type c-decl-id-start fontified t) 1010 1011 (fontified t) 1011 1020 (face font-lock-variable-name-face fontified t) 1020 1050 (fontified t) 1050 1053 (face font-lock-string-face fontified t) 1053 1054 (fontified t) 1054 1056 (face font-lock-string-face fontified t) 1056 1065 (fontified t) 1065 1070 (face font-lock-type-face fontified t) 1070 1071 (face font-lock-type-face c-type c-decl-id-start fontified t) 1071 1072 (fontified t) 1072 1079 (face font-lock-variable-name-face fontified t) 1079 1114 (fontified t) 1114 1124 (face font-lock-constant-face fontified t) 1124 1125 (fontified t) 1125 1129 (face font-lock-constant-face fontified t) 1129 1146 (fontified t) 1146 1154 (face font-lock-string-face fontified t) 1154 1156 (fontified t) 1156 1158 (face font-lock-string-face fontified t) 1158 1167 (fontified t) 1167 1172 (face font-lock-type-face fontified t) 1172 1173 (face font-lock-type-face c-type c-decl-id-start fontified t) 1173 1174 (fontified t) 1174 1176 (face font-lock-variable-name-face fontified t) 1176 1183 (face font-lock-variable-name-face fontified t) 1183 1185 (fontified t) 1185 1213 (fontified t) 1213 1215 (face font-lock-string-face fontified t) 1215 1216 (face font-lock-string-face fontified t) 1216 1217 (fontified t) 1217 1219 (fontified t face font-lock-string-face) 1219 1221 (fontified t) 1221 1222 (fontified t) 1222 1228 (fontified t) 1228 1233 (face font-lock-type-face fontified t) 1233 1234 (face font-lock-type-face c-type c-decl-id-start fontified t) 1234 1235 (fontified t) 1235 1242 (face font-lock-variable-name-face fontified t) 1242 1277 (fontified t) 1277 1287 (face font-lock-constant-face fontified t) 1287 1288 (fontified t) 1288 1292 (face font-lock-constant-face fontified t) 1292 1309 (fontified t) 1309 1317 (face font-lock-string-face fontified t) 1317 1319 (fontified t) 1319 1321 (face font-lock-string-face fontified t) 1321 1337 (fontified t) 1337 1343 (face font-lock-keyword-face fontified t) 1343 1398 (fontified t) 1398 1400 (face font-lock-keyword-face fontified t) 1400 1416 (fontified t) 1416 1420 (face font-lock-string-face fontified t) 1420 1475 (fontified t) 1475 1479 (face font-lock-keyword-face fontified t) 1479 1480 (fontified t) 1480 1482 (face font-lock-keyword-face fontified t) 1482 1498 (fontified t) 1498 1502 (face font-lock-string-face fontified t) 1502 1507 (fontified t) 1507 1508 (fontified t) 1508 1510 (fontified t) 1510 1519 (face font-lock-type-face fontified t) 1519 1520 (face font-lock-type-face c-type c-decl-id-start fontified t) 1520 1521 (fontified t) 1521 1536 (face font-lock-variable-name-face fontified t) 1536 1539 (fontified t) 1539 1542 (face font-lock-keyword-face fontified t) 1542 1543 (fontified t) 1543 1553 (face font-lock-type-face fontified t) 1553 1570 (fontified t) 1570 1572 (fontified t) 1572 1585 (face font-lock-type-face fontified t) 1585 1586 (face font-lock-type-face c-type c-decl-id-start fontified t) 1586 1587 (fontified t) 1587 1595 (face font-lock-variable-name-face fontified t) 1595 1598 (fontified t) 1598 1601 (face font-lock-keyword-face fontified t) 1601 1602 (fontified t) 1602 1616 (face font-lock-type-face fontified t) 1616 1689 (fontified t) 1689 1710 (fontified t) 1710 1742 (face font-lock-string-face fontified t) 1742 1744 (fontified t) 1744 1747 (fontified t) 1747 1748 (fontified t) 1748 1755 (fontified t) 1755 1759 (face font-lock-keyword-face fontified t) 1759 1760 (fontified t) 1760 1762 (face font-lock-keyword-face fontified t) 1762 1778 (fontified t) 1778 1780 (face font-lock-string-face fontified t) 1780 1840 (fontified t) 1840 1844 (face font-lock-keyword-face fontified t) 1844 1845 (fontified t) 1845 1847 (face font-lock-keyword-face fontified t) 1847 1866 (fontified t) 1866 1870 (face font-lock-string-face fontified t) 1870 1892 (fontified t) 1892 1896 (face font-lock-string-face fontified t) 1896 1900 (fontified t) 1900 1901 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 1901 1902 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1902 1913 (face font-lock-comment-face fontified t c-in-sws t) 1913 1914 (c-in-sws t face font-lock-comment-face fontified t) 1914 1915 (c-is-sws t fontified t) 1915 1916 (c-is-sws t fontified t) 1916 1917 (face font-lock-keyword-face fontified t c-is-sws t) 1917 1919 (face font-lock-keyword-face fontified t) 1919 1922 (fontified t) 1922 1942 (fontified t) 1942 1951 (face font-lock-type-face fontified t) 1951 1952 (face font-lock-type-face c-type c-decl-id-start fontified t) 1952 1953 (fontified t) 1953 1968 (face font-lock-variable-name-face fontified t) 1968 1971 (fontified t) 1971 1974 (face font-lock-keyword-face fontified t) 1974 1975 (fontified t) 1975 1985 (face font-lock-type-face fontified t) 1985 2022 (fontified t) 2022 2035 (face font-lock-type-face fontified t) 2035 2036 (face font-lock-type-face c-type c-decl-id-start fontified t) 2036 2037 (fontified t) 2037 2045 (face font-lock-variable-name-face fontified t) 2045 2048 (fontified t) 2048 2051 (face font-lock-keyword-face fontified t) 2051 2052 (fontified t) 2052 2066 (face font-lock-type-face fontified t) 2066 2176 (fontified t) 2176 2177 (fontified t c-is-sws t c-in-sws t) 2177 2178 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 2178 2180 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 2180 2253 (face font-lock-comment-face fontified t c-in-sws t) 2253 2273 (fontified t c-in-sws t c-is-sws t) 2273 2274 (fontified t c-is-sws t) 2274 2392 (fontified t) 2392 2424 (face font-lock-string-face fontified t) 2424 2445 (fontified t) 2445 2450 (face font-lock-keyword-face fontified t) 2450 2508 (fontified t) 2508 2566 (face font-lock-string-face fontified t) 2566 2569 (fontified t) 2569 2608 (fontified t) 2608 2609 (fontified t rear-nonsticky t) 2609 2610 (fontified t) 2610 2611 (fontified t) 2611 2616 (fontified t) 2616 2617 (fontified t) 2617 2623 (fontified t c-is-sws t) 2623 2624 (fontified t) 2624 2629 (fontified t) 2629 2630 (fontified t) 2630 2633 (fontified t) 2633 2638 (face font-lock-keyword-face fontified t) 2638 2680 (fontified t) 2680 2702 (face font-lock-string-face fontified t) 2702 2757 (fontified t)) . -325) (undo-tree-id48 . -1914) (undo-tree-id49 . -1669) (undo-tree-id50 . -1387) (undo-tree-id51 . -2757) (undo-tree-id52 . -2624) (undo-tree-id53 . -1914) (undo-tree-id54 . -1900) (undo-tree-id55 . -2624) (undo-tree-id56 . -1900) (undo-tree-id57 . -2623) (undo-tree-id58 . -1914) (undo-tree-id59 . -1914) (undo-tree-id60 . -700) (undo-tree-id61 . -2757) (undo-tree-id62 . -827) (undo-tree-id63 . -1386) (undo-tree-id64 . -2624) (undo-tree-id65 . -2757) 3082 (t 26109 47275 267342 324000)) nil (26109 47892 794017 675000) 0 nil])
([nil nil ((331 . 335) (331 . 332)) nil (26109 47892 793994 350000) 0 nil])
([nil nil ((325 . 326) (#("	" 0 1 (fontified t)) . 325) (t 26109 47892 813645 126000)) nil (26109 51536 191360 124000) 0 nil])
([nil nil ((326 . 329)) nil (26109 51536 191358 801000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -326) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("y" 0 1 (fontified t)) . -327) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("s" 0 1 (fontified t)) . -328) (undo-tree-id78 . -1) (undo-tree-id79 . -1) 329) nil (26109 51536 191356 837000) 0 nil])
([nil nil ((326 . 338)) nil (26109 51536 191345 275000) 0 nil])
([nil nil ((338 . 344)) nil (26109 51536 191344 614000) 0 nil])
([nil nil ((344 . 346)) nil (26109 51536 191344 103000) 0 nil])
([nil nil ((345 . 346)) nil (26109 51536 191343 292000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -345) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 346) nil (26109 51536 191341 659000) 0 nil])
([nil nil ((345 . 347)) nil (26109 51536 191331 78000) 0 nil])
([nil nil ((346 . 347)) nil (26109 51536 191329 556000) 0 nil])
([nil nil ((349 . 350)) nil (26109 51536 191325 247000) 0 nil])
([nil nil ((325 . 326) (t 26109 51536 212031 104000)) nil (26109 54060 161898 342000) 0 nil])
([nil nil ((325 . 326) 326) nil (26109 54060 161897 620000) 0 nil])
([nil nil ((#("	System.out.println(\"a\");
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (face font-lock-string-face fontified t) 21 22 (face font-lock-string-face fontified t) 22 23 (face font-lock-string-face fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t)) . 327) (undo-tree-id122 . -26) (undo-tree-id123 . -25)) nil (26109 54060 161896 749000) 0 nil])
([nil nil ((#("\\" 0 1 (c-is-sws t fontified t)) . -326) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) 327) nil (26109 54060 161894 875000) 0 nil])
([nil nil ((326 . 328)) nil (26109 54060 161892 491000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -326) (undo-tree-id117 . -1) (#("A" 0 1 (fontified t)) . -327) (undo-tree-id118 . -1) 328) nil (26109 54060 161891 599000) 0 nil])
([nil nil ((326 . 327)) nil (26109 54060 161889 846000) 0 nil])
([nil nil ((327 . 330)) nil (26109 54060 161889 315000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -327) (undo-tree-id114 . -1) (#("N" 0 1 (fontified t)) . -328) (undo-tree-id115 . -1) (#("D" 0 1 (fontified t)) . -329) (undo-tree-id116 . -1) 330) nil (26109 54060 161888 493000) 0 nil])
([nil nil ((327 . 331)) nil (26109 54060 161886 149000) 0 nil])
([nil nil ((331 . 336)) nil (26109 54060 161885 568000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -335) (undo-tree-id113 . -1) 336) nil (26109 54060 161884 546000) 0 nil])
([nil nil ((335 . 348)) nil (26109 54060 161883 203000) 0 nil])
([nil nil ((348 . 351)) nil (26109 54060 161882 542000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-variable-name-face fontified t)) . -336) (undo-tree-id101 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -337) (undo-tree-id102 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -338) (undo-tree-id103 . -1) (#("j" 0 1 (face font-lock-variable-name-face fontified t)) . -339) (undo-tree-id104 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -340) (undo-tree-id105 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -341) (undo-tree-id106 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -342) (undo-tree-id107 . -1) (#("c" 0 1 (face font-lock-variable-name-face fontified t)) . -343) (undo-tree-id108 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -344) (undo-tree-id109 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -345) (undo-tree-id110 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -346) (undo-tree-id111 . -1) (#("k" 0 1 (face font-lock-variable-name-face fontified t)) . -347) (undo-tree-id112 . -1) 348) nil (26109 54060 161880 609000) 0 nil])
([nil nil ((336 . 338)) nil (26109 54060 161871 482000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -336) (undo-tree-id99 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -337) (undo-tree-id100 . -1) 338) nil (26109 54060 161870 660000) 0 nil])
([nil nil ((336 . 337)) nil (26109 54060 161868 626000) 0 nil])
([nil nil ((#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -335) (undo-tree-id97 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -336) (undo-tree-id98 . -1) 337) nil (26109 54060 161867 554000) 0 nil])
([nil nil ((335 . 337)) nil (26109 54060 161865 751000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -336) (undo-tree-id96 . -1) 337) nil (26109 54060 161865 70000) 0 nil])
([nil nil ((339 . 340)) nil (26109 54060 161863 857000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -339) (undo-tree-id95 . -1) 340) nil (26109 54060 161863 116000) 0 nil])
([nil nil ((339 . 351)) nil (26109 54060 161861 754000) 0 nil])
([nil nil ((351 . 353)) nil (26109 54060 161861 202000) 0 nil])
([nil nil ((352 . 356)) nil (26109 54060 161860 551000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -354) (undo-tree-id93 . -1) (#("s" 0 1 (fontified t)) . -355) (undo-tree-id94 . -1) 356) nil (26109 54060 161859 610000) 0 nil])
([nil nil ((354 . 358)) nil (26109 54060 161857 646000) 0 nil])
([nil nil ((359 . 360)) nil (26109 54060 161857 55000) 0 nil])
([nil nil ((360 . 362)) nil (26109 54060 161856 383000) 0 nil])
([nil nil ((362 . 363)) nil (26109 54060 161855 642000) 0 nil])
([nil nil ((#("\\" 0 1 (c-in-sws t c-is-sws t fontified t)) . -362) (undo-tree-id92 . -1) 363) nil (26109 54060 161854 129000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t c-is-sws t)) . -364) (undo-tree-id91 . -1) 365) nil (26109 54060 161851 585000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -362) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#(" " 0 1 (fontified t)) . -363) (undo-tree-id82 . -1) (#(" " 0 1 (fontified t)) . -364) (undo-tree-id83 . -1) (#(" " 0 1 (fontified t)) . -365) (undo-tree-id84 . -1) (#(" " 0 1 (fontified t)) . -366) (undo-tree-id85 . -1) (#(" " 0 1 (fontified t)) . -367) (undo-tree-id86 . -1) (#(" " 0 1 (fontified t)) . -368) (undo-tree-id87 . -1) (#(" " 0 1 (fontified t)) . -369) (undo-tree-id88 . -1) (#(" " 0 1 (fontified nil)) . -370) (undo-tree-id89 . -1) (#("	" 0 1 (fontified nil)) . 371) (undo-tree-id90 . -1) (363 . 371) 364) nil (26109 54060 161845 563000) 0 nil])
([nil nil ((362 . 369) (t 26109 54060 182767 588000)) nil (26110 5362 992072 219000) 0 nil])
([nil nil ((368 . 369)) nil (26110 5362 992071 247000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-type-face fontified t)) . -368) (undo-tree-id20 . -1) 369) nil (26110 5362 992070 306000) 0 nil])
([nil nil ((368 . 369)) nil (26110 5362 992068 944000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-type-face fontified t)) . -368) (undo-tree-id19 . -1) 369) nil (26110 5362 992068 102000) 0 nil])
([nil nil ((368 . 369)) nil (26110 5362 992066 760000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-type-face fontified t)) . -368) (undo-tree-id18 . -1) 369) nil (26110 5362 992065 518000) 0 nil])
([nil nil ((368 . 369)) nil (26110 5362 992063 985000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-type-face fontified t)) . -368) (undo-tree-id17 . -1) 369) nil (26110 5362 992063 44000) 0 nil])
([nil nil ((368 . 374)) nil (26110 5362 992061 551000) 0 nil])
([nil nil ((375 . 376)) nil (26110 5362 992060 870000) 0 nil])
([nil nil ((376 . 385)) nil (26110 5362 992060 119000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -376) (undo-tree-id8 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -377) (undo-tree-id9 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -378) (undo-tree-id10 . -1) (#("g" 0 1 (face font-lock-variable-name-face fontified t)) . -379) (undo-tree-id11 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -380) (undo-tree-id12 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -381) (undo-tree-id13 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -382) (undo-tree-id14 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -383) (undo-tree-id15 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -384) (undo-tree-id16 . -1) 385) nil (26110 5362 992057 555000) 0 nil])
([nil nil ((376 . 381)) nil (26110 5362 992048 901000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -380) (undo-tree-id7 . -1) 381) nil (26110 5362 992047 819000) 0 nil])
([nil nil ((380 . 382)) nil (26110 5362 992046 226000) 0 nil])
([nil nil ((382 . 385)) nil (26110 5362 992045 465000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -383) (undo-tree-id5 . -1) (#("g" 0 1 (fontified t)) . -384) (undo-tree-id6 . -1) 385) nil (26110 5362 992044 403000) 0 nil])
([nil nil ((383 . 384)) nil (26110 5362 992042 30000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -382) (undo-tree-id3 . -1) (#("e" 0 1 (fontified t)) . -383) (undo-tree-id4 . -1) 384) nil (26110 5362 992040 878000) 0 nil])
([nil nil ((382 . 384)) nil (26110 5362 992038 243000) 0 nil])
([nil nil ((384 . 390)) nil (26110 5362 992037 522000) 0 nil])
([nil nil ((390 . 392)) nil (26110 5362 992036 811000) 0 nil])
([nil nil ((392 . 393)) nil (26110 5362 992036 140000) 0 nil])
([nil nil ((393 . 395)) nil (26110 5362 992035 168000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -376) (undo-tree-id0 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -377) (undo-tree-id1 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -378) (undo-tree-id2 . -1) 379) nil (26110 5362 992032 514000) 0 nil])
([nil nil ((376 . 381)) nil (26110 5362 992006 311000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -356) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("]" 0 1 (fontified t)) . -357) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 358 (t 26110 5363 41218 487000)) nil (26110 5467 119518 617000) 0 nil])
([nil nil ((356 . 358) (t 26110 5467 136025 547000)) nil (26110 5481 233258 766000) 0 nil])
([nil nil ((362 . 364) (t 26110 5481 253415 751000)) nil (26110 5539 668848 384000) 0 nil])
([nil nil ((364 . 366)) nil (26110 5539 668846 992000) 0 nil])
([nil nil ((#("œ" 0 1 (face font-lock-comment-face fontified t)) . -364) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("ß" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -365) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 366) nil (26110 5539 668843 276000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -356) (undo-tree-id32 . -1) (#("]" 0 1 (fontified t)) . -357) (undo-tree-id33 . -1) 358 (t 26110 5539 686506 518000)) nil (26110 5568 873319 938000) 0 nil])
([nil nil ((397 . 402) (t 26110 5568 888314 120000)) nil (26110 6241 377547 334000) 0 nil])
([nil nil ((402 . 403)) nil (26110 6241 377546 582000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -402) (undo-tree-id70 . -1) 403) nil (26110 6241 377545 700000) 0 nil])
([nil nil ((402 . 404)) nil (26110 6241 377544 407000) 0 nil])
([nil nil ((403 . 410)) nil (26110 6241 377543 755000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -409) (undo-tree-id69 . -1) 410) nil (26110 6241 377543 33000) 0 nil])
([nil nil ((410 . 413)) nil (26110 6241 377541 480000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -411) (undo-tree-id67 . -1) (#(" " 0 1 (fontified t)) . -412) (undo-tree-id68 . -1) 413) nil (26110 6241 377540 166000) 0 nil])
([nil nil ((#("
" 0 1 (c-in-sws t face font-lock-comment-face fontified t)) . -395) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -396) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -397) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -398) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -399) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -400) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -401) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -402) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -403) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("Lista<String> " 0 1 (face font-lock-type-face c-is-sws t fontified nil) 1 2 (face font-lock-type-face fontified nil) 2 3 (face font-lock-type-face fontified nil) 3 4 (face font-lock-type-face fontified nil) 4 5 (face font-lock-type-face fontified nil) 5 6 (c-<>-c-types-set t category c-<-as-paren-syntax fontified nil) 6 7 (face font-lock-type-face fontified nil) 7 8 (face font-lock-type-face fontified nil) 8 9 (face font-lock-type-face fontified nil) 9 10 (face font-lock-type-face fontified nil) 10 11 (face font-lock-type-face fontified nil) 11 12 (face font-lock-type-face fontified nil) 12 13 (c-type c-decl-id-start category c->-as-paren-syntax fontified nil) 13 14 (fontified nil)) . 404) (undo-tree-id64 . -14) (undo-tree-id65 . -14) (#("	" 0 1 (fontified nil c-is-sws t)) . 404) (undo-tree-id66 . -1) (396 . 404) 397) nil (26110 6241 377536 46000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -360) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) . -361) (undo-tree-id36 . -1) 362) nil (26110 6241 377515 316000) 0 nil])
([nil nil ((391 . 395)) nil (26110 6241 377472 252000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -384) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("e" 0 1 (fontified t)) . -385) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("a" 0 1 (fontified t)) . -386) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("d" 0 1 (fontified t)) . -387) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("e" 0 1 (fontified t)) . -388) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("r" 0 1 (fontified t)) . -389) (undo-tree-id96 . -1) (undo-tree-id97 . -1) 390 (t 26110 6241 396997 195000)) nil (26110 7443 884842 194000) 0 nil])
([nil nil ((384 . 394)) nil (26110 7501 46083 809000) 0 nil])
([nil nil ((401 . 403) (t 26110 7443 900877 225000)) nil (26110 7630 751761 461000) 0 nil] [nil nil ((#("d" 0 1 (fontified t)) . -391) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("e" 0 1 (fontified t)) . -392) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("r" 0 1 (fontified t)) . -393) (undo-tree-id103 . -1) 394 (t 26110 7443 900877 225000)) ((391 . 394)) (26110 7501 44933 118000) 0 nil])
([nil nil ((403 . 419)) nil (26110 7630 751760 309000) 0 nil])
nil
([nil nil ((#("o" 0 1 (fontified t)) . -416) (undo-tree-id106 . -1) (#("i" 0 1 (fontified t)) . -417) (undo-tree-id107 . -1) (#("t" 0 1 (fontified t)) . -418) (undo-tree-id108 . -1) 419) nil (26110 7630 751759 67000) 0 nil])
([nil nil ((416 . 421)) nil (26110 7630 751756 232000) 0 nil])
([nil nil ((421 . 423)) nil (26110 7630 751755 741000) 0 nil])
([nil nil ((422 . 429)) nil (26110 7630 751755 180000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -428) (undo-tree-id105 . -1) 429) nil (26110 7630 751754 269000) 0 nil])
([nil nil ((428 . 436)) nil (26110 7630 751752 215000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -435) (undo-tree-id104 . -1) 436) nil (26110 7630 751750 652000) 0 nil])
([nil nil ((435 . 436)) nil (26110 7630 751741 577000) 0 nil])
([nil nil ((436 . 438)) nil (26110 7630 751740 435000) 0 nil])
([nil nil ((439 . 440)) nil (26110 7630 751736 899000) 0 nil])
([nil nil ((#("	System.out.println(lista.toString());" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t)) . 402) (undo-tree-id116 . -38) (t 26110 7630 769235 560000)) nil (26110 7727 169139 778000) 0 nil])
([nil nil ((402 . 404)) nil (26110 7727 169138 45000) 0 nil])
([nil nil ((402 . 403)) nil (26110 7727 169137 434000) 0 nil])
([nil nil ((403 . 406)) nil (26110 7727 169136 743000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -403) (undo-tree-id113 . -1) (#("l" 0 1 (fontified t)) . -404) (undo-tree-id114 . -1) (#("i" 0 1 (fontified t)) . -405) (undo-tree-id115 . -1) 406) nil (26110 7727 169135 701000) 0 nil])
([nil nil ((403 . 404)) nil (26110 7727 169132 786000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -403) (undo-tree-id112 . -1) 404) nil (26110 7727 169132 35000) 0 nil])
([nil nil ((403 . 409)) nil (26110 7727 169130 352000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -408) (undo-tree-id111 . -1) 409) nil (26110 7727 169129 570000) 0 nil])
([nil nil ((408 . 410)) nil (26110 7727 169127 827000) 0 nil])
([nil nil ((409 . 414)) nil (26110 7727 169127 86000) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-type-face fontified t)) . -413) (undo-tree-id110 . -1) 414) nil (26110 7727 169126 134000) 0 nil])
([nil nil ((413 . 415)) nil (26110 7727 169124 201000) 0 nil])
([nil nil ((416 . 417)) nil (26110 7727 169123 690000) 0 nil])
([nil nil ((417 . 436)) nil (26110 7727 169123 59000) 0 nil])
([nil nil ((436 . 437)) nil (26110 7727 169122 167000) 0 nil])
([nil nil ((437 . 438)) nil (26110 7727 169121 616000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -437) (undo-tree-id109 . -1) 438) nil (26110 7727 169120 63000) 0 nil])
([nil nil ((437 . 442)) nil (26110 7727 169110 997000) 0 nil])
([nil nil ((442 . 443)) nil (26110 7727 169109 705000) 0 nil])
([nil nil ((443 . 444)) nil (26110 7727 169105 878000) 0 nil])
([nil nil ((436 . 437) (t 26110 7727 188370 208000)) nil (26110 7748 605295 595000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -436) (undo-tree-id117 . -1) (undo-tree-id118 . -1) 437) nil (26110 7748 605292 930000) 0 nil])
([nil nil ((436 . 437)) nil (26110 7748 605281 59000) 0 nil])
([nil nil ((447 . 464) (t 26110 7748 620001 801000)) nil (26110 7779 480217 674000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -461) (undo-tree-id133 . -1) (#("l" 0 1 (fontified t)) . -462) (undo-tree-id134 . -1) (#("n" 0 1 (fontified t)) . -463) (undo-tree-id135 . -1) 464) nil (26110 7779 480216 462000) 0 nil])
([nil nil ((461 . 465)) nil (26110 7779 480213 797000) 0 nil])
([nil nil ((465 . 467)) nil (26110 7779 480213 186000) 0 nil])
([nil nil ((466 . 474)) nil (26110 7779 480212 475000) 0 nil])
([nil nil ((474 . 477)) nil (26110 7779 480211 874000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -475) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#("o" 0 1 (fontified t)) . -476) (undo-tree-id131 . -1) (undo-tree-id132 . -1) 477) nil (26110 7779 480210 601000) 0 nil])
([nil nil ((475 . 477)) nil (26110 7779 480164 789000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -475) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("O" 0 1 (fontified t)) . -476) (undo-tree-id125 . -1) (undo-tree-id126 . -1) 477) nil (26110 7779 480163 56000) 0 nil])
([nil nil ((475 . 483)) nil (26110 7779 480157 225000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -482) (undo-tree-id119 . -1) (undo-tree-id120 . -1) 483) nil (26110 7779 480155 612000) 0 nil])
([nil nil ((482 . 483)) nil (26110 7779 480145 714000) 0 nil])
([nil nil ((483 . 485)) nil (26110 7779 480144 372000) 0 nil])
([nil nil ((486 . 487)) nil (26110 7779 480140 715000) 0 nil])
([nil nil ((487 . 488) (t 26110 7779 497853 917000)) nil (26110 7989 550782 779000) 0 nil])
([nil nil ((488 . 490)) nil (26110 7989 550781 817000) 0 nil])
([nil nil ((#("\\" 0 1 (c-is-sws t c-in-sws t fontified t)) . -487) (undo-tree-id146 . -1) (#("
" 0 1 (c-in-sws t fontified t)) . -488) (undo-tree-id147 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -489) (undo-tree-id148 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -490) (undo-tree-id149 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -491) (undo-tree-id150 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -492) (undo-tree-id151 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -493) (undo-tree-id152 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -494) (undo-tree-id153 . -1) (#(" " 0 1 (fontified t c-is-sws t)) . -495) (undo-tree-id154 . -1) (#(" " 0 1 (fontified nil c-is-sws t)) . -496) (undo-tree-id155 . -1) (#("	" 0 1 (c-is-sws t fontified nil)) . 497) (undo-tree-id156 . -1) (489 . 497) 490) nil (26110 7989 550779 853000) 0 nil])
([nil nil ((487 . 489)) nil (26110 7989 550772 259000) 0 nil])
([nil nil ((489 . 496)) nil (26110 7989 550771 748000) 0 nil])
([nil nil ((495 . 503)) nil (26110 7989 550771 117000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -501) (undo-tree-id144 . -1) (#("=" 0 1 (fontified t)) . -502) (undo-tree-id145 . -1) 503) nil (26110 7989 550770 55000) 0 nil])
([nil nil ((502 . 506)) nil (26110 7989 550767 631000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -503) (undo-tree-id141 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -504) (undo-tree-id142 . -1) (#("v" 0 1 (face font-lock-variable-name-face fontified t)) . -505) (undo-tree-id143 . -1) 506) nil (26110 7989 550766 329000) 0 nil])
([nil nil ((503 . 511)) nil (26110 7989 550761 920000) 0 nil])
([nil nil ((511 . 518)) nil (26110 7989 550761 219000) 0 nil])
([nil nil ((518 . 520)) nil (26110 7989 550760 97000) 0 nil])
([nil nil ((519 . 524)) nil (26110 7989 550759 496000) 0 nil])
([nil nil ((525 . 526)) nil (26110 7989 550758 654000) 0 nil])
([nil nil ((526 . 528)) nil (26110 7989 550758 154000) 0 nil])
([nil nil ((528 . 534)) nil (26110 7989 550757 602000) 0 nil])
([nil nil ((534 . 546)) nil (26110 7989 550757 11000) 0 nil])
([nil nil ((546 . 548)) nil (26110 7989 550756 200000) 0 nil])
([nil nil ((547 . 559)) nil (26110 7989 550755 439000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -554) (undo-tree-id136 . -1) (#("R" 0 1 (fontified t)) . -555) (undo-tree-id137 . -1) (#("I" 0 1 (fontified t)) . -556) (undo-tree-id138 . -1) (#("N" 0 1 (fontified t)) . -557) (undo-tree-id139 . -1) (#("G" 0 1 (fontified t)) . -558) (undo-tree-id140 . -1) 559) nil (26110 7989 550753 265000) 0 nil])
([nil nil ((554 . 555)) nil (26110 7989 550741 152000) 0 nil])
([nil nil ((555 . 559)) nil (26110 7989 550740 461000) 0 nil])
([nil nil ((559 . 561)) nil (26110 7989 550739 730000) 0 nil])
([nil nil ((562 . 563)) nil (26110 7989 550738 377000) 0 nil])
([nil nil ((447 . 449)) nil (26110 7989 550735 31000) 0 nil])
([nil nil ((567 . 568) (#("	" 0 1 (fontified nil)) . 566) (undo-tree-id200 . -1) (565 . 568) (t 26110 7989 565090 657000)) nil (26110 8610 590076 682000) 0 nil])
([nil nil ((326 . 327) (#("	" 0 1 (fontified nil)) . 325) (undo-tree-id199 . -1) (326 . 327)) nil (26110 8610 590075 110000) 0 nil])
([nil nil ((567 . 568)) nil (26110 8610 590073 557000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -537) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#("System.out.println(rev.toString());
	" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil) 9 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil) 12 13 (fontified nil) 13 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil) 16 17 (fontified nil) 17 18 (fontified nil) 18 19 (fontified nil) 19 20 (fontified nil) 20 21 (fontified nil) 21 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil) 24 25 (fontified nil) 25 26 (fontified nil) 26 27 (fontified nil) 27 28 (fontified nil) 28 29 (fontified nil) 29 30 (fontified nil) 30 31 (fontified nil) 31 32 (fontified nil) 32 33 (fontified nil) 33 34 (fontified nil) 34 35 (fontified nil) 35 36 (fontified nil) 36 37 (fontified t)) . 538) (undo-tree-id197 . -37) (#("	" 0 1 (fontified nil)) . 538) (undo-tree-id198 . -1) (530 . 538) 531) nil (26110 8610 590072 416000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -537) (undo-tree-id194 . -1) 538) nil (26110 8610 590068 841000) 0 nil])
([nil nil ((327 . 328) (#("	" 0 1 (fontified nil)) . 326) (undo-tree-id193 . -1) (325 . 328)) nil (26110 8610 590067 428000) 0 nil])
([nil nil ((nil rear-nonsticky nil 436 . 437) (nil fontified nil 325 . 437) (325 . 437)) nil (26110 8610 590065 966000) 0 nil])
([nil nil ((325 . 326) (#(" " 0 1 (fontified t)) . 325)) nil (26110 8610 590065 65000) 0 nil])
([nil nil ((347 . 352) (#("     " 0 5 (fontified t)) . 347) 355) nil (26110 8610 590064 274000) 0 nil])
([nil nil ((421 . 426) (#("     " 0 5 (fontified t)) . -421) (undo-tree-id192 . -5) 426) nil (26110 8610 590063 322000) 0 nil])
([nil nil ((434 . 435) (#(" " 0 1 (fontified t)) . 434) 436) nil (26110 8610 590061 630000) 0 nil])
([nil nil ((437 . 438)) nil (26110 8610 590060 829000) 0 nil])
([nil nil ((439 . 440)) nil (26110 8610 590060 318000) 0 nil])
([nil nil ((440 . 444)) nil (26110 8610 590059 627000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -440) (undo-tree-id188 . -1) (#("l" 0 1 (fontified t)) . -441) (undo-tree-id189 . -1) (#("s" 0 1 (fontified t)) . -442) (undo-tree-id190 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -443) (undo-tree-id191 . -1) 444) nil (26110 8610 590058 335000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -442) (undo-tree-id182 . -1) (#(" " 0 1 (fontified t)) . -443) (undo-tree-id183 . -1) (#(" " 0 1 (fontified t)) . -444) (undo-tree-id184 . -1) (#(" " 0 1 (fontified t)) . -445) (undo-tree-id185 . -1) (#(" " 0 1 (fontified nil)) . -446) (undo-tree-id186 . -1) (#("	" 0 1 (fontified nil)) . 447) (undo-tree-id187 . -1) (439 . 447) 440) nil (26110 8610 590053 77000) 0 nil])
([nil nil ((436 . 441)) nil (26110 8610 590000 920000) 0 nil])
([nil nil ((441 . 442) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 441) (undo-tree-id181 . -4) (437 . 441) 441) nil (26110 8610 590000 79000) 0 nil])
([nil nil ((442 . 445)) nil (26110 8610 589998 567000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -444) (undo-tree-id180 . -1) 445) nil (26110 8610 589997 855000) 0 nil])
([nil nil ((444 . 446)) nil (26110 8610 589996 684000) 0 nil])
([nil nil ((445 . 452)) nil (26110 8610 589996 153000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -449) (undo-tree-id177 . -1) (#("a" 0 1 (fontified t)) . -450) (undo-tree-id178 . -1) (#("s" 0 1 (fontified t)) . -451) (undo-tree-id179 . -1) 452) nil (26110 8610 589995 202000) 0 nil])
([nil nil ((449 . 453)) nil (26110 8610 589992 488000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -445) (undo-tree-id169 . -1) (#("a" 0 1 (fontified t)) . -446) (undo-tree-id170 . -1) (#("n" 0 1 (fontified t)) . -447) (undo-tree-id171 . -1) (#("d" 0 1 (fontified t)) . -448) (undo-tree-id172 . -1) (#("e" 0 1 (fontified t)) . -449) (undo-tree-id173 . -1) (#("r" 0 1 (fontified t)) . -450) (undo-tree-id174 . -1) (#("a" 0 1 (fontified t)) . -451) (undo-tree-id175 . -1) (#("s" 0 1 (fontified t)) . -452) (undo-tree-id176 . -1) 453) nil (26110 8610 589990 925000) 0 nil])
([nil nil ((327 . 328) (#("	" 0 1 (fontified nil)) . 326) (undo-tree-id168 . -1) (327 . 328) (325 . 326)) nil (26110 8610 589984 816000) 0 nil])
([nil nil ((nil rear-nonsticky nil 527 . 528) (nil fontified nil 527 . 528) (nil fontified nil 526 . 527) (nil fontified nil 525 . 526) (nil fontified nil 524 . 525) (nil fontified nil 523 . 524) (nil fontified nil 522 . 523) (nil fontified nil 521 . 522) (nil fontified nil 520 . 521) (nil fontified nil 519 . 520) (nil fontified nil 518 . 519) (nil fontified nil 517 . 518) (nil fontified nil 516 . 517) (nil fontified nil 515 . 516) (nil fontified nil 514 . 515) (nil fontified nil 513 . 514) (nil fontified nil 512 . 513) (nil fontified nil 511 . 512) (nil fontified nil 510 . 511) (nil fontified nil 509 . 510) (nil fontified nil 508 . 509) (nil fontified nil 507 . 508) (nil fontified nil 506 . 507) (nil fontified nil 505 . 506) (nil fontified nil 504 . 505) (nil fontified nil 503 . 504) (nil category c->-as-paren-syntax 503 . 504) (nil fontified nil 502 . 503) (nil fontified nil 501 . 502) (nil fontified nil 500 . 501) (nil fontified nil 499 . 500) (nil fontified nil 498 . 499) (nil fontified nil 497 . 498) (nil fontified nil 496 . 497) (nil category c-<-as-paren-syntax 496 . 497) (nil fontified nil 495 . 496) (nil fontified nil 494 . 495) (nil fontified nil 493 . 494) (nil fontified nil 492 . 493) (nil fontified nil 491 . 492) (nil fontified nil 490 . 491) (nil fontified nil 489 . 490) (nil fontified nil 488 . 489) (nil fontified nil 487 . 488) (nil fontified nil 486 . 487) (nil fontified nil 485 . 486) (nil fontified nil 484 . 485) (nil fontified nil 483 . 484) (nil fontified nil 482 . 483) (nil fontified nil 481 . 482) (nil fontified nil 480 . 481) (nil fontified nil 479 . 480) (nil fontified nil 478 . 479) (nil fontified nil 477 . 478) (nil fontified nil 476 . 477) (nil fontified nil 475 . 476) (nil fontified nil 474 . 475) (nil fontified nil 473 . 474) (nil fontified nil 472 . 473) (nil fontified nil 471 . 472) (nil fontified nil 470 . 471) (nil fontified nil 469 . 470) (nil fontified nil 468 . 469) (nil fontified nil 467 . 468) (nil fontified nil 466 . 467) (nil fontified nil 465 . 466) (nil fontified nil 464 . 465) (nil fontified nil 463 . 464) (nil fontified nil 462 . 463) (nil fontified nil 461 . 462) (nil fontified nil 460 . 461) (nil fontified nil 459 . 460) (nil fontified nil 458 . 459) (nil fontified nil 457 . 458) (nil fontified nil 456 . 457) (nil fontified nil 455 . 456) (nil fontified nil 454 . 455) (nil fontified nil 453 . 454) (nil fontified nil 452 . 453) (nil fontified nil 451 . 452) (nil fontified nil 450 . 451) (nil fontified nil 449 . 450) (nil fontified nil 448 . 449) (nil fontified nil 447 . 448) (nil fontified nil 446 . 447) (nil fontified nil 445 . 446) (nil fontified nil 444 . 445) (nil fontified nil 443 . 444) (nil fontified nil 442 . 443) (nil fontified nil 441 . 442) (nil fontified nil 440 . 441) (nil fontified nil 439 . 440) (nil fontified nil 438 . 439) (nil fontified nil 437 . 438) (nil fontified nil 436 . 437) (nil fontified nil 435 . 436) (nil fontified nil 434 . 435) (nil fontified nil 433 . 434) (nil fontified nil 432 . 433) (nil fontified nil 431 . 432) (nil fontified nil 430 . 431) (nil fontified nil 429 . 430) (nil fontified nil 428 . 429) (nil fontified nil 427 . 428) (nil fontified nil 426 . 427) (nil fontified nil 425 . 426) (nil fontified nil 424 . 425) (nil fontified nil 423 . 424) (nil fontified nil 422 . 423) (nil fontified nil 421 . 422) (nil fontified nil 420 . 421) (nil fontified nil 419 . 420) (nil fontified nil 418 . 419) (nil fontified nil 417 . 418) (nil fontified nil 416 . 417) (nil fontified nil 415 . 416) (nil category c->-as-paren-syntax 415 . 416) (nil fontified nil 414 . 415) (nil fontified nil 413 . 414) (nil fontified nil 412 . 413) (nil fontified nil 411 . 412) (nil fontified nil 410 . 411) (nil fontified nil 409 . 410) (nil fontified nil 408 . 409) (nil category c-<-as-paren-syntax 408 . 409) (nil fontified nil 407 . 408) (nil fontified nil 406 . 407) (nil fontified nil 405 . 406) (nil fontified nil 404 . 405) (nil fontified nil 403 . 404) (nil fontified nil 402 . 403) (nil fontified nil 401 . 402) (nil fontified nil 400 . 401) (nil fontified nil 399 . 400) (nil fontified nil 398 . 399) (nil fontified nil 397 . 398) (nil fontified nil 396 . 397) (nil fontified nil 395 . 396) (nil fontified nil 394 . 395) (nil fontified nil 393 . 394) (nil fontified nil 392 . 393) (nil fontified nil 391 . 392) (nil fontified nil 390 . 391) (nil fontified nil 389 . 390) (nil fontified nil 388 . 389) (nil fontified nil 387 . 388) (nil fontified nil 386 . 387) (nil fontified nil 385 . 386) (nil fontified nil 384 . 385) (nil fontified nil 383 . 384) (nil fontified nil 382 . 383) (nil fontified nil 381 . 382) (nil fontified nil 380 . 381) (nil fontified nil 379 . 380) (nil fontified nil 378 . 379) (nil fontified nil 377 . 378) (nil fontified nil 376 . 377) (nil fontified nil 375 . 376) (nil fontified nil 374 . 375) (nil fontified nil 373 . 374) (nil fontified nil 372 . 373) (nil category c->-as-paren-syntax 372 . 373) (nil fontified nil 371 . 372) (nil fontified nil 370 . 371) (nil fontified nil 369 . 370) (nil fontified nil 368 . 369) (nil fontified nil 367 . 368) (nil fontified nil 366 . 367) (nil fontified nil 365 . 366) (nil category c-<-as-paren-syntax 365 . 366) (nil fontified nil 364 . 365) (nil fontified nil 363 . 364) (nil fontified nil 362 . 363) (nil fontified nil 361 . 362) (nil fontified nil 360 . 361) (nil fontified nil 359 . 360) (nil fontified nil 358 . 359) (nil fontified nil 356 . 358) (nil fontified nil 351 . 356) (nil fontified nil 343 . 351) (nil fontified nil 342 . 343) (nil fontified nil 339 . 342) (nil fontified nil 338 . 339) (nil fontified nil 336 . 338) (nil fontified nil 335 . 336) (nil fontified nil 334 . 335) (nil fontified nil 333 . 334) (nil fontified nil 326 . 333) (nil fontified nil 325 . 326) (325 . 528)) nil (26110 8610 589977 215000) 0 nil])
([nil nil ((#("
	Banderas b = new Banderas(args);
	Lista<String> lista = b.fileReader(args);
	Lista<String> ordenada = b.ordenar(lista);
	//System.out.println(ordenada.toString());
	Lista<String> rev = b.reverso(lista);
       	" 0 1 (fontified nil) 1 2 (fontified t) 2 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 14 (fontified t) 14 15 (fontified t) 15 18 (face font-lock-keyword-face fontified t) 18 19 (fontified t) 19 27 (face font-lock-type-face fontified t) 27 32 (fontified t) 32 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t c-is-sws t c-in-sws t) 36 37 (face font-lock-type-face fontified t) 37 38 (face font-lock-type-face fontified t) 38 39 (face font-lock-type-face fontified t) 39 40 (face font-lock-type-face fontified t) 40 41 (face font-lock-type-face fontified t) 41 42 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 42 43 (face font-lock-type-face fontified t) 43 44 (face font-lock-type-face fontified t) 44 45 (face font-lock-type-face fontified t) 45 46 (face font-lock-type-face fontified t) 46 47 (face font-lock-type-face fontified t) 47 48 (face font-lock-type-face fontified t) 48 49 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 49 50 (fontified t) 50 51 (face font-lock-variable-name-face fontified t) 51 52 (face font-lock-variable-name-face fontified t) 52 53 (face font-lock-variable-name-face fontified t) 53 54 (face font-lock-variable-name-face fontified t) 54 55 (face font-lock-variable-name-face fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (face font-lock-type-face fontified t) 80 81 (face font-lock-type-face fontified t) 81 82 (face font-lock-type-face fontified t) 82 83 (face font-lock-type-face fontified t) 83 84 (face font-lock-type-face fontified t) 84 85 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 85 86 (face font-lock-type-face fontified t) 86 87 (face font-lock-type-face fontified t) 87 88 (face font-lock-type-face fontified t) 88 89 (face font-lock-type-face fontified t) 89 90 (face font-lock-type-face fontified t) 90 91 (face font-lock-type-face fontified t) 91 92 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 92 93 (fontified t) 93 94 (face font-lock-variable-name-face fontified t) 94 95 (face font-lock-variable-name-face fontified t) 95 96 (face font-lock-variable-name-face fontified t) 96 97 (face font-lock-variable-name-face fontified t) 97 98 (face font-lock-variable-name-face fontified t) 98 99 (face font-lock-variable-name-face fontified t) 99 100 (face font-lock-variable-name-face fontified t) 100 101 (face font-lock-variable-name-face fontified t) 101 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 116 (fontified t) 116 117 (fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 120 (fontified t) 120 121 (fontified t) 121 122 (fontified t) 122 123 (fontified t c-is-sws t c-in-sws t) 123 124 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 124 125 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 125 126 (face font-lock-comment-face fontified t c-in-sws t) 126 127 (face font-lock-comment-face fontified t c-in-sws t) 127 128 (face font-lock-comment-face fontified t c-in-sws t) 128 129 (face font-lock-comment-face fontified t c-in-sws t) 129 130 (face font-lock-comment-face fontified t c-in-sws t) 130 131 (face font-lock-comment-face fontified t c-in-sws t) 131 132 (face font-lock-comment-face fontified t c-in-sws t) 132 133 (face font-lock-comment-face fontified t c-in-sws t) 133 134 (face font-lock-comment-face fontified t c-in-sws t) 134 135 (face font-lock-comment-face fontified t c-in-sws t) 135 136 (face font-lock-comment-face fontified t c-in-sws t) 136 137 (face font-lock-comment-face fontified t c-in-sws t) 137 138 (face font-lock-comment-face fontified t c-in-sws t) 138 139 (face font-lock-comment-face fontified t c-in-sws t) 139 140 (face font-lock-comment-face fontified t c-in-sws t) 140 141 (face font-lock-comment-face fontified t c-in-sws t) 141 142 (face font-lock-comment-face fontified t c-in-sws t) 142 143 (face font-lock-comment-face fontified t c-in-sws t) 143 144 (face font-lock-comment-face fontified t c-in-sws t) 144 145 (face font-lock-comment-face fontified t c-in-sws t) 145 146 (face font-lock-comment-face fontified t c-in-sws t) 146 147 (face font-lock-comment-face fontified t c-in-sws t) 147 148 (face font-lock-comment-face fontified t c-in-sws t) 148 149 (face font-lock-comment-face fontified t c-in-sws t) 149 150 (face font-lock-comment-face fontified t c-in-sws t) 150 151 (face font-lock-comment-face fontified t c-in-sws t) 151 152 (face font-lock-comment-face fontified t c-in-sws t) 152 153 (face font-lock-comment-face fontified t c-in-sws t) 153 154 (face font-lock-comment-face fontified t c-in-sws t) 154 155 (face font-lock-comment-face fontified t c-in-sws t) 155 156 (face font-lock-comment-face fontified t c-in-sws t) 156 157 (face font-lock-comment-face fontified t c-in-sws t) 157 158 (face font-lock-comment-face fontified t c-in-sws t) 158 159 (face font-lock-comment-face fontified t c-in-sws t) 159 160 (face font-lock-comment-face fontified t c-in-sws t) 160 161 (face font-lock-comment-face fontified t c-in-sws t) 161 162 (face font-lock-comment-face fontified t c-in-sws t) 162 163 (face font-lock-comment-face fontified t c-in-sws t) 163 164 (face font-lock-comment-face fontified t c-in-sws t) 164 165 (face font-lock-comment-face fontified t c-in-sws t) 165 166 (face font-lock-comment-face fontified t c-in-sws t) 166 167 (fontified t c-is-sws t) 167 168 (face font-lock-type-face fontified t c-is-sws t) 168 169 (face font-lock-type-face fontified t) 169 170 (face font-lock-type-face fontified t) 170 171 (face font-lock-type-face fontified t) 171 172 (face font-lock-type-face fontified t) 172 173 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 173 174 (face font-lock-type-face fontified t) 174 175 (face font-lock-type-face fontified t) 175 176 (face font-lock-type-face fontified t) 176 177 (face font-lock-type-face fontified t) 177 178 (face font-lock-type-face fontified t) 178 179 (face font-lock-type-face fontified t) 179 180 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 180 181 (fontified t) 181 182 (face font-lock-variable-name-face fontified t) 182 183 (face font-lock-variable-name-face fontified t) 183 184 (face font-lock-variable-name-face fontified t) 184 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t) 187 188 (fontified t) 188 189 (fontified t) 189 190 (fontified t) 190 191 (fontified t) 191 192 (fontified t) 192 193 (fontified t) 193 194 (fontified t) 194 195 (fontified t) 195 196 (fontified t) 196 197 (fontified t) 197 198 (fontified t) 198 199 (fontified t) 199 200 (fontified t) 200 201 (fontified t) 201 202 (fontified t) 202 203 (fontified t) 203 204 (fontified t) 204 205 (fontified t) 205 212 (fontified t) 212 213 (fontified t)) . 666) (undo-tree-id157 . -34) (undo-tree-id158 . -34) (undo-tree-id159 . -213) (undo-tree-id160 . -77) (undo-tree-id161 . -77) (undo-tree-id162 . -78) (undo-tree-id163 . -212) (undo-tree-id164 . -210) (undo-tree-id165 . -210) (undo-tree-id166 . -204) (#("	" 0 1 (fontified nil)) . 666) (undo-tree-id167 . -1) (658 . 666) 659) nil (26110 8610 589954 361000) 0 nil])
([nil nil ((651 . 653)) nil (26110 8610 589937 236000) 0 nil])
([nil nil ((652 . 654)) nil (26110 8610 589936 425000) 0 nil])
([nil nil ((652 . 658)) nil (26110 8610 590428 142000) 0 nil])
([nil nil ((#("	//System.out.println(ordenada.toString());" 0 1 (fontified t c-is-sws t c-in-sws t) 1 2 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 2 3 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 3 4 (face font-lock-comment-face fontified t c-in-sws t) 4 5 (face font-lock-comment-face fontified t c-in-sws t) 5 6 (face font-lock-comment-face fontified t c-in-sws t) 6 7 (face font-lock-comment-face fontified t c-in-sws t) 7 8 (face font-lock-comment-face fontified t c-in-sws t) 8 9 (face font-lock-comment-face fontified t c-in-sws t) 9 10 (face font-lock-comment-face fontified t c-in-sws t) 10 11 (face font-lock-comment-face fontified t c-in-sws t) 11 12 (face font-lock-comment-face fontified t c-in-sws t) 12 13 (face font-lock-comment-face fontified t c-in-sws t) 13 14 (face font-lock-comment-face fontified t c-in-sws t) 14 15 (face font-lock-comment-face fontified t c-in-sws t) 15 16 (face font-lock-comment-face fontified t c-in-sws t) 16 17 (face font-lock-comment-face fontified t c-in-sws t) 17 18 (face font-lock-comment-face fontified t c-in-sws t) 18 19 (face font-lock-comment-face fontified t c-in-sws t) 19 20 (face font-lock-comment-face fontified t c-in-sws t) 20 21 (face font-lock-comment-face fontified t c-in-sws t) 21 22 (face font-lock-comment-face fontified t c-in-sws t) 22 23 (face font-lock-comment-face fontified t c-in-sws t) 23 24 (face font-lock-comment-face fontified t c-in-sws t) 24 25 (face font-lock-comment-face fontified t c-in-sws t) 25 26 (face font-lock-comment-face fontified t c-in-sws t) 26 27 (face font-lock-comment-face fontified t c-in-sws t) 27 28 (face font-lock-comment-face fontified t c-in-sws t) 28 29 (face font-lock-comment-face fontified t c-in-sws t) 29 30 (face font-lock-comment-face fontified t c-in-sws t) 30 31 (face font-lock-comment-face fontified t c-in-sws t) 31 32 (face font-lock-comment-face fontified t c-in-sws t) 32 33 (face font-lock-comment-face fontified t c-in-sws t) 33 34 (face font-lock-comment-face fontified t c-in-sws t) 34 35 (face font-lock-comment-face fontified t c-in-sws t) 35 36 (face font-lock-comment-face fontified t c-in-sws t) 36 37 (face font-lock-comment-face fontified t c-in-sws t) 37 38 (face font-lock-comment-face fontified t c-in-sws t) 38 39 (face font-lock-comment-face fontified t c-in-sws t) 39 40 (face font-lock-comment-face fontified t c-in-sws t) 40 41 (face font-lock-comment-face fontified t c-in-sws t) 41 42 (face font-lock-comment-face fontified t c-in-sws t) 42 43 (face font-lock-comment-face c-in-sws t fontified t)) . 446) (undo-tree-id208 . -43) (undo-tree-id209 . -43)) nil (26110 8615 875335 584000) 0 nil] [nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . 489)) ((489 . 490)) (26110 8610 589930 766000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -445) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) 446) nil (26110 8615 875329 896000) 0 nil])
nil
([nil nil ((485 . 486) (t 26110 8615 892952 695000)) nil (26110 9210 603988 540000) 0 nil])
([nil nil ((486 . 487) (#("	" 0 1 (fontified nil)) . 485) (undo-tree-id257 . -1) (486 . 487)) nil (26110 9210 603987 618000) 0 nil])
([nil nil ((485 . 486)) nil (26110 9210 603986 355000) 0 nil])
([nil nil ((486 . 493)) nil (26110 9210 603985 844000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -492) (undo-tree-id256 . -1) 493) nil (26110 9210 603985 133000) 0 nil])
([nil nil ((492 . 495)) nil (26110 9210 603983 970000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -492) (undo-tree-id253 . -1) (#(" " 0 1 (fontified t)) . -493) (undo-tree-id254 . -1) (#("a" 0 1 (fontified t)) . -494) (undo-tree-id255 . -1) 495) nil (26110 9210 603982 918000) 0 nil])
([nil nil ((492 . 497)) nil (26110 9210 603980 272000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -496) (undo-tree-id252 . -1) 497) nil (26110 9210 603979 651000) 0 nil])
([nil nil ((496 . 502)) nil (26110 9210 603978 519000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -500) (undo-tree-id250 . -1) (#("s" 0 1 (fontified t)) . -501) (undo-tree-id251 . -1) 502) nil (26110 9210 603977 697000) 0 nil])
([nil nil ((500 . 504)) nil (26110 9210 603975 723000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -503) (undo-tree-id249 . -1) 504) nil (26110 9210 603974 681000) 0 nil])
([nil nil ((503 . 506)) nil (26110 9210 603973 318000) 0 nil])
([nil nil ((506 . 508)) nil (26110 9210 603972 727000) 0 nil])
([nil nil ((508 . 509)) nil (26110 9210 603972 125000) 0 nil])
([nil nil ((632 . 637)) nil (26110 9210 603971 604000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -633) (undo-tree-id245 . -1) (#("r" 0 1 (fontified t)) . -634) (undo-tree-id246 . -1) (#("=" 0 1 (fontified t)) . -635) (undo-tree-id247 . -1) (#("=" 0 1 (fontified t)) . -636) (undo-tree-id248 . -1) 637) nil (26110 9210 603970 622000) 0 nil])
([nil nil ((633 . 635)) nil (26110 9210 603947 674000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -633) (undo-tree-id243 . -1) (#("r" 0 1 (fontified t)) . -634) (undo-tree-id244 . -1) 635) nil (26110 9210 603946 782000) 0 nil])
([nil nil ((633 . 639)) nil (26110 9210 603945 109000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -638) (undo-tree-id242 . -1) 639) nil (26110 9210 603944 488000) 0 nil])
([nil nil ((638 . 643)) nil (26110 9210 603943 385000) 0 nil])
([nil nil ((651 . 652)) nil (26110 9210 603942 894000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -651) (undo-tree-id241 . -1) 652) nil (26110 9210 603942 273000) 0 nil])
([nil nil ((651 . 656)) nil (26110 9210 603941 121000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -654) (undo-tree-id239 . -1) (#("r" 0 1 (fontified t)) . -655) (undo-tree-id240 . -1) 656) nil (26110 9210 603940 359000) 0 nil])
([nil nil ((654 . 665)) nil (26110 9210 603938 655000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -663) (undo-tree-id237 . -1) (#("s" 0 1 (fontified t)) . -664) (undo-tree-id238 . -1) 665) nil (26110 9210 603937 683000) 0 nil])
([nil nil ((663 . 665)) nil (26110 9210 603935 950000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -651) (undo-tree-id223 . -1) (#("a" 0 1 (fontified t)) . -652) (undo-tree-id224 . -1) (#("n" 0 1 (fontified t)) . -653) (undo-tree-id225 . -1) (#("d" 0 1 (fontified t)) . -654) (undo-tree-id226 . -1) (#("e" 0 1 (fontified t)) . -655) (undo-tree-id227 . -1) (#("r" 0 1 (fontified t)) . -656) (undo-tree-id228 . -1) (#("a" 0 1 (fontified t)) . -657) (undo-tree-id229 . -1) (#(" " 0 1 (fontified t)) . -658) (undo-tree-id230 . -1) (#("=" 0 1 (fontified t)) . -659) (undo-tree-id231 . -1) (#(" " 0 1 (fontified t)) . -660) (undo-tree-id232 . -1) (#("a" 0 1 (fontified t)) . -661) (undo-tree-id233 . -1) (#("r" 0 1 (fontified t)) . -662) (undo-tree-id234 . -1) (#("g" 0 1 (fontified t)) . -663) (undo-tree-id235 . -1) (#("u" 0 1 (fontified t)) . -664) (undo-tree-id236 . -1) 665) nil (26110 9210 603933 895000) 0 nil])
([nil nil ((651 . 658)) nil (26110 9210 603923 23000) 0 nil])
([nil nil ((658 . 664)) nil (26110 9210 603922 522000) 0 nil])
([nil nil ((664 . 665)) nil (26110 9210 603922 41000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -664) (undo-tree-id222 . -1) 665) nil (26110 9210 603921 319000) 0 nil])
([nil nil ((664 . 671)) nil (26110 9210 603920 66000) 0 nil])
([nil nil ((671 . 672)) nil (26110 9210 603919 455000) 0 nil])
([nil nil ((678 . 679) (#("	" 0 1 (fontified nil)) . 677) (undo-tree-id220 . -1) (677 . 679) (#("	" 0 1 (fontified nil)) . 676) (undo-tree-id221 . -1) (677 . 678)) nil (26110 9210 603918 543000) 0 nil])
([nil nil ((677 . 678)) nil (26110 9210 603916 309000) 0 nil])
([nil nil ((678 . 680)) nil (26110 9210 603915 828000) 0 nil])
([nil nil ((680 . 682)) nil (26110 9210 603915 347000) 0 nil])
([nil nil ((681 . 692)) nil (26110 9210 603914 866000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -691) (undo-tree-id219 . -1) 692) nil (26110 9210 603914 74000) 0 nil])
([nil nil ((691 . 693)) nil (26110 9210 603912 771000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -692) (undo-tree-id218 . -1) 693) nil (26110 9210 603912 70000) 0 nil])
([nil nil ((692 . 696)) nil (26110 9210 603910 847000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -692) (undo-tree-id214 . -1) (#("o" 0 1 (fontified t)) . -693) (undo-tree-id215 . -1) (#("n" 0 1 (fontified t)) . -694) (undo-tree-id216 . -1) (#("t" 0 1 (fontified t)) . -695) (undo-tree-id217 . -1) 696) nil (26110 9210 603909 695000) 0 nil])
([nil nil ((692 . 698)) nil (26110 9210 603906 57000) 0 nil])
([nil nil ((698 . 700)) nil (26110 9210 603905 546000) 0 nil])
([nil nil ((699 . 701)) nil (26110 9210 603905 65000) 0 nil])
([nil nil ((700 . 702)) nil (26110 9210 603904 574000) 0 nil])
([nil nil ((705 . 707)) nil (26110 9210 603903 923000) 0 nil])
([nil nil ((708 . 709) (#("	" 0 1 (fontified nil)) . 707) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (706 . 709)) nil (26110 9210 603902 760000) 0 nil])
([nil nil ((707 . 712)) nil (26110 9210 603899 954000) 0 nil])
([nil nil ((712 . 729)) nil (26110 9210 603899 463000) 0 nil])
([nil nil ((727 . 728)) nil (26110 9210 603898 792000) 0 nil])
([nil nil ((730 . 732)) nil (26110 9210 603898 211000) 0 nil])
([nil nil ((732 . 733)) nil (26110 9210 603897 619000) 0 nil])
([nil nil ((731 . 736)) nil (26110 9210 603896 958000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -735) (undo-tree-id210 . -1) (undo-tree-id211 . -1) 736) nil (26110 9210 603895 124000) 0 nil])
([nil nil ((735 . 743)) nil (26110 9210 603884 993000) 0 nil])
([nil nil ((743 . 745)) nil (26110 9210 603881 305000) 0 nil])
([nil nil ((643 . 646) (t 26110 9210 622696 510000)) nil (26110 9294 18563 608000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -645) (undo-tree-id261 . -1) 646) nil (26110 9294 18562 596000) 0 nil])
([nil nil ((644 . 645)) nil (26110 9294 18561 284000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -644) (undo-tree-id259 . -1) (#(">" 0 1 (fontified t)) . -645) (undo-tree-id260 . -1) 646) nil (26110 9294 18560 41000) 0 nil])
([nil nil ((644 . 645)) nil (26110 9294 18557 346000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -644) (undo-tree-id258 . -1) 645) nil (26110 9294 18555 312000) 0 nil])
([nil nil ((644 . 648)) nil (26110 9294 18544 240000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -645) (undo-tree-id262 . -1) 646 (t 26110 9294 37054 388000)) nil (26110 9306 56428 312000) 0 nil])
([nil nil ((#("
	if(argumentos.equals(\"-r\")){
	    System.out.println(rev.toString());
	}" 0 1 (fontified t) 1 2 (fontified t) 2 3 (face font-lock-keyword-face fontified t) 3 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (face font-lock-string-face fontified t) 24 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t) 26 27 (face font-lock-string-face fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t)) . 680) (undo-tree-id292 . -74) (t 26110 9306 75251 710000)) nil (26110 10488 320286 410000) 0 nil])
([nil nil ((#("	if(args.length < 1){
	    System.out.println(\"Debes al menos ingresar el nombre del archivo\");
	    return;
	} else if(args.length > 1){
	    argumentos = args[1];
	}
" 0 1 (fontified t c-is-sws t) 1 2 (face font-lock-keyword-face fontified t c-is-sws t) 2 3 (face font-lock-keyword-face fontified t) 3 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 27 (fontified t) 27 46 (fontified t) 46 93 (face font-lock-string-face fontified t) 93 96 (fontified t) 96 101 (fontified t) 101 107 (face font-lock-keyword-face fontified t) 107 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t) 111 112 (fontified t) 112 116 (face font-lock-keyword-face fontified t) 116 117 (fontified t) 117 118 (face font-lock-keyword-face fontified t) 118 119 (face font-lock-keyword-face fontified t) 119 120 (fontified t) 120 121 (fontified t) 121 122 (fontified t) 122 123 (fontified t) 123 124 (fontified t) 124 125 (fontified t) 125 126 (fontified t) 126 127 (fontified t) 127 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 134 (fontified t) 134 135 (fontified t) 135 136 (fontified t) 136 137 (fontified t) 137 138 (fontified t) 138 143 (fontified t) 143 144 (fontified t) 144 145 (fontified t) 145 146 (fontified t) 146 147 (fontified t) 147 148 (fontified t) 148 149 (fontified t) 149 150 (fontified t) 150 151 (fontified t) 151 152 (fontified t) 152 153 (fontified t) 153 154 (fontified t) 154 155 (fontified t) 155 156 (fontified t) 156 157 (fontified t) 157 158 (fontified t) 158 159 (fontified t) 159 160 (fontified t) 160 161 (fontified t) 161 162 (fontified t) 162 163 (fontified t) 163 164 (fontified t) 164 165 (fontified t) 165 166 (fontified t) 166 167 (fontified t) 167 168 (fontified t rear-nonsticky t)) . 512) (undo-tree-id289 . -168) (undo-tree-id290 . -31) (undo-tree-id291 . -168)) nil (26110 10488 320284 987000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -511) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#("
" 0 1 (fontified t)) . -512) (undo-tree-id288 . -1) 513) nil (26110 10488 320282 262000) 0 nil])
([nil nil ((510 . 511) (#("		" 0 1 (fontified t) 1 2 (fontified t)) . 510) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1)) nil (26110 10488 320278 625000) 0 nil])
([nil nil ((511 . 512) (#("	" 0 1 (fontified nil)) . 510) (undo-tree-id280 . -1) (511 . 512)) nil (26110 10488 320276 231000) 0 nil])
([nil nil ((nil rear-nonsticky nil 824 . 825) (nil fontified nil 572 . 825) (nil fontified nil 571 . 572) (nil category c->-as-paren-syntax 571 . 572) (nil fontified nil 565 . 571) (nil fontified nil 564 . 565) (nil category c-<-as-paren-syntax 564 . 565) (nil fontified nil 512 . 564) (512 . 825)) nil (26110 10488 320274 407000) 0 nil])
([nil nil ((511 . 512) (#("	        " 0 1 (fontified t) 1 9 (fontified t)) . 511) (undo-tree-id278 . -1) (undo-tree-id279 . -1) 512) nil (26110 10488 320272 503000) 0 nil])
([nil nil ((#("
	Lista<String> rev = b.reverso(lista)" 0 1 (fontified t) 1 2 (c-is-sws t fontified t) 2 3 (face font-lock-type-face c-is-sws t fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face fontified t) 7 8 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 8 9 (face font-lock-type-face fontified t) 9 10 (face font-lock-type-face fontified t) 10 11 (face font-lock-type-face fontified t) 11 12 (face font-lock-type-face fontified t) 12 13 (face font-lock-type-face fontified t) 13 14 (face font-lock-type-face fontified t) 14 15 (c-type c-decl-id-start category c->-as-paren-syntax fontified t) 15 16 (fontified t) 16 17 (face font-lock-variable-name-face fontified t) 17 18 (face font-lock-variable-name-face fontified t) 18 19 (face font-lock-variable-name-face fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t)) . 445) (undo-tree-id277 . -38)) nil (26110 10488 320270 289000) 0 nil])
([nil nil ((#(";" 0 1 (rear-nonsticky t fontified t)) . -445) (undo-tree-id276 . -1) 446) nil (26110 10488 320268 847000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -585) (undo-tree-id263 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -586) (undo-tree-id264 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -587) (undo-tree-id265 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -588) (undo-tree-id266 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -589) (undo-tree-id267 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -590) (undo-tree-id268 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -591) (undo-tree-id269 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -592) (undo-tree-id270 . -1) (#("v" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -593) (undo-tree-id271 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -594) (undo-tree-id272 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -595) (undo-tree-id273 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -596) (undo-tree-id274 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t c-in-sws t)) . -597) (undo-tree-id275 . -1) 598) nil (26110 10488 320264 699000) 0 nil])
([nil nil ((585 . 592)) nil (26110 10488 320234 70000) 0 nil])
([nil nil ((#("         for (String elemento : rev) {
                System.out.println(elemento);
   " 0 9 (fontified t) 9 12 (face font-lock-keyword-face fontified t) 12 14 (fontified t) 14 19 (face font-lock-type-face fontified t) 19 20 (face font-lock-type-face c-type c-decl-id-start fontified t) 20 21 (fontified t) 21 29 (face font-lock-variable-name-face fontified t) 29 88 (fontified t)) . 655) (undo-tree-id541 . -88) (undo-tree-id542 . -84) (t 26110 10488 339018 851000)) nil (26110 11721 897304 905000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -664) (undo-tree-id540 . -1) 665) nil (26110 11721 897302 881000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . -628) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -629) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -630) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -631) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -632) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -633) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -634) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -635) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -636) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -637) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -638) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -639) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -640) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -641) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -642) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -643) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -644) (undo-tree-id535 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -645) (undo-tree-id536 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -646) (undo-tree-id537 . -1) (#(":" 0 1 (face font-lock-string-face fontified t)) . -647) (undo-tree-id538 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -648) (undo-tree-id539 . -1) 649) nil (26110 11721 897294 866000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-warning-face fontified t)) . -624) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (#("L" 0 1 (face font-lock-string-face fontified t)) . -625) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -626) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -627) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) 628) nil (26110 11721 897198 572000) 0 nil])
([nil nil ((624 . 626)) nil (26110 11721 897137 777000) 0 nil])
([nil nil ((626 . 636)) nil (26110 11721 897136 955000) 0 nil])
([nil nil ((636 . 637)) nil (26110 11721 897136 284000) 0 nil])
([nil nil ((637 . 639)) nil (26110 11721 897135 372000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -636) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#("9" 0 1 (fontified t)) . -637) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (#("0" 0 1 (fontified t)) . -638) (undo-tree-id303 . -1) (undo-tree-id304 . -1) 639) nil (26110 11721 897132 627000) 0 nil])
([nil nil ((636 . 638)) nil (26110 11721 897114 573000) 0 nil])
([nil nil ((445 . 447) (t 26110 11721 941242 799000)) nil (26110 15429 662667 445000) 0 nil])
([nil nil ((nil rear-nonsticky nil 495 . 496) (nil fontified nil 476 . 496) (nil fontified nil 473 . 476) (nil fontified nil 472 . 473) (nil fontified nil 471 . 472) (nil category c->-as-paren-syntax 471 . 472) (nil fontified nil 465 . 471) (nil fontified nil 464 . 465) (nil category c-<-as-paren-syntax 464 . 465) (nil fontified nil 459 . 464) (nil fontified nil 447 . 459) (447 . 496)) nil (26110 15429 662666 343000) 0 nil])
([nil nil ((446 . 447) (#("	            " 0 1 (fontified t) 1 13 (fontified t)) . 446) (undo-tree-id725 . -1) 465) nil (26110 15429 662664 329000) 0 nil])
([nil nil ((680 . 685) (#("  " 0 2 (fontified nil)) . -680) (undo-tree-id722 . -2) (undo-tree-id723 . -2) (#("          " 0 1 (fontified t) 1 10 (fontified t)) . 682) (undo-tree-id724 . -1)) nil (26110 15429 662662 396000) 0 nil])
([nil nil ((685 . 688)) nil (26110 15429 662659 280000) 0 nil])
([nil nil ((688 . 690)) nil (26110 15429 662658 689000) 0 nil])
([nil nil ((689 . 695)) nil (26110 15429 662658 118000) 0 nil])
([nil nil ((695 . 700)) nil (26110 15429 662657 637000) 0 nil])
([nil nil ((700 . 701)) nil (26110 15429 662657 136000) 0 nil])
([nil nil ((701 . 702)) nil (26110 15429 662656 565000) 0 nil])
([nil nil ((509 . 511)) nil (26110 15429 662656 54000) 0 nil])
([nil nil ((511 . 512)) nil (26110 15429 662655 362000) 0 nil])
([nil nil ((#("K" 0 1 (fontified t)) . -511) (undo-tree-id721 . -1) 512) nil (26110 15429 662654 731000) 0 nil])
([nil nil ((511 . 513)) nil (26110 15429 662653 539000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -511) (undo-tree-id719 . -1) (#("i" 0 1 (fontified t)) . -512) (undo-tree-id720 . -1) 513) nil (26110 15429 662652 657000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -516) (undo-tree-id716 . -1) (#(" " 0 1 (fontified nil)) . -517) (undo-tree-id717 . -1) (#("	" 0 1 (fontified nil)) . 518) (undo-tree-id718 . -1) (510 . 518) 511) nil (26110 15429 662650 593000) 0 nil])
([nil nil ((510 . 511) (#("      " 0 6 (fontified t)) . -510) (undo-tree-id715 . -6) 516) nil (26110 15429 662647 848000) 0 nil])
([nil nil ((511 . 512)) nil (26110 15429 662646 556000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -511) (undo-tree-id714 . -1) 512) nil (26110 15429 662645 905000) 0 nil])
([nil nil ((511 . 516)) nil (26110 15429 662644 803000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -512) (undo-tree-id710 . -1) (#("S" 0 1 (fontified t)) . -513) (undo-tree-id711 . -1) (#("T" 0 1 (fontified t)) . -514) (undo-tree-id712 . -1) (#("A" 0 1 (fontified t)) . -515) (undo-tree-id713 . -1) 516) nil (26110 15429 662643 710000) 0 nil])
([nil nil ((512 . 515)) nil (26110 15429 662640 845000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -513) (undo-tree-id708 . -1) (#("t" 0 1 (fontified t)) . -514) (undo-tree-id709 . -1) 515) nil (26110 15429 662640 84000) 0 nil])
([nil nil ((513 . 518)) nil (26110 15429 662638 330000) 0 nil])
([nil nil ((518 . 526)) nil (26110 15429 662637 859000) 0 nil])
([nil nil ((#("j" 0 1 (face font-lock-variable-name-face fontified t)) . -525) (undo-tree-id707 . -1) 526) nil (26110 15429 662637 248000) 0 nil])
([nil nil ((525 . 527)) nil (26110 15429 662635 996000) 0 nil])
([nil nil ((527 . 528)) nil (26110 15429 662635 485000) 0 nil])
([nil nil ((721 . 723)) nil (26110 15429 662634 994000) 0 nil])
([nil nil ((724 . 727)) nil (26110 15429 662634 493000) 0 nil])
([nil nil ((727 . 745)) nil (26110 15429 662633 982000) 0 nil])
([nil nil ((745 . 747)) nil (26110 15429 662633 471000) 0 nil])
([nil nil ((746 . 749)) nil (26110 15429 662632 950000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -747) (undo-tree-id705 . -1) (#("n" 0 1 (fontified t)) . -748) (undo-tree-id706 . -1) 749) nil (26110 15429 662632 129000) 0 nil])
([nil nil ((747 . 749)) nil (26110 15429 662630 456000) 0 nil])
([nil nil ((750 . 751)) nil (26110 15429 662629 965000) 0 nil])
([nil nil ((#("
            // Imprime la lista en reversa
            System.out.println(rev.toString());" 0 1 (fontified t) 1 13 (fontified t c-is-sws t c-in-sws t) 13 14 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 14 16 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 16 36 (face font-lock-comment-face fontified t c-in-sws t) 36 37 (face font-lock-comment-face fontified t c-in-sws t) 37 38 (face font-lock-comment-face fontified t c-in-sws t) 38 39 (face font-lock-comment-face fontified t c-in-sws t) 39 40 (face font-lock-comment-face fontified t c-in-sws t) 40 41 (face font-lock-comment-face fontified t c-in-sws t) 41 42 (face font-lock-comment-face fontified t c-in-sws t) 42 43 (face font-lock-comment-face fontified t c-in-sws t) 43 44 (face font-lock-comment-face fontified t c-in-sws t) 44 45 (fontified t c-is-sws t) 45 56 (fontified t c-is-sws t c-in-sws t) 56 57 (fontified t c-is-sws t) 57 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 91 (fontified t)) . 607) (undo-tree-id699 . -91) (undo-tree-id700 . -43) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -9)) nil (26110 15429 662629 143000) 0 nil])
([nil nil ((#("            Lista<String> rev = b.reverso(lista);" 0 12 (fontified t) 12 17 (face font-lock-type-face fontified t) 17 18 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 18 24 (face font-lock-type-face fontified t) 24 25 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 25 26 (fontified t) 26 29 (face font-lock-variable-name-face fontified t) 29 49 (fontified t)) . 558) (undo-tree-id691 . -49) (undo-tree-id692 . -49) (undo-tree-id693 . -49) (undo-tree-id694 . -49) (undo-tree-id695 . -49) (undo-tree-id696 . -49) (undo-tree-id697 . -49) (undo-tree-id698 . -49)) nil (26110 15429 662624 94000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -557) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) 558) nil (26110 15429 662619 94000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -535) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (#("." 0 1 (fontified t)) . -536) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (#("g" 0 1 (fontified t)) . -537) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (#("e" 0 1 (fontified t)) . -538) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (#("t" 0 1 (fontified t)) . -539) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (#("R" 0 1 (fontified t)) . -540) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (#("e" 0 1 (fontified t)) . -541) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (#("v" 0 1 (fontified t)) . -542) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (#("e" 0 1 (fontified t)) . -543) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (#("r" 0 1 (fontified t)) . -544) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (#("s" 0 1 (fontified t)) . -545) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (#("e" 0 1 (fontified t)) . -546) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (#("d" 0 1 (fontified t)) . -547) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (#("F" 0 1 (fontified t)) . -548) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (#("l" 0 1 (fontified t)) . -549) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (#("a" 0 1 (fontified t)) . -550) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (#("g" 0 1 (fontified t)) . -551) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (#("(" 0 1 (fontified t)) . -552) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (#(")" 0 1 (fontified t)) . -553) (undo-tree-id680 . -1) (undo-tree-id681 . -1) 554) nil (26110 15429 662611 259000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -533) (undo-tree-id643 . -1) 534) nil (26110 15429 662587 425000) 0 nil])
([nil nil ((534 . 535)) nil (26110 15429 662586 313000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -534) (undo-tree-id642 . -1) 535) nil (26110 15429 662585 681000) 0 nil])
([nil nil ((534 . 536)) nil (26110 15429 662584 549000) 0 nil])
([nil nil ((536 . 537)) nil (26110 15429 662584 38000) 0 nil])
([nil nil ((603 . 608)) nil (26110 15429 662583 527000) 0 nil])
([nil nil ((608 . 609) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 608) (undo-tree-id641 . -4) (604 . 608) 608) nil (26110 15429 662582 806000) 0 nil])
([nil nil ((609 . 611)) nil (26110 15429 662581 413000) 0 nil])
([nil nil ((611 . 613)) nil (26110 15429 662580 882000) 0 nil])
([nil nil ((613 . 615)) nil (26110 15429 662580 371000) 0 nil])
([nil nil ((616 . 617) (#("	" 0 1 (fontified nil)) . 615) (undo-tree-id640 . -1) (614 . 617)) nil (26110 15429 662579 670000) 0 nil])
([nil nil ((615 . 620)) nil (26110 15429 662578 398000) 0 nil])
([nil nil ((612 . 615)) nil (26110 15429 662577 887000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -608) (undo-tree-id632 . -1) (#("i" 0 1 (fontified t)) . -609) (undo-tree-id633 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -610) (undo-tree-id634 . -1) (#("(" 0 1 (fontified t)) . -611) (undo-tree-id635 . -1) (#("b" 0 1 (fontified t)) . -612) (undo-tree-id636 . -1) (#("." 0 1 (fontified t)) . -613) (undo-tree-id637 . -1) (#("o" 0 1 (fontified t)) . -614) (undo-tree-id638 . -1) (#(")" 0 1 (fontified t)) . -615) (undo-tree-id639 . -1) 616) nil (26110 15429 662576 524000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -617) (undo-tree-id631 . -1) 618) nil (26110 15429 662559 242000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -615) (undo-tree-id621 . -1) (#(" " 0 1 (fontified t)) . -616) (undo-tree-id622 . -1) (#(" " 0 1 (fontified t)) . -617) (undo-tree-id623 . -1) (#(" " 0 1 (fontified t)) . -618) (undo-tree-id624 . -1) (#(" " 0 1 (fontified t)) . -619) (undo-tree-id625 . -1) (#(" " 0 1 (fontified t)) . -620) (undo-tree-id626 . -1) (#(" " 0 1 (fontified t)) . -621) (undo-tree-id627 . -1) (#(" " 0 1 (fontified t)) . -622) (undo-tree-id628 . -1) (#(" " 0 1 (fontified nil)) . -623) (undo-tree-id629 . -1) (#("	" 0 1 (fontified nil)) . 624) (undo-tree-id630 . -1) (616 . 624) 617) nil (26110 15429 662556 837000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -608) (undo-tree-id620 . -1) 609) nil (26110 15429 662549 844000) 0 nil])
([nil nil ((#("	    for(String lin : as)
		System.out.println(lin);
" 0 5 (fontified t) 5 6 (face font-lock-keyword-face fontified t) 6 7 (face font-lock-keyword-face fontified t) 7 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 10 (face font-lock-type-face fontified t) 10 11 (face font-lock-type-face fontified t) 11 12 (face font-lock-type-face fontified t) 12 13 (face font-lock-type-face fontified t) 13 14 (face font-lock-type-face fontified t) 14 15 (face font-lock-type-face c-type c-decl-id-start fontified t) 15 16 (fontified t) 16 17 (face font-lock-variable-name-face fontified t) 17 18 (face font-lock-variable-name-face fontified t) 18 19 (face font-lock-variable-name-face fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t)) . 541) (undo-tree-id619 . -53)) nil (26110 15429 662548 532000) 0 nil])
([nil nil ((542 . 543) (#("        " 0 8 (fontified nil)) . 541) (undo-tree-id617 . -8) (undo-tree-id618 . -8) (549 . 550)) nil (26110 15429 662546 929000) 0 nil])
([nil nil ((541 . 546)) nil (26110 15429 662544 344000) 0 nil])
([nil nil ((546 . 548)) nil (26110 15429 662543 773000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -525) (undo-tree-id615 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -526) (undo-tree-id616 . -1) 527) nil (26110 15429 662542 931000) 0 nil])
([nil nil ((525 . 529)) nil (26110 15429 662540 957000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -548) (undo-tree-id613 . -1) (#("s" 0 1 (fontified t)) . -549) (undo-tree-id614 . -1) 550) nil (26110 15429 662540 236000) 0 nil])
([nil nil ((548 . 550)) nil (26110 15429 662538 362000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -549) (undo-tree-id612 . -1) 550) nil (26110 15429 662537 371000) 0 nil])
([nil nil ((549 . 552)) nil (26110 15429 662535 998000) 0 nil])
([nil nil ((552 . 558)) nil (26110 15429 662535 297000) 0 nil])
([nil nil ((558 . 560)) nil (26110 15429 662534 706000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -557) (undo-tree-id609 . -1) (#("d" 0 1 (fontified t)) . -558) (undo-tree-id610 . -1) (#("e" 0 1 (fontified t)) . -559) (undo-tree-id611 . -1) 560) nil (26110 15429 662533 894000) 0 nil])
([nil nil ((557 . 561)) nil (26110 15429 662531 630000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -555) (undo-tree-id603 . -1) (#("a" 0 1 (fontified t)) . -556) (undo-tree-id604 . -1) (#("B" 0 1 (fontified t)) . -557) (undo-tree-id605 . -1) (#("a" 0 1 (fontified t)) . -558) (undo-tree-id606 . -1) (#("n" 0 1 (fontified t)) . -559) (undo-tree-id607 . -1) (#("d" 0 1 (fontified t)) . -560) (undo-tree-id608 . -1) 561) nil (26110 15429 662530 428000) 0 nil])
([nil nil ((555 . 556)) nil (26110 15429 662525 759000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t)) . -555) (undo-tree-id602 . -1) 556) nil (26110 15429 662525 108000) 0 nil])
([nil nil ((555 . 563)) nil (26110 15429 662523 675000) 0 nil])
([nil nil ((563 . 570)) nil (26110 15429 662522 974000) 0 nil])
([nil nil ((570 . 571)) nil (26110 15429 662522 252000) 0 nil])
([nil nil ((571 . 573)) nil (26110 15429 662521 751000) 0 nil])
([nil nil ((572 . 577)) nil (26110 15429 662521 240000) 0 nil])
([nil nil ((578 . 579)) nil (26110 15429 662520 719000) 0 nil])
([nil nil ((587 . 593) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 587) (undo-tree-id601 . -4) (583 . 587) 587) nil (26110 15429 662520 8000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -581) (undo-tree-id599 . -1) (#(" " 0 1 (fontified t)) . -582) (undo-tree-id600 . -1) 583) nil (26110 15429 662518 345000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -541) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) 542) nil (26110 15429 662516 101000) 0 nil])
([nil nil ((584 . 590) (#(" x" 0 2 (fontified nil)) . -584) (584 . 586) (#("else" 0 4 (face font-lock-keyword-face fontified nil)) . 584) (undo-tree-id589 . -4) (580 . 584) 584) nil (26110 15429 662510 29000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -563) (undo-tree-id582 . -1) (#("r" 0 1 (fontified t)) . -564) (undo-tree-id583 . -1) (#("d" 0 1 (fontified t)) . -565) (undo-tree-id584 . -1) (#("e" 0 1 (fontified t)) . -566) (undo-tree-id585 . -1) (#("n" 0 1 (fontified t)) . -567) (undo-tree-id586 . -1) (#("a" 0 1 (fontified t)) . -568) (undo-tree-id587 . -1) (#("r" 0 1 (fontified t)) . -569) (undo-tree-id588 . -1) 570) nil (26110 15429 662507 234000) 0 nil])
([nil nil ((563 . 570)) nil (26110 15429 662502 225000) 0 nil])
([nil nil ((590 . 601)) nil (26110 15429 662501 633000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -599) (undo-tree-id580 . -1) (#("d" 0 1 (fontified t)) . -600) (undo-tree-id581 . -1) 601) nil (26110 15429 662500 812000) 0 nil])
([nil nil ((599 . 601)) nil (26110 15429 662498 698000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -599) (undo-tree-id578 . -1) (#("d" 0 1 (fontified t)) . -600) (undo-tree-id579 . -1) 601) nil (26110 15429 662497 896000) 0 nil])
([nil nil ((599 . 606)) nil (26110 15429 662495 712000) 0 nil])
([nil nil ((606 . 608)) nil (26110 15429 662495 11000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -606) (undo-tree-id576 . -1) (#("n" 0 1 (fontified t)) . -607) (undo-tree-id577 . -1) 608) nil (26110 15429 662494 39000) 0 nil])
([nil nil ((606 . 612)) nil (26110 15429 662492 166000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -609) (undo-tree-id573 . -1) (#("a" 0 1 (fontified t)) . -610) (undo-tree-id574 . -1) (#("r" 0 1 (fontified t)) . -611) (undo-tree-id575 . -1) 612) nil (26110 15429 662491 314000) 0 nil])
([nil nil ((609 . 613)) nil (26110 15429 662487 908000) 0 nil])
([nil nil ((613 . 615)) nil (26110 15429 662487 397000) 0 nil])
([nil nil ((614 . 618)) nil (26110 15429 662486 916000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -616) (undo-tree-id571 . -1) (#("s" 0 1 (fontified t)) . -617) (undo-tree-id572 . -1) 618) nil (26110 15429 662486 184000) 0 nil])
([nil nil ((616 . 619)) nil (26110 15429 662484 421000) 0 nil])
([nil nil ((620 . 621)) nil (26110 15429 662483 870000) 0 nil])
([nil nil ((623 . 624) (#("	" 0 1 (fontified nil)) . 622) (undo-tree-id570 . -1) (621 . 624)) nil (26110 15429 662483 179000) 0 nil])
([nil nil ((624 . 626)) nil (26110 15429 662481 796000) 0 nil])
([nil nil ((626 . 628)) nil (26110 15429 662481 315000) 0 nil])
([nil nil ((628 . 629)) nil (26110 15429 662480 794000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -627) (undo-tree-id568 . -1) (#("=" 0 1 (fontified t)) . -628) (undo-tree-id569 . -1) 629) nil (26110 15429 662480 43000) 0 nil])
([nil nil ((627 . 628)) nil (26110 15429 662478 69000) 0 nil])
([nil nil ((627 . 630)) nil (26110 15429 662477 518000) 0 nil])
([nil nil ((637 . 646)) nil (26110 15429 662476 937000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t)) . -637) (undo-tree-id559 . -1) (#("a" 0 1 (fontified t)) . -638) (undo-tree-id560 . -1) (#("n" 0 1 (fontified t)) . -639) (undo-tree-id561 . -1) (#("d" 0 1 (fontified t)) . -640) (undo-tree-id562 . -1) (#("e" 0 1 (fontified t)) . -641) (undo-tree-id563 . -1) (#("r" 0 1 (fontified t)) . -642) (undo-tree-id564 . -1) (#("a" 0 1 (fontified t)) . -643) (undo-tree-id565 . -1) (#("s" 0 1 (fontified t)) . -644) (undo-tree-id566 . -1) (#("." 0 1 (fontified t)) . -645) (undo-tree-id567 . -1) 646) nil (26110 15429 662475 224000) 0 nil])
([nil nil ((637 . 647)) nil (26110 15429 662468 992000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -646) (undo-tree-id558 . -1) 647) nil (26110 15429 662468 351000) 0 nil])
([nil nil ((646 . 655)) nil (26110 15429 662467 249000) 0 nil])
([nil nil ((655 . 657)) nil (26110 15429 662466 648000) 0 nil])
([nil nil ((656 . 657)) nil (26110 15429 662466 167000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -656) (undo-tree-id557 . -1) 657) nil (26110 15429 662465 556000) 0 nil])
([nil nil ((656 . 658)) nil (26110 15429 662464 283000) 0 nil])
([nil nil ((657 . 671)) nil (26110 15429 662463 592000) 0 nil])
([nil nil ((673 . 674)) nil (26110 15429 662463 71000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -679) (undo-tree-id555 . -1) (undo-tree-id556 . -1) 680) nil (26110 15429 662462 239000) 0 nil])
([nil nil ((675 . 676) (#("	   " 0 4 (fontified t)) . -675) (undo-tree-id553 . -4) (undo-tree-id554 . -4) 679) nil (26110 15429 662460 35000) 0 nil])
([nil nil ((676 . 680)) nil (26110 15429 662457 320000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -677) (undo-tree-id550 . -1) (#("l" 0 1 (fontified t)) . -678) (undo-tree-id551 . -1) (#("s" 0 1 (fontified t)) . -679) (undo-tree-id552 . -1) 680) nil (26110 15429 662456 258000) 0 nil])
([nil nil ((677 . 680)) nil (26110 15429 662453 643000) 0 nil])
([nil nil ((680 . 681) (#(" x" 0 2 (fontified nil)) . -680) (680 . 682) (#("else" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 3 (face font-lock-keyword-face fontified nil) 3 4 (face font-lock-keyword-face fontified nil)) . 680) (undo-tree-id549 . -4) (676 . 680) 680) nil (26110 15429 662452 651000) 0 nil])
([nil nil ((681 . 682)) nil (26110 15429 662450 587000) 0 nil])
([nil nil ((682 . 683)) nil (26110 15429 662450 86000) 0 nil])
([nil nil ((684 . 685) (#("	" 0 1 (fontified nil)) . 683) (undo-tree-id548 . -1) (682 . 685)) nil (26110 15429 662449 245000) 0 nil])
([nil nil ((683 . 688)) nil (26110 15429 662447 732000) 0 nil])
([nil nil ((688 . 691)) nil (26110 15429 662447 231000) 0 nil])
([nil nil ((691 . 693)) nil (26110 15429 662446 680000) 0 nil])
([nil nil ((692 . 697)) nil (26110 15429 662446 169000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -693) (undo-tree-id544 . -1) (#("R" 0 1 (fontified t)) . -694) (undo-tree-id545 . -1) (#("I" 0 1 (fontified t)) . -695) (undo-tree-id546 . -1) (#("N" 0 1 (fontified t)) . -696) (undo-tree-id547 . -1) 697) nil (26110 15429 662444 746000) 0 nil])
([nil nil ((693 . 698)) nil (26110 15429 662440 308000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -697) (undo-tree-id543 . -1) 698) nil (26110 15429 662438 775000) 0 nil])
([nil nil ((697 . 698)) nil (26110 15429 662430 179000) 0 nil])
([nil nil ((698 . 701)) nil (26110 15429 662429 678000) 0 nil])
([nil nil ((701 . 702)) nil (26110 15429 662429 197000) 0 nil])
([nil nil ((702 . 707)) nil (26110 15429 662428 656000) 0 nil])
([nil nil ((708 . 711)) nil (26110 15429 662428 165000) 0 nil])
([nil nil ((711 . 729)) nil (26110 15429 662427 644000) 0 nil])
([nil nil ((729 . 731)) nil (26110 15429 662426 963000) 0 nil])
([nil nil ((731 . 732)) nil (26110 15429 662425 490000) 0 nil])
([nil nil ((730 . 731)) nil (26110 15761 492679 727000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -663) (undo-tree-id813 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -664) (undo-tree-id814 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -665) (undo-tree-id815 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -666) (undo-tree-id816 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -667) (undo-tree-id817 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -668) (undo-tree-id818 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -669) (undo-tree-id819 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -670) (undo-tree-id820 . -1) 671 (t 26110 15429 709405 398000)) nil (26110 16953 415900 452000) 0 nil] [nil nil ((336 . 342) (t 26110 15429 709405 398000)) ((#("ANDERA" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (face font-lock-variable-name-face fontified t)) . 336) (undo-tree-id752 . -6) (undo-tree-id753 . -6)) (26110 15760 757736 551000) 0 nil])
([nil nil ((663 . 668)) nil (26110 16953 415894 641000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-variable-name-face fontified t)) . -335) (undo-tree-id742 . -1) (#("A" 0 1 (face font-lock-variable-name-face fontified t)) . -336) (undo-tree-id743 . -1) (#("N" 0 1 (face font-lock-variable-name-face fontified t)) . -337) (undo-tree-id744 . -1) (#("D" 0 1 (face font-lock-variable-name-face fontified t)) . -338) (undo-tree-id745 . -1) (#("E" 0 1 (face font-lock-variable-name-face fontified t)) . -339) (undo-tree-id746 . -1) (#("R" 0 1 (face font-lock-variable-name-face fontified t)) . -340) (undo-tree-id747 . -1) (#("A" 0 1 (face font-lock-variable-name-face fontified t)) . -341) (undo-tree-id748 . -1) 342) ((335 . 342)) (26110 15759 922203 311000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -666) (undo-tree-id811 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -667) (undo-tree-id812 . -1) 668) nil (26110 16953 415893 939000) 0 nil])
([nil nil ((335 . 339)) ((#("flag" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t)) . 335)) (26110 15759 334021 277000) 0 nil])
([nil nil ((666 . 670)) nil (26110 16953 415892 156000) 0 nil])
([nil nil ((#("k" 0 1 (face font-lock-string-face fontified t)) . -661) (undo-tree-id729 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -662) (undo-tree-id730 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -663) (undo-tree-id731 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -664) (undo-tree-id732 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -665) (undo-tree-id733 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -666) (undo-tree-id734 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -667) (undo-tree-id735 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -668) (undo-tree-id736 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -669) (undo-tree-id737 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -670) (undo-tree-id738 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -671) (undo-tree-id739 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -672) (undo-tree-id740 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -673) (undo-tree-id741 . -1) 674) ((661 . 674)) (26110 15758 398589 28000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . -668) (undo-tree-id809 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -669) (undo-tree-id810 . -1) 670) nil (26110 16953 415891 384000) 0 nil])
([nil nil ((661 . 662)) ((#("=" 0 1 (face font-lock-string-face fontified t)) . 661) (undo-tree-id750 . -1) (undo-tree-id751 . -1)) (26110 15757 900931 885000) 0 nil])
([nil nil ((668 . 670)) nil (26110 16953 415889 511000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -660) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (#("=" 0 1 (face font-lock-string-face fontified t)) . -661) (undo-tree-id728 . -1) 662) ((660 . 662)) (26110 15754 71909 960000) 0 nil])
([nil nil ((#("	    System.out.println(\"aki se guarda\");" 0 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t) 26 27 (face font-lock-string-face fontified t) 27 28 (face font-lock-string-face fontified t) 28 29 (face font-lock-string-face fontified t) 29 30 (face font-lock-string-face fontified t) 30 31 (face font-lock-string-face fontified t) 31 32 (face font-lock-string-face fontified t) 32 33 (face font-lock-string-face fontified t) 33 34 (face font-lock-string-face fontified t) 34 35 (face font-lock-string-face fontified t) 35 36 (face font-lock-string-face fontified t) 36 37 (face font-lock-string-face fontified t) 37 38 (face font-lock-string-face fontified t) 38 39 (face font-lock-string-face fontified t) 39 40 (fontified t) 40 41 (fontified t)) . 632) (undo-tree-id808 . -41)) nil (26110 16953 415888 819000) 0 nil])
([nil nil ((660 . 673)) ((#("aki se guarda" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t) 6 7 (face font-lock-string-face fontified t) 7 8 (face font-lock-string-face fontified t) 8 9 (face font-lock-string-face fontified t) 9 10 (face font-lock-string-face fontified t) 10 11 (face font-lock-string-face fontified t) 11 12 (face font-lock-string-face fontified t) 12 13 (face font-lock-string-face fontified t)) . 660) (undo-tree-id749 . -13)) (26110 15754 71168 146000) 0 nil])
([nil nil ((632 . 637)) nil (26110 16953 415887 577000) 0 nil])
nil
([nil nil ((637 . 642)) nil (26110 16953 415887 76000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -639) (undo-tree-id805 . -1) (#("d" 0 1 (fontified t)) . -640) (undo-tree-id806 . -1) (#("e" 0 1 (fontified t)) . -641) (undo-tree-id807 . -1) 642) nil (26110 16953 415886 204000) 0 nil])
([nil nil ((639 . 652)) nil (26110 16953 415882 868000) 0 nil])
([nil nil ((652 . 654)) nil (26110 16953 415882 397000) 0 nil])
([nil nil ((653 . 661)) nil (26110 16953 415881 896000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -654) (undo-tree-id798 . -1) (#("N" 0 1 (fontified t)) . -655) (undo-tree-id799 . -1) (#("D" 0 1 (fontified t)) . -656) (undo-tree-id800 . -1) (#("E" 0 1 (fontified t)) . -657) (undo-tree-id801 . -1) (#("R" 0 1 (fontified t)) . -658) (undo-tree-id802 . -1) (#("A" 0 1 (fontified t)) . -659) (undo-tree-id803 . -1) (#("S" 0 1 (fontified t)) . -660) (undo-tree-id804 . -1) 661) nil (26110 16953 415880 663000) 0 nil])
([nil nil ((654 . 661)) nil (26110 16953 415875 433000) 0 nil])
([nil nil ((661 . 662)) nil (26110 16953 415874 932000) 0 nil])
([nil nil ((662 . 665)) nil (26110 16953 415874 391000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -663) (undo-tree-id796 . -1) (#(" " 0 1 (fontified t)) . -664) (undo-tree-id797 . -1) 665) nil (26110 16953 415873 680000) 0 nil])
([nil nil ((663 . 664)) nil (26110 16953 415871 666000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -663) (undo-tree-id795 . -1) 664) nil (26110 16953 415870 944000) 0 nil])
([nil nil ((663 . 664)) nil (26110 16953 415869 792000) 0 nil])
([nil nil ((664 . 669)) nil (26110 16953 415869 301000) 0 nil])
([nil nil ((669 . 670)) nil (26110 16953 415868 750000) 0 nil])
([nil nil ((670 . 671)) nil (26110 16953 415868 259000) 0 nil])
([nil nil ((662 . 664)) nil (26110 16953 415867 758000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -671) (undo-tree-id793 . -1) (#(";" 0 1 (fontified t)) . -672) (undo-tree-id794 . -1) 673) nil (26110 16953 415866 976000) 0 nil])
([nil nil ((672 . 673)) nil (26110 16953 415864 892000) 0 nil])
([nil nil ((673 . 675)) nil (26110 16953 415864 401000) 0 nil])
([nil nil ((631 . 632)) nil (26110 16953 415863 910000) 0 nil])
([nil nil ((676 . 677)) nil (26110 16953 415863 339000) 0 nil])
([nil nil ((676 . 677) (#("	" 0 1 (fontified nil)) . 675) (undo-tree-id792 . -1) (676 . 677)) nil (26110 16953 415862 518000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -678) (undo-tree-id782 . -1) (#(" " 0 1 (fontified t)) . -679) (undo-tree-id783 . -1) (#(" " 0 1 (fontified t)) . -680) (undo-tree-id784 . -1) (#(" " 0 1 (fontified t)) . -681) (undo-tree-id785 . -1) (#(" " 0 1 (fontified t)) . -682) (undo-tree-id786 . -1) (#(" " 0 1 (fontified t)) . -683) (undo-tree-id787 . -1) (#(" " 0 1 (fontified t)) . -684) (undo-tree-id788 . -1) (#(" " 0 1 (fontified t)) . -685) (undo-tree-id789 . -1) (#(" " 0 1 (fontified nil)) . -686) (undo-tree-id790 . -1) (#("	" 0 1 (fontified nil)) . 687) (undo-tree-id791 . -1) (679 . 687) 680) nil (26110 16953 415860 33000) 0 nil])
([nil nil ((678 . 679)) nil (26110 16953 415852 398000) 0 nil])
([nil nil ((675 . 680)) nil (26110 16953 415851 907000) 0 nil])
([nil nil ((680 . 685)) nil (26110 16953 415851 386000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -681) (undo-tree-id778 . -1) (#("s" 0 1 (fontified t)) . -682) (undo-tree-id779 . -1) (#("t" 0 1 (fontified t)) . -683) (undo-tree-id780 . -1) (#("e" 0 1 (fontified t)) . -684) (undo-tree-id781 . -1) 685) nil (26110 16953 415850 354000) 0 nil])
([nil nil ((681 . 685)) nil (26110 16953 415846 917000) 0 nil])
([nil nil ((685 . 686)) nil (26110 16953 415846 386000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -685) (undo-tree-id777 . -1) 686) nil (26110 16953 415845 715000) 0 nil])
([nil nil ((685 . 690)) nil (26110 16953 415844 312000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -687) (undo-tree-id774 . -1) (#("u" 0 1 (fontified t)) . -688) (undo-tree-id775 . -1) (#("t" 0 1 (fontified t)) . -689) (undo-tree-id776 . -1) 690) nil (26110 16953 415843 430000) 0 nil])
([nil nil ((687 . 698)) nil (26110 16953 415840 785000) 0 nil])
([nil nil ((698 . 700)) nil (26110 16953 415840 294000) 0 nil])
([nil nil ((699 . 701)) nil (26110 16953 415839 663000) 0 nil])
([nil nil ((702 . 703)) nil (26110 16953 415839 162000) 0 nil])
([nil nil ((700 . 703)) nil (26110 16953 415838 611000) 0 nil])
([nil nil ((#("A" 0 1 (face font-lock-string-face fontified t)) . -701) (undo-tree-id772 . -1) (#("=" 0 1 (face font-lock-string-face fontified t)) . -702) (undo-tree-id773 . -1) 703) nil (26110 16953 415837 869000) 0 nil])
([nil nil ((701 . 702)) nil (26110 16953 415835 585000) 0 nil])
([nil nil ((702 . 712)) nil (26110 16953 415834 934000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -711) (undo-tree-id771 . -1) 712) nil (26110 16953 415834 172000) 0 nil])
([nil nil ((711 . 712)) nil (26110 16953 415833 30000) 0 nil])
([nil nil ((712 . 713)) nil (26110 16953 415832 499000) 0 nil])
([nil nil ((714 . 716)) nil (26110 16953 415831 988000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t)) . -715) (undo-tree-id770 . -1) 716) nil (26110 16953 415831 266000) 0 nil])
([nil nil ((715 . 728)) nil (26110 16953 415829 894000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t)) . -717) (undo-tree-id762 . -1) (#("a" 0 1 (fontified t)) . -718) (undo-tree-id763 . -1) (#("n" 0 1 (fontified t)) . -719) (undo-tree-id764 . -1) (#("d" 0 1 (fontified t)) . -720) (undo-tree-id765 . -1) (#("e" 0 1 (fontified t)) . -721) (undo-tree-id766 . -1) (#("r" 0 1 (fontified t)) . -722) (undo-tree-id767 . -1) (#("a" 0 1 (fontified t)) . -723) (undo-tree-id768 . -1) (#("s" 0 1 (fontified t)) . -724) (undo-tree-id769 . -1) 725) nil (26110 16953 415828 10000) 0 nil])
([nil nil ((717 . 718)) nil (26110 16953 415819 904000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t)) . -654) (undo-tree-id754 . -1) (#("a" 0 1 (fontified t)) . -655) (undo-tree-id755 . -1) (#("n" 0 1 (fontified t)) . -656) (undo-tree-id756 . -1) (#("d" 0 1 (fontified t)) . -657) (undo-tree-id757 . -1) (#("e" 0 1 (fontified t)) . -658) (undo-tree-id758 . -1) (#("r" 0 1 (fontified t)) . -659) (undo-tree-id759 . -1) (#("a" 0 1 (fontified t)) . -660) (undo-tree-id760 . -1) (#("s" 0 1 (fontified t)) . -661) (undo-tree-id761 . -1) 662) nil (26110 16953 415817 249000) 0 nil])
([nil nil ((654 . 655)) nil (26110 16953 415800 75000) 0 nil])
([nil nil ((#("package mx.unam.ciencias.edd.proyecto1;

import java.io.FileReader;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.BufferedReader;
import java.io.IOException;
import java.text.Normalizer;
import mx.unam.ciencias.edd.Lista;

public class Proyecto1 {
    
    public static void main(String args[]){
	Banderas b = new Banderas(args);
	Lista<String> lista = b.fileReader(args);
	Lista<String> ordenada = b.ordenar(lista);
	Lista<String> rev = b.reverso(lista);
	String argumentos = \"\";
	Lista<String> file;

	if(b.r) 
	    file = Banderas.reverso(lista);
	else
	    file = Banderas.ordenar(lista);

	if(b.o){
	    Banderas.writer(b.id , file);
	    System.out.println(\"Guardado en: \" + b.id);
	} else {
	    for(String a : file)
		System.out.println(a);
	}
        
   
        
    }

}
 
" 0 7 (face font-lock-keyword-face fontified t) 7 29 (fontified t) 29 37 (face font-lock-constant-face fontified t) 37 38 (face font-lock-constant-face c-type c-decl-id-start fontified t) 38 41 (fontified t) 41 47 (face font-lock-keyword-face fontified t) 47 48 (fontified t) 48 52 (face font-lock-constant-face fontified t) 52 53 (fontified t) 53 55 (face font-lock-constant-face fontified t) 55 56 (fontified t) 56 65 (face font-lock-type-face fontified t) 65 66 (face font-lock-type-face c-type c-decl-id-start fontified t) 66 68 (fontified t) 68 74 (face font-lock-keyword-face fontified t) 74 75 (fontified t) 75 79 (face font-lock-constant-face fontified t) 79 80 (fontified t) 80 82 (face font-lock-constant-face fontified t) 82 83 (fontified t) 83 92 (face font-lock-type-face fontified t) 92 93 (face font-lock-type-face c-type c-decl-id-start fontified t) 93 95 (fontified t) 95 101 (face font-lock-keyword-face fontified t) 101 102 (fontified t) 102 106 (face font-lock-constant-face fontified t) 106 107 (fontified t) 107 109 (face font-lock-constant-face fontified t) 109 110 (fontified t) 110 123 (face font-lock-type-face fontified t) 123 124 (face font-lock-type-face c-type c-decl-id-start fontified t) 124 126 (fontified t) 126 132 (face font-lock-keyword-face fontified t) 132 133 (fontified t) 133 137 (face font-lock-constant-face fontified t) 137 138 (fontified t) 138 140 (face font-lock-constant-face fontified t) 140 141 (fontified t) 141 154 (face font-lock-type-face fontified t) 154 155 (face font-lock-type-face c-type c-decl-id-start fontified t) 155 157 (fontified t) 157 163 (face font-lock-keyword-face fontified t) 163 164 (fontified t) 164 168 (face font-lock-constant-face fontified t) 168 169 (fontified t) 169 171 (face font-lock-constant-face fontified t) 171 172 (fontified t) 172 182 (face font-lock-type-face fontified t) 182 183 (face font-lock-type-face c-type c-decl-id-start fontified t) 183 185 (fontified t) 185 191 (face font-lock-keyword-face fontified t) 191 192 (fontified t) 192 196 (face font-lock-constant-face fontified t) 196 197 (fontified t) 197 201 (face font-lock-constant-face fontified t) 201 202 (fontified t) 202 211 (face font-lock-type-face fontified t) 211 212 (face font-lock-type-face c-type c-decl-id-start fontified t) 212 214 (fontified t) 214 220 (face font-lock-keyword-face fontified t) 220 221 (fontified t) 221 223 (face font-lock-constant-face fontified t) 223 224 (fontified t) 224 228 (face font-lock-constant-face fontified t) 228 229 (fontified t) 229 237 (face font-lock-constant-face fontified t) 237 238 (fontified t) 238 241 (face font-lock-constant-face fontified t) 241 242 (fontified t) 242 246 (face font-lock-type-face fontified t) 246 247 (face font-lock-type-face c-type c-decl-id-start fontified t) 247 250 (fontified t) 250 256 (face font-lock-keyword-face fontified t) 256 257 (fontified t) 257 261 (face font-lock-keyword-face fontified t) 261 262 (c-type c-decl-type-start face font-lock-keyword-face fontified t) 262 263 (fontified t) 263 272 (face font-lock-type-face fontified t) 272 284 (fontified t) 284 290 (face font-lock-keyword-face fontified t) 290 291 (fontified t) 291 297 (face font-lock-keyword-face fontified t) 297 298 (fontified t) 298 301 (face font-lock-type-face fontified t) 301 302 (face font-lock-type-face c-type c-decl-id-start fontified t) 302 303 (fontified t) 303 307 (face font-lock-function-name-face fontified t) 307 308 (c-type c-decl-arg-start fontified t) 308 314 (face font-lock-type-face fontified t) 314 315 (fontified t) 315 319 (face font-lock-variable-name-face fontified t) 319 324 (fontified t) 324 325 (fontified t) 325 332 (face font-lock-type-face fontified t) 332 333 (face font-lock-type-face c-type c-decl-id-start fontified t) 333 334 (fontified t) 334 335 (face font-lock-variable-name-face fontified t) 335 337 (fontified t) 337 338 (fontified t) 338 341 (face font-lock-keyword-face fontified t) 341 342 (fontified t) 342 350 (face font-lock-type-face fontified t) 350 355 (fontified t) 355 357 (fontified t) 357 358 (fontified t) 358 359 (fontified t) 359 360 (face font-lock-type-face fontified t) 360 361 (face font-lock-type-face fontified t) 361 362 (face font-lock-type-face fontified t) 362 363 (face font-lock-type-face fontified t) 363 364 (face font-lock-type-face fontified t) 364 365 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 365 366 (face font-lock-type-face fontified t) 366 367 (face font-lock-type-face fontified t) 367 368 (face font-lock-type-face fontified t) 368 369 (face font-lock-type-face fontified t) 369 370 (face font-lock-type-face fontified t) 370 371 (face font-lock-type-face fontified t) 371 372 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 372 373 (fontified t) 373 374 (face font-lock-variable-name-face fontified t) 374 375 (face font-lock-variable-name-face fontified t) 375 376 (face font-lock-variable-name-face fontified t) 376 377 (face font-lock-variable-name-face fontified t) 377 378 (face font-lock-variable-name-face fontified t) 378 379 (fontified t) 379 380 (fontified t) 380 381 (fontified t) 381 382 (fontified t) 382 383 (fontified t) 383 384 (fontified t) 384 385 (fontified t) 385 386 (fontified t) 386 387 (fontified t) 387 388 (fontified t) 388 389 (fontified t) 389 390 (fontified t) 390 391 (fontified t) 391 392 (fontified t) 392 393 (fontified t) 393 394 (fontified t) 394 395 (fontified t) 395 396 (fontified t) 396 397 (fontified t) 397 398 (fontified t) 398 399 (fontified t) 399 400 (fontified t) 400 401 (fontified t) 401 402 (fontified t) 402 403 (face font-lock-type-face fontified t) 403 404 (face font-lock-type-face fontified t) 404 405 (face font-lock-type-face fontified t) 405 406 (face font-lock-type-face fontified t) 406 407 (face font-lock-type-face fontified t) 407 408 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 408 409 (face font-lock-type-face fontified t) 409 410 (face font-lock-type-face fontified t) 410 411 (face font-lock-type-face fontified t) 411 412 (face font-lock-type-face fontified t) 412 413 (face font-lock-type-face fontified t) 413 414 (face font-lock-type-face fontified t) 414 415 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 415 416 (fontified t) 416 417 (face font-lock-variable-name-face fontified t) 417 418 (face font-lock-variable-name-face fontified t) 418 419 (face font-lock-variable-name-face fontified t) 419 420 (face font-lock-variable-name-face fontified t) 420 421 (face font-lock-variable-name-face fontified t) 421 422 (face font-lock-variable-name-face fontified t) 422 423 (face font-lock-variable-name-face fontified t) 423 424 (face font-lock-variable-name-face fontified t) 424 425 (fontified t) 425 426 (fontified t) 426 427 (fontified t) 427 428 (fontified t) 428 429 (fontified t) 429 430 (fontified t) 430 431 (fontified t) 431 432 (fontified t) 432 433 (fontified t) 433 434 (fontified t) 434 435 (fontified t) 435 436 (fontified t) 436 437 (fontified t) 437 438 (fontified t) 438 439 (fontified t) 439 440 (fontified t) 440 441 (fontified t) 441 442 (fontified t) 442 443 (fontified t) 443 444 (fontified t) 444 445 (fontified t) 445 446 (fontified t) 446 451 (face font-lock-type-face fontified t) 451 452 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 452 458 (face font-lock-type-face fontified t) 458 459 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 459 460 (fontified t) 460 463 (face font-lock-variable-name-face fontified t) 463 482 (fontified t) 482 483 (fontified t rear-nonsticky t) 483 484 (fontified t) 484 485 (fontified t) 485 486 (face font-lock-type-face fontified t) 486 487 (face font-lock-type-face fontified t) 487 488 (face font-lock-type-face fontified t) 488 489 (face font-lock-type-face fontified t) 489 490 (face font-lock-type-face fontified t) 490 491 (face font-lock-type-face c-type c-decl-id-start fontified t) 491 492 (fontified t) 492 493 (face font-lock-variable-name-face fontified t) 493 494 (face font-lock-variable-name-face fontified t) 494 495 (face font-lock-variable-name-face fontified t) 495 496 (face font-lock-variable-name-face fontified t) 496 497 (face font-lock-variable-name-face fontified t) 497 498 (face font-lock-variable-name-face fontified t) 498 499 (face font-lock-variable-name-face fontified t) 499 500 (face font-lock-variable-name-face fontified t) 500 501 (face font-lock-variable-name-face fontified t) 501 502 (face font-lock-variable-name-face fontified t) 502 503 (fontified t) 503 504 (fontified t) 504 505 (fontified t) 505 506 (face font-lock-string-face fontified t) 506 507 (face font-lock-string-face fontified t) 507 508 (fontified t) 508 509 (fontified t) 509 510 (fontified t) 510 511 (face font-lock-type-face fontified t) 511 512 (face font-lock-type-face fontified t) 512 513 (face font-lock-type-face fontified t) 513 514 (face font-lock-type-face fontified t) 514 515 (face font-lock-type-face fontified t) 515 516 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 516 517 (face font-lock-type-face fontified t) 517 518 (face font-lock-type-face fontified t) 518 519 (face font-lock-type-face fontified t) 519 520 (face font-lock-type-face fontified t) 520 521 (face font-lock-type-face fontified t) 521 522 (face font-lock-type-face fontified t) 522 523 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 523 524 (fontified t) 524 525 (face font-lock-variable-name-face fontified t) 525 526 (face font-lock-variable-name-face fontified t) 526 527 (face font-lock-variable-name-face fontified t) 527 528 (face font-lock-variable-name-face fontified t) 528 529 (fontified t) 529 530 (fontified t) 530 531 (fontified t) 531 532 (fontified t) 532 534 (face font-lock-keyword-face fontified t) 534 535 (fontified t) 535 536 (fontified t) 536 537 (fontified t) 537 538 (fontified t) 538 540 (fontified t) 540 541 (fontified t) 541 546 (fontified t) 546 547 (fontified t) 547 548 (fontified t) 548 549 (fontified t) 549 550 (fontified t) 550 551 (fontified t) 551 552 (fontified t) 552 553 (fontified t) 553 554 (fontified t) 554 555 (fontified t) 555 556 (fontified t) 556 557 (fontified t) 557 558 (fontified t) 558 559 (fontified t) 559 560 (fontified t) 560 561 (fontified t) 561 562 (fontified t) 562 563 (fontified t) 563 564 (fontified t) 564 565 (fontified t) 565 566 (fontified t) 566 567 (fontified t) 567 568 (fontified t) 568 569 (fontified t) 569 570 (fontified t) 570 571 (fontified t) 571 572 (fontified t) 572 573 (fontified t) 573 574 (fontified t) 574 575 (fontified t) 575 576 (fontified t) 576 577 (fontified t) 577 578 (fontified t) 578 579 (fontified t) 579 583 (face font-lock-keyword-face fontified t) 583 584 (fontified t) 584 589 (fontified t) 589 590 (fontified t) 590 591 (fontified t) 591 592 (fontified t) 592 593 (fontified t) 593 594 (fontified t) 594 595 (fontified t) 595 596 (fontified t) 596 597 (fontified t) 597 598 (fontified t) 598 599 (fontified t) 599 600 (fontified t) 600 601 (fontified t) 601 602 (fontified t) 602 603 (fontified t) 603 604 (fontified t) 604 605 (fontified t) 605 606 (fontified t) 606 607 (fontified t) 607 608 (fontified t) 608 609 (fontified t) 609 610 (fontified t) 610 611 (fontified t) 611 612 (fontified t) 612 613 (fontified t) 613 614 (fontified t) 614 615 (fontified t) 615 616 (fontified t) 616 617 (fontified t) 617 618 (fontified t) 618 619 (fontified t) 619 620 (fontified t) 620 621 (fontified t) 621 622 (fontified t) 622 623 (fontified t) 623 624 (face font-lock-keyword-face fontified t) 624 625 (face font-lock-keyword-face fontified t) 625 626 (fontified t) 626 627 (fontified t) 627 628 (fontified t) 628 629 (fontified t) 629 630 (fontified t) 630 631 (fontified t) 631 632 (fontified t) 632 637 (fontified t) 637 638 (fontified t) 638 639 (fontified t) 639 640 (fontified t) 640 641 (fontified t) 641 642 (fontified t) 642 643 (fontified t) 643 644 (fontified t) 644 645 (fontified t) 645 646 (fontified t) 646 647 (fontified t) 647 648 (fontified t) 648 649 (fontified t) 649 650 (fontified t) 650 651 (fontified t) 651 652 (fontified t) 652 653 (fontified t) 653 654 (fontified t) 654 655 (fontified t) 655 656 (fontified t) 656 657 (fontified t) 657 658 (fontified t) 658 659 (fontified t) 659 660 (fontified t) 660 661 (fontified t) 661 662 (fontified t) 662 663 (fontified t) 663 664 (fontified t) 664 665 (fontified t) 665 666 (fontified t) 666 667 (fontified t) 667 672 (fontified t) 672 673 (fontified t) 673 674 (fontified t) 674 675 (fontified t) 675 676 (fontified t) 676 677 (fontified t) 677 678 (fontified t) 678 679 (fontified t) 679 680 (fontified t) 680 681 (fontified t) 681 682 (fontified t) 682 683 (fontified t) 683 684 (fontified t) 684 685 (fontified t) 685 686 (fontified t) 686 687 (fontified t) 687 688 (fontified t) 688 689 (fontified t) 689 690 (fontified t) 690 691 (fontified t) 691 692 (face font-lock-string-face fontified t) 692 693 (face font-lock-string-face fontified t) 693 694 (face font-lock-string-face fontified t) 694 695 (face font-lock-string-face fontified t) 695 696 (face font-lock-string-face fontified t) 696 697 (face font-lock-string-face fontified t) 697 698 (face font-lock-string-face fontified t) 698 699 (face font-lock-string-face fontified t) 699 700 (face font-lock-string-face fontified t) 700 701 (face font-lock-string-face fontified t) 701 702 (face font-lock-string-face fontified t) 702 703 (face font-lock-string-face fontified t) 703 704 (face font-lock-string-face fontified t) 704 705 (face font-lock-string-face fontified t) 705 706 (face font-lock-string-face fontified t) 706 707 (fontified t) 707 708 (fontified t) 708 709 (fontified t) 709 710 (fontified t) 710 711 (fontified t) 711 712 (fontified t) 712 713 (fontified t) 713 714 (fontified t) 714 715 (fontified t) 715 716 (fontified t) 716 717 (fontified t) 717 718 (fontified t) 718 719 (fontified t) 719 723 (face font-lock-keyword-face fontified t) 723 724 (fontified t) 724 725 (fontified t) 725 726 (fontified t) 726 731 (fontified t) 731 732 (face font-lock-keyword-face fontified t) 732 733 (face font-lock-keyword-face fontified t) 733 734 (face font-lock-keyword-face fontified t) 734 735 (fontified t) 735 736 (face font-lock-type-face fontified t) 736 737 (face font-lock-type-face fontified t) 737 738 (face font-lock-type-face fontified t) 738 739 (face font-lock-type-face fontified t) 739 740 (face font-lock-type-face fontified t) 740 741 (face font-lock-type-face c-type c-decl-id-start fontified t) 741 742 (fontified t) 742 743 (face font-lock-variable-name-face fontified t) 743 744 (fontified t) 744 745 (fontified t) 745 746 (fontified t) 746 747 (fontified t) 747 748 (fontified t) 748 749 (fontified t) 749 750 (fontified t) 750 751 (fontified t) 751 752 (fontified t) 752 754 (fontified t) 754 755 (fontified t) 755 756 (fontified t) 756 757 (fontified t) 757 758 (fontified t) 758 759 (fontified t) 759 760 (fontified t) 760 761 (fontified t) 761 762 (fontified t) 762 763 (fontified t) 763 764 (fontified t) 764 765 (fontified t) 765 766 (fontified t) 766 767 (fontified t) 767 768 (fontified t) 768 769 (fontified t) 769 770 (fontified t) 770 771 (fontified t) 771 772 (fontified t) 772 773 (fontified t) 773 774 (fontified t) 774 775 (fontified t) 775 776 (fontified t) 776 777 (fontified t) 777 778 (fontified t) 778 779 (fontified t) 779 780 (fontified t) 780 787 (fontified t) 787 788 (fontified t rear-nonsticky t) 788 789 (fontified t) 789 792 (fontified t) 792 793 (fontified t) 793 801 (fontified t) 801 802 (fontified t) 802 806 (fontified t) 806 807 (fontified t c-is-sws t) 807 808 (fontified t) 808 810 (fontified t) 810 813 (fontified t)) . -1) (undo-tree-id821 . -801) (undo-tree-id822 . -801) (undo-tree-id823 . -813) (undo-tree-id824 . -530) (undo-tree-id825 . -801) (undo-tree-id826 . -540) (undo-tree-id827 . -540) (undo-tree-id828 . -540) (undo-tree-id829 . -540) (undo-tree-id830 . -541) (undo-tree-id831 . -788) (undo-tree-id832 . -540) (undo-tree-id833 . -540) (undo-tree-id834 . -445) (undo-tree-id835 . -788) (undo-tree-id836 . -530) (undo-tree-id837 . -540) (undo-tree-id838 . -540) (undo-tree-id839 . -535) (undo-tree-id840 . -541) (undo-tree-id841 . -632) (undo-tree-id842 . -813) (undo-tree-id843 . -40) (undo-tree-id844 . -40) (undo-tree-id845 . -811) (undo-tree-id846 . -813) 814 (t 26110 16953 464874 996000)) nil (26110 17293 3122 167000) 0 nil])
([nil nil ((nil rear-nonsticky nil 638 . 639) (nil fontified nil 288 . 639) (nil fontified nil 287 . 288) (nil category c->-as-paren-syntax 287 . 288) (nil fontified nil 281 . 287) (nil fontified nil 280 . 281) (nil category c-<-as-paren-syntax 280 . 281) (nil fontified nil 238 . 280) (nil fontified nil 237 . 238) (nil category c->-as-paren-syntax 237 . 238) (nil fontified nil 231 . 237) (nil fontified nil 230 . 231) (nil category c-<-as-paren-syntax 230 . 231) (nil fontified nil 1 . 230) (1 . 639)) nil (26110 17383 238407 801000) 0 nil])
([nil nil ((190 . 191) (#("        " 0 8 (fontified nil)) . 189) (undo-tree-id883 . -8) (197 . 198) (t 26110 17293 50136 579000)) nil (26110 17423 207681 354000) 0 nil] [nil nil ((166 . 172) (t 26110 17293 50136 579000)) ((#("andera" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 6 (face font-lock-variable-name-face fontified t)) . 166)) (26110 17382 809970 795000) 0 nil])
([nil nil ((189 . 190)) nil (26110 17423 207679 630000) 0 nil])
([nil nil ((315 . 321)) ((#("andera" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 315)) (26110 17382 641772 755000) 0 nil])
([nil nil ((190 . 193)) nil (26110 17423 207678 989000) 0 nil])
([nil nil ((204 . 209)) ((#("andea" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 204) (undo-tree-id867 . -5) (undo-tree-id868 . -2) (undo-tree-id869 . -3) (undo-tree-id870 . -4) (undo-tree-id871 . -5) (undo-tree-id872 . -4) (undo-tree-id873 . -3) (undo-tree-id874 . -2) (undo-tree-id875 . -5)) (26110 17382 502939 753000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -192) (undo-tree-id882 . -1) 193) nil (26110 17423 207676 965000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -205) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (#("d" 0 1 (fontified t)) . -206) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (#("e" 0 1 (fontified t)) . -207) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (#("a" 0 1 (fontified t)) . -208) (undo-tree-id865 . -1) (undo-tree-id866 . -1) 209) ((205 . 209)) (26110 17382 501761 476000) 0 nil])
([nil nil ((192 . 195)) nil (26110 17423 207673 669000) 0 nil])
nil
([nil nil ((#("r" 0 1 (face font-lock-type-face c-type c-decl-id-start fontified t)) . -194) (undo-tree-id881 . -1) 195) nil (26110 17423 207672 256000) 0 nil])
([nil nil ((194 . 198)) nil (26110 17423 207668 940000) 0 nil])
([nil nil ((198 . 219)) nil (26110 17423 207668 168000) 0 nil])
([nil nil ((219 . 221)) nil (26110 17423 207667 627000) 0 nil])
([nil nil ((221 . 223)) nil (26110 17423 207666 856000) 0 nil])
([nil nil ((222 . 226)) nil (26110 17423 207666 284000) 0 nil])
([nil nil ((227 . 228)) nil (26110 17423 207665 543000) 0 nil])
([nil nil ((342 . 348)) nil (26110 17423 207664 611000) 0 nil])
([nil nil ((467 . 473)) nil (26110 17423 207663 870000) 0 nil])
([nil nil ((508 . 516)) nil (26110 17423 207662 707000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -514) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (#("]" 0 1 (fontified t)) . -515) (undo-tree-id879 . -1) (undo-tree-id880 . -1) 516) nil (26110 17423 207658 930000) 0 nil])
([nil nil ((576 . 582) (t 26110 17423 255987 250000)) nil (26110 17443 91063 447000) 0 nil])
([nil nil ((#("package mx.unam.ciencias.edd.proyecto1;

import mx.unam.ciencias.edd.Lista;

public class Proyecto1 {
    public static void main(String args[]) {
        Banderas b = new Banderas(args);
	Banderas bandera = new Banderas(args);
	b.argumentos(args);
        Lista<String> lista = b.fileReader(args);
        Lista<String> file;

        if (bandera.r)
            file = Banderas.reverso(lista);
        else
            file = Banderas.ordenar(lista);

        if (bandera.o) {
            Banderas.writer(bandera.id, file);
            System.out.println(\"Guardado en: \" + bandera.id);
        } else {
            for (String a : file)
                System.out.println(a);
        }
    }
}" 0 7 (face font-lock-keyword-face fontified t) 7 29 (fontified t) 29 37 (face font-lock-constant-face fontified t) 37 38 (face font-lock-constant-face c-type c-decl-id-start fontified t) 38 41 (fontified t) 41 47 (face font-lock-keyword-face fontified t) 47 48 (fontified t) 48 50 (face font-lock-constant-face fontified t) 50 51 (fontified t) 51 55 (face font-lock-constant-face fontified t) 55 56 (fontified t) 56 64 (face font-lock-constant-face fontified t) 64 65 (fontified t) 65 68 (face font-lock-constant-face fontified t) 68 69 (fontified t) 69 73 (face font-lock-type-face fontified t) 73 74 (face font-lock-type-face c-type c-decl-id-start fontified t) 74 77 (fontified t) 77 83 (face font-lock-keyword-face fontified t) 83 84 (fontified t) 84 88 (face font-lock-keyword-face fontified t) 88 89 (c-type c-decl-type-start face font-lock-keyword-face fontified t) 89 90 (fontified t) 90 99 (face font-lock-type-face fontified t) 99 106 (fontified t) 106 112 (face font-lock-keyword-face fontified t) 112 113 (fontified t) 113 119 (face font-lock-keyword-face fontified t) 119 120 (fontified t) 120 123 (face font-lock-type-face fontified t) 123 124 (face font-lock-type-face c-type c-decl-id-start fontified t) 124 125 (fontified t) 125 129 (face font-lock-function-name-face fontified t) 129 130 (c-type c-decl-arg-start fontified t) 130 136 (face font-lock-type-face fontified t) 136 137 (fontified t) 137 141 (face font-lock-variable-name-face fontified t) 141 147 (fontified t) 147 155 (fontified t) 155 162 (face font-lock-type-face fontified t) 162 163 (face font-lock-type-face c-type c-decl-id-start fontified t) 163 164 (fontified t) 164 165 (face font-lock-variable-name-face fontified t) 165 167 (fontified t) 167 168 (fontified t) 168 171 (face font-lock-keyword-face fontified t) 171 172 (fontified t) 172 180 (face font-lock-type-face fontified t) 180 188 (fontified t) 188 189 (fontified t) 189 190 (face font-lock-type-face fontified t) 190 191 (face font-lock-type-face fontified t) 191 192 (face font-lock-type-face fontified t) 192 193 (face font-lock-type-face fontified t) 193 194 (face font-lock-type-face fontified t) 194 195 (face font-lock-type-face fontified t) 195 196 (face font-lock-type-face fontified t) 196 197 (face font-lock-type-face c-type c-decl-id-start fontified t) 197 198 (fontified t) 198 199 (face font-lock-variable-name-face fontified t) 199 200 (face font-lock-variable-name-face fontified t) 200 201 (face font-lock-variable-name-face fontified t) 201 202 (face font-lock-variable-name-face fontified t) 202 203 (face font-lock-variable-name-face fontified t) 203 204 (face font-lock-variable-name-face fontified t) 204 205 (face font-lock-variable-name-face fontified t) 205 206 (fontified t) 206 207 (fontified t) 207 208 (fontified t) 208 209 (face font-lock-keyword-face fontified t) 209 210 (face font-lock-keyword-face fontified t) 210 211 (face font-lock-keyword-face fontified t) 211 212 (fontified t) 212 213 (face font-lock-type-face fontified t) 213 214 (face font-lock-type-face fontified t) 214 215 (face font-lock-type-face fontified t) 215 216 (face font-lock-type-face fontified t) 216 217 (face font-lock-type-face fontified t) 217 218 (face font-lock-type-face fontified t) 218 219 (face font-lock-type-face fontified t) 219 220 (face font-lock-type-face fontified t) 220 221 (fontified t) 221 222 (fontified t) 222 223 (fontified t) 223 224 (fontified t) 224 225 (fontified t) 225 226 (fontified t) 226 227 (fontified t) 227 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 241 (fontified t) 241 242 (fontified t) 242 246 (fontified t) 246 248 (fontified t) 248 249 (fontified t) 249 257 (fontified t) 257 262 (face font-lock-type-face fontified t) 262 263 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 263 269 (face font-lock-type-face fontified t) 269 270 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 270 271 (fontified t) 271 276 (face font-lock-variable-name-face fontified t) 276 307 (fontified t) 307 312 (face font-lock-type-face fontified t) 312 313 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 313 319 (face font-lock-type-face fontified t) 319 320 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 320 321 (fontified t) 321 325 (face font-lock-variable-name-face fontified t) 325 328 (fontified t) 328 336 (fontified t) 336 338 (face font-lock-keyword-face fontified t) 338 341 (fontified t) 341 342 (fontified t) 342 343 (fontified t) 343 344 (fontified t) 344 345 (fontified t) 345 346 (fontified t) 346 347 (fontified t) 347 351 (fontified t) 351 403 (fontified t) 403 407 (face font-lock-keyword-face fontified t) 407 453 (fontified t) 453 461 (fontified t) 461 463 (face font-lock-keyword-face fontified t) 463 466 (fontified t) 466 467 (fontified t) 467 468 (fontified t) 468 469 (fontified t) 469 470 (fontified t) 470 471 (fontified t) 471 472 (fontified t) 472 478 (fontified t) 478 507 (fontified t) 507 508 (fontified t) 508 509 (fontified t) 509 510 (fontified t) 510 511 (fontified t) 511 512 (fontified t) 512 513 (fontified t) 513 517 (fontified t) 517 525 (fontified t) 525 556 (fontified t) 556 571 (face font-lock-string-face fontified t) 571 575 (fontified t) 575 576 (fontified t) 576 577 (fontified t) 577 578 (fontified t) 578 579 (fontified t) 579 580 (fontified t) 580 581 (fontified t) 581 586 (fontified t) 586 597 (fontified t) 597 601 (face font-lock-keyword-face fontified t) 601 616 (fontified t) 616 619 (face font-lock-keyword-face fontified t) 619 621 (fontified t) 621 626 (face font-lock-type-face fontified t) 626 627 (face font-lock-type-face c-type c-decl-id-start fontified t) 627 628 (fontified t) 628 629 (face font-lock-variable-name-face fontified t) 629 694 (fontified t)) . 1) (undo-tree-id884 . -694) (undo-tree-id885 . -119) (undo-tree-id886 . -694) (t 26110 17443 137362 434000)) nil (26110 17950 17584 404000) 0 nil])
([nil nil ((nil rear-nonsticky nil 680 . 681) (nil fontified nil 306 . 681) (nil fontified nil 305 . 306) (nil category c->-as-paren-syntax 305 . 306) (nil fontified nil 299 . 305) (nil fontified nil 298 . 299) (nil category c-<-as-paren-syntax 298 . 299) (nil fontified nil 250 . 298) (nil fontified nil 249 . 250) (nil category c->-as-paren-syntax 249 . 250) (nil fontified nil 243 . 249) (nil fontified nil 242 . 243) (nil category c-<-as-paren-syntax 242 . 243) (nil fontified nil 1 . 242) (1 . 681)) nil (26110 17950 17571 380000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t)) . -476) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (#("a" 0 1 (fontified t)) . -477) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (#("n" 0 1 (fontified t)) . -478) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (#("d" 0 1 (fontified t)) . -479) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (#("e" 0 1 (fontified t)) . -480) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (#("r" 0 1 (fontified t)) . -481) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (#("a" 0 1 (fontified t)) . -482) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (#("s" 0 1 (fontified t)) . -483) (undo-tree-id931 . -1) (undo-tree-id932 . -1) 484 (t 26110 17950 64265 872000)) nil (26110 21563 251772 63000) 0 nil])
([nil nil ((476 . 477)) nil (26110 21563 251732 60000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -476) (undo-tree-id887 . -1) (undo-tree-id888 . -1) 477) nil (26110 21563 251730 77000) 0 nil])
([nil nil ((476 . 483)) nil (26110 21563 251718 305000) 0 nil])
([nil nil ((105 . 109) (#("    " 0 4 (fontified nil)) . 104) (undo-tree-id936 . -4) (108 . 109) (103 . 104) (t 26110 21563 299322 506000)) nil (26110 24282 416387 891000) 0 nil])
([nil nil ((103 . 108)) nil (26110 24282 416385 827000) 0 nil])
([nil nil ((nil rear-nonsticky nil 409 . 410) (nil fontified nil 247 . 410) (nil fontified nil 246 . 247) (nil category c->-as-paren-syntax 246 . 247) (nil fontified nil 245 . 246) (nil category c-<-as-paren-syntax 245 . 246) (nil fontified nil 221 . 245) (nil fontified nil 220 . 221) (nil category c->-as-paren-syntax 220 . 221) (nil fontified nil 214 . 220) (nil fontified nil 213 . 214) (nil category c-<-as-paren-syntax 213 . 214) (nil fontified nil 193 . 213) (nil fontified nil 192 . 193) (nil category c->-as-paren-syntax 192 . 193) (nil fontified nil 186 . 192) (nil fontified nil 185 . 186) (nil category c-<-as-paren-syntax 185 . 186) (nil fontified nil 171 . 185) (nil fontified nil 170 . 171) (nil category c->-as-paren-syntax 170 . 171) (nil fontified nil 164 . 170) (nil fontified nil 163 . 164) (nil category c-<-as-paren-syntax 163 . 164) (nil fontified nil 140 . 163) (nil fontified nil 139 . 140) (nil category c->-as-paren-syntax 139 . 140) (nil fontified nil 133 . 139) (nil fontified nil 132 . 133) (nil category c-<-as-paren-syntax 132 . 133) (nil fontified nil 108 . 132) (108 . 410)) nil (26110 24282 416383 682000) 0 nil])
([nil nil ((104 . 108) (#("        " 0 4 (fontified t) 4 8 (fontified t)) . 104) (undo-tree-id934 . -1) (undo-tree-id935 . -4) 105) nil (26110 24282 416379 113000) 0 nil])
([nil nil ((200 . 201) (#("    " 0 4 (fontified t)) . -200) (undo-tree-id933 . -4) 204) nil (26110 24282 416375 145000) 0 nil])
([nil nil ((244 . 245) (#("    " 0 4 (fontified t)) . 244) 252) nil (26110 24282 416365 807000) 0 nil])
([nil nil ((273 . 278) (#("        " 0 8 (fontified t)) . 273) 285) nil (26110 24282 416364 915000) 0 nil])
([nil nil ((305 . 306) (#("    " 0 4 (fontified t)) . 305) 321) nil (26110 24282 416363 903000) 0 nil])
([nil nil ((334 . 339) (#("        " 0 8 (fontified t)) . 334) 354) nil (26110 24282 416362 310000) 0 nil])
([nil nil ((366 . 367) (#("    " 0 4 (fontified t)) . 366) 389) nil (26110 24282 416359 705000) 0 nil])
([nil nil ((387 . 391) 388) nil (26110 24282 416354 104000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-function-name-face fontified t)) . -137) (undo-tree-id996 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -138) (undo-tree-id997 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -139) (undo-tree-id998 . -1) (#("c" 0 1 (face font-lock-function-name-face fontified t)) . -140) (undo-tree-id999 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -141) (undo-tree-id1000 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -142) (undo-tree-id1001 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -143) (undo-tree-id1002 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -144) (undo-tree-id1003 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -145) (undo-tree-id1004 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -146) (undo-tree-id1005 . -1) (#("L" 0 1 (face font-lock-function-name-face fontified t)) . -147) (undo-tree-id1006 . -1) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -148) (undo-tree-id1007 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -149) (undo-tree-id1008 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -150) (undo-tree-id1009 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -151) (undo-tree-id1010 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -152) (undo-tree-id1011 . -1) 153 (t 26110 24282 472012 20000)) nil (26110 24758 631396 969000) 0 nil])
([nil nil ((137 . 140)) nil (26110 24758 631386 548000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-function-name-face fontified t)) . -139) (undo-tree-id995 . -1) 140) nil (26110 24758 631385 727000) 0 nil])
([nil nil ((139 . 141)) nil (26110 24758 631384 174000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-function-name-face fontified t)) . -137) (undo-tree-id991 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -138) (undo-tree-id992 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -139) (undo-tree-id993 . -1) (#("T" 0 1 (face font-lock-function-name-face fontified t)) . -140) (undo-tree-id994 . -1) 141) nil (26110 24758 631382 591000) 0 nil])
([nil nil ((137 . 145)) nil (26110 24758 631377 891000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -136) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (#("E" 0 1 (face font-lock-function-name-face fontified t)) . -137) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (#("s" 0 1 (face font-lock-function-name-face fontified t)) . -138) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (#("t" 0 1 (face font-lock-function-name-face fontified t)) . -139) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -140) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (#("n" 0 1 (face font-lock-function-name-face fontified t)) . -141) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -142) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -143) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -144) (undo-tree-id989 . -1) (undo-tree-id990 . -1) 145) nil (26110 24758 631373 422000) 0 nil])
([nil nil ((136 . 137)) nil (26110 24758 632033 289000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-function-name-face fontified t)) . -136) (undo-tree-id1067 . -1) 137) nil (26110 24808 28751 898000) 0 nil] [nil nil ((137 . 142)) ((#("
    " 0 5 (fontified t)) . 137) (undo-tree-id1012 . -5) (undo-tree-id1013 . -1)) (26110 24758 631320 838000) 0 nil])
([nil nil ((136 . 145)) nil (26110 24808 28750 745000) 0 nil])
nil
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -161) (undo-tree-id1062 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -162) (undo-tree-id1063 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -163) (undo-tree-id1064 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -164) (undo-tree-id1065 . -1) (#("1" 0 1 (face font-lock-variable-name-face fontified t)) . -165) (undo-tree-id1066 . -1) 166) nil (26110 24808 28749 673000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -177) (undo-tree-id1056 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -178) (undo-tree-id1057 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -179) (undo-tree-id1058 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -180) (undo-tree-id1059 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -181) (undo-tree-id1060 . -1) (#("2" 0 1 (face font-lock-variable-name-face fontified t)) . -182) (undo-tree-id1061 . -1) 183) nil (26110 24808 28744 783000) 0 nil])
([nil nil ((177 . 178)) nil (26110 24808 28739 513000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -248) (undo-tree-id1051 . -1) (#("s" 0 1 (fontified t)) . -249) (undo-tree-id1052 . -1) (#("t" 0 1 (fontified t)) . -250) (undo-tree-id1053 . -1) (#("a" 0 1 (fontified t)) . -251) (undo-tree-id1054 . -1) (#("1" 0 1 (fontified t)) . -252) (undo-tree-id1055 . -1) 253) nil (26110 24808 28738 170000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -303) (undo-tree-id1045 . -1) (#("i" 0 1 (fontified t)) . -304) (undo-tree-id1046 . -1) (#("s" 0 1 (fontified t)) . -305) (undo-tree-id1047 . -1) (#("t" 0 1 (fontified t)) . -306) (undo-tree-id1048 . -1) (#("a" 0 1 (fontified t)) . -307) (undo-tree-id1049 . -1) (#("2" 0 1 (fontified t)) . -308) (undo-tree-id1050 . -1) 309) nil (26110 24808 28733 702000) 0 nil])
([nil nil ((303 . 304)) nil (26110 24808 28728 662000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -239) (undo-tree-id1040 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -240) (undo-tree-id1041 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -241) (undo-tree-id1042 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -242) (undo-tree-id1043 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -243) (undo-tree-id1044 . -1) 244) nil (26110 24808 28727 329000) 0 nil])
([nil nil ((239 . 246)) nil (26110 24809 79456 207000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -298) (undo-tree-id1208 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -299) (undo-tree-id1209 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -300) (undo-tree-id1210 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -301) (undo-tree-id1211 . -1) 302) nil (26110 24860 852972 78000) 0 nil] [nil nil ((#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -297) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -298) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -299) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -300) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -301) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) 302) ((297 . 302)) (26110 24808 760524 224000) 0 nil])
([nil nil ((298 . 299)) nil (26110 24860 852969 144000) 0 nil])
([nil nil ((297 . 301)) ((#("remg" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t)) . 297) (undo-tree-id1068 . -4) (undo-tree-id1069 . -3) (undo-tree-id1070 . -4) (undo-tree-id1071 . -3) (undo-tree-id1072 . -2) (undo-tree-id1073 . -4)) (26110 24808 438687 717000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -297) (undo-tree-id1206 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -298) (undo-tree-id1207 . -1) 299) nil (26110 24860 852968 362000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -299) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (#("g" 0 1 (face font-lock-variable-name-face fontified t)) . -300) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) 301) ((299 . 301)) (26110 24808 29340 84000) 0 nil])
([nil nil ((297 . 300)) nil (26110 24860 852966 419000) 0 nil])
([nil nil ((299 . 304)) ((#("nglon" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (face font-lock-variable-name-face fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 4 (face font-lock-variable-name-face fontified t) 4 5 (face font-lock-variable-name-face fontified t)) . 299)) (26110 24808 28683 382000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-variable-name-face fontified t)) . -299) (undo-tree-id1205 . -1) 300) nil (26110 24860 852965 668000) 0 nil])
nil
([nil nil ((299 . 304)) nil (26110 24860 852964 186000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -334) (undo-tree-id1200 . -1) (#("i" 0 1 (fontified t)) . -335) (undo-tree-id1201 . -1) (#("n" 0 1 (fontified t)) . -336) (undo-tree-id1202 . -1) (#("e" 0 1 (fontified t)) . -337) (undo-tree-id1203 . -1) (#("a" 0 1 (fontified t)) . -338) (undo-tree-id1204 . -1) 339) nil (26110 24860 852962 984000) 0 nil])
([nil nil ((334 . 341)) nil (26110 24860 852958 807000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -276) (undo-tree-id1195 . -1) (#("i" 0 1 (fontified t)) . -277) (undo-tree-id1196 . -1) (#("n" 0 1 (fontified t)) . -278) (undo-tree-id1197 . -1) (#("e" 0 1 (fontified t)) . -279) (undo-tree-id1198 . -1) (#("a" 0 1 (fontified t)) . -280) (undo-tree-id1199 . -1) 281) nil (26110 24860 852957 545000) 0 nil])
([nil nil ((276 . 283)) nil (26110 24860 852953 830000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-variable-name-face fontified t)) . -197) (undo-tree-id1184 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -198) (undo-tree-id1185 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -199) (undo-tree-id1186 . -1) (#("c" 0 1 (face font-lock-variable-name-face fontified t)) . -200) (undo-tree-id1187 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -201) (undo-tree-id1188 . -1) (#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -202) (undo-tree-id1189 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -203) (undo-tree-id1190 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -204) (undo-tree-id1191 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -205) (undo-tree-id1192 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -206) (undo-tree-id1193 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -207) (undo-tree-id1194 . -1) 208) nil (26110 24860 852951 316000) 0 nil])
([nil nil ((197 . 202)) nil (26110 24860 852930 253000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-keyword-face fontified t)) . -201) (undo-tree-id1183 . -1) 202) nil (26110 24860 852929 331000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-variable-name-face fontified t)) . -197) (undo-tree-id1179 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -198) (undo-tree-id1180 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -199) (undo-tree-id1181 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -200) (undo-tree-id1182 . -1) 201) nil (26110 24860 852926 347000) 0 nil])
([nil nil ((197 . 198)) nil (26110 24860 852922 901000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -247) (undo-tree-id1168 . -1) (#("o" 0 1 (fontified t)) . -248) (undo-tree-id1169 . -1) (#("n" 0 1 (fontified t)) . -249) (undo-tree-id1170 . -1) (#("c" 0 1 (fontified t)) . -250) (undo-tree-id1171 . -1) (#("a" 0 1 (fontified t)) . -251) (undo-tree-id1172 . -1) (#("t" 0 1 (fontified t)) . -252) (undo-tree-id1173 . -1) (#("e" 0 1 (fontified t)) . -253) (undo-tree-id1174 . -1) (#("n" 0 1 (fontified t)) . -254) (undo-tree-id1175 . -1) (#("a" 0 1 (fontified t)) . -255) (undo-tree-id1176 . -1) (#("d" 0 1 (fontified t)) . -256) (undo-tree-id1177 . -1) (#("a" 0 1 (fontified t)) . -257) (undo-tree-id1178 . -1) 258) nil (26110 24860 852920 668000) 0 nil])
([nil nil ((247 . 248)) nil (26110 24860 852912 986000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -297) (undo-tree-id1157 . -1) (#("o" 0 1 (fontified t)) . -298) (undo-tree-id1158 . -1) (#("n" 0 1 (fontified t)) . -299) (undo-tree-id1159 . -1) (#("c" 0 1 (fontified t)) . -300) (undo-tree-id1160 . -1) (#("a" 0 1 (fontified t)) . -301) (undo-tree-id1161 . -1) (#("t" 0 1 (fontified t)) . -302) (undo-tree-id1162 . -1) (#("e" 0 1 (fontified t)) . -303) (undo-tree-id1163 . -1) (#("n" 0 1 (fontified t)) . -304) (undo-tree-id1164 . -1) (#("a" 0 1 (fontified t)) . -305) (undo-tree-id1165 . -1) (#("d" 0 1 (fontified t)) . -306) (undo-tree-id1166 . -1) (#("a" 0 1 (fontified t)) . -307) (undo-tree-id1167 . -1) 308) nil (26110 24860 852910 622000) 0 nil])
([nil nil ((297 . 298)) nil (26110 24860 852896 670000) 0 nil])
([nil nil ((197 . 200)) nil (26110 24860 852896 9000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -199) (undo-tree-id1156 . -1) 200) nil (26110 24860 852895 318000) 0 nil])
([nil nil ((199 . 200)) nil (26110 24860 852894 267000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-variable-name-face fontified t)) . -199) (undo-tree-id1155 . -1) 200) nil (26110 24860 852893 495000) 0 nil])
([nil nil ((200 . 202)) nil (26110 24860 852892 103000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -251) (undo-tree-id1154 . -1) 252) nil (26110 24860 852891 452000) 0 nil])
([nil nil ((251 . 256)) nil (26110 24860 852890 130000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -305) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) 306) nil (26110 24860 852889 179000) 0 nil])
([nil nil ((305 . 310)) nil (26110 24860 852886 725000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -336) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (#("o" 0 1 (fontified t)) . -337) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (#("n" 0 1 (fontified t)) . -338) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (#("c" 0 1 (fontified t)) . -339) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (#("a" 0 1 (fontified t)) . -340) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (#("t" 0 1 (fontified t)) . -341) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (#("e" 0 1 (fontified t)) . -342) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (#("n" 0 1 (fontified t)) . -343) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (#("a" 0 1 (fontified t)) . -344) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (#("d" 0 1 (fontified t)) . -345) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (#("a" 0 1 (fontified t)) . -346) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) 347) nil (26110 24860 852881 6000) 0 nil])
([nil nil ((336 . 341)) nil (26110 24860 852799 468000) 0 nil])
([nil nil ((921 . 922) (#("	" 0 1 (fontified nil)) . 920) (undo-tree-id1212 . -1) (920 . 922) (#("	" 0 1 (fontified nil)) . 919) (undo-tree-id1213 . -1) (918 . 921) (t 26110 24860 908730 835000)) nil (26110 25150 194202 389000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1331 . 1332) (nil fontified nil 920 . 1332) (920 . 1332)) nil (26110 25150 194188 273000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1009) (undo-tree-id1245 . -1) (#("r" 0 1 (fontified t)) . -1010) (undo-tree-id1246 . -1) (#("g" 0 1 (fontified t)) . -1011) (undo-tree-id1247 . -1) (#("u" 0 1 (fontified t)) . -1012) (undo-tree-id1248 . -1) (#("m" 0 1 (fontified t)) . -1013) (undo-tree-id1249 . -1) (#("e" 0 1 (fontified t)) . -1014) (undo-tree-id1250 . -1) (#("n" 0 1 (fontified t)) . -1015) (undo-tree-id1251 . -1) (#("t" 0 1 (fontified t)) . -1016) (undo-tree-id1252 . -1) (#("o" 0 1 (fontified t)) . -1017) (undo-tree-id1253 . -1) (#("s" 0 1 (fontified t)) . -1018) (undo-tree-id1254 . -1) 1019 (t 26110 25150 250580 410000)) nil (26110 25494 941699 355000) 0 nil])
([nil nil ((1009 . 1017)) nil (26110 25494 941692 201000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t)) . -966) (undo-tree-id1231 . -1) (#("n" 0 1 (fontified t)) . -967) (undo-tree-id1232 . -1) (#("t" 0 1 (fontified t)) . -968) (undo-tree-id1233 . -1) (#("r" 0 1 (fontified t)) . -969) (undo-tree-id1234 . -1) (#("a" 0 1 (fontified t)) . -970) (undo-tree-id1235 . -1) (#("d" 0 1 (fontified t)) . -971) (undo-tree-id1236 . -1) (#("a" 0 1 (fontified t)) . -972) (undo-tree-id1237 . -1) (#("Y" 0 1 (fontified t)) . -973) (undo-tree-id1238 . -1) (#("S" 0 1 (fontified t)) . -974) (undo-tree-id1239 . -1) (#("a" 0 1 (fontified t)) . -975) (undo-tree-id1240 . -1) (#("l" 0 1 (fontified t)) . -976) (undo-tree-id1241 . -1) (#("i" 0 1 (fontified t)) . -977) (undo-tree-id1242 . -1) (#("d" 0 1 (fontified t)) . -978) (undo-tree-id1243 . -1) (#("a" 0 1 (fontified t)) . -979) (undo-tree-id1244 . -1) 980) nil (26110 25494 941689 707000) 0 nil])
([nil nil ((966 . 974)) nil (26110 25495 241096 984000) 0 nil])
([nil nil ((#("escribirEnArchivo" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t)) . -975) (undo-tree-id1354 . -17) 992) nil (26110 25947 374618 539000) 0 nil] [nil nil ((#("e" 0 1 (fontified t)) . -975) (undo-tree-id1214 . -1) (#("s" 0 1 (fontified t)) . -976) (undo-tree-id1215 . -1) (#("c" 0 1 (fontified t)) . -977) (undo-tree-id1216 . -1) (#("r" 0 1 (fontified t)) . -978) (undo-tree-id1217 . -1) (#("i" 0 1 (fontified t)) . -979) (undo-tree-id1218 . -1) (#("b" 0 1 (fontified t)) . -980) (undo-tree-id1219 . -1) (#("i" 0 1 (fontified t)) . -981) (undo-tree-id1220 . -1) (#("r" 0 1 (fontified t)) . -982) (undo-tree-id1221 . -1) (#("E" 0 1 (fontified t)) . -983) (undo-tree-id1222 . -1) (#("n" 0 1 (fontified t)) . -984) (undo-tree-id1223 . -1) (#("A" 0 1 (fontified t)) . -985) (undo-tree-id1224 . -1) (#("r" 0 1 (fontified t)) . -986) (undo-tree-id1225 . -1) (#("c" 0 1 (fontified t)) . -987) (undo-tree-id1226 . -1) (#("h" 0 1 (fontified t)) . -988) (undo-tree-id1227 . -1) (#("i" 0 1 (fontified t)) . -989) (undo-tree-id1228 . -1) (#("v" 0 1 (fontified t)) . -990) (undo-tree-id1229 . -1) (#("o" 0 1 (fontified t)) . -991) (undo-tree-id1230 . -1) 992) ((975 . 992)) (26110 25494 942256 643000) 0 nil])
([nil nil ((975 . 980)) nil (26110 25947 374617 337000) 0 nil])
([nil nil ((975 . 978)) ((#("cat" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 975)) (26110 25494 941648 922000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -932) (undo-tree-id1344 . -1) (#("r" 0 1 (fontified t)) . -933) (undo-tree-id1345 . -1) (#("g" 0 1 (fontified t)) . -934) (undo-tree-id1346 . -1) (#("u" 0 1 (fontified t)) . -935) (undo-tree-id1347 . -1) (#("m" 0 1 (fontified t)) . -936) (undo-tree-id1348 . -1) (#("e" 0 1 (fontified t)) . -937) (undo-tree-id1349 . -1) (#("n" 0 1 (fontified t)) . -938) (undo-tree-id1350 . -1) (#("t" 0 1 (fontified t)) . -939) (undo-tree-id1351 . -1) (#("o" 0 1 (fontified t)) . -940) (undo-tree-id1352 . -1) (#("s" 0 1 (fontified t)) . -941) (undo-tree-id1353 . -1) 942) nil (26110 25947 374615 443000) 0 nil])
nil
([nil nil ((932 . 934)) nil (26110 25947 374607 208000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -932) (undo-tree-id1342 . -1) (#("a" 0 1 (fontified t)) . -933) (undo-tree-id1343 . -1) 934) nil (26110 25947 374606 517000) 0 nil])
([nil nil ((932 . 939)) nil (26110 25947 374604 803000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -940) (undo-tree-id1335 . -1) (#("u" 0 1 (fontified t)) . -941) (undo-tree-id1336 . -1) (#("a" 0 1 (fontified t)) . -942) (undo-tree-id1337 . -1) (#("r" 0 1 (fontified t)) . -943) (undo-tree-id1338 . -1) (#("d" 0 1 (fontified t)) . -944) (undo-tree-id1339 . -1) (#("a" 0 1 (fontified t)) . -945) (undo-tree-id1340 . -1) (#("r" 0 1 (fontified t)) . -946) (undo-tree-id1341 . -1) 947) nil (26110 25947 374603 461000) 0 nil])
([nil nil ((940 . 941)) nil (26110 25947 374598 531000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -942) (undo-tree-id1334 . -1) 943) nil (26110 25947 374597 910000) 0 nil])
([nil nil ((931 . 932)) nil (26110 25947 374596 728000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -930) (undo-tree-id1332 . -1) (#("\\" 0 1 (fontified t)) . -931) (undo-tree-id1333 . -1) 932) nil (26110 25947 374596 47000) 0 nil])
([nil nil ((919 . 921)) nil (26110 25947 374594 223000) 0 nil])
([nil nil ((920 . 921) (#("	" 0 1 (fontified t)) . 920)) nil (26110 25947 374593 622000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -1217) (undo-tree-id1327 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -1218) (undo-tree-id1328 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -1219) (undo-tree-id1329 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1220) (undo-tree-id1330 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -1221) (undo-tree-id1331 . -1) 1222) nil (26110 25947 374592 440000) 0 nil])
([nil nil ((1217 . 1224)) nil (26110 25947 374584 675000) 0 nil])
([nil nil ((921 . 922) (#("	" 0 1 (fontified nil)) . 920) (undo-tree-id1326 . -1) (921 . 922)) nil (26110 25947 374583 944000) 0 nil])
([nil nil ((920 . 921)) nil (26110 25947 374582 711000) 0 nil])
([nil nil ((921 . 924)) nil (26110 25947 374582 200000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -922) (undo-tree-id1324 . -1) (#("s" 0 1 (fontified t)) . -923) (undo-tree-id1325 . -1) 924) nil (26110 25947 374581 339000) 0 nil])
([nil nil ((922 . 928)) nil (26110 25947 374579 625000) 0 nil])
([nil nil ((927 . 933)) nil (26110 25947 374579 84000) 0 nil])
([nil nil ((#("T" 0 1 (face font-lock-type-face fontified t)) . -928) (undo-tree-id1319 . -1) (#("R" 0 1 (face font-lock-type-face fontified t)) . -929) (undo-tree-id1320 . -1) (#("I" 0 1 (face font-lock-type-face fontified t)) . -930) (undo-tree-id1321 . -1) (#("N" 0 1 (face font-lock-type-face fontified t)) . -931) (undo-tree-id1322 . -1) (#("G" 0 1 (face font-lock-type-face fontified t)) . -932) (undo-tree-id1323 . -1) 933) nil (26110 25947 374577 642000) 0 nil])
([nil nil ((928 . 933)) nil (26110 25947 374574 155000) 0 nil])
([nil nil ((933 . 935)) nil (26110 25947 374573 664000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-type-face fontified t)) . -932) (undo-tree-id1316 . -1) (#("=" 0 1 (fontified t)) . -933) (undo-tree-id1317 . -1) (#("g" 0 1 (fontified t)) . -934) (undo-tree-id1318 . -1) 935) nil (26110 25947 374572 842000) 0 nil])
([nil nil ((932 . 933)) nil (26110 25947 374570 378000) 0 nil])
([nil nil ((934 . 937)) nil (26110 25947 374569 847000) 0 nil])
([nil nil ((937 . 943)) nil (26110 25947 374569 175000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -937) (undo-tree-id1310 . -1) (#("r" 0 1 (fontified t)) . -938) (undo-tree-id1311 . -1) (#("d" 0 1 (fontified t)) . -939) (undo-tree-id1312 . -1) (#("n" 0 1 (fontified t)) . -940) (undo-tree-id1313 . -1) (#("a" 0 1 (fontified t)) . -941) (undo-tree-id1314 . -1) (#("r" 0 1 (fontified t)) . -942) (undo-tree-id1315 . -1) 943) nil (26110 25947 374567 953000) 0 nil])
([nil nil ((937 . 947)) nil (26110 25947 374563 575000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -937) (undo-tree-id1300 . -1) (#("i" 0 1 (fontified t)) . -938) (undo-tree-id1301 . -1) (#("s" 0 1 (fontified t)) . -939) (undo-tree-id1302 . -1) (#("t" 0 1 (fontified t)) . -940) (undo-tree-id1303 . -1) (#("a" 0 1 (fontified t)) . -941) (undo-tree-id1304 . -1) (#("." 0 1 (fontified t)) . -942) (undo-tree-id1305 . -1) (#("o" 0 1 (fontified t)) . -943) (undo-tree-id1306 . -1) (#("r" 0 1 (fontified t)) . -944) (undo-tree-id1307 . -1) (#("d" 0 1 (fontified t)) . -945) (undo-tree-id1308 . -1) (#("=" 0 1 (fontified t)) . -946) (undo-tree-id1309 . -1) 947) nil (26110 25947 374561 841000) 0 nil])
([nil nil ((937 . 940)) nil (26110 25947 374554 367000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -939) (undo-tree-id1299 . -1) 940) nil (26110 25947 374553 516000) 0 nil])
([nil nil ((939 . 942)) nil (26110 25947 374552 43000) 0 nil])
([nil nil ((942 . 944)) nil (26110 25947 374551 412000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -943) (undo-tree-id1298 . -1) 944) nil (26110 25947 374550 590000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -937) (undo-tree-id1292 . -1) (#("r" 0 1 (fontified t)) . -938) (undo-tree-id1293 . -1) (#("d" 0 1 (fontified t)) . -939) (undo-tree-id1294 . -1) (#("e" 0 1 (fontified t)) . -940) (undo-tree-id1295 . -1) (#("n" 0 1 (fontified t)) . -941) (undo-tree-id1296 . -1) (#("a" 0 1 (fontified t)) . -942) (undo-tree-id1297 . -1) 943) nil (26110 25947 374548 456000) 0 nil])
([nil nil ((937 . 938)) nil (26110 25947 374543 226000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t)) . -937) (undo-tree-id1291 . -1) 938) nil (26110 25947 374542 144000) 0 nil])
([nil nil ((937 . 949)) nil (26110 25947 374540 170000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -947) (undo-tree-id1289 . -1) (#("r" 0 1 (fontified t)) . -948) (undo-tree-id1290 . -1) 949) nil (26110 25947 374538 958000) 0 nil])
([nil nil ((947 . 953)) nil (26110 25947 374536 934000) 0 nil])
([nil nil ((953 . 955)) nil (26110 25947 374536 403000) 0 nil])
([nil nil ((954 . 959)) nil (26110 25947 374535 872000) 0 nil])
([nil nil ((960 . 961)) nil (26110 25947 374535 361000) 0 nil])
([nil nil ((935 . 938)) nil (26110 25947 374534 770000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -935) (undo-tree-id1286 . -1) (#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -936) (undo-tree-id1287 . -1) (#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -937) (undo-tree-id1288 . -1) 938) nil (26110 25947 374533 958000) 0 nil])
([nil nil ((935 . 944)) nil (26110 25947 374530 632000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1027) (undo-tree-id1282 . -1) (#("a" 0 1 (fontified t)) . -1028) (undo-tree-id1283 . -1) (#("d" 0 1 (fontified t)) . -1029) (undo-tree-id1284 . -1) (#("o" 0 1 (fontified t)) . -1030) (undo-tree-id1285 . -1) 1031) nil (26110 25947 374529 630000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1023) (undo-tree-id1278 . -1) (#("r" 0 1 (fontified t)) . -1024) (undo-tree-id1279 . -1) (#("d" 0 1 (fontified t)) . -1025) (undo-tree-id1280 . -1) (#("e" 0 1 (fontified t)) . -1026) (undo-tree-id1281 . -1) 1027) nil (26110 25947 374525 813000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1023) (undo-tree-id1276 . -1) (#(" " 0 1 (fontified t)) . -1024) (undo-tree-id1277 . -1) 1025) nil (26110 25947 374522 577000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1044) (undo-tree-id1275 . -1) 1045) nil (26110 25947 374520 363000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1032) (undo-tree-id1263 . -1) (#("r" 0 1 (fontified t)) . -1033) (undo-tree-id1264 . -1) (#("c" 0 1 (fontified t)) . -1034) (undo-tree-id1265 . -1) (#("h" 0 1 (fontified t)) . -1035) (undo-tree-id1266 . -1) (#("i" 0 1 (fontified t)) . -1036) (undo-tree-id1267 . -1) (#("v" 0 1 (fontified t)) . -1037) (undo-tree-id1268 . -1) (#("o" 0 1 (fontified t)) . -1038) (undo-tree-id1269 . -1) (#("S" 0 1 (fontified t)) . -1039) (undo-tree-id1270 . -1) (#("a" 0 1 (fontified t)) . -1040) (undo-tree-id1271 . -1) (#("l" 0 1 (fontified t)) . -1041) (undo-tree-id1272 . -1) (#("i" 0 1 (fontified t)) . -1042) (undo-tree-id1273 . -1) (#("d" 0 1 (fontified t)) . -1043) (undo-tree-id1274 . -1) 1044) nil (26110 25947 374517 637000) 0 nil])
([nil nil ((1032 . 1033)) nil (26110 25947 374506 586000) 0 nil])
([nil nil ((1033 . 1034)) nil (26110 25947 374505 805000) 0 nil])
([nil nil ((1034 . 1043)) nil (26110 25947 374504 963000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1270) (undo-tree-id1259 . -1) (#("a" 0 1 (fontified t)) . -1271) (undo-tree-id1260 . -1) (#("d" 0 1 (fontified t)) . -1272) (undo-tree-id1261 . -1) (#("o" 0 1 (fontified t)) . -1273) (undo-tree-id1262 . -1) 1274) nil (26110 25947 374503 571000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1266) (undo-tree-id1255 . -1) (#("r" 0 1 (fontified t)) . -1267) (undo-tree-id1256 . -1) (#("d" 0 1 (fontified t)) . -1268) (undo-tree-id1257 . -1) (#("e" 0 1 (fontified t)) . -1269) (undo-tree-id1258 . -1) 1270) nil (26110 25947 374497 990000) 0 nil])
([nil nil ((1266 . 1274)) nil (26110 25947 374483 402000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1313) (undo-tree-id1383 . -1) (#("i" 0 1 (fontified t)) . -1314) (undo-tree-id1384 . -1) (#("n" 0 1 (fontified t)) . -1315) (undo-tree-id1385 . -1) (#("e" 0 1 (fontified t)) . -1316) (undo-tree-id1386 . -1) (#("a" 0 1 (fontified t)) . -1317) (undo-tree-id1387 . -1) 1318 (t 26110 25947 431849 292000)) nil (26110 25980 210089 340000) 0 nil])
([nil nil ((1313 . 1320)) nil (26110 25980 210082 477000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1128) (undo-tree-id1370 . -1) (#("r" 0 1 (fontified t)) . -1129) (undo-tree-id1371 . -1) (#("c" 0 1 (fontified t)) . -1130) (undo-tree-id1372 . -1) (#("h" 0 1 (fontified t)) . -1131) (undo-tree-id1373 . -1) (#("i" 0 1 (fontified t)) . -1132) (undo-tree-id1374 . -1) (#("v" 0 1 (fontified t)) . -1133) (undo-tree-id1375 . -1) (#("o" 0 1 (fontified t)) . -1134) (undo-tree-id1376 . -1) (#("S" 0 1 (fontified t)) . -1135) (undo-tree-id1377 . -1) (#("a" 0 1 (fontified t)) . -1136) (undo-tree-id1378 . -1) (#("l" 0 1 (fontified t)) . -1137) (undo-tree-id1379 . -1) (#("i" 0 1 (fontified t)) . -1138) (undo-tree-id1380 . -1) (#("d" 0 1 (fontified t)) . -1139) (undo-tree-id1381 . -1) (#("a" 0 1 (fontified t)) . -1140) (undo-tree-id1382 . -1) 1141) nil (26110 25980 210079 521000) 0 nil])
([nil nil ((1128 . 1129)) nil (26110 25980 949021 415000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1117) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (#("r" 0 1 (fontified t)) . -1118) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (#("g" 0 1 (fontified t)) . -1119) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (#("u" 0 1 (fontified t)) . -1120) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (#("m" 0 1 (fontified t)) . -1121) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (#("e" 0 1 (fontified t)) . -1122) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (#("n" 0 1 (fontified t)) . -1123) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (#("t" 0 1 (fontified t)) . -1124) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (#("o" 0 1 (fontified t)) . -1125) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (#("s" 0 1 (fontified t)) . -1126) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) 1127) nil (26110 25990 40604 764000) 0 nil] [nil nil ((#("a" 0 1 (fontified t)) . -1117) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (#("r" 0 1 (fontified t)) . -1118) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (#("g" 0 1 (fontified t)) . -1119) (undo-tree-id1362 . -1) (#("u" 0 1 (fontified t)) . -1120) (undo-tree-id1363 . -1) (#("m" 0 1 (fontified t)) . -1121) (undo-tree-id1364 . -1) (#("e" 0 1 (fontified t)) . -1122) (undo-tree-id1365 . -1) (#("n" 0 1 (fontified t)) . -1123) (undo-tree-id1366 . -1) (#("t" 0 1 (fontified t)) . -1124) (undo-tree-id1367 . -1) (#("o" 0 1 (fontified t)) . -1125) (undo-tree-id1368 . -1) (#("s" 0 1 (fontified t)) . -1126) (undo-tree-id1369 . -1) 1127) ((1117 . 1127)) (26110 25980 586024 870000) 0 nil])
([nil nil ((1117 . 1119)) nil (26110 25990 40558 746000) 0 nil])
([nil nil ((1117 . 1118)) ((#("a" 0 1 (fontified t)) . 1117) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1)) (26110 25980 211079 496000) 0 nil])
([nil nil ((1119 . 1124)) nil (26110 25990 40555 440000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1117) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) 1118) ((1117 . 1118)) (26110 25980 210030 828000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1030) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) 1031 (t 26110 25990 99908 822000)) nil (26110 26022 365466 802000) 0 nil])
nil
([nil nil ((1022 . 1023) (t 26110 26022 424346 87000)) nil (26110 26040 47071 675000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -1017) (undo-tree-id1474 . -1) (#("r" 0 1 (fontified t)) . -1018) (undo-tree-id1475 . -1) (#("i" 0 1 (fontified t)) . -1019) (undo-tree-id1476 . -1) (#("t" 0 1 (fontified t)) . -1020) (undo-tree-id1477 . -1) (#("e" 0 1 (fontified t)) . -1021) (undo-tree-id1478 . -1) (#("r" 0 1 (fontified t)) . -1022) (undo-tree-id1479 . -1) 1023 (t 26110 26040 104965 634000)) nil (26110 26603 782135 453000) 0 nil])
([nil nil ((1017 . 1020)) nil (26110 26603 782128 841000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1019) (undo-tree-id1473 . -1) 1020) nil (26110 26603 782127 949000) 0 nil])
([nil nil ((1019 . 1020)) nil (26110 26603 782126 587000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-variable-name-face fontified t)) . -1238) (undo-tree-id1466 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1239) (undo-tree-id1467 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -1240) (undo-tree-id1468 . -1) (#("g" 0 1 (face font-lock-variable-name-face fontified t)) . -1241) (undo-tree-id1469 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -1242) (undo-tree-id1470 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -1243) (undo-tree-id1471 . -1) (#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -1244) (undo-tree-id1472 . -1) 1245) nil (26110 26603 782124 914000) 0 nil])
([nil nil ((1238 . 1242)) nil (26110 26603 782118 752000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-variable-name-face fontified t)) . -1238) (undo-tree-id1462 . -1) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -1239) (undo-tree-id1463 . -1) (#("l" 0 1 (face font-lock-variable-name-face fontified t)) . -1240) (undo-tree-id1464 . -1) (#("a" 0 1 (face font-lock-variable-name-face fontified t)) . -1241) (undo-tree-id1465 . -1) 1242) nil (26110 26603 782117 430000) 0 nil])
([nil nil ((1238 . 1242)) nil (26110 26603 782113 102000) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-variable-name-face fontified t)) . -1241) (undo-tree-id1461 . -1) 1242) nil (26110 26603 782111 789000) 0 nil])
([nil nil ((1241 . 1242)) nil (26110 26603 782109 84000) 0 nil])
([nil nil ((#("        // Si no, simplemente imprimimos las líneas en la consola.
    " 0 8 (fontified t c-is-sws t c-in-sws t) 8 9 (face font-lock-comment-delimiter-face fontified t c-is-sws t c-in-sws t) 9 11 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 11 66 (face font-lock-comment-face fontified t c-in-sws t) 66 67 (c-in-sws t face font-lock-comment-face fontified t) 67 71 (fontified t c-in-sws t c-is-sws t)) . 1147) (undo-tree-id1458 . -71) (undo-tree-id1459 . -23) (undo-tree-id1460 . -71)) nil (26110 26603 782105 878000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1225) (undo-tree-id1480 . -1) (#("o" 0 1 (fontified t)) . -1226) (undo-tree-id1481 . -1) (#("n" 0 1 (fontified t)) . -1227) (undo-tree-id1482 . -1) 1228 (t 26110 26603 836748 62000)) nil (26110 26667 257646 993000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1029) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) 1030 (t 26110 26667 312457 340000)) nil (26110 26854 553096 620000) 0 nil])
([nil nil ((1029 . 1031)) nil (26110 26854 553082 744000) 0 nil])
([nil nil ((#("
	Lista<String> listaOrd = Banderas.ordenar(lista);
	
        if(bandera.o){
            Banderas.cat(bandera.id, listaOrd);
            System.out.println(\"Archivo guardado correctamente en: \" + bandera.o);
        } else {
            for (String reng : listaOrd) {
                System.out.println(reng);
            }
        }" 0 1 (fontified t) 1 2 (fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face fontified t) 7 8 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 8 9 (face font-lock-type-face fontified t) 9 10 (face font-lock-type-face fontified t) 10 11 (face font-lock-type-face fontified t) 11 12 (face font-lock-type-face fontified t) 12 13 (face font-lock-type-face fontified t) 13 14 (face font-lock-type-face fontified t) 14 15 (c-type c-decl-id-start category c->-as-paren-syntax fontified t) 15 16 (fontified t) 16 17 (face font-lock-variable-name-face fontified t) 17 18 (face font-lock-variable-name-face fontified t) 18 19 (face font-lock-variable-name-face fontified t) 19 20 (face font-lock-variable-name-face fontified t) 20 21 (face font-lock-variable-name-face fontified t) 21 22 (face font-lock-variable-name-face fontified t) 22 23 (face font-lock-variable-name-face fontified t) 23 24 (face font-lock-variable-name-face fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 62 (fontified t) 62 64 (face font-lock-keyword-face fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t) 104 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 116 (fontified t) 116 117 (fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 120 (fontified t) 120 121 (fontified t) 121 122 (fontified t) 122 124 (fontified t) 124 125 (fontified t) 125 156 (fontified t) 156 193 (face font-lock-string-face fontified t) 193 196 (fontified t) 196 197 (fontified t) 197 198 (fontified t) 198 199 (fontified t) 199 200 (fontified t) 200 201 (fontified t) 201 202 (fontified t) 202 203 (fontified t) 203 204 (fontified t) 204 205 (fontified t) 205 207 (fontified t) 207 208 (fontified t) 208 218 (fontified t) 218 222 (face font-lock-keyword-face fontified t) 222 225 (fontified t) 225 228 (fontified t c-is-sws t c-in-sws t) 228 229 (fontified t) 229 237 (fontified t c-in-sws t c-is-sws t) 237 238 (face font-lock-keyword-face fontified t c-is-sws t) 238 240 (face font-lock-keyword-face fontified t) 240 242 (fontified t) 242 247 (face font-lock-type-face fontified t) 247 248 (face font-lock-type-face c-type c-decl-id-start fontified t) 248 249 (fontified t) 249 250 (face font-lock-variable-name-face fontified t) 250 251 (face font-lock-variable-name-face fontified t) 251 252 (face font-lock-variable-name-face fontified t) 252 253 (face font-lock-variable-name-face fontified t) 253 255 (fontified t) 255 256 (fontified t) 256 257 (fontified t) 257 258 (fontified t) 258 259 (fontified t) 259 260 (fontified t) 260 261 (fontified t) 261 262 (fontified t) 262 263 (fontified t) 263 264 (fontified t) 264 268 (fontified t) 268 303 (fontified t) 303 304 (fontified t) 304 305 (fontified t) 305 306 (fontified t) 306 307 (fontified t) 307 309 (fontified t) 309 332 (fontified t) 332 333 (fontified t rear-nonsticky t)) . 919) (undo-tree-id1485 . -333) (undo-tree-id1486 . -54) (undo-tree-id1487 . -229) (t 26110 26854 608238 833000)) nil (26110 27085 968781 288000) 0 nil])
([nil nil ((919 . 921)) nil (26110 27085 968769 15000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1262 . 1263) (nil fontified nil 941 . 1263) (nil fontified nil 940 . 941) (nil category c->-as-paren-syntax 940 . 941) (nil fontified nil 934 . 940) (nil fontified nil 933 . 934) (nil category c-<-as-paren-syntax 933 . 934) (nil fontified nil 920 . 933) (920 . 1263)) nil (26110 27085 968765 348000) 0 nil])
([nil nil ((#("        Lista<String> listaOrd = Banderas.ordenar(lista);
    
        if(bandera.o){
            Banderas.cat(bandera.id, listaOrd);
            System.out.println(\"Archivo guardado correctamente en: \" + bandera.id);
        } else {
            for (String reng : listaOrd) {
                System.out.println(reng);
            }
        }	
	" 0 8 (fontified t) 8 13 (face font-lock-type-face fontified t) 13 14 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 14 20 (face font-lock-type-face fontified t) 20 21 (c-type c-decl-id-start category c->-as-paren-syntax fontified t) 21 22 (fontified t) 22 30 (face font-lock-variable-name-face fontified t) 30 71 (fontified t) 71 73 (face font-lock-keyword-face fontified t) 73 165 (fontified t) 165 202 (face font-lock-string-face fontified t) 202 228 (fontified t) 228 232 (face font-lock-keyword-face fontified t) 232 247 (fontified t) 247 250 (face font-lock-keyword-face fontified t) 250 252 (fontified t) 252 257 (face font-lock-type-face fontified t) 257 258 (face font-lock-type-face c-type c-decl-id-start fontified t) 258 259 (fontified t) 259 263 (face font-lock-variable-name-face fontified t) 263 342 (fontified t) 342 343 (rear-nonsticky t fontified t) 343 344 (fontified t) 344 345 (fontified t) 345 346 (fontified t)) . 920) (undo-tree-id1493 . -346) (t 26110 27086 26759 676000)) nil (26110 27291 241351 322000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -918) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) 919) nil (26110 27291 241346 362000) 0 nil])
([nil nil ((#("package mx.unam.ciencias.edd.proyecto1;

import mx.unam.ciencias.edd.Lista;

public class Proyecto1 {

    private static Lista<String> estandar(Lista<String> l, Lista<String> r) {
	Lista<String> lista = new Lista<>();
	for (String renglon : l)
	    lista.agrega(renglon);
	for (String renglon : r)
	    lista.agrega(renglon);
	return lista;
    }

    public static void main(String args[]) {
        Banderas bandera = new Banderas(args);
        bandera.argumentos(args);
        Lista<String> lista = bandera.fileReader(args);
        Lista<String> file;

        if (bandera.r)
            file = Banderas.reverso(lista);
        else
            file = Banderas.ordenar(lista);

        if (bandera.o) {
            bandera.writer(bandera.id, file);
            System.out.println(\"Guardado en: \" + bandera.id);
        } else {
            for (String a : file)
                System.out.println(a);
        }

    }
}

" 0 7 (face font-lock-keyword-face fontified t) 7 29 (fontified t) 29 37 (face font-lock-constant-face fontified t) 37 38 (face font-lock-constant-face c-type c-decl-id-start fontified t) 38 41 (fontified t) 41 47 (face font-lock-keyword-face fontified t) 47 48 (fontified t) 48 50 (face font-lock-constant-face fontified t) 50 51 (fontified t) 51 55 (face font-lock-constant-face fontified t) 55 56 (fontified t) 56 64 (face font-lock-constant-face fontified t) 64 65 (fontified t) 65 68 (face font-lock-constant-face fontified t) 68 69 (fontified t) 69 73 (face font-lock-type-face fontified t) 73 74 (face font-lock-type-face c-type c-decl-id-start fontified t) 74 77 (fontified t) 77 83 (face font-lock-keyword-face fontified t) 83 84 (fontified t) 84 88 (face font-lock-keyword-face fontified t) 88 89 (c-type c-decl-type-start face font-lock-keyword-face fontified t) 89 90 (fontified t) 90 99 (face font-lock-type-face fontified t) 99 102 (fontified t) 102 103 (fontified t) 103 107 (fontified t) 107 114 (face font-lock-keyword-face fontified t) 114 115 (fontified t) 115 121 (face font-lock-keyword-face fontified t) 121 122 (fontified t) 122 127 (face font-lock-type-face fontified t) 127 128 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 128 134 (face font-lock-type-face fontified t) 134 135 (c-type c-decl-id-start category c->-as-paren-syntax fontified t) 135 136 (fontified t) 136 137 (face font-lock-function-name-face fontified t) 137 138 (face font-lock-function-name-face fontified t) 138 139 (face font-lock-function-name-face fontified t) 139 140 (face font-lock-function-name-face fontified t) 140 141 (face font-lock-function-name-face fontified t) 141 142 (face font-lock-function-name-face fontified t) 142 143 (face font-lock-function-name-face fontified t) 143 144 (face font-lock-function-name-face fontified t) 144 145 (fontified t) 145 150 (face font-lock-type-face fontified t) 150 151 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 151 157 (face font-lock-type-face fontified t) 157 158 (category c->-as-paren-syntax fontified t) 158 159 (fontified t) 159 160 (face font-lock-variable-name-face fontified t) 160 161 (fontified t) 161 162 (fontified t) 162 167 (face font-lock-type-face fontified t) 167 168 (c-<>-c-types-set t category c-<-as-paren-syntax fontified t) 168 174 (face font-lock-type-face fontified t) 174 175 (category c->-as-paren-syntax fontified t) 175 176 (fontified t) 176 177 (face font-lock-variable-name-face fontified t) 177 180 (fontified t) 180 181 (fontified t) 181 182 (fontified t) 182 187 (face font-lock-type-face fontified t) 187 188 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 188 194 (face font-lock-type-face fontified t) 194 195 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 195 196 (fontified t) 196 197 (face font-lock-variable-name-face fontified t) 197 198 (face font-lock-variable-name-face fontified t) 198 199 (face font-lock-variable-name-face fontified t) 199 200 (face font-lock-variable-name-face fontified t) 200 201 (face font-lock-variable-name-face fontified t) 201 203 (fontified t) 203 204 (fontified t) 204 207 (face font-lock-keyword-face fontified t) 207 208 (fontified t) 208 213 (face font-lock-type-face fontified t) 213 214 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 214 215 (fontified t category c->-as-paren-syntax) 215 219 (fontified t) 219 220 (fontified t) 220 223 (face font-lock-keyword-face fontified t) 223 225 (fontified t) 225 230 (face font-lock-type-face fontified t) 230 231 (face font-lock-type-face c-type c-decl-id-start fontified t) 231 232 (fontified t) 232 233 (face font-lock-variable-name-face fontified t) 233 234 (face font-lock-variable-name-face fontified t) 234 235 (face font-lock-variable-name-face fontified t) 235 236 (face font-lock-variable-name-face fontified t) 236 237 (face font-lock-variable-name-face fontified t) 237 238 (face font-lock-variable-name-face fontified t) 238 239 (face font-lock-variable-name-face fontified t) 239 241 (fontified t) 241 243 (fontified t) 243 245 (fontified t) 245 250 (fontified t) 250 251 (fontified t) 251 252 (fontified t) 252 253 (fontified t) 253 254 (fontified t) 254 255 (fontified t) 255 263 (fontified t) 263 264 (fontified t) 264 265 (fontified t) 265 266 (fontified t) 266 267 (fontified t) 267 268 (fontified t) 268 269 (fontified t) 269 270 (fontified t) 270 272 (fontified t) 272 273 (fontified t) 273 274 (fontified t) 274 277 (face font-lock-keyword-face fontified t) 277 279 (fontified t) 279 284 (face font-lock-type-face fontified t) 284 285 (face font-lock-type-face c-type c-decl-id-start fontified t) 285 286 (fontified t) 286 287 (face font-lock-variable-name-face fontified t) 287 288 (face font-lock-variable-name-face fontified t) 288 289 (face font-lock-variable-name-face fontified t) 289 290 (face font-lock-variable-name-face fontified t) 290 291 (face font-lock-variable-name-face fontified t) 291 292 (face font-lock-variable-name-face fontified t) 292 293 (face font-lock-variable-name-face fontified t) 293 295 (fontified t) 295 296 (fontified t) 296 297 (fontified t) 297 299 (fontified t) 299 304 (fontified t) 304 305 (fontified t) 305 306 (fontified t) 306 307 (fontified t) 307 308 (fontified t) 308 309 (fontified t) 309 317 (fontified t) 317 318 (fontified t) 318 319 (fontified t) 319 320 (fontified t) 320 321 (fontified t) 321 322 (fontified t) 322 323 (fontified t) 323 324 (fontified t) 324 326 (fontified t) 326 327 (fontified t) 327 328 (fontified t) 328 334 (face font-lock-keyword-face fontified t) 334 335 (fontified t) 335 336 (fontified t) 336 337 (fontified t) 337 338 (fontified t) 338 339 (fontified t) 339 340 (fontified t) 340 341 (fontified t) 341 342 (fontified t) 342 346 (fontified t) 346 347 (fontified t rear-nonsticky t) 347 348 (fontified t) 348 353 (fontified t) 353 359 (face font-lock-keyword-face fontified t) 359 360 (fontified t) 360 366 (face font-lock-keyword-face fontified t) 366 367 (fontified t) 367 370 (face font-lock-type-face fontified t) 370 371 (face font-lock-type-face c-type c-decl-id-start fontified t) 371 372 (fontified t) 372 376 (face font-lock-function-name-face fontified t) 376 377 (c-type c-decl-arg-start fontified t) 377 383 (face font-lock-type-face fontified t) 383 384 (fontified t) 384 388 (face font-lock-variable-name-face fontified t) 388 394 (fontified t) 394 402 (fontified t) 402 409 (face font-lock-type-face fontified t) 409 410 (face font-lock-type-face c-type c-decl-id-start fontified t) 410 411 (fontified t) 411 418 (face font-lock-variable-name-face fontified t) 418 421 (fontified t) 421 424 (face font-lock-keyword-face fontified t) 424 425 (fontified t) 425 433 (face font-lock-type-face fontified t) 433 483 (fontified t) 483 488 (face font-lock-type-face fontified t) 488 489 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 489 495 (face font-lock-type-face fontified t) 495 496 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 496 497 (fontified t) 497 502 (face font-lock-variable-name-face fontified t) 502 539 (fontified t) 539 544 (face font-lock-type-face fontified t) 544 545 (c-<>-c-types-set t fontified t category c-<-as-paren-syntax) 545 551 (face font-lock-type-face fontified t) 551 552 (c-type c-decl-id-start fontified t category c->-as-paren-syntax) 552 553 (fontified t) 553 557 (face font-lock-variable-name-face fontified t) 557 568 (fontified t) 568 570 (face font-lock-keyword-face fontified t) 570 619 (fontified t) 619 624 (fontified t) 624 635 (fontified t) 635 639 (face font-lock-keyword-face fontified t) 639 676 (fontified t) 676 681 (fontified t) 681 693 (fontified t) 693 695 (face font-lock-keyword-face fontified t) 695 710 (fontified t) 710 722 (fontified t) 722 723 (fontified t) 723 724 (fontified t) 724 725 (fontified t) 725 726 (fontified t) 726 727 (fontified t) 727 728 (fontified t) 728 729 (fontified t) 729 755 (fontified t) 755 756 (fontified t) 756 787 (fontified t) 787 802 (face font-lock-string-face fontified t) 802 828 (fontified t) 828 832 (face font-lock-keyword-face fontified t) 832 847 (fontified t) 847 850 (face font-lock-keyword-face fontified t) 850 852 (fontified t) 852 857 (face font-lock-type-face fontified t) 857 858 (face font-lock-type-face c-type c-decl-id-start fontified t) 858 859 (fontified t) 859 860 (face font-lock-variable-name-face fontified t) 860 908 (fontified t) 908 917 (fontified t) 917 918 (fontified t) 918 919 (fontified t) 919 926 (fontified t) 926 927 (fontified t rear-nonsticky t) 927 928 (fontified t rear-nonsticky t)) . 1) (undo-tree-id1494 . -928) (undo-tree-id1495 . -928) (undo-tree-id1496 . -103) (undo-tree-id1497 . -917) (undo-tree-id1498 . -917) (undo-tree-id1499 . -928) (undo-tree-id1500 . -928) (undo-tree-id1501 . -928) (undo-tree-id1502 . -917) (undo-tree-id1503 . -918) (undo-tree-id1504 . -918) (undo-tree-id1505 . -917) (undo-tree-id1506 . -40) (t 26110 27291 300222 677000)) nil (26110 27518 971341 352000) 0 nil])
([nil current ((nil rear-nonsticky nil 1878 . 1879) (nil fontified nil 1738 . 1879) (nil fontified nil 1737 . 1738) (nil fontified nil 1735 . 1737) (nil fontified nil 1734 . 1735) (nil fontified nil 1497 . 1734) (nil fontified nil 1496 . 1497) (nil fontified nil 1494 . 1496) (nil fontified nil 1493 . 1494) (nil fontified nil 1272 . 1493) (nil fontified nil 1271 . 1272) (nil fontified nil 1269 . 1271) (nil fontified nil 1268 . 1269) (nil fontified nil 1223 . 1268) (nil fontified nil 1222 . 1223) (nil category c->-as-paren-syntax 1222 . 1223) (nil fontified nil 1216 . 1222) (nil fontified nil 1215 . 1216) (nil category c-<-as-paren-syntax 1215 . 1216) (nil fontified nil 1167 . 1215) (nil fontified nil 1166 . 1167) (nil category c->-as-paren-syntax 1166 . 1167) (nil fontified nil 1160 . 1166) (nil fontified nil 1159 . 1160) (nil category c-<-as-paren-syntax 1159 . 1160) (nil fontified nil 1155 . 1159) (nil fontified nil 1154 . 1155) (nil fontified nil 1146 . 1154) (nil fontified nil 1093 . 1146) (nil fontified nil 1084 . 1093) (nil fontified nil 468 . 1084) (nil fontified nil 467 . 468) (nil category c->-as-paren-syntax 467 . 468) (nil fontified nil 466 . 467) (nil category c-<-as-paren-syntax 466 . 467) (nil fontified nil 448 . 466) (nil fontified nil 447 . 448) (nil category c->-as-paren-syntax 447 . 448) (nil fontified nil 441 . 447) (nil fontified nil 440 . 441) (nil category c-<-as-paren-syntax 440 . 441) (nil fontified nil 421 . 440) (nil fontified nil 420 . 421) (nil category c->-as-paren-syntax 420 . 421) (nil fontified nil 414 . 420) (nil fontified nil 413 . 414) (nil category c-<-as-paren-syntax 413 . 414) (nil fontified nil 404 . 413) (nil fontified nil 403 . 404) (nil category c->-as-paren-syntax 403 . 404) (nil fontified nil 397 . 403) (nil fontified nil 396 . 397) (nil category c-<-as-paren-syntax 396 . 397) (nil fontified nil 381 . 396) (nil fontified nil 380 . 381) (nil category c->-as-paren-syntax 380 . 381) (nil fontified nil 374 . 380) (nil fontified nil 373 . 374) (nil category c-<-as-paren-syntax 373 . 374) (nil fontified nil 1 . 373) (1 . 1879)) nil (26110 27518 971318 28000) 0 nil])
nil
